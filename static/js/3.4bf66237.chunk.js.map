{"version":3,"sources":["Stores/StickerStore.js","Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["store","StickerStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","reset","stickerSet","hint","onUpdate","update","authorization_state","sticker_set_ids","_this$stickerSet","id","is_installed","some","x","assign","emit","onClientUpdate","timestamp","foundStickers","stickers","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","EventEmitter","window","sticker","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","send","@type","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","build","maxSnack","MAX_SNACK","displayName","concat","getDisplayName","ForwardTargetChat","_this$props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","forward-target-chat-selected","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","asyncToGenerator","regenerator_default","mark","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","wrap","_context","prev","next","getPublicMessageLink","offset_order","offset_chat_id","limit","push","user_id","UserStore","getMyId","force","Promise","all","map","catch","e","sent","slicedToArray","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","message","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","Components_Tile_UserStatusControl","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","Tile_DialogTitle","Components_Tile_DialogStatus","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","ArrowBack_default","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItem_default","button","listItem","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","variant","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Fragment","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","handleSelectChat","loadChatContents","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","popup","setProfileMediaViewerContent","handleOpenChat","_this$props5","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","counters","list","scrollHeight","offsetHeight","_this$props6","_this$props7","onOpenGroupInCommon","onOpenSharedDocument","onOpenSharedMedia","_ref","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","Components_ColumnRight_ChatDetailsHeader","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isMeChat","users","member","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","Photo_default","Videocam_default","InsertDriveFile_default","Headset_default","InsertLink_default","Mic_default","Group_default","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","getChatUserId","_this3","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","left","top","stopPropagation","contextMenu","clientX","clientY","_x","handleRevokeChange","handleCloseDelete","handleDeleteContinue","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","Popover_default","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList_default","root","menuListRoot","MenuItem_default","transitionDuration","DialogContent_default","DialogContentText_default","FormControlLabel_default","control","Checkbox_default","label","minWidth","SharedDocumentHeader","title","headerBackButton","SharedDocuments","query","sender_user_id","from_message_id","offset","setItems","messages","loadMessageContents","Tile_SharedMedia_SharedDocument","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","ChatInfo","onClientUpdateChatId","nextChatId","userChatId","openSharedMedia","openSharedDocument","openGroupInCommon","loadChatCounters","getChatCounters","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocument","handleCloseSharedDocument","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","ColumnRight_SharedMedia_SharedDocuments","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","showOnline","PureComponent","userStatusRoot","right","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","backgroundColor","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","date","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Boolean","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","Date","el","includes","splice","recentlyFound","startsWith","substr","USERNAME_LENGTH_MIN","offset_date","offset_message_id","toConsumableArray","keys","topPromise","recentlyFoundPromise","_ref4","category","error","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","total_count","_callee4","_context4","loading","filterDuplicateMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","default","ThemePicker","target","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","focused","RadioGroup_default","name","group","Radio_default","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","core_Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","aria-owns","aria-haspopup","menuIconButton","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","handleKeyDown","handleKeyUp","searchInput","handlePaste","handleInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icon","icons_Search_default","openIcon","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","AttachFile_default","disabled","canSendPhotos","canSendDocuments","canSendPolls","Poll_default","focusNode","node","toEnd","undefined","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","option","onDelete","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","PollStore","now","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","index","findIndex","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","Components_Popup_CreatePollOption","canAddOption","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","onClientUpdatePhotoBlob","fileId","src","getSrc","isBlurred","isBlurredThumbnail","isVideoNote","hasVideoNote","reply-tile-photo-round","reply-tile-photo-loading","media-blurred","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","accentBackgroundLight","Components_Tile_ReplyTile","accentColorMain","replyContentSubtitle","accentStyles","InputBoxHeader","Reply_default","replyIcon","Components_Message_Reply","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","__webpack_require__","bind","InputBoxControl","onClientUpdateStickerSend","item","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","element","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","file","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","getSize","PHOTO_SIZE","is_downloading_completed","updatePhotoBlob","clearDraft","callback","invokeScheduledAction","newChatDraftMessage","t0","alert","JSON","stringify","_x2","_x3","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","_x4","_this$state3","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Popup_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","Components_ColumnMiddle_InputBoxControl","is_member","can_send_messages","is_channel","ColumnMiddle_NotificationsCommandControl","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress_default","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","handleCancel","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","selectedItems","values","Symbol","iterator","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","_this$state4","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","Slider_default","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getDurationString","Math","floor","getTimeString","duration","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","web_page","audio","voice_note","video_note","voice","video","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","toLocaleDateString","day","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","Meta","editDate","onDateClick","views","meta","& a","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","old_message_id","newMessageId","last_read_outbox_message_id","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","description","url","animation","Sticker","VoiceNote","voiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","emojiMatches","getEmojiMatches","handleSelectUser","handleSelection","mouseDown","selectMessage","handleDateClick","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","_this$props9","openReply","_this$props10","_this$props11","showUnreadSeparator","showTitle","_this$props12","edit_date","forward_info","webPage","getWebPage","media","getUnread","messageClassName","message-selected","messageSelected","messageHighlighted","Components_Message_Meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","MessageAuthor","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","_extends","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","d","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","ArrowDownward_default","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","abs","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","completed","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","onUpdateNewMessage","newState","scrollDownVisible","insertPrevious","filterMessages","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","_message$props","children","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","onLoadNext","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","finally","insertNext","supergroupId","basicGroupChat","getSupergroupId","upgraded_from_basic_group_id","last_message","scrollBehaviorNone","prevHistory","_ref5","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","prevMessageId","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","getPhotoSize","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","m","isServiceMessage","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","set_id","dialogTitleRoot","disablePointerEvents","Popup_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_ColumnMiddle_Footer","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","getSenderUserId","dateHint","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","isLottieMessage","getMediaFile","getAnimationData","resolve","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","loop","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","FileProgress","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","new_content","old_content","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.4bf66237.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATIONS_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATIONS_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log('ChatDetails.componentDidUpdate', this.props.counters);\n\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            counters,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedDocument,\n            onOpenSharedMedia,\n            popup,\n            t\n        } = this.props;\n        const [ photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount ] = counters || [0, 0, 0, 0, 0, 0];\n\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                            <Divider />\n                        </>\n                    )}\n                    { (!isMe || isGroup || popup && !isGroup) &&\n                        <>\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                            <Divider />\n                        </>\n                    }\n                    {(photoCount > 0 || videoCount > 0 || documentCount > 0 || audioCount > 0 || urlCount > 0 || voiceAndVideoNoteCount > 0 || groupInCommonCount > 0) && (\n                        <>\n                            <List>\n                                { photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedMedia}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                { videoCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                { documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocument}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                { audioCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                { urlCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                { voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1 ? '1 voice message' : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1 ? '1 group in common' : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                            <Divider />\n                        </>\n                    )}\n                    <List>\n                        {items}\n                    </List>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedDocument: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nconst styles = {\n    menuListRoot: {\n        minWidth: 150\n    },\n};\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, messageId, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>\n                        { can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem> }\n                        { (can_be_deleted_only_for_self || can_be_deleted_for_all_users) && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem> }\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocument);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { loadMessageContents } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocuments.css';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nfunction SharedDocumentHeader({ classes, title, onClose }) {\n    return (\n        <div className='header-master'>\n            <IconButton className={classes.headerBackButton} onClick={onClose}>\n                <ArrowBackIcon />\n            </IconButton>\n            <div className='header-status grow cursor-pointer'>\n                <span className='header-status-content'>{title}</span>\n            </div>\n        </div>\n    );\n}\n\nclass SharedDocuments extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: 0,\n            offset: 0,\n            limit: 30,\n            filter: { '@type': 'searchMessagesFilterDocument' }\n        }).then(result => {\n            MessageStore.setItems(result.messages);\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n\n            this.setState({ items: result.messages });\n        });\n    }\n\n    render() {\n        const { classes, t, onClose } = this.props;\n        const { items } = this.state;\n\n        const messages = items.map(x => (<SharedDocument key={`chat_id=${x.chat_id}_message_id=${x.id}`} chatId={x.chat_id} messageId={x.id} />));\n\n        return (\n            <>\n                <SharedDocumentHeader classes={classes} title={t('DocumentsTitle')} onClose={onClose}/>\n                <div className='shared-documents-list'>\n                    {messages}\n                </div>\n            </>\n        );\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocuments);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedDocument from './SharedMedia/SharedDocuments';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openSharedDocument: false,\n            openGroupInCommon: false,\n            counters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadChatCounters(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadChatCounters(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openSharedDocument: false,\n            openGroupInCommon: false,\n            counters: null\n        });\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocument = () => {\n        this.setState({ openSharedDocument: true });\n    };\n\n    handleCloseSharedDocument = () => {\n        this.setState({ openSharedDocument: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            userChatId,\n            openSharedDocument,\n            openSharedMedia,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedDocument) {\n            content = (\n                <SharedDocument\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocument}\n                />\n            );\n        }\n        else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenSharedDocument={this.handleOpenSharedDocument}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `MessagesList.getSnapshotBeforeUpdate\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${scrollTop}\n        //     list.scrollHeight=${scrollHeight}\n        //     list.offsetHeight=${offsetHeight}`\n        // );\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n        // console.log(\n        //     `MessagesList.componentDidUpdate\n        //     chat_id=${chatId} message_id=${messageId}\n        //     prevProps.chat_id=${prevProps.chatId} prevProps.message_id=${prevProps.messageId}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('MessagesList.shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.insertPrevious(filterMessages(history), newState, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            MessagesList.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        // console.log('MessagesList.handleScroll');\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            // console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            // console.log('SCROLL HANDLESCROLL onLoadPrevious', list.scrollTop, list.offsetHeight, list.scrollHeight, history);\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                // console.log('MessagesList.handleScroll scrollDownVisible=true');\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `MessagesList.handleScrollBehavior\n        //     chatId=${chatId} messageId=${messageId}\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.scrollHeight=${scrollHeight}\n        //     snapshot.offsetHeight=${offsetHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition after\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  // return m;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}