{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","@type","then","result","_this","props","setState","emojis","join","prevProps","prevState","snapshot","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","build","maxSnack","MAX_SNACK","displayName","concat","getDisplayName","ForwardTargetChat","_this$props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","forward-target-chat-selected","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","getCyrillicInput","input","length","Map","output","i","has","get","latinInput","getLatinInput","ForwardDialog","call","loadContent","asyncToGenerator","regenerator_default","mark","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","store","wrap","_context","prev","next","getPublicMessageLink","offset_order","offset_chat_id","limit","push","user_id","UserStore","getMyId","force","Promise","all","map","x","catch","e","sent","slicedToArray","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","message","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","update","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","removeListener","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","Components_Tile_UserStatusControl","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","Tile_DialogTitle","Components_Tile_DialogStatus","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","ArrowBack_default","rightIconButton","margin","NotificationsListItem","isMuted","ListItem_default","button","listItem","handleSetChatNotifications","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","variant","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","NotificationsControl","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Fragment","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","getGroupChatMembers","loadUsersContent","getChatFullInfo","isMeChat","getChatUserId","hasGroupsInCommon","handleUsernameHint","username","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","popup","setProfileMediaViewerContent","handleOpenChat","_this$props5","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","list","scrollHeight","offsetHeight","_this$props6","_this$props7","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","bio","getChatBio","isMe","users","member","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","disabled","Photo_default","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","_this3","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","minWidth","ChatInfo","onClientUpdateChatId","nextChatId","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleSelectUser","_ref","_x","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","showOnline","PureComponent","userStatusRoot","right","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","root","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","backgroundColor","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","messageId","previousMessageId","chatSearch","selectedMessageId","sender_user_id","date","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Boolean","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","messages","Date","query","some","el","includes","splice","top","recentlyFound","USERNAME_LENGTH_MIN","from_message_id","offset","offset_date","offset_message_id","setItems","toConsumableArray","keys","topPromise","recentlyFoundPromise","_ref4","category","error","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","stopPropagation","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","total_count","_callee4","_context4","loading","filterMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","onMouseDown","default","ThemePicker","target","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","transitionDuration","DialogContent_default","FormControl_default","formControl","FormLabel_default","focused","RadioGroup_default","name","group","FormControlLabel_default","control","Radio_default","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","vertical","horizontal","MainMenuButton","onUpdateAuthorizationState","authorizationState","authorization_state","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","core_Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","anchorOrigin","MenuItem_default","aria-owns","aria-haspopup","menuIconButton","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","handleKeyDown","handleKeyUp","searchInput","handlePaste","handleInput","debounce","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icon","icons_Search_default","openIcon","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","window","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","NotificationTimer","handleTimer","now","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","Typography_Typography","toFixed","CircularProgress_default","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","title","is_channel","other","objectWithoutProperties","assign","DialogContentText_default","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","remove_from_chat_list","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","MoreVert_default","transformOrigin","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","handleCancel","handleDelete","canBeDeletedForAllUsers","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","selectedItems","values","Symbol","iterator","done","can_be_deleted_for_all_users","err","return","openDeleteDialog","revoke","handleDeleteContinue","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","replace","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","_this$state3","handleDragStart","handleDragEnd","_this$state4","getVolumeIcon","VolumeOff_default","fontSize","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","onMouseLeave","iconButton","visibility","marginTop","borderWidth","Slider_default","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getDurationString","Math","floor","getTimeString","duration","timeString","Playlist","scrollToActive","item","itemRefMap","node","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","clear","slice","reverse","getMedia","openMedia","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","file","src","getMediaSrc","onClientUpdateMediaBlob","web_page","audio","voice_note","video_note","voice","video","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","getSrc","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","timestamp","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","index","findIndex","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHint","getDateHint","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","toLocaleDateString","day","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","handleAttachDocumentComplete","dataTransfer","files","handleDragLeave","data","onSendInternal","uploadFile","callback","invokeScheduledAction","t0","alert","JSON","stringify","_x2","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","element","placement","&[x-placement*=\"bottom\"] $arrow","left","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","bind","handleUpdateChatReadOutbox","sendingState","unread","payload","old_message_id","newMessageId","sending_state","last_read_outbox_message_id","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","description","url","animation","accentColorMain","Sticker","VoiceNote","voiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","getSize","smallPhoto","float","Media_Photo","accentBackgroundLight","PHOTO_SIZE","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","accentStyles","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","emojiMatches","getEmojiMatches","handleSelection","mouseDown","getSelection","toString","selectMessage","handleDateClick","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","_this$props9","openReply","_this$props10","_this$props11","showUnreadSeparator","showTitle","contextMenu","_this$props12","views","edit_date","forward_info","getText","webPage","getWebPage","media","getUnread","messageClassName","message-selected","messageSelected","messageHighlighted","meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","MessageAuthor","Components_Message_Forward","Reply","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","from","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","loadMessageContents","deletedMessage","canPinMessages","confirm","getClientData","unpinned_message_id","handleUnpin","getReplyPhotoSize","isDeletedMessage","pinnedMessage","ReplyTile","pinnedMessageContentSubtitle","_extends","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","d","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","__webpack_require__","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","ArrowDownward_default","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","hint","currentHint","StickerStore","getItems","stickers","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","dataset","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","foundStickers","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","abs","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","scrollBehavior","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","is_outgoing","replaceMessage","viewMessages","onUpdateNewMessage","completed","newState","scrollDownVisible","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","onLoadNext","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","finally","insertBefore","supergroupId","basicGroupChat","getSupergroupId","upgraded_from_basic_group_id","last_message","suppressHandleScroll","suppressHandleScrollOnSelectChat","prevHistory","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","prevMessageId","separatorMessageId","throttle","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","getPhotoSize","blob","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","m","isServiceMessage","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","handleMenuClick","handleOpen","getStickersLink","stickerSet","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","dialogTitleRoot","disablePointerEvents","disableTypography","typographyRoot","Popup_ShareStickerSetButton","shareButtonRoot","contentRoot","flexWrap","flexDirection","flexGrow","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Footer","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","getSenderUserId","tileControl","MediaCaption","Lottie","lazy","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","isLottieMessage","getMediaFile","getAnimationData","resolve","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","getMediaPreviewFile","_getMediaPreviewFile2","thumbnailWidth","thumbnailHeight","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isBlurred","isBlurredThumbnail","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","media-blurred","alt","loop","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","options","isStopped","isPaused","Suspense","fallback","FileProgress","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","children","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","fileId","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","new_content","old_content","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","updatePhotoBlob","handleSave","handleDialogOpen","nextIndex","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Reply_default","Delete_default","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"wKAcMA,qNACFC,MAAQ,CACJC,MAAO,KACPC,iBAAkB,QAiCtBC,kBAAoB,SAAAC,GAAW,IAEnBC,EADkBD,EAAlBA,QACAC,GAERC,IAAgBC,KAAK,CACjBC,QAAS,mBACTJ,QAAS,CAAEI,QAAS,cAAeH,QACpCI,KAAK,SAAAC,GACAC,EAAKC,MAAMR,UAAYA,GACvBO,EAAKE,SAAS,CACVZ,MAAOS,EAAOI,OAAOC,KAAK,4FA1BvBC,EAAWC,EAAWC,GAAU,IACvCd,EAAYe,KAAKP,MAAjBR,QAEJA,GAAWA,IAAYY,EAAUZ,SACjCe,KAAKhB,kBAAkBC,+CAIX,IACRA,EAAYe,KAAKP,MAAjBR,QAEJA,GACAe,KAAKhB,kBAAkBC,oCAoBtB,IACGA,EAAYe,KAAKP,MAAjBR,QACAH,EAAUkB,KAAKnB,MAAfC,MAER,OAAKG,EAGDgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBtB,GACxCmB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASpB,QAASA,EAASqB,YAAaC,OAL3B,wDAlDOd,EAAOZ,GAAO,IAClCI,EAAYQ,EAAZR,QACAF,EAAqBF,EAArBE,iBAER,OAAIE,GAAWF,EACJ,CACHA,iBAAkBE,EAClBH,MAAO,MAIR,YAjBc0B,IAAMC,YAuEpB7B,ywCC1DA8B,MAff,SAAmCC,GAAkB,IAC3CC,EAD2C,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAd,KAAAY,GAAAE,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,MAAAlB,KAAAmB,YAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAF,EAAAC,GAAAC,OAAAO,EAAA,EAAAP,CAAAF,EAAA,EAAAU,IAAA,SAAAC,MAAA,WAGzC,OACIC,EAAAtB,EAAAC,cAACsB,EAAA,iBAAD,CAAkBC,SAAUC,KACxBH,EAAAtB,EAAAC,cAACQ,EAAqBX,KAAKP,YALMmB,EAAA,CACdJ,IAAMC,WAWzC,OAFAG,EAAqBgB,YAArB,6BAAAC,OAAgEC,YAAenB,GAA/E,KAEOC,oKCKLmB,2LACO,IAAAC,EAC2ChC,KAAKP,MAA7CwC,EADHD,EACGC,QAASC,EADZF,EACYE,OAAQC,EADpBH,EACoBG,SAAUC,EAD9BJ,EAC8BI,SAE7BC,EAAaC,YAAkBJ,GAAQ,GAE7C,OACIV,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IAAW,sBAAuB,CAAEC,+BAAgCL,IAC/EM,QAASL,GACTZ,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,4BACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,oCACXoB,EAAAtB,EAAAC,cAACuC,EAAA,EAAD,CAAUR,OAAQA,KAErBC,GAAYX,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,gCAAiCN,EAAQU,UACjFnB,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IACP,2BACAJ,EAAWF,EAAQW,aAAeX,EAAQY,kBAGlDrB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,mCAEnBoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,6BAA6BiC,WAvB5B7B,IAAMC,YAmCvBqC,MAjDA,SAAAC,GAAK,MAAK,CACrBJ,OAAQ,CACJK,YAAaD,EAAME,QAAQC,QAAQC,MAEvCP,aAAc,CACVQ,UAAW,oBAAsBL,EAAME,QAAQC,QAAQC,KACvDR,OAAQ,aAAeI,EAAME,QAAQI,WAAWC,OAEpDT,eAAgB,CACZO,UAAW,iBAAmBL,EAAME,QAAQC,QAAQC,KACpDR,OAAQ,2BAuCkB,CAAEY,WAAW,GAAhCT,CAAwCf,WCzDnDyB,EAAgB,KAwCpB,SAASC,EAAiBC,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1BH,EAAgBA,GAznC,IAAIN,EAAcO,IAAIL,EAAMI,IAGxB,OAAO,KAFPD,GAAUL,EAAcQ,IAAIN,EAAMI,IAM1C,MAAkB,KAAXD,EAAgB,KAAOA,EAGlC,IAAII,EAAa,KAwCjB,SAASC,EAAcR,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1BM,EAAaA,GAznC,IAAIG,EAAWF,IAAIL,EAAMI,IAGrB,OAAO,KAFPD,GAAUI,EAAWD,IAAIN,EAAMI,IAMvC,MAAkB,KAAXD,EAAgB,KAAOA,sDClE5BM,uBACF,SAAAA,EAAY1E,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAmE,IACf3E,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAqD,GAAAC,KAAApE,KAAMP,KAmBV4E,YApBmBvD,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAoBL,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAV,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACV7F,EAAK8F,uBAECZ,EAAW,GACXC,EAAkBxF,KAAgBC,KAAK,CACzCC,QAAS,WACTkG,aAAc,sBACdC,eAAgB,EAChBC,MAAO,MAEXf,EAASgB,KAAKf,GAERC,EAAuBzF,KAAgBC,KAAK,CAC9CC,QAAS,oBACTsG,QAASC,KAAUC,UACnBC,OAAO,IAEXpB,EAASgB,KAAKd,GAjBJO,EAAAE,KAAA,EAmB2BU,QAAQC,IAAItB,EAASuB,IAAI,SAAAC,GAAC,OAAIA,EAAEC,MAAM,SAAAC,GAAC,OAAI,UAnBtE,OAAAvB,EAAAM,EAAAkB,KAAAvB,EAAAhE,OAAAwF,EAAA,EAAAxF,CAAA+D,EAAA,GAmBHE,EAnBGD,EAAA,GAmBIE,EAnBJF,EAAA,GAqBVtF,EAAKE,SAAS,CACV6G,QAASxB,EAAMyB,SACfxB,cAAeA,IAGbC,EAAQwB,IAAUC,WACxBC,YAAiB1B,EAAOF,EAAMyB,UA3BpB,yBAAArB,EAAAyB,SAAAnC,MApBKjF,EAkDnB8F,qBAlDmBxE,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAkDI,SAAAqC,IAAA,IAAA7E,EAAAE,EAAA4E,EAAAvH,EAAA,OAAAgF,EAAArE,EAAAgF,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,UAAArD,EACYxC,EAAKC,MAA5ByC,EADWF,EACXE,OAAQ4E,EADG9E,EACH8E,WACX5E,EAFc,CAAA6E,EAAA1B,KAAA,eAAA0B,EAAAC,OAAA,oBAGdF,EAHc,CAAAC,EAAA1B,KAAA,eAAA0B,EAAAC,OAAA,sBAIfF,EAAWnD,OAAS,GAJL,CAAAoD,EAAA1B,KAAA,eAAA0B,EAAAC,OAAA,oBAKdC,YAAa/E,GALC,CAAA6E,EAAA1B,KAAA,eAAA0B,EAAAC,OAAA,oBAMdE,YAAgBhF,GANF,CAAA6E,EAAA1B,KAAA,gBAAA0B,EAAAC,OAAA,yBAAAD,EAAA1B,KAAA,GAQElG,KAAgBC,KAAK,CACtCC,QAAS,uBACT8H,QAASjF,EACTkF,WAAYN,EAAW,GACvBO,WAAW,IAZI,QAQb9H,EARawH,EAAAV,KAenB7G,EAAKE,SAAS,CACV4H,kBAAmB/H,IAhBJ,yBAAAwH,EAAAH,SAAAC,MAlDJrH,EAsEnB+H,YAAc,WACVpI,KAAgBqI,aAAa,CACzBnI,QAAS,sBACToI,KAAM,QAzEKjI,EA6EnBkI,eAAiB,WAAM,IACXC,EAAMnI,EAAKC,MAAXkI,EACAL,EAAsB9H,EAAKX,MAA3ByI,kBAER,GAAKA,GACAA,EAAkBM,KAAvB,CAEA,IAAMtG,EAAG,aAAAO,OAAgByF,EAAkBM,MACrCC,EAAUF,EAAE,cAGlBG,IAAKR,EAAkBM,MAEvBpI,EAAKuI,sBAAsBzG,EAAKuG,EAJjB,QAtFArI,EA6FnBuI,sBAAwB,SAACzG,EAAKuG,EAASG,GACnC,GAAK1G,EAAL,CAD8C,IAAA2G,EAGTzI,EAAKC,MAAlCyI,EAHsCD,EAGtCC,gBAAiBjG,EAHqBgG,EAGrBhG,QACzB,GAAKiG,EAAL,CAIIC,IAAiBC,mBAAmB9G,EAAK+G,IAAqC,IAAsBL,IAEpGE,EAAgBL,EAAS,CACrBS,iBAAkBD,IAClBL,OAAQ,CACJxG,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACIoB,IAAI,QACJkH,aAAW,QACXC,MAAM,UACNrI,UAAW6B,EAAQyG,MACnBjG,QAAS,kBAAM0F,IAAiBQ,sBAAsBrH,KACtDE,EAAAtB,EAAAC,cAACyI,EAAA1I,EAAD,aAhHDV,EAuHnBqJ,oBAAsB,SAAC3G,EAAQ4E,GAC3B,GAA0B,IAAtBA,EAAWnD,OAAc,OAAO,KAEpC,IAAMkE,EAAUiB,IAAa9E,IAAI9B,EAAQ4E,EAAW,IACpD,IAAKe,EAAS,OAAO,KAJqB,IAMlCkB,EAA8BlB,EAA9BkB,iBAAkBC,EAAYnB,EAAZmB,QAC1B,IAAKD,GAAyC,2BAArBC,EAAQ,SAAuC,KAC5DC,EAAUD,EAAVC,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DC,EAAUD,EAAVC,MACR,GAAIA,GAASA,EAAMvF,OACf,OAAOuF,EAAMA,EAAMvF,OAAS,GAIpC,OAAO,MAxIQnE,EA2InB2J,WAAa,WACT3J,EAAK+H,cADU,IAAA6B,EAGiC5J,EAAKC,MAA7CyC,EAHOkH,EAGPlH,OAAQ4E,EAHDsC,EAGCtC,WAAYuC,EAHbD,EAGaC,UAAWzB,EAHxBwB,EAGwBxB,KACvC,GAAK1F,GAAW4E,GAAeA,GAAeuC,GAAczB,EAA5D,CAEA,IAAM0B,EAAO9J,EAAK+J,aAAa/J,EAAKgK,WAAWC,SAE/CjK,EAAKkK,YAAYC,QAAQ,SAAAC,GACrB,GAAIhC,EAyCA,OAxCI0B,GACAnK,KAAgBC,KAAK,CACjBC,QAAS,cACT8H,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB5K,QAAS,mBACTiK,KAAM,CACFjK,QAAS,gBACTiK,KAAMA,EACNY,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,UAKzBjL,KAAgBC,KAAK,CACjBC,QAAS,cACT8H,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB5K,QAAS,mBACTiK,KAAM,CACFjK,QAAS,gBACTiK,KAAM1B,EACNsC,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,KAOzB,IAAMC,EAAOhB,GAAa7J,EAAKqJ,oBAAoB3G,EAAQ4E,GAC3D,GAAIuD,EAAJ,CAAU,IACEC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,OAAQtB,EAAUoB,EAAVpB,MAEvB9J,KAAgBC,KAAK,CACjBC,QAAS,cACT8H,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB5K,QAAS,oBACT4J,MAAO,CACH5J,QAAS,cACTH,GAAI+J,EAAM/J,IAEdsL,UAAW,KACXC,uBAAwB,GACxBH,MAAOA,EACPC,OAAQA,EACRG,QAAS,CACLrL,QAAS,gBACTiK,KAAMA,EACNY,SAAU,MAEdS,IAAK,UAObrB,GACAnK,KAAgBC,KAAK,CACjBC,QAAS,cACT8H,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB5K,QAAS,mBACTiK,KAAM,CACFjK,QAAS,gBACTiK,KAAMA,EACNY,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,KAKzBjL,KAAgBC,KAAK,CACjBC,QAAS,kBACT8H,QAASyC,EACTgB,aAAc1I,EACd2I,YAAa/D,EACbgD,uBAAuB,EACvBC,iBAAiB,EACjBe,UAAU,QA7PHtL,EAkQnBuL,sBAAwB,SAAA7I,GAChB1C,EAAKkK,YAAY3F,IAAI7B,GACrB1C,EAAKkK,YAAYsB,OAAO9I,GAExB1C,EAAKkK,YAAYuB,IAAI/I,EAAQA,GAGjCgJ,QAAQC,IAAI3L,EAAKkK,aAEjBlK,EAAK4L,eA3QU5L,EA8QnB+J,aAAe,SAAA8B,GACX,IAAMC,EAAYD,EAAIC,UAChBC,EAAYF,EAAIE,UAMtB,OAJID,GAA2B,OAAdA,GAAsBC,IAA4B,SAAdA,GAAsC,oBAAdA,KACzEF,EAAIE,UAAY,IAGbD,GAtRQ9L,EAyRnBgM,oBAAsB,SAAAC,GACI,KAAlBA,EAAMC,SACND,EAAME,kBA3RKnM,EA+RnBoM,kBAAoB,WAAM,IAAAC,EACarM,EAAKX,MAAhC0H,EADcsF,EACdtF,QAASvB,EADK6G,EACL7G,cAEXuG,EAAY/L,EAAKsM,UAAUrC,QAAQ8B,WACrCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC/L,EAAKsM,UAAUrC,QAAQ8B,UAAY,IAGvC,IAAMD,EAAY9L,EAAK+J,aAAa/J,EAAKsM,UAAUrC,SAASsC,OAC5D,GAAKT,EAAL,CAKA,IAAMU,EAAY9H,EAAcoH,GAC1BW,EAAexI,EAAiB6H,GAMhCY,GAJclH,EACd,CAACA,EAAc9F,IAAI2C,OAAO0E,EAAQ4F,OAAO,SAAAjG,GAAC,OAAIA,IAAMlB,EAAc9F,MAAKiN,OAAO,SAAAjG,GAAC,OAAIkG,YAAgBlG,KACnGK,GAE4B4F,OAC9B,SAAAjG,GAAC,OACG1G,EAAK6M,cAAcnG,EAAGoF,IACrBU,GAAaxM,EAAK6M,cAAcnG,EAAG8F,IACnCC,GAAgBzM,EAAK6M,cAAcnG,EAAG+F,KAG/CzM,EAAKE,SAAS,CAAE4M,WAAYhB,EAAWY,cAAeA,SAlBlD1M,EAAKE,SAAS,CAAE4M,WAAY,KAAMJ,cAAe,MAzStC1M,EA8TnB+M,kBAAoB,SAAAd,GAChB,IAAMe,EAAYf,EAAMgB,cAAcC,QAAQ,cAC1CF,IACAf,EAAME,iBACNgB,SAASC,YAAY,cAAc,EAAOJ,KAlU/BhN,EAsUnBqN,mBAAqB,WACjB,IAAMtB,EAAY/L,EAAKgK,WAAWC,QAAQ8B,WACtCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC/L,EAAKgK,WAAWC,QAAQ8B,UAAY,KAzUzB/L,EA6UnBsN,mBAAqB,SAAArB,GACjB,IAAMe,EAAYf,EAAMgB,cAAcC,QAAQ,cAC1CF,IACAf,EAAME,iBACNgB,SAASC,YAAY,cAAc,EAAOJ,KAjV/BhN,EAqVnB6M,cAAgB,SAACnK,EAAQoK,GAAe,IAC5B3E,EAAMnI,EAAKC,MAAXkI,EACA3C,EAAkBxF,EAAKX,MAAvBmG,cAER,GAAIA,GAAiB9C,IAAW8C,EAAc9F,KAE2B,KADvD6N,YAAa7K,GAAQ,EAAMyF,IAAM,IACrCqF,oBAAoBC,QAAQX,EAAWY,eAC7C,OAAO,EAKf,OAAsE,KADvDH,YAAa7K,GAAQ,EAAOyF,IAAM,IACtCqF,oBAAoBC,QAAQX,EAAWY,iBAKsB,KADvDhG,YAAgBhF,IAAW,IAC/B8K,oBAAoBC,QAAQX,EAAWY,gBAtWrC1N,EA6WnB2N,eAAiB,WACbC,WAAW,WACH5N,EAAKsM,UAAUrC,SACCjK,EAAKsM,UAAUrC,QAEvB4D,SAEb,MAjXH7N,EAAKX,MAAQ,CACT0H,QAAS,GACTvB,cAAe,MAGnBxF,EAAKsM,UAAYtL,IAAM8M,YACvB9N,EAAKgK,WAAahJ,IAAM8M,YAExB9N,EAAKkK,YAAc,IAAI9F,IAXRpE,mFAefQ,KAAKqE,cAELrE,KAAKmN,kDAsWA,IAAAI,EAAAvN,KAAAwN,EACkBxN,KAAKP,MAApBwC,EADHuL,EACGvL,QAAS0F,EADZ6F,EACY7F,EADZ8F,EAE4EzN,KAAKnB,MAA9E0H,EAFHkH,EAEGlH,QAAS+F,EAFZmB,EAEYnB,WAAYJ,EAFxBuB,EAEwBvB,cAAelH,EAFvCyI,EAEuCzI,cAAesC,EAFtDmG,EAEsDnG,kBAMrDvC,GAJcC,EACd,CAACA,EAAc9F,IAAI2C,OAAO0E,EAAQ4F,OAAO,SAAAjG,GAAC,OAAIA,IAAMlB,EAAc9F,MAAKiN,OAAO,SAAAjG,GAAC,OAAIkG,YAAgBlG,KACnGK,GAEoBN,IAAI,SAAAC,GAAC,OAC3B1E,EAAAtB,EAAAC,cAACuN,EAAD,CACIpM,IAAK4E,EACLhE,OAAQgE,EACR/D,SAAUoL,EAAK7D,YAAY3F,IAAImC,GAC/B9D,SAAU,kBAAMmL,EAAKxC,sBAAsB7E,QAI7CyH,GAAczB,GAAiB,IAAIjG,IAAI,SAAAC,GAAC,OAC1C1E,EAAAtB,EAAAC,cAACuN,EAAD,CACIpM,IAAK4E,EACLhE,OAAQgE,EACR/D,SAAUoL,EAAK7D,YAAY3F,IAAImC,GAC/B9D,SAAU,kBAAMmL,EAAKxC,sBAAsB7E,QAInD,OACI1E,EAAAtB,EAAAC,cAACyN,EAAA1N,EAAD,CACI2N,MAAI,EACJC,QAAS9N,KAAKuH,YACdwG,kBAAgB,uBAChBC,mBAAiB,6BACjB5N,UAAW6B,EAAQgM,QACnBzM,EAAAtB,EAAAC,cAAC+N,EAAAhO,EAAD,CAAahB,GAAG,wBAAwByI,EAAE,gBAC1CnG,EAAAtB,EAAAC,cAAA,OACIgO,IAAKnO,KAAK8L,UACV5M,GAAG,wBACHkP,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa3G,EAAE,UACf4G,UAAWvO,KAAKwL,oBAChBgD,QAASxO,KAAK4L,kBACd6C,QAASzO,KAAKuM,oBAElB/K,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAWN,EAAQe,YAAa,2BAC5CxB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,uBAAuB2E,GACrCuH,GACG9K,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAWN,EAAQyM,WAAY,+BAAgCf,IAGtF3N,KAAK0J,YAAYW,KAAO,GACrB7I,EAAAtB,EAAAC,cAAA,OACIgO,IAAKnO,KAAKwJ,WACVtK,GAAG,yBACHkP,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa3G,EAAE,gBACf6G,QAASxO,KAAK6M,mBACd4B,QAASzO,KAAK8M,qBAGtBtL,EAAAtB,EAAAC,cAACwO,EAAAzO,EAAD,KACIsB,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAASzC,KAAKuH,YAAakB,MAAM,WACpCd,EAAE,WAEN3H,KAAK0J,YAAYW,KAAO,GACrB7I,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAASzC,KAAKmJ,WAAYV,MAAM,UAAUoG,WAAS,GACtDlH,EAAE,UAGT3H,KAAK0J,YAAYW,MAAQ/C,GACvB9F,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAASzC,KAAK0H,eAAgBe,MAAM,WACvCd,EAAE,sBAhcHnH,IAAMC,YAqdnBqO,GANCC,YACZjM,IAleW,SAAAC,GAAK,OAAAjC,OAAAkO,EAAA,EAAAlO,CAAA,CAChB4H,MAAO,CACHuG,QAASlM,EAAMmM,QAAQC,KAAO,GAElClB,OAAQ,CACJxF,MAAO1F,EAAME,QAAQqG,KAAKpG,SAE9BkM,cAAe,CACXH,QAAS,EACTI,QAAS,OACTC,SAAU,YAEdZ,WAAY,CACRrL,WAAYN,EAAME,QAAQI,WAAWC,QAEtCiM,YAAYxM,KAmdI,CAAEQ,WAAW,IAChCiM,cACAC,eAGWX,CAAQ3K,gPCpfjBuL,uBACF,SAAAA,EAAYjQ,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA0P,IACflQ,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA4O,GAAAtL,KAAApE,KAAMP,KA0DVkQ,mBAAqB,SAAAC,GAAU,IACnBC,EAAWrQ,EAAKC,MAAhBoQ,OACFC,EAAOlK,KAAU5B,IAAI6L,GAEvBA,IAAWD,EAAOjK,SAClBnG,EAAKE,SAAS,CAAEqQ,OAAQC,aAAcF,GAAOG,SAAUC,aAAaJ,MAhEzD,IAGPD,EAAWrQ,EAAKC,MAAhBoQ,OACFC,EAAOlK,KAAU5B,IAAI6L,GAJZ,OAMfrQ,EAAKX,MAAQ,CACTsR,WAAYN,EACZE,OAAQC,aAAcF,GACtBG,SAAUC,aAAaJ,IATZtQ,qFA4BG4Q,EAAWC,GAAW,IAAArO,EACdhC,KAAKP,MAAvBoQ,EADgC7N,EAChC6N,OAAQ9M,EADwBf,EACxBe,MADwB8I,EAEX7L,KAAKnB,MAA1BkR,EAFgClE,EAEhCkE,OAAQE,EAFwBpE,EAExBoE,SAEhB,OAAIG,EAAUrN,QAAUA,IAIpBqN,EAAUP,SAAWA,IAIrBQ,EAAUN,SAAWA,GAIrBM,EAAUJ,WAAaA,gDAQ3BrK,KAAU0K,GAAG,mBAAoBtQ,KAAK2P,mEAItC/J,KAAU2K,eAAe,mBAAoBvQ,KAAK2P,qDAY7C,IACG1N,EAAYjC,KAAKP,MAAjBwC,QADHwL,EAEwBzN,KAAKnB,MAA1BkR,EAFHtC,EAEGsC,OAAQE,EAFXxC,EAEWwC,SAEhB,OACIzO,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IAAW,iBAAkBN,EAAQuO,mBAA3B1P,OAAA2P,GAAA,EAAA3P,CAAA,CACjB4P,eAAgBT,GACfhO,EAAQ0O,yBAA2BV,KAEvCF,sDAjEmBtQ,EAAOZ,GACnC,GAAIY,EAAMoQ,SAAWhR,EAAMsR,WAAY,KAC3BN,EAAWpQ,EAAXoQ,OACFC,EAAOlK,KAAU5B,IAAI6L,GAE3B,MAAO,CACHM,WAAYN,EACZE,OAAQC,aAAcF,GACtBG,SAAUC,aAAaJ,IAI/B,OAAO,YA1BiBtP,IAAMC,YAqFvBqC,OA9FA,SAAAC,GAAK,MAAK,CACrByN,mBAAoB,CAChB/H,MAAO1F,EAAME,QAAQqG,KAAKsH,WAE9BD,yBAA0B,CACtBlI,MAAO1F,EAAME,QAAQC,QAAQ2N,KAAO,gBAyFV,CAAEtN,WAAW,GAAhCT,CAAwC4M,ICpDxCoB,sNApCXC,YAAc,WAAM,IAAA/O,EACaxC,EAAKC,MAA1BoQ,EADQ7N,EACR6N,OAAQzN,EADAJ,EACAI,SACXA,GAELA,EAASyN,yFARSO,EAAWC,GAC7B,OAAOD,EAAUP,SAAW7P,KAAKP,MAAMoQ,wCAUlC,IACGA,EAAW7P,KAAKP,MAAhBoQ,OACFC,EAAOlK,KAAU5B,IAAI6L,GAErBmB,EAAWC,aAAgBnB,GAEjC,OACItO,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,OAAOqC,QAASzC,KAAK+Q,aAChCvP,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gBACXoB,EAAAtB,EAAAC,cAAC+Q,GAAA,EAAD,CAAUrB,OAAQA,IAClBrO,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gBAAgB4Q,IAEnCxP,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,mBACXoB,EAAAtB,EAAAC,cAACgR,GAAD,CAAmBtB,OAAQA,eA3B7BrP,IAAMC,gDCW1B2Q,uBACF,SAAAA,EAAY3R,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAoR,IACf5R,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAsQ,GAAAhN,KAAApE,KAAMP,KA8DVkQ,mBAAqB,SAAAC,GAAU,IACnB1N,EAAW1C,EAAKC,MAAhByC,OACFmP,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,GACAA,EAAKE,KAAV,CAEA,IAAIC,GAAiB,EACrB,OAAQH,EAAKE,KAAK,UACd,IAAK,qBACD,IAAME,EAAWC,KAAgBC,YAAYN,EAAKE,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAA5L,GAAC,OAAIA,EAAEP,UAAYiK,EAAOjK,YAE3D6L,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACGH,EAAKE,KAAK5L,UAAYiK,EAAOjK,UAC7B6L,GAAiB,GASzBA,GACAhS,EAAKgS,eAAeH,KAnGT7R,EAuGnBgS,eAAiB,SAAAH,GACb7R,EAAKE,SAAS,CACVqS,SAAUC,YAA6BX,EAAKnS,IAC5C+Q,SAAUgC,YAAkCZ,EAAKnS,OA1GtCM,EA8GnB0S,qBAAuB,SAAAtC,GAAU,IACrB1N,EAAW1C,EAAKC,MAAhByC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,KAGDA,EAAKE,MACmB,oBAAvBF,EAAKE,KAAK,UAAyD,mBAAvBF,EAAKE,KAAK,UACvDF,EAAKE,KAAK5L,UAAYiK,EAAOjK,SAE7BnG,EAAKgS,eAAeH,KAxHT7R,EA4HnB2S,2BAA6B,SAAAvC,GAAU,IAC3B1N,EAAW1C,EAAKC,MAAhByC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBhC,EAAOgC,gBAEpCpS,EAAKgS,eAAeH,IAtIT7R,EA0InB4S,2BAA6B,SAAAxC,GAAU,IAC3B1N,EAAW1C,EAAKC,MAAhByC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkBzC,EAAOyC,eAEnC7S,EAAKgS,eAAeH,IApJT7R,EAwJnB8S,mBAAqB,SAAA1C,GAAU,IACnB1N,EAAW1C,EAAKC,MAAhByC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBhC,EAAO2C,YAAYrT,IAEhDM,EAAKgS,eAAeH,IAlKT7R,EAsKnBgT,mBAAqB,SAAA5C,GAAU,IACnB1N,EAAW1C,EAAKC,MAAhByC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkBzC,EAAO6C,WAAWvT,IAE9CM,EAAKgS,eAAeH,IAhLT,IAGPnP,EAAW1C,EAAKC,MAAhByC,OAHO,OAKf1C,EAAKX,MAAQ,CACT6T,WAAYxQ,EACZ6P,SAAUC,YAA6B9P,GACvC+N,SAAUgC,YAAkC/P,IARjC1C,qFA0BG4Q,EAAWC,GAAW,IAChCnO,EAAWlC,KAAKP,MAAhByC,OADgC2J,EAET7L,KAAKnB,MAA5BkT,EAFgClG,EAEhCkG,SAAU9B,EAFsBpE,EAEtBoE,SAElB,OAAIG,EAAUlO,SAAWA,IAIrBmO,EAAU0B,WAAaA,GAIvB1B,EAAUJ,WAAaA,+CAQ3BrK,KAAU0K,GAAG,mBAAoBtQ,KAAK2P,oBACtC+B,KAAgBpB,GAAG,mBAAoBtQ,KAAKsS,oBAC5CK,KAAgBrC,GAAG,mBAAoBtQ,KAAKwS,oBAC5C5M,KAAU0K,GAAG,qBAAsBtQ,KAAKkS,sBACxCR,KAAgBpB,GAAG,2BAA4BtQ,KAAKmS,4BACpDQ,KAAgBrC,GAAG,2BAA4BtQ,KAAKoS,2EAIpDxM,KAAU2K,eAAe,mBAAoBvQ,KAAK2P,oBAClD+B,KAAgBnB,eAAe,mBAAoBvQ,KAAKsS,oBACxDK,KAAgBpC,eAAe,mBAAoBvQ,KAAKwS,oBACxD5M,KAAU2K,eAAe,qBAAsBvQ,KAAKkS,sBACpDR,KAAgBnB,eAAe,2BAA4BvQ,KAAKmS,4BAChEQ,KAAgBpC,eAAe,2BAA4BvQ,KAAKoS,6DAwH3D,IACGnQ,EAAYjC,KAAKP,MAAjBwC,QADHwL,EAE0BzN,KAAKnB,MAA5BkT,EAFHtE,EAEGsE,SAAU9B,EAFbxC,EAEawC,SAElB,OACIzO,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IACP,gBACA0N,EAAWhO,EAAQ2Q,qBAAuB3Q,EAAQ4Q,iBAErDd,sDAlLmBtS,EAAOZ,GACnC,GAAIY,EAAMyC,SAAWrD,EAAM6T,WAAY,KAC3BxQ,EAAWzC,EAAXyC,OAER,MAAO,CACHwQ,WAAYxQ,EACZ6P,SAAUC,YAA6B9P,GACvC+N,SAAUgC,YAAkC/P,IAIpD,OAAO,YAxBY1B,IAAMC,YAqMlBqC,OA9MA,SAAAC,GAAK,MAAK,CACrB8P,eAAgB,CACZpK,MAAO1F,EAAME,QAAQqG,KAAKsH,WAE9BgC,qBAAsB,CAClBnK,MAAO1F,EAAME,QAAQC,QAAQ2N,KAAO,gBAyMV,CAAEtN,WAAW,GAAhCT,CAAwCsO,IChNjD0B,uBACF,SAAAA,EAAYrT,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA8S,IACftT,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAgS,GAAA1O,KAAApE,KAAMP,KAaVsR,YAAc,WAAM,IAAA/O,EACaxC,EAAKC,MAA1ByC,EADQF,EACRE,OAAQE,EADAJ,EACAI,SACXA,GAELA,EAASF,IAlBM1C,qFAUG4Q,EAAWC,GAC7B,OAAOD,EAAUlO,SAAWlC,KAAKP,MAAMyC,wCAUlC,IAAA+F,EAC2DjI,KAAKP,MAA7DyC,EADH+F,EACG/F,OAAQ6Q,EADX9K,EACW8K,aAAcC,EADzB/K,EACyB+K,WAAYC,EADrChL,EACqCgL,kBAE1C,OACIzR,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,OAAOqC,QAASzC,KAAK+Q,aAChCvP,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gBACXoB,EAAAtB,EAAAC,cAACuC,EAAA,EAAD,CAAUR,OAAQA,EAAQE,SAAU2Q,EAAcE,kBAAmBA,IACrEzR,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBACXoB,EAAAtB,EAAAC,cAAC+S,GAAA,EAAD,CAAahR,OAAQA,EAAQ+Q,kBAAmBA,KAEnDD,IAAeC,GACZzR,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,mBACXoB,EAAAtB,EAAAC,cAACgT,GAAD,CAAcjR,OAAQA,eAnC5B1B,IAAMC,YAqDhCqS,GAAYM,aAAe,CACvBH,mBAAmB,EACnBD,YAAY,GAGDF,+BC/CTO,uBACF,SAAAA,EAAY5T,GAAQ,OAAAqB,OAAAC,EAAA,EAAAD,CAAAd,KAAAqT,GAAAvS,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAuS,GAAAjP,KAAApE,KACVP,0EAGD,IAAAuC,EACwDhC,KAAKP,MAA1DwC,EADHD,EACGC,QAASC,EADZF,EACYE,OAAQyF,EADpB3F,EACoB2F,EAAG2L,EADvBtR,EACuBsR,WAAY7Q,EADnCT,EACmCS,QAASqL,EAD5C9L,EAC4C8L,QAE7CrG,EAAOE,EAAE,YAOb,OANI4L,YAAcrR,GACduF,EAAOE,EAAE,QACF6L,YAActR,KACrBuF,EAAOE,EAAE,gBAITnG,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,iBACVkT,GACG9R,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CAAYE,UAAW6B,EAAQwR,eAAgBhR,QAASqL,GACpDtM,EAAAtB,EAAAC,cAACuT,GAAAxT,EAAD,OAGRsB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,oCAAoCqC,QAASA,GACxDjB,EAAAtB,EAAAC,cAAA,QAAMC,UAAU,yBAAyBqH,KAE3C6L,GACE9R,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CAAYE,UAAW6B,EAAQ0R,gBAAiBlR,QAASqL,GACrDtM,EAAAtB,EAAAC,cAACyI,EAAA1I,EAAD,eA3BQM,IAAMC,YAwCvBqO,GALCC,YACZS,cACA1M,IA9CW,CACX2Q,eAAgB,CACZG,OAAQ,qBAEZD,gBAAiB,CACbC,OAAQ,sBAyCO,CAAErQ,WAAW,IAGrBuL,CAAQuE,wFCvCjBQ,eACF,SAAAA,EAAYpU,GAAQ,OAAAqB,OAAAC,EAAA,EAAAD,CAAAd,KAAA6T,GAAA/S,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA+S,GAAAzP,KAAApE,KACVP,0EAGD,IAAAuC,EACkBhC,KAAKP,MAApBwC,EADHD,EACGC,QAAS0F,EADZ3F,EACY2F,EACTmM,EAAY9T,KAAKnB,MAAjBiV,QAER,OACItS,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,SAAUxR,QAASzC,KAAKkU,4BACxD1S,EAAAtB,EAAAC,cAACgU,GAAAjU,EAAD,KAAgB4T,EAAwCtS,EAAAtB,EAAAC,cAACiU,GAAAlU,EAAD,MAA9BsB,EAAAtB,EAAAC,cAACkU,GAAAnU,EAAD,OAC1BsB,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CACIgD,QACI1B,EAAAtB,EAAAC,cAACoU,GAAArU,EAAD,CAAYsU,QAAQ,UAAUC,QAAM,GAC/B9M,EAAE,oBAIfnG,EAAAtB,EAAAC,cAACuU,GAAAxU,EAAD,KACIsB,EAAAtB,EAAAC,cAACwU,GAAAzU,EAAD,CAAQuI,MAAM,UAAUmM,SAAU5U,KAAKkU,2BAA4BW,SAAUf,oBApB7DgB,GAgCrBhG,GALCC,YACZS,cACA1M,IAnCW,CACXmR,SAAU,CACNhF,QAAS,cAiCM,CAAE1L,WAAW,IAGrBuL,CAAQ+E,wFC3BjBkB,eACF,SAAAA,EAAYtV,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA+U,IACfvV,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAiU,GAAA3Q,KAAApE,KAAMP,KAoBVuV,gBAAkB,WACdxV,EAAKE,SAAS,CAAEuV,UAAWzV,EAAKX,MAAMoW,YAtBvBzV,EAyBnB0V,kBAAoB,WAChB,IAAMC,EAAgBhN,IAAiBiN,YAC/BlT,EAAW1C,EAAKC,MAAhByC,OACJiT,IAAkBjT,GAGlB/C,KAAgBkW,UAAUnT,IA/Bf1C,EAmCnB8V,YAAc,WAAM,IACRpT,EAAW1C,EAAKX,MAAhBqD,OAEFmP,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,GACAA,EAAKE,KAAV,CALgB,IAOR5L,EAAY0L,EAAKE,KAAjB5L,QACHA,GAELxG,KAAgBC,KAAK,CACjBC,QAASkW,aAAc5P,GAAW,cAAgB,YAClDA,QAASA,MA/CE,IAGPzD,EAAW1C,EAAKC,MAAhByC,OAHO,OAIf1C,EAAKX,MAAQ,CACT6T,WAAYxQ,EACZ+S,UAAU,GANCzV,wEAmDV,IAAAwC,EAC0BhC,KAAKP,MAA5BkI,EADH3F,EACG2F,EAAGzF,EADNF,EACME,OAAQD,EADdD,EACcC,QACXgT,EAAajV,KAAKnB,MAAlBoW,SAEF5D,EAAOC,KAAUtN,IAAI9B,GAErBsT,EAAUC,YAAYvT,GACxBwT,GAAY,GACXF,GAAWnE,EAAKE,OACjBmE,EAAYH,aAAclE,EAAKE,KAAK5L,UAExC,IAAMgQ,EAAWC,YAAa1T,GACxB2T,EAAYrC,YAActR,GAEhC,OACIV,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,SAAUxR,QAASzC,KAAKgV,iBACxDxT,EAAAtB,EAAAC,cAACgU,GAAAjU,EAAD,KACIsB,EAAAtB,EAAAC,cAAC4V,GAAA7V,EAAD,OAEJsB,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CACIgD,QACI1B,EAAAtB,EAAAC,cAACoU,GAAArU,EAAD,CAAYsU,QAAQ,UAAUC,QAAM,GAC/B9M,EAAE,WAIdsN,EAAWzT,EAAAtB,EAAAC,cAAC6V,GAAA9V,EAAD,MAAiBsB,EAAAtB,EAAAC,cAAC8V,GAAA/V,EAAD,OAEjCsB,EAAAtB,EAAAC,cAAC+V,GAAAhW,EAAD,CAAUiW,GAAIlB,EAAUmB,QAAQ,OAAOC,eAAa,GAChD7U,EAAAtB,EAAAC,cAACmW,GAAApW,EAAD,CAAMqW,UAAU,MAAMC,gBAAc,IAC9BhB,GACEhU,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,SAAUxR,QAASzC,KAAKkV,mBACxD1T,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CACIuW,OAAK,EACLvT,QACI1B,EAAAtB,EAAAC,cAACoU,GAAArU,EAAD,CAAYsU,QAAQ,UAAUC,QAAM,GAC/B9M,EAAE,mBAKnBnG,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,SAAUxR,QAASzC,KAAKsV,aACxD9T,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CACIuW,OAAK,EACLvT,QACI1B,EAAAtB,EAAAC,cAACoU,GAAArU,EAAD,CAAYuI,MAAM,YAAY+L,QAAQ,UAAUC,QAAM,GACrC9M,EAAZ+N,EAAc,UAAe,qBAOrDF,GAAWG,GACRnU,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,UAChCzS,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CACIuW,OAAK,EACLvT,QACI1B,EAAAtB,EAAAC,cAACoU,GAAArU,EAAD,CAAYuI,MAAM,YAAY+L,QAAQ,UAAUC,QAAM,GACrC9M,EAAZkO,EAAc,eAAoB,kBAMtDL,IAAYG,GACTnU,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,UAChCzS,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CACIuW,OAAK,EACLvT,QACI1B,EAAAtB,EAAAC,cAACoU,GAAArU,EAAD,CAAYuI,MAAM,YAAY+L,QAAQ,UAAUC,QAAM,GACjD9M,EAAE,wEAlHXlI,EAAOZ,GACnC,OAAIY,EAAMyC,SAAWrD,EAAM6T,WAChB,CACHA,WAAYjT,EAAMyC,OAClB+S,UAAU,GAIX,YAnBYzU,IAAMC,WA+IlBqO,GALCC,YACZS,cACA1M,IAlJW,CACXmR,SAAU,CACNhF,QAAS,cAgJM,CAAE1L,WAAW,IAGrBuL,CAAQiG,gCCrGjB2B,uBACF,SAAAA,EAAYjX,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA0W,IACflX,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA4V,GAAAtS,KAAApE,KAAMP,KA4FV0S,2BAA6B,SAAAvC,GACzB,IAAMyB,EAAOC,KAAUtN,IAAIxE,EAAKC,MAAMyC,QACjCmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBhC,EAAOgC,iBAEpCpS,EAAKmX,mBAELnX,EAAK4L,gBAxGM5L,EA4GnB4S,2BAA6B,SAAAxC,GACzB,IAAMyB,EAAOC,KAAUtN,IAAIxE,EAAKC,MAAMyC,QACjCmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkBzC,EAAOyC,eAEnC7S,EAAK4L,eArHM5L,EAyHnB0S,qBAAuB,SAAAtC,GACnB,IAAMyB,EAAOC,KAAUtN,IAAIxE,EAAKC,MAAMyC,QACjCmP,KAGDA,EAAKE,MACmB,oBAAvBF,EAAKE,KAAK,UAAyD,mBAAvBF,EAAKE,KAAK,UACvDF,EAAKE,KAAK5L,UAAYiK,EAAOjK,SAE7BnG,EAAK4L,gBAlIM5L,EAsInBmQ,mBAAqB,SAAAC,GACbpQ,EAAKqS,QAAQ9N,IAAI6L,EAAOjK,UACxBnG,EAAK4L,eAxIM5L,EA4InBmX,iBAAmB,WACfnX,EAAKmS,cAELnS,EAAKoX,oBAELpX,EAAKqX,oBAjJUrX,EAoJnBqX,iBAAmB,WAAM,IACb3U,EAAW1C,EAAKC,MAAhByC,OAEF+C,EAAQwB,IAAUC,WAExBC,YAAiB1B,EAAO,CAAC/C,IACzB,IAAM2P,EAAUiF,YAAoB5U,GAAQ+D,IAAI,SAAAC,GAAC,OAAIA,EAAEP,UACvDoR,YAAiB9R,EAAO4M,IA3JTrS,EA8JnBmS,YAAc,WAAM,IACRzP,EAAW1C,EAAKC,MAAhByC,OAER8U,YAAgB9U,IAjKD1C,EAoKnBoX,kBApKmB9V,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAoKC,SAAAC,IAAA,IAAAvC,EAAA3C,EAAA,OAAAgF,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACRnD,EAAW1C,EAAKC,MAAhByC,QAEQuT,YAAYvT,GAHZ,CAAAiD,EAAAE,KAAA,eAAAF,EAAA6B,OAAA,qBAMHiQ,YAAS/U,GANN,CAAAiD,EAAAE,KAAA,eAAAF,EAAA6B,OAAA,wBAAA7B,EAAAE,KAAA,EASKlG,KAAgBC,KAAK,CACtCC,QAAS,oBACTsG,QAASuR,YAAchV,GACvBsD,eAAgB,EAChBC,MAAO,IAbK,OASVlG,EATU4F,EAAAkB,KAgBhB7G,EAAKE,SAAS,CAAEyX,kBAAmB5X,EAAOiH,SAAS7C,OAAS,IAhB5C,yBAAAwB,EAAAyB,SAAAnC,MApKDjF,EAuLnB4X,mBAAqB,WAAM,IAAApV,EACDxC,EAAKC,MAAnBkI,EADe3F,EACf2F,EAAGzF,EADYF,EACZE,OACLmV,EAAWnQ,YAAgBhF,GACjC,GAAKmV,EAAL,CAEA,IAAMC,EAAoBC,KAAYvT,IAAI,YACpCwT,EAAeF,EAAoBA,EAAkB/V,MAAQ,wBAEnEuG,IAAK0P,EAAeH,GAEpB,IAAM/V,EAAG,GAAAO,OAAMK,EAAN,kBACH2F,EAAUF,EAAE,cAGlBnI,EAAKuI,sBAAsBzG,EAAKuG,EAFjB,QAnMArI,EAwMnBuI,sBAAwB,SAACzG,EAAKuG,EAASG,GACnC,GAAK1G,EAAL,CAD8C,IAAA2G,EAGTzI,EAAKC,MAAlCyI,EAHsCD,EAGtCC,gBAAiBjG,EAHqBgG,EAGrBhG,QACzB,GAAKiG,EAAL,CAIIC,IAAiBC,mBAAmB9G,EAAK+G,IAAqC,IAAsBL,IAEpGE,EAAgBL,EAAS,CACrBS,iBAAkBD,IAClBL,OAAQ,CACJxG,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACIoB,IAAI,QACJkH,aAAW,QACXC,MAAM,UACNrI,UAAW6B,EAAQyG,MACnBjG,QAAS,kBAAM0F,IAAiBQ,sBAAsBrH,KACtDE,EAAAtB,EAAAC,cAACyI,EAAA1I,EAAD,aA3NDV,EAkOnBiY,gBAAkB,WAAM,IAAArO,EACE5J,EAAKC,MAAnBkI,EADYyB,EACZzB,EAAGzF,EADSkH,EACTlH,OACLwV,EAAcC,YAAmBzV,GACvC,GAAKwV,EAAL,CAEA5P,IAAK8P,aAAkBF,IAEvB,IAAMpW,EAAG,GAAAO,OAAMK,EAAN,eACH2F,EAAUF,EAAE,eAGlBnI,EAAKuI,sBAAsBzG,EAAKuG,EAFjB,QA3OArI,EAgPnBqY,kBAAoB,WAChBrY,EAAKsY,mBAAmBrO,QAAQsO,UAAY,GAjP7BvY,EAoPnBwY,iBAAmB,WAAM,IAAAxK,EACKhO,EAAKC,MAAvByC,EADasL,EACbtL,OAAQ+V,EADKzK,EACLyK,MACV5G,EAAOC,KAAUtN,IAAI9B,GACtBmP,GACAA,EAAKpI,QAEViP,aAA6B,CAAEhW,OAAQA,IAEnC+V,GACA9Y,KAAgBqI,aAAa,CACzBnI,QAAS,2BACT6C,OAAQ,MA/PD1C,EAoQnB2Y,eAAiB,WAAM,IAAAC,EACO5Y,EAAKC,MAAvByC,EADWkW,EACXlW,OAAQ+V,EADGG,EACHH,MAEhBI,aAASnW,EAAQ,MAAM,GAEnB+V,GACA9Y,KAAgBqI,aAAa,CACzBnI,QAAS,2BACT6C,OAAQ,KA5QD1C,EAiRnB8Y,eAAiB,SAAAzI,GACb0I,aAAS1I,GAAQ,IAlRFrQ,EAqRnBgZ,iBAAmB,WACf,OAAKhZ,EAAKsY,mBAEHtY,EAAKsY,mBAAmBrO,QAAQgP,aAFF,GAnRrCjZ,EAAKsY,mBAAqBtX,IAAM8M,YAHjB,IAKPpL,EAAW1C,EAAKC,MAAhByC,OALO,OAOf1C,EAAKqS,QAAU,IAAIjO,IACnBpE,EAAKX,MAAQ,CACT6T,WAAYxQ,EACZiV,mBAAmB,GAVR3X,uFAyBKK,EAAWC,GAAW,IAClCoC,EAAWlC,KAAKP,MAAhByC,OAEFwW,EAAO1Y,KAAK8X,mBAAmBrO,QAC7BsO,EAA0CW,EAA1CX,UAAWY,EAA+BD,EAA/BC,aAAcC,EAAiBF,EAAjBE,aAC3B7Y,EAAW,CACbgY,UAAWA,EACXY,aAAcA,EACdC,aAAcA,GAOlB,OAJA1N,QAAQC,IAAR,gDAAAtJ,OACoDK,EADpD,eAAAL,OACwEkW,EADxE,kBAAAlW,OACkG8W,EADlG,kBAAA9W,OAC+H+W,IAGxH7Y,gDAGWqQ,EAAWC,GAAW,IAAAwI,EACd7Y,KAAKP,MAAvByC,EADgC2W,EAChC3W,OAAQa,EADwB8V,EACxB9V,MACRoU,EAAsBnX,KAAKnB,MAA3BsY,kBAER,OAAI/G,EAAUlO,SAAWA,IAIrBkO,EAAUrN,QAAUA,GAIpBsN,EAAU8G,oBAAsBA,8CAOrBtX,EAAWC,EAAWC,GAAU,IACvCmC,EAAWlC,KAAKP,MAAhByC,OACJrC,EAAUqC,SAAWA,GACrBlC,KAAK2W,mBAGT,IAAM+B,EAAO1Y,KAAK8X,mBAAmBrO,QAC7BsO,EAA0ChY,EAA1CgY,UAAWY,EAA+B5Y,EAA/B4Y,aAA+B5Y,EAAjB6Y,aAC7B/Y,EAAUqC,SAAWA,EACrBwW,EAAKX,UAAYA,GAAaW,EAAKC,aAAeA,GAElDD,EAAKX,UAAY,8CAKrB/X,KAAK2W,mBAEL/Q,KAAU0K,GAAG,mBAAoBtQ,KAAK2P,oBACtC/J,KAAU0K,GAAG,qBAAsBtQ,KAAKkS,sBACxCR,KAAgBpB,GAAG,2BAA4BtQ,KAAKmS,4BACpDQ,KAAgBrC,GAAG,2BAA4BtQ,KAAKoS,2EAIpDxM,KAAU2K,eAAe,mBAAoBvQ,KAAK2P,oBAClD/J,KAAU2K,eAAe,qBAAsBvQ,KAAKkS,sBACpDR,KAAgBnB,eAAe,2BAA4BvQ,KAAKmS,4BAChEQ,KAAgBpC,eAAe,2BAA4BvQ,KAAKoS,6DAiM3D,IAAA7E,EAAAvN,KAAA8Y,EAWD9Y,KAAKP,MATLkI,EAFCmR,EAEDnR,EACAvH,EAHC0Y,EAGD1Y,UACA8B,EAJC4W,EAID5W,OACAD,EALC6W,EAKD7W,QACA8W,EANCD,EAMDC,kBACAC,EAPCF,EAODE,qBACAf,EARCa,EAQDb,MACA3E,EATCwF,EASDxF,WACAxF,EAVCgL,EAUDhL,QAEIqJ,EAAsBnX,KAAKnB,MAA3BsY,kBAEF9F,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EACD,OACI7P,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gBACXoB,EAAAtB,EAAAC,cAAC8Y,GAAD,CAAmBnL,QAASA,IAC5BtM,EAAAtB,EAAAC,cAAA,OAAKgO,IAAKnO,KAAK8X,mBAAoB1X,UAAU,uBAKzD,IAAMiX,EAAWnQ,YAAgBhF,GAC3BwV,EAAcC,YAAmBzV,GACjCgX,EAAMC,YAAWjX,GACjBsT,EAAUC,YAAYvT,GACtBkX,EAAOnC,YAAS/U,GAEhB2P,EAAUiF,YAAoB5U,GAC9BmX,EAAQ,GACdrZ,KAAK6R,QAAU,IAAIjO,IACnBiO,EAAQlI,QAAQ,SAAA2P,GACZ,IAAMxJ,EAAOlK,KAAU5B,IAAIsV,EAAO3T,SAC9BmK,IACAvC,EAAKsE,QAAQ5G,IAAI6E,EAAK5Q,GAAI4Q,EAAK5Q,IAC/Bma,EAAM3T,KAAKoK,MAInB,IAGMyJ,EAHcF,EAAMG,KAAK,SAACtT,EAAGuT,GAC/B,OAAOC,aAAmBD,GAAKC,aAAmBxT,KAE5BD,IAAI,SAAA6J,GAAI,OAC9BtO,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,SAAU3S,IAAKwO,EAAK5Q,IACpDsC,EAAAtB,EAAAC,cAACwZ,GAAD,CAAa9J,OAAQC,EAAK5Q,GAAIkD,SAAUmL,EAAK+K,oBAI7CrP,EAAUoI,EAAVpI,MAEFD,EACFxH,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAAC8Y,GAAD,CACI/W,OAAQA,EACRoR,WAAYA,EACZxF,QAASA,EACTrL,QAASzC,KAAK6X,oBAElBrW,EAAAtB,EAAAC,cAAA,OAAKgO,IAAKnO,KAAK8X,mBAAoB1X,UAAU,qBACzCoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,qBACXoB,EAAAtB,EAAAC,cAACyZ,GAAD,CACI1X,OAAQA,EACR8Q,WAAYiF,EACZhF,mBAAoBgF,EACpBlF,aAAc9J,EAAQjJ,KAAKgY,iBAAmB,SAGpDX,GAAYK,GAAewB,IACzB1X,EAAAtB,EAAAC,cAACmW,GAAApW,EAAD,KACKmX,GACG7V,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,SAAUxR,QAASzC,KAAKoX,oBACxD5V,EAAAtB,EAAAC,cAACgU,GAAAjU,EAAD,KACIsB,EAAAtB,EAAAC,cAAC0Z,GAAA3Z,EAAD,OAEJsB,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CACIgD,QACI1B,EAAAtB,EAAAC,cAACoU,GAAArU,EAAD,CAAYsU,QAAQ,UAAUC,QAAM,GAC/B4C,MAMpBK,GACGlW,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,SAAUxR,QAASzC,KAAKyX,iBACxDjW,EAAAtB,EAAAC,cAACgU,GAAAjU,EAAD,KACIsB,EAAAtB,EAAAC,cAAC2Z,GAAA5Z,EAAD,OAEJsB,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CACIgD,QACI1B,EAAAtB,EAAAC,cAACoU,GAAArU,EAAD,CAAYsU,QAAQ,UAAUC,QAAM,GAC/BmD,aAAkBF,QAO1CwB,GACG1X,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAUE,UAAW6B,EAAQgS,UACzBzS,EAAAtB,EAAAC,cAACgU,GAAAjU,EAAD,KACIsB,EAAAtB,EAAAC,cAAC4Z,GAAA7Z,EAAD,CAAkBE,UAAU,4BAEhCoB,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CACIgD,QAASgW,EACTc,MAAO,CAAEC,WAAY,WAAYC,SAAU,kBAM/D1Y,EAAAtB,EAAAC,cAACga,GAAAja,EAAD,MACAsB,EAAAtB,EAAAC,cAACmW,GAAApW,EAAD,MACMkZ,GAAQ5X,EAAAtB,EAAAC,cAACia,GAAD,CAAuBlY,OAAQA,IACxCsT,GAAWhU,EAAAtB,EAAAC,cAACka,GAAD,CAAcnY,OAAQA,IACjC+V,IAAUzC,GACPhU,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,SAAUxR,QAASzC,KAAKmY,gBACxD3W,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CACIuW,OAAK,EACLvT,QACI1B,EAAAtB,EAAAC,cAACoU,GAAArU,EAAD,CAAYuI,MAAM,UAAU+L,QAAQ,UAAUC,QAAM,GAC/C9M,EAAE,eAAe2S,oBAOxClB,GAAQ5X,EAAAtB,EAAAC,cAACga,GAAAja,EAAD,MACVsB,EAAAtB,EAAAC,cAACmW,GAAApW,EAAD,KACIsB,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAACuG,UAAQ,EAACna,UAAW6B,EAAQgS,SAAUxR,QAASsW,GAC5DvX,EAAAtB,EAAAC,cAACgU,GAAAjU,EAAD,KACIsB,EAAAtB,EAAAC,cAACqa,GAAAta,EAAD,OAEJsB,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CACIgD,QACI1B,EAAAtB,EAAAC,cAACoU,GAAArU,EAAD,CAAYsU,QAAQ,UAAUC,QAAM,GAC/B9M,EAAE,mBAKlBwP,GACG3V,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,SAAUxR,QAASuW,GACnDxX,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CACIuW,OAAK,EACLvT,QACI1B,EAAAtB,EAAAC,cAACoU,GAAArU,EAAD,CAAYsU,QAAQ,UAAUC,QAAM,GAC/B9M,EAAE,uBAO1B4R,EAAM5V,OAAS,GACZnC,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAACga,GAAAja,EAAD,MACAsB,EAAAtB,EAAAC,cAACmW,GAAApW,EAAD,KAAOqZ,MAO3B,OAAOtB,EAAQzW,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KAAG9M,GAAcxH,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,eAAgBnC,IAAa4I,sDArb5DvJ,EAAOZ,GACnC,OAAIY,EAAMyC,SAAWrD,EAAM6T,WAChB,CACHA,WAAYjT,EAAMyC,OAClBiV,mBAAmB,GAIpB,YAvBW3W,IAAMC,YAwdjBqO,GARCC,YACZ0L,cACAjL,cACA1M,IAleW,SAAAC,GAAK,MAAK,CACrB2X,gBAAiB,CACb9G,OAAQ,qBAEZ+G,OAAQ,GAGRjS,MAAO,CACHuG,QAASlM,EAAMmM,QAAQC,KAAO,GAElC8E,SAAU,CACNhF,QAAS,eAudM,CAAE1L,WAAW,IAChCkM,eACAmL,cAGW9L,CAAQ4H,IC9gBjBmE,uBACF,SAAAA,EAAYpb,GAAQ,OAAAqB,OAAAC,EAAA,EAAAD,CAAAd,KAAA6a,GAAA/Z,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA+Z,GAAAzW,KAAApE,KACVP,0EAGD,IAAAuC,EACwBhC,KAAKP,MAA1BwC,EADHD,EACGC,QAAS6L,EADZ9L,EACY8L,QAEjB,OACItM,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,iBACXoB,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CAAYE,UAAW6B,EAAQ6Y,eAAgBrY,QAASqL,GACpDtM,EAAAtB,EAAAC,cAACuT,GAAAxT,EAAD,OAEJsB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,qCACXoB,EAAAtB,EAAAC,cAAA,QAAMC,UAAU,yBAAhB,6BAdeI,IAAMC,YAyB1BqC,OA/BA,CACXgY,eAAgB,CACZlH,OAAQ,sBA6BD9Q,CAAmB+X,IC1B5BE,uBACF,SAAAA,EAAYtb,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA+a,IACfvb,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAia,GAAA3W,KAAApE,KAAMP,KA0BVub,aAAe,SAAA9Y,GAAU,IACb+V,EAAUzY,EAAKC,MAAfwY,MAERI,aAASnW,GAEL+V,GACA9Y,KAAgBqI,aAAa,CACzBnI,QAAS,2BACT6C,OAAQ,KAhChB1C,EAAKX,MAAQ,CACT0H,QAAS,IAJE/G,mFAQC,IAAA+N,EAAAvN,KACRkC,EAAWlC,KAAKP,MAAhByC,OAEF2N,EAASqH,YAAchV,GACxB2N,GAEL1Q,KAAgBC,KAAK,CACjBC,QAAS,oBACTsG,QAASkK,EACTrK,eAAgB,EAChBC,MAAO,MACRnG,KAAK,SAAAC,GACJ,IAAM0F,EAAQwB,IAAUC,WACxBC,YAAiB1B,EAAO1F,EAAOiH,UAE/B+G,EAAK7N,SAAS,CAAE6G,QAAShH,EAAOiH,8CAiB/B,IAAAyU,EAAAjb,KAAAgC,EACiChC,KAAKP,MAAnCyb,EADHlZ,EACGkZ,UAAWpN,EADd9L,EACc8L,QAASmK,EADvBjW,EACuBiW,MAGtBlT,EAFc/E,KAAKnB,MAAjB0H,QAEcN,IAAI,SAAAC,GAAC,OACvB1E,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC1S,IAAK4E,GAClB1E,EAAAtB,EAAAC,cAACyZ,GAAD,CAAa1X,OAAQgE,EAAG9D,SAAU6Y,EAAKD,kBAIzChS,EACFxH,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAACgb,GAAD,CAAsBrN,QAASA,IAC/BtM,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB4Z,MAAO,CAAEkB,cAC3CnW,IAKb,OAAOkT,EAAQzW,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KAAG9M,GAAcxH,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,oBAAoB4I,UA5D9CxI,IAAMC,YAuEnCsa,GAAe3H,aAAe,CAC1B6E,OAAO,EACPiD,UAAW,GAGAH,oDC5ETK,uBACF,SAAAA,EAAY3b,GAAQ,OAAAqB,OAAAC,EAAA,EAAAD,CAAAd,KAAAob,GAAAta,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAsa,GAAAhX,KAAApE,KACVP,0EAGD,IAAAuC,EACsBhC,KAAKP,MAAxBwC,EADHD,EACGC,QAASyG,EADZ1G,EACY0G,MAEjB,OACIlH,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,iBACXoB,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CAAYE,UAAW6B,EAAQ6Y,eAAgBrY,QAASiG,GACpDlH,EAAAtB,EAAAC,cAACuT,GAAAxT,EAAD,OAEJsB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,qCACXoB,EAAAtB,EAAAC,cAAA,QAAMC,UAAU,yBAAhB,yBAdmBI,IAAMC,YAqB9BqC,OA3BA,CACXgY,eAAgB,CACZlH,OAAQ,sBAyBD9Q,CAAmBsY,ICzB5BC,sNACFxc,MAAQ,CACJ0C,MAAO,KAGX+Z,aAAe,SAAC7P,EAAOlK,GACnB/B,EAAKE,SAAS,CAAE6B,mFAGX,IAAAS,EACsBhC,KAAKP,MAAxBqO,EADH9L,EACG8L,QAASmK,EADZjW,EACYiW,MACT1W,EAAUvB,KAAKnB,MAAf0C,MAEFyH,EACFxH,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAACob,GAAD,CAA0B7S,MAAOoF,IACjCtM,EAAAtB,EAAAC,cAACqb,GAAAtb,EAAD,CACIqB,MAAOA,EACPqT,SAAU5U,KAAKsb,aACfG,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdC,WAAS,GACTra,EAAAtB,EAAAC,cAAC2b,GAAA5b,EAAD,CAAK6b,MAAM,QAAQ/B,MAAO,CAAEgC,SAAU,UACtCxa,EAAAtB,EAAAC,cAAC2b,GAAA5b,EAAD,CAAK6b,MAAM,OAAO/B,MAAO,CAAEgC,SAAU,UACrCxa,EAAAtB,EAAAC,cAAC2b,GAAA5b,EAAD,CAAK6b,MAAM,QAAQ/B,MAAO,CAAEgC,SAAU,UACtCxa,EAAAtB,EAAAC,cAAC2b,GAAA5b,EAAD,CAAK6b,MAAM,QAAQ/B,MAAO,CAAEgC,SAAU,YAKlD,OAAO/D,EAAQzW,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KAAG9M,GAAcxH,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gBAAgB4I,UAhC7CxI,IAAMC,YA2ChC4a,GAAYjI,aAAe,CACvB6E,OAAO,EACPiD,UAAW,GAGAG,UCrCTY,uBACF,SAAAA,EAAYxc,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAic,IACfzc,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAmb,GAAA7X,KAAApE,KAAMP,KAmBVyc,qBAAuB,SAAAtM,GACDpQ,EAAKC,MAAfwY,OAGRzY,EAAKE,SAAS,CACVwC,OAAQ0N,EAAOuM,WACfC,WAAY,KACZC,iBAAiB,EACjBC,oBAAoB,KA5BT9c,EAgCnB+c,sBAAwB,WACpB/c,EAAKE,SAAS,CAAE2c,iBAAiB,KAjClB7c,EAoCnBgd,uBAAyB,WACrBhd,EAAKE,SAAS,CAAE2c,iBAAiB,KArClB7c,EAwCnBid,yBAA2B,SAAAlS,GACvBW,QAAQC,IAAI,oCAAqCZ,GACjD/K,EAAKE,SAAS,CAAE4c,oBAAoB,KA1CrB9c,EA6CnBkd,0BAA4B,WACxBld,EAAKE,SAAS,CAAE4c,oBAAoB,KA9CrB9c,EAiDnBmd,uBAAyB,WAAM,IACnB1E,EAAUzY,EAAKC,MAAfwY,MACezY,EAAKX,MAApBud,WAEJ5c,EAAKE,SAAS,CAAE0c,WAAY,OACrBnE,EACP9Y,KAAgBqI,aAAa,CACzBnI,QAAS,2BACT6C,OAAQ,IAGZiG,IAAiByU,6BAA4B,IA5DlCpd,EAgEnBqd,iBAhEmB,eAAAC,EAAAhc,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAgEA,SAAAC,EAAMqL,GAAN,IAAAuB,EAAA,OAAA9M,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVyK,EADU,CAAA3K,EAAAE,KAAA,eAAAF,EAAA6B,OAAA,wBAAA7B,EAAAE,KAAA,EAGElG,KAAgBC,KAAK,CAClCC,QAAS,oBACTsG,QAASmK,EAAK5Q,GACd4G,OAAO,IANI,UAGXuL,EAHWlM,EAAAkB,KASfgL,EAAOC,KAAUtN,IAAIqN,EAAKnS,KAAOmS,EATlB,CAAAlM,EAAAE,KAAA,eAAAF,EAAA6B,OAAA,iBAYfxH,EAAKE,SAAS,CAAE0c,WAAY/K,EAAKnS,KAZlB,wBAAAiG,EAAAyB,SAAAnC,MAhEA,gBAAAsY,GAAA,OAAAD,EAAA5b,MAAAlB,KAAAmB,YAAA,GAGf3B,EAAKwd,WAAaxc,IAAM8M,YAHT,IAKP2K,EAAUxY,EAAVwY,MALO,OAOfzY,EAAKX,MAAQ,CACTqD,OAAQ+V,EAAQ9P,IAAiB8U,aAAe9U,IAAiBjG,QARtD1C,mFAaf2I,IAAiBmI,GAAG,qBAAsBtQ,KAAKkc,qEAI/C/T,IAAiBoI,eAAe,qBAAsBvQ,KAAKkc,uDA8DtD,IAAAla,EACiChC,KAAKP,MAAnCwC,EADHD,EACGC,QAAS7B,EADZ4B,EACY5B,UAAW6X,EADvBjW,EACuBiW,MADvBpM,EAE+D7L,KAAKnB,MAAjEqD,EAFH2J,EAEG3J,OAAQka,EAFXvQ,EAEWuQ,WAAYC,EAFvBxQ,EAEuBwQ,gBAAiBC,EAFxCzQ,EAEwCyQ,mBACvCnH,EAAgBjT,GAAUka,EAC1BlB,EAAYlb,KAAKgd,YAAchd,KAAKgd,WAAWvT,QAAUzJ,KAAKgd,WAAWvT,QAAQ+O,mBAAqB,EAExGxP,EAAU,KAiCd,OA/BIA,EADAqT,EAEI7a,EAAAtB,EAAAC,cAAC+c,GAAD,CACIhb,OAAQiT,EACR8C,MAAOA,EACPiD,UAAWA,EACXpN,QAAS9N,KAAKwc,yBAGfF,EAEH9a,EAAAtB,EAAAC,cAACgd,GAAD,CACIjb,OAAQiT,EACR8C,MAAOA,EACPiD,UAAWA,EACXpN,QAAS9N,KAAK0c,4BAKlBlb,EAAAtB,EAAAC,cAACid,GAAD,CACIjP,IAAKnO,KAAKgd,WACV9a,OAAQiT,EACR8C,MAAOA,EACP3E,WAAY8I,IAAela,EAC3B6W,kBAAmB/Y,KAAKuc,sBACxBvD,qBAAsBhZ,KAAKyc,yBAC3B3O,QAAS9N,KAAK2c,yBAKnB1E,EACHzW,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KAAG9M,GAEHxH,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAWN,EAAQe,YAAa,CAAEqa,gBAAiBpF,GAAS7X,IAAa4I,UA1H9ExI,IAAMC,YAqI7Bwb,GAAS7I,aAAe,CACpBhT,UAAW,KACX6B,QAAS,KACTgW,OAAO,GAGInV,WAAWyM,IAAXzM,CAAwBmZ,aC9IjCqB,4LACO,IAAAtb,EACoDhC,KAAKP,MAA7CyC,GADZF,EACGC,QADHD,EACYE,QAAQE,EADpBJ,EACoBI,SAAU6Q,EAD9BjR,EAC8BiR,kBAE7B5Q,EAAaC,YAAkBJ,EAAQ+Q,GAE7C,OACIzR,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,YACXoB,EAAAtB,EAAAC,cAACuC,EAAA,EAAD,CAAUR,OAAQA,EAAQE,SAAUA,EAAU6Q,kBAAmBA,EAAmBsK,YAAU,IAC9F/b,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBiC,WAT3B7B,IAAMgd,gBAqB5BF,GAAQlK,aAAe,CACnBH,mBAAmB,GAGRnQ,WAlCA,CACX2a,eAAgB,CACZnO,SAAU,WACVoO,MAAO,EACPC,OAAQ,EACRC,OAAQ,IA6BD9a,CAAmBwa,IC3B5BO,4LACO,IAAA7b,EACgChC,KAAKP,MAAlCyC,EADHF,EACGE,OAAQO,EADXT,EACWS,QAASR,EADpBD,EACoBC,QAEzB,OACIT,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,SAAUxR,QAASA,GACnDjB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,uBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gBACXoB,EAAAtB,EAAAC,cAACuC,EAAA,EAAD,CAAUR,OAAQA,IAClBV,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBACXoB,EAAAtB,EAAAC,cAAC+S,GAAA,EAAD,CAAahR,OAAQA,gBAXrB1B,IAAMgd,gBA0BvB1a,OAhCA,CACXmR,SAAU,CACNhF,QAAS,IA8BFnM,CAAmB+a,ICV5BC,uBACF,SAAAA,EAAYre,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA8d,IACfte,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAgd,GAAA1Z,KAAApE,KAAMP,KAkCVyc,qBAAuB,SAAAtM,GAAU,IACrBuM,EAA+BvM,EAA/BuM,WAAY4B,EAAmBnO,EAAnBmO,eAEpBve,EAAKE,SAAS,CACVyc,WAAYA,EACZ4B,eAAgBA,KAxCLve,EA4CnBuR,YAAc,WAAM,IAAA/O,EACaxC,EAAKC,MAA1ByC,EADQF,EACRE,OAAQE,EADAJ,EACAI,SACXA,GAELA,EAASF,IA7CT1C,EAAKX,MAAQ,CACTsd,WAAYhU,IAAiBiN,YAC7B2I,eAAgB,MALLve,qFASG4Q,EAAWC,GAAW,IAAApI,EACdjI,KAAKP,MAAvByC,EADgC+F,EAChC/F,OAAQa,EADwBkF,EACxBlF,MAEhB,OAAIsN,EAAU8L,aAAeja,IAIzBmO,EAAU0N,iBAAmB7b,GAI7BkO,EAAUrN,QAAUA,+CAQxBoF,IAAiBmI,GAAG,qBAAsBtQ,KAAKkc,qEAI/C/T,IAAiBoI,eAAe,qBAAsBvQ,KAAKkc,uDAmBtD,IAAA8B,EAAA5U,EACgCpJ,KAAKP,MAAlCyC,EADHkH,EACGlH,OAAQO,EADX2G,EACW3G,QAASR,EADpBmH,EACoBnH,QACnBgc,EAAiBje,KAAKnB,MAAMsd,WAE5B9E,EAAWnQ,YAAgBhF,GAC3Bgc,EAAeC,YAAyBjc,GAC1Ckc,EAAoB,GAKxB,OAJIF,EAAe,IACfE,EAAqC,IAAjBF,EAAqB,iBAArB,KAAArc,OAA6Cqc,EAA7C,iBAIpB1c,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC/R,QAAS,CAAEoc,KAAMpc,EAAQgS,UAAYxR,QAASA,GAC3DjB,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IAAW,qBAADyb,EAAA,GAAAld,OAAA2P,GAAA,EAAA3P,CAAAkd,EAChB/b,EAAQqc,sBAAwBpc,IAAW+b,GAD3Bnd,OAAA2P,GAAA,EAAA3P,CAAAkd,EAEjB,oBAAqB9b,IAAW+b,GAFfD,IAIrBvb,QAASzC,KAAK+Q,aACdvP,EAAAtB,EAAAC,cAACuC,EAAA,EAAD,CAAUR,OAAQA,IAClBV,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBACXoB,EAAAtB,EAAAC,cAAC+S,GAAA,EAAD,CAAahR,OAAQA,EAAQD,QAAS,CAAEsc,aAActc,EAAQsc,iBAElE/c,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,mBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,iBAAkBN,EAAQuc,0BAArD,IACMnH,EACD+G,cA/EH5d,IAAMC,YA8FrBqC,OAjHA,SAAAC,GAAK,MAAK,CACrBkR,SAAU,CACNhF,QAAS,GAEbsP,aAAc,CACV9V,MAAO1F,EAAME,QAAQC,QAAQC,MAEjCmb,sBAAuB,CACnB7V,MAAO,OACPgW,gBAAiB1b,EAAME,QAAQC,QAAQC,KACvCub,kBAAmB,CACfjW,MAAO,SAGf+V,wBAAyB,CACrB/V,MAAO1F,EAAME,QAAQqG,KAAKsH,aAkGA,CAAErN,WAAW,GAAhCT,CAAwCgb,aCzFjDa,uBACF,SAAAA,EAAYlf,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA2e,IACfnf,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA6d,GAAAva,KAAApE,KAAMP,KAkCVyc,qBAAuB,SAAAtM,GACnBpQ,EAAKE,SAALoB,OAAAkO,EAAA,EAAAlO,CAAA,GACO8O,KAlCPpQ,EAAKX,MAAQ,CACTsd,WAAYhU,IAAiBiN,YAC7BwJ,cAAezW,IAAiB0W,gBALrBrf,qFASG4Q,EAAWC,GAAW,IAAArO,EACHhC,KAAKP,MAAlCyC,EADgCF,EAChCE,OAAQ4c,EADwB9c,EACxB8c,UAAW/b,EADaf,EACbe,MAE3B,OAAIsN,EAAU8L,aAAeja,GAAUmO,EAAUuO,gBAAkBE,IAI/DzO,EAAU0N,iBAAmB7b,GAAUmO,EAAU0O,oBAAsBD,GAIvE1O,EAAUrN,QAAUA,+CAQxBoF,IAAiBmI,GAAG,qBAAsBtQ,KAAKkc,qEAI/C/T,IAAiBoI,eAAe,qBAAsBvQ,KAAKkc,uDAStD,IAAAjU,EAC0DjI,KAAKP,MAA5DyC,EADH+F,EACG/F,OAAQ4c,EADX7W,EACW6W,UAAWE,EADtB/W,EACsB+W,WAAYvc,EADlCwF,EACkCxF,QAASR,EAD3CgG,EAC2ChG,QAAS0F,EADpDM,EACoDN,EACnDsW,EAAiBje,KAAKnB,MAAMsd,WAC5B8C,EAAoBjf,KAAKnB,MAAM+f,cAC/B/W,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GAEjCI,EAAmBrX,EAAnBqX,eAEFC,EAAOC,YAAevX,GACtBwX,EAAaC,YAAqBzX,GAClC0X,EAAiBC,YAAyB3X,GAC1CmB,EAAUyW,aAAW5X,EAASF,IAAM,OACpCxF,EAAWD,IAAW+b,GAAkBa,IAAcG,EAEtDS,EAAOR,GAAkBF,EAAaxd,EAAAtB,EAAAC,cAAC+Q,GAAA,EAAD,CAAUrB,OAAQqP,IAAqB1d,EAAAtB,EAAAC,cAACuC,EAAA,EAAD,CAAUR,OAAQA,IAErG,OACIV,EAAAtB,EAAAC,cAAC4T,GAAA7T,EAAD,CAAU8T,QAAM,EAAC5T,UAAW6B,EAAQgS,SAAUxR,QAASA,GACnDjB,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IACP,gBADiBzB,OAAA2P,GAAA,EAAA3P,CAAA,GAEdmB,EAAQ0d,mBAAqBxd,GAChC,CAAEyd,oBAAqBzd,KAE1Bud,EACDle,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBACV4e,GAAcO,EACX/d,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gBAAgBmf,GAE/B/d,EAAAtB,EAAAC,cAAC+S,GAAA,EAAD,CAAahR,OAAQA,EAAQD,QAAS,CAAEsc,aAActc,EAAQsc,gBAElE/c,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,cAAeN,EAAQ4d,uBAAwBV,IAE9E3d,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,mBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,iBAAkBN,EAAQ4d,uBAE7Cre,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,MACMkJ,GAAcK,GACZ7d,EAAAtB,EAAAC,cAAA,QAAMC,UAAU,yBAAyBif,EAAzC,MAEHrW,eAnFdxI,IAAMC,YA2GlBqO,GALCC,YACZjM,IA1HW,SAAAC,GAAK,MAAK,CACrBkR,SAAU,CACNhF,QAAS,GAEb4Q,qBAAsB,CAClBpX,MAAO1F,EAAME,QAAQqG,KAAKsH,WAE9B2N,aAAc,CACV9V,MAAO1F,EAAME,QAAQC,QAAQC,MAEjCwc,mBAAoB,CAChBlX,MAAO,OACPgW,gBAAiB1b,EAAME,QAAQC,QAAQC,KACvCub,kBAAmB,CACfjW,MAAO,WA4GI,CAAElF,WAAW,IAChCiM,cAGWV,CAAQ6P,WCzGR7b,WA/BA,SAAAC,GAAK,MAAK,CACrB+c,cAAe,CACXzc,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQ8c,KAAK,KAAO,aAAe,UACrFtX,MAA8B,SAAvB1F,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQqG,KAAKpG,QAAU,aAAe,WAEvF8c,qBAAsB,CAClBvX,MAA8B,SAAvB1F,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQqG,KAAKpG,QAAU,aAAe,aAyBzD,CAAEK,WAAW,GAAhCT,CArBf,SAAuBrD,GAAO,IAClBiL,EAAuCjL,EAAvCiL,QAASuV,EAA8BxgB,EAA9BwgB,QAASxd,EAAqBhD,EAArBgD,QAASR,EAAYxC,EAAZwC,QAEnC,OACIT,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,iBAAkBN,EAAQ6d,gBACjDte,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBsK,GACtCwV,QAAQD,IACLze,EAAAtB,EAAAC,cAAA,KAAGC,UAAW6B,EAAQ+d,qBAAsBvd,QAASA,GAChDwd,MCefE,uBACF,SAAAA,EAAY1gB,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAmgB,IACf3gB,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAqf,GAAA/b,KAAApE,KAAMP,KA6CV2gB,yBAA2B,SAAAxQ,GAAU,IAG3ByQ,EAFWzQ,EAATtG,KAEiByC,OAEpBsU,EAGD7gB,EAAK8M,WAAW+T,GAFhB7gB,EAAK6E,eApDM7E,EA0DnB8gB,oBAAsB,SAAAC,GAIlB,IAHA,IAAMC,EAAM,GACNva,EAAM,IAAIrC,IAEPE,EAAI,EAAGA,EAAIyc,EAAQ5c,OAAQG,IAAK,CACrC,IAAIvE,EAASghB,EAAQzc,GAAG0C,SACxB,GAAIjH,EACA,IAAK,IAAIkhB,EAAI,EAAGA,EAAIlhB,EAAOoE,OAAQ8c,IAC1Bxa,EAAIlC,IAAIxE,EAAOkhB,MAChBxa,EAAIgF,IAAI1L,EAAOkhB,GAAIlhB,EAAOkhB,IAC1BD,EAAI9a,KAAKnG,EAAOkhB,KAUhC,OAJAD,EAAIhH,KAAK,SAACtZ,EAAGwgB,GACT,OAAOC,aAAarP,KAAUtN,IAAI0c,GAAGE,MAAOtP,KAAUtN,IAAI9D,GAAG0gB,SAG1DJ,GA9EQhhB,EAiFnB8M,WAjFmB,eAAAwQ,EAAAhc,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAiFN,SAAAC,EAAM6E,GAAN,IAAAuX,EAAA5b,EAAA/C,EAAA8C,EAAAN,EAAAoc,EAAA9U,EAAA+U,EAAA9U,EAAA+U,EAAAT,EAAAU,EAAAtZ,EAAA2E,EAAA4U,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzc,EAAAsU,EAAAvV,EAAA,OAAAS,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACT7F,EAAKqhB,UAAY,IAAIY,KACrBjiB,EAAK8J,KAAOA,EACNuX,EAAYrhB,EAAKqhB,UACnB5b,EAAQ,KAEJ/C,EAAW1C,EAAKC,MAAhByC,OACA8C,EAAkBxF,EAAKX,MAAvBmG,cAEH9C,EATI,CAAAiD,EAAAE,KAAA,gBAUCX,EAAW,GACXoc,EAAe3hB,KAAgBC,KAAK,CACtCC,QAAS,cACTqiB,MAAOpY,EACP7D,MAAO,MAEXf,EAASgB,KAAKob,IAER9U,EAAY9H,EAAcoF,MAEtByX,EAAoB5hB,KAAgBC,KAAK,CAC3CC,QAAS,cACTqiB,MAAO1V,EACPvG,MAAO,MAEXf,EAASgB,KAAKqb,KAGZ9U,EAAexI,EAAiB6F,MAE5B0X,EAAuB7hB,KAAgBC,KAAK,CAC9CC,QAAS,cACTqiB,MAAOzV,EACPxG,MAAO,MAEXf,EAASgB,KAAKsb,IAnCb7b,EAAAE,KAAA,GAsCiBU,QAAQC,IAAItB,EAASuB,IAAI,SAAAC,GAAC,OAAIA,EAAEC,MAAM,SAAAC,GAAC,OAAI,UAtC5D,WAsCCma,EAtCDpb,EAAAkB,KAuCC4a,EAAQzhB,EAAK8gB,oBAAoBC,GAEnCM,IAAcrhB,EAAKqhB,UAzClB,CAAA1b,EAAAE,KAAA,gBAAAF,EAAA6B,OAAA,qBA6CDhC,IACQ2C,EAAMnI,EAAKC,MAAXkI,EAEF2E,EAAahD,EAAKgR,gBAClB4G,EAAuB,CAAC,iBAAkBvZ,EAAE,iBAAiB2S,gBAG1CqH,KAAK,SAAAC,GAAE,OAAIA,EAAGC,SAASvV,MAC3CN,GAAakV,EAAqBS,KAAK,SAAAC,GAAE,OAAIA,EAAGC,SAAS7V,EAAUsO,mBAEpE2G,EAAMa,OAAO,EAAG,EAAG9c,EAAc9F,KAIzCM,EAAKE,SAAS,CACVqiB,IAAK,KACLC,cAAe,KACff,MAAOA,IAGXhc,EAAQwB,IAAUC,WAClBC,YAAiB1B,EAAOgc,KAEpB3X,EAAK3F,QAAUse,MApEd,CAAA9c,EAAAE,KAAA,gBAqEK8b,EAAiB,GAEjBC,EAAgBjiB,KAAgBC,KAAK,CACvCC,QAAS,oBACTqiB,MAAOpY,IAEX6X,EAAezb,KAAK0b,GAEhBpV,IACMqV,EAAqBliB,KAAgBC,KAAK,CAC5CC,QAAS,oBACTqiB,MAAO1V,IAEXmV,EAAezb,KAAK2b,IAlFvBlc,EAAAE,KAAA,GAqF2BU,QAAQC,IAAImb,EAAelb,IAAI,SAAAC,GAAC,OAAIA,EAAEC,MAAM,SAAAC,GAAC,OAAI,UArF5E,WAqFKkb,EArFLnc,EAAAkB,KAsFKkb,EAAS/hB,EAAK8gB,oBAAoBgB,GAEpCT,IAAcrhB,EAAKqhB,UAxFtB,CAAA1b,EAAAE,KAAA,gBAAAF,EAAA6B,OAAA,kBA4FDxH,EAAKE,SAAS,CACV6hB,OAAQA,IAGZtc,EAAQwB,IAAUC,WAClBC,YAAiB1B,EAAOsc,GAjGvBpc,EAAAE,KAAA,iBAmGD7F,EAAKE,SAAS,CACV6hB,OAAQ,OApGX,WAyGLC,EAAW,IACXtf,EA1GK,CAAAiD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA2GYlG,KAAgBC,KAAK,CAClCC,QAAS,qBACT8H,QAASjF,EACTwf,MAAOpY,EACP4V,eAAgB,EAChBgD,gBAAiB,EACjBC,OAAQ,EACR1c,MAAO,GACP0G,OAAQ,OAnHP,QA2GLqV,EA3GKrc,EAAAkB,KAAAlB,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAsHYlG,KAAgBC,KAAK,CAClCC,QAAS,iBACTqiB,MAAOpY,EACP8Y,YAAa,EACb5c,eAAgB,EAChB6c,kBAAmB,EACnB5c,MAAO,KA5HN,QAsHL+b,EAtHKrc,EAAAkB,KAAA,WAgITyC,IAAawZ,SAASd,EAASA,UAE3BX,IAAcrhB,EAAKqhB,UAlId,CAAA1b,EAAAE,KAAA,gBAAAF,EAAA6B,OAAA,kBA4IT,IANAxH,EAAKE,SAAS,CACV8hB,SAAUA,IAGRzc,EAAQ,IAAInB,IACZyV,EAAQ,IAAIzV,IACTE,EAAI,EAAGA,EAAI0d,EAASA,SAAS7d,OAAQG,IAC1CiB,EAAMkG,IAAIuW,EAASA,SAAS1d,GAAGqD,QAASqa,EAASA,SAAS1d,GAAGqD,SACzDqa,EAASA,SAAS1d,GAAGob,gBACrB7F,EAAMpO,IAAIuW,EAASA,SAAS1d,GAAGob,eAAgBsC,EAASA,SAAS1d,GAAGob,gBAI5Eja,EAAQwB,IAAUC,WAClBC,YAAiB1B,EAADnE,OAAAyhB,GAAA,EAAAzhB,CAAYiE,EAAMyd,SAClCzL,YAAiB9R,EAADnE,OAAAyhB,GAAA,EAAAzhB,CAAYuY,EAAMmJ,SArJzB,yBAAArd,EAAAyB,SAAAnC,MAjFM,gBAAAsY,GAAA,OAAAD,EAAA5b,MAAAlB,KAAAmB,YAAA,GAAA3B,EAyOnB6E,YAzOmBvD,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAyOL,SAAAqC,IAAA,IAAA4b,EAAAC,EAAA9d,EAAAE,EAAA6d,EAAAZ,EAAAC,EAAAhd,EAAAC,EAAA,OAAAV,EAAArE,EAAAgF,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,WACS7F,EAAKC,MAAhByC,OADE,CAAA6E,EAAA1B,KAAA,eAGN7F,EAAKE,SAAS,CACVqiB,IAAK,KACLC,cAAe,KACff,MAAO,KACPM,OAAQ,KACRC,SAAU,OARRza,EAAAC,OAAA,wBAcJyb,EAAatjB,KAAgBC,KAAK,CACpCC,QAAS,cACTujB,SAAU,CAAEvjB,QAAS,wBACrBoG,MAAO,KACRU,MAAM,WACL,MAAO,CAAE9G,QAAS,QAASmH,SAAU,MAGnCkc,EAAuBvjB,KAAgBC,KAAK,CAC9CC,QAAS,cACTqiB,MAAO,GACPjc,MAAO,MACRU,MAAM,WACL,MAAO,CAAE9G,QAAS,QAASmH,SAAU,MAGnC5B,EAAuBzF,KAAgBC,KAAK,CAC9CC,QAAS,oBACTsG,QAASC,KAAUC,UACnBC,OAAO,IACRK,MAAM,SAAA0c,MAlCC9b,EAAA1B,KAAA,EAoCwCU,QAAQC,IAAI,CAC1Dyc,EACAC,EACA9d,IAvCM,OAAAE,EAAAiC,EAAAV,KAAAsc,EAAA7hB,OAAAwF,EAAA,EAAAxF,CAAAgE,EAAA,GAoCHid,EApCGY,EAAA,GAoCEX,EApCFW,EAAA,GAoCiB3d,EApCjB2d,EAAA,GA0CVnjB,EAAKE,SAAS,CACVqiB,IAAKA,EACLC,cAAeA,EACfhd,cAAeA,EACfic,MAAO,KACPM,OAAQ,KACRC,SAAU,OAGRvc,EAAQwB,IAAUC,WACxBC,YAAiB1B,EAAO8c,EAAIvb,UAC5BG,YAAiB1B,EAAO+c,EAAcxb,UArD5B,yBAAAO,EAAAH,SAAAC,MAzOKrH,EAiSnBsjB,oBAjSmBhiB,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAiSG,SAAAue,IAAA,IAAAhe,EAAAjB,EAAA,OAAAS,EAAArE,EAAAgF,KAAA,SAAA8d,GAAA,cAAAA,EAAA5d,KAAA4d,EAAA3d,MAAA,cAAA2d,EAAA3d,KAAA,EACElG,KAAgBC,KAAK,CACrCC,QAAS,WACTkG,aAAc,sBACdC,eAAgB,EAChBC,MAAO,KALO,OAQlB,IAPMV,EADYie,EAAA3c,KAQTvC,EAAIiB,EAAMyB,SAAS7C,OAAS,EAAGG,GAAK,EAAGA,IAC5C3E,KAAgBC,KAAK,CACjBC,QAAS,uBACT8H,QAASpC,EAAMyB,SAAS1C,KAXd,wBAAAkf,EAAApc,SAAAmc,MAjSHvjB,EAiTnByjB,yBAA2B,SAAAxX,GACvBA,EAAMyX,kBAEN/jB,KAAgBC,KAAK,CACjBC,QAAS,4BAGbG,EAAKE,SAAS,CAAEsiB,cAAe,QAxThBxiB,EA2TnB2jB,oBAAsB,SAACjhB,EAAQ4c,EAAWsE,EAAaC,GAAa,IACxDC,EAAoB9jB,EAAKC,MAAzB6jB,gBAEJF,GACAjkB,KAAgBC,KAAK,CACjBC,QAAS,uBACT8H,QAASjF,IAIjBohB,EAAgBphB,EAAQ4c,EAAWuE,IArUpB7jB,EAwUnB+jB,aAAe,WACX,IAAM7K,EAAOlZ,EAAKgkB,QAAQ/Z,QAEtBiP,EAAKX,UAAYW,EAAKE,eAAiBF,EAAKC,cAC5CnZ,EAAKikB,kBA5UMjkB,EAgVnBkkB,UAAY,SAAAlC,GACR,IAAM7d,EAAS6d,EAAWA,EAASA,SAAS7d,OAAS,EAMrD,MAAO,CACHye,YALeze,EAAS,EAAI6d,EAASA,SAAS7d,EAAS,GAAGwb,KAAO,EAMjE3Z,eALiB7B,EAAS,EAAI6d,EAASA,SAAS7d,EAAS,GAAGwD,QAAU,EAMtEkb,kBALoB1e,EAAS,EAAI6d,EAASA,SAAS7d,EAAS,GAAGzE,GAAK,IArVzDM,EA8VnBmkB,eAAiB,SAACnC,EAAUjiB,GACxB,OAAKA,GACAA,EAAOiiB,SAAS7d,OAEhB6d,GACAA,EAASA,SAAS7d,OAEhB,CACHigB,YAAarkB,EAAOqkB,YACpBpC,SAAUA,EAASA,SAAS3f,OAAOtC,EAAOiiB,WALxBjiB,EAHFiiB,GA/VLhiB,EA2WnBikB,eA3WmB3iB,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KA2WF,SAAAqf,IAAA,IAAA3hB,EAAA2e,EAAAW,EAAAW,EAAA5iB,EAAAwF,EAAAsU,EAAAvV,EAAAmB,EAAA,OAAAV,EAAArE,EAAAgF,KAAA,SAAA4e,GAAA,cAAAA,EAAA1e,KAAA0e,EAAAze,MAAA,WACT7F,EAAKukB,QADI,CAAAD,EAAAze,KAAA,eAAAye,EAAA9c,OAAA,oBAGL9E,EAAW1C,EAAKC,MAAhByC,OAEF2e,EAAYrhB,EAAKqhB,UAEfW,EAAahiB,EAAKX,MAAlB2iB,SAEFW,EAAS3iB,EAAKkkB,UAAUlC,GAE9BhiB,EAAKukB,SAAU,EACXxkB,EAAS,IACT2C,EAbS,CAAA4hB,EAAAze,KAAA,gBAAAye,EAAAze,KAAA,GAcMlG,KAAgBC,KAAK,CAChCC,QAAS,qBACT8H,QAASjF,EACTwf,MAAOliB,EAAK8J,KACZ4V,eAAgB,EAChBgD,gBAAiBC,EAAOE,kBACxB5c,MAAO,GACP0G,OAAQ,OArBH,QAcT5M,EAdSukB,EAAAzd,KAAAyd,EAAAze,KAAA,wBAAAye,EAAAze,KAAA,GAwBMlG,KAAgBC,KAAhB0B,OAAAkO,EAAA,EAAAlO,CAAA,CACXzB,QAAS,iBACTqiB,MAAOliB,EAAK8J,MACT6Y,EAHQ,CAIX1c,MAAO,MA5BF,QAwBTlG,EAxBSukB,EAAAzd,KAAA,WA+Bb7G,EAAKukB,SAAU,EAEfC,aAAezkB,EAAQiiB,EAAWA,EAASA,SAAW,IAEtD1Y,IAAawZ,SAAS/iB,EAAOiiB,UAEzBX,IAAcrhB,EAAKqhB,UArCV,CAAAiD,EAAAze,KAAA,gBAAAye,EAAA9c,OAAA,kBA+Cb,IANAxH,EAAKE,SAAS,CACV8hB,SAAUhiB,EAAKmkB,eAAenC,EAAUjiB,KAGtCwF,EAAQ,IAAInB,IACZyV,EAAQ,IAAIzV,IACTE,EAAI,EAAGA,EAAIvE,EAAOiiB,SAAS7d,OAAQG,IACxCiB,EAAMkG,IAAI1L,EAAOiiB,SAAS1d,GAAGqD,QAAS5H,EAAOiiB,SAAS1d,GAAGqD,SACrD5H,EAAOiiB,SAAS1d,GAAGob,gBACnB7F,EAAMpO,IAAI1L,EAAOiiB,SAAS1d,GAAGob,eAAgB3f,EAAOiiB,SAAS1d,GAAGob,gBAIlEja,EAAQwB,IAAUC,WACxBC,YAAiB1B,EAADnE,OAAAyhB,GAAA,EAAAzhB,CAAYiE,EAAMyd,SAClCzL,YAAiB9R,EAADnE,OAAAyhB,GAAA,EAAAzhB,CAAYuY,EAAMmJ,SAxDrB,yBAAAsB,EAAAld,SAAAid,MA3WErkB,EAsanBykB,qBAAuB,SAAAxY,GACnBA,EAAMyX,mBAvaS1jB,EA0anB+H,YAAc,YAGVuG,EAFoBtO,EAAKC,MAAjBqO,YAxaRtO,EAAKgkB,QAAUhjB,IAAM8M,YAHN,IAAAtL,EAKUxC,EAAKC,MAAtByC,EALOF,EAKPE,OAAQoH,EALDtH,EAKCsH,KALD,OAOf9J,EAAKX,MAAQ,CACTqlB,gBAAiBhiB,EACjBiiB,cAAe7a,EAEfyY,IAAK,KACLC,cAAe,KACff,MAAO,KACPM,OAAQ,KACRC,SAAU,MAfChiB,mFAqCfQ,KAAKqE,cAEL8D,IAAiBmI,GAAG,yBAA0BtQ,KAAKogB,yEAInDjY,IAAiBoI,eAAe,yBAA0BvQ,KAAKogB,2DAqY1D,IAAA7S,EAAAvN,KAAAiI,EACuBjI,KAAKP,MAAzBwC,EADHgG,EACGhG,QAASC,EADZ+F,EACY/F,OADZ2J,EAEmD7L,KAAKnB,MAArDkjB,EAFHlW,EAEGkW,IAAKC,EAFRnW,EAEQmW,cAAef,EAFvBpV,EAEuBoV,MAAOM,EAF9B1V,EAE8B0V,OAAQC,EAFtC3V,EAEsC2V,SAErCnQ,EAAOC,KAAUtN,IAAI9B,GAErBkiB,EACFrC,GAAOA,EAAIvb,SACLub,EAAIvb,SAASP,IAAI,SAAAC,GAAC,OACd1E,EAAAtB,EAAAC,cAACkkB,GAAD,CAAS/iB,IAAK4E,EAAGhE,OAAQgE,EAAG9D,SAAU,kBAAMmL,EAAK4V,oBAAoBjd,EAAG,MAAM,GAAO,QAEzF,GAEJoe,EACFtC,GAAiBA,EAAcxb,SACzBwb,EAAcxb,SAASP,IAAI,SAAAC,GAAC,OACxB1E,EAAAtB,EAAAC,cAACokB,GAAD,CACIjjB,IAAK4E,EACLhE,OAAQgE,EACRzD,QAAS,kBAAM8K,EAAK4V,oBAAoBjd,EAAG,MAAM,GAAM,QAG/D,GAEJse,EAAavD,EACbA,EAAMhb,IAAI,SAAAC,GAAC,OACP1E,EAAAtB,EAAAC,cAACokB,GAAD,CACIjjB,IAAK4E,EACLhE,OAAQgE,EACRzD,QAAS,kBAAM8K,EAAK4V,oBAAoBjd,EAAG,MAAM,GAAM,QAG/D,GAEAue,EAAclD,EACdA,EAAOtb,IAAI,SAAAC,GAAC,OACR1E,EAAAtB,EAAAC,cAACukB,GAAD,CAAiBpjB,IAAK4E,EAAGhE,OAAQgE,EAAGzD,QAAS,kBAAM8K,EAAK4V,oBAAoBjd,EAAG,MAAM,GAAM,QAE/F,GAEAye,EACFnD,GAAYA,EAASA,SACfA,EAASA,SAASvb,IAAI,SAAAC,GAAC,OACnB1E,EAAAtB,EAAAC,cAACykB,GAAD,CACItjB,IAAG,GAAAO,OAAKqE,EAAEiB,QAAP,KAAAtF,OAAkBqE,EAAEhH,IACvBgD,OAAQgE,EAAEiB,QACV2X,UAAW5Y,EAAEhH,GACb8f,WAAYkB,QAAQhe,GACpBO,QAAS,kBAAM8K,EAAK4V,oBAAoBjd,EAAEiB,QAASjB,EAAEhH,IAAI,GAAO,QAGxE,GAEN2lB,EAAkB,oBAKtB,OAJIrD,GAAYA,EAASoC,cACrBiB,EAA2C,IAAzBrD,EAASoC,YAAoB,kBAA7B,SAAA/hB,OAA0D2f,EAASoC,YAAnE,cAIlBpiB,EAAAtB,EAAAC,cAAA,OAAKgO,IAAKnO,KAAKwjB,QAASpjB,UAAWmC,IAAWN,EAAQ6iB,OAAQ,UAAWC,SAAU/kB,KAAKujB,cACnFlS,GACG7P,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,eACXoB,EAAAtB,EAAAC,cAAC6kB,GAAD,CAAeta,QAAQ,uBACvBlJ,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,uBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,uBACXoB,EAAAtB,EAAAC,cAACyZ,GAAD,CAAa1X,OAAQA,EAAQ8Q,YAAY,KAE7CxR,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACIE,UAAW6B,EAAQgjB,sBACnBzc,aAAW,SACX0c,YAAallB,KAAKuH,aAClB/F,EAAAtB,EAAAC,cAACyI,EAAA1I,EAAD,SAKfkkB,EAASzgB,OAAS,GACfnC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,oBACXoB,EAAAtB,EAAAC,cAAC6kB,GAAD,CAAeta,QAAQ,WACvBlJ,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB2kB,SAAU/kB,KAAKikB,sBAClDziB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,iCACdgkB,EACD5iB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,mCAI1BkkB,EAAmB3gB,OAAS,GACzBnC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,+BACXoB,EAAAtB,EAAAC,cAAC6kB,GAAD,CAAeta,QAAQ,SAASuV,QAAQ,QAAQxd,QAASzC,KAAKijB,2BAC7DqB,GAGRE,EAAW7gB,OAAS,GACjBnC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,sBACXoB,EAAAtB,EAAAC,cAAC6kB,GAAD,CAAeta,QAAQ,uBACtB8Z,GAGRC,EAAY9gB,OAAS,GAClBnC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,uBACXoB,EAAAtB,EAAAC,cAAC6kB,GAAD,CAAeta,QAAQ,kBACtB+Z,GAGRjD,GACGhgB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,uBACXoB,EAAAtB,EAAAC,cAAC6kB,GAAD,CAAeta,QAASma,IACvBF,uDAxgBWllB,EAAOZ,GACnC,OAAIY,EAAMyC,SAAWrD,EAAMqlB,iBAAmBzkB,EAAM6J,OAASzK,EAAMslB,cACxD,CACHD,gBAAiBzkB,EAAMyC,OACvBiiB,cAAe1kB,EAAM6J,KAErByY,IAAK,KACLC,cAAe,KACff,MAAO,KACPM,OAAQ,KACRC,SAAU,MAIX,YAlCMhhB,IAAMC,YAgjBZqO,GALCC,YACZjM,IAxjBW,SAAAC,GAAK,MAAK,CACrBkiB,sBAAuB,CACnBrR,OAAQ,kBAEZK,SAAU,CACNhF,QAAS,OAEb6V,OAAQ,CACJzhB,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAW8hB,QAAU,aAgjBhE,CAAE5hB,WAAW,IAChCiM,cAGWV,CAAQqR,+YC/gBjBiF,eACF,SAAAA,EAAY3lB,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAolB,IACf5lB,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAskB,GAAAhhB,KAAApE,KAAMP,KASV6b,aAAe,SAAA7P,GACXjM,EAAKE,SAAS,CAAE6R,KAAM9F,EAAM4Z,OAAO9jB,QAEnC4G,IAAiBmd,KAAK,4BAA6B,CAC/C/T,KAAM9F,EAAM4Z,OAAO9jB,MACnB2B,QAAS1D,EAAK+lB,SAAS/lB,EAAKX,MAAM4J,UAfvBjJ,EAmBnBgmB,mBAAqB,SAAA/Z,GACjBjM,EAAKE,SAAS,CAAE+I,MAAOgD,EAAM4Z,OAAO9jB,QAEpC4G,IAAiBmd,KAAK,4BAA6B,CAC/C/T,KAAM/R,EAAKX,MAAM0S,KACjBrO,QAAS1D,EAAK+lB,SAAS9Z,EAAM4Z,OAAO9jB,UAxBzB/B,EA4BnBimB,eAAiB,SAAAlkB,GACb,OAAQA,GACJ,KAAKmkB,KAAI,KACL,MAAO,MACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAK,KACN,MAAO,OACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAW,KACZ,MAAO,aAGf,OAAO,MA9CQxmB,EAiDnB+lB,SAAW,SAAAhkB,GACP,OAAQA,GACJ,IAAK,MACD,OAAOmkB,KACX,IAAK,SACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,OACD,OAAOC,KACX,IAAK,SACD,OAAOC,KACX,IAAK,aACD,OAAOC,KAGf,OAAO,MAnEQxmB,EAsEnB+H,YAAc,WACV/H,EAAKE,SAAS,CAAEmO,MAAM,KAvEPrO,EA0EnBqO,KAAO,WACHrO,EAAKE,SAAS,CAAEmO,MAAM,KAxEtBrO,EAAKX,MAAQ,CACTgP,MAAM,EACN0D,KAAM/R,EAAKC,MAAMsD,MAAME,QAAQsO,KAC/B9I,MAAOjJ,EAAKimB,eAAejmB,EAAKC,MAAMsD,MAAME,QAAQC,QAAQC,OANjD3D,wEA8EV,IACGyC,EAAYjC,KAAKP,MAAjBwC,QADH4J,EAEmB7L,KAAKnB,MAArB0S,EAFH1F,EAEG0F,KAAM9I,EAFToD,EAESpD,MAEd,OACIjH,EAAAtB,EAAAC,cAACyN,EAAA1N,EAAD,CACI+lB,mBAAoB,EACpBpY,KAAM7N,KAAKnB,MAAMgP,KACjBC,QAAS9N,KAAKuH,YACdwG,kBAAgB,qBAChBC,mBAAiB,4BACjBxM,EAAAtB,EAAAC,cAAC+N,EAAAhO,EAAD,CAAahB,GAAG,sBAAhB,cACAsC,EAAAtB,EAAAC,cAAC+lB,GAAAhmB,EAAD,KACIsB,EAAAtB,EAAAC,cAACgmB,GAAAjmB,EAAD,CAAaqW,UAAU,WAAWnW,UAAW6B,EAAQmkB,aACjD5kB,EAAAtB,EAAAC,cAACkmB,GAAAnmB,EAAD,CAAWomB,SAAO,EAAC/P,UAAU,UAA7B,SAGA/U,EAAAtB,EAAAC,cAAComB,GAAArmB,EAAD,CACIsI,aAAW,QACXge,KAAK,SACLpmB,UAAW6B,EAAQwkB,MACnBllB,MAAOgQ,EACPqD,SAAU5U,KAAKsb,cACf9Z,EAAAtB,EAAAC,cAACumB,GAAAxmB,EAAD,CAAkBqB,MAAM,QAAQolB,QAASnlB,EAAAtB,EAAAC,cAACymB,GAAA1mB,EAAD,CAAOuI,MAAM,YAAcsT,MAAM,UAC1Eva,EAAAtB,EAAAC,cAACumB,GAAAxmB,EAAD,CAAkBqB,MAAM,OAAOolB,QAASnlB,EAAAtB,EAAAC,cAACymB,GAAA1mB,EAAD,CAAOuI,MAAM,YAAcsT,MAAM,WAGjFva,EAAAtB,EAAAC,cAACgmB,GAAAjmB,EAAD,CAAaqW,UAAU,WAAWnW,UAAW6B,EAAQmkB,aACjD5kB,EAAAtB,EAAAC,cAACkmB,GAAAnmB,EAAD,CAAWomB,SAAO,EAAC/P,UAAU,UAA7B,UAGA/U,EAAAtB,EAAAC,cAAComB,GAAArmB,EAAD,CACIsI,aAAW,SACXge,KAAK,UACLpmB,UAAW6B,EAAQwkB,MACnBllB,MAAOkH,EACPmM,SAAU5U,KAAKwlB,oBACfhkB,EAAAtB,EAAAC,cAACumB,GAAAxmB,EAAD,CACIqB,MAAM,MACNolB,QACInlB,EAAAtB,EAAAC,cAACymB,GAAA1mB,EAAD,CACI+B,QAAS,CACLoc,KAAMpc,EAAQ4kB,QACdhS,QAAS5S,EAAQ4S,WAI7BkH,MAAM,QAEVva,EAAAtB,EAAAC,cAACumB,GAAAxmB,EAAD,CACIqB,MAAM,SACNolB,QACInlB,EAAAtB,EAAAC,cAACymB,GAAA1mB,EAAD,CACI+B,QAAS,CACLoc,KAAMpc,EAAQ6kB,WACdjS,QAAS5S,EAAQ4S,WAI7BkH,MAAM,WAEVva,EAAAtB,EAAAC,cAACumB,GAAAxmB,EAAD,CACIqB,MAAM,QACNolB,QACInlB,EAAAtB,EAAAC,cAACymB,GAAA1mB,EAAD,CACI+B,QAAS,CACLoc,KAAMpc,EAAQ8kB,UACdlS,QAAS5S,EAAQ4S,WAI7BkH,MAAM,UAEVva,EAAAtB,EAAAC,cAACumB,GAAAxmB,EAAD,CACIqB,MAAM,QACNolB,QACInlB,EAAAtB,EAAAC,cAACymB,GAAA1mB,EAAD,CACI+B,QAAS,CACLoc,KAAMpc,EAAQ+kB,UACdnS,QAAS5S,EAAQ4S,WAI7BkH,MAAM,UAEVva,EAAAtB,EAAAC,cAACumB,GAAAxmB,EAAD,CACIqB,MAAM,OACNolB,QACInlB,EAAAtB,EAAAC,cAACymB,GAAA1mB,EAAD,CACI+B,QAAS,CACLoc,KAAMpc,EAAQglB,SACdpS,QAAS5S,EAAQ4S,WAI7BkH,MAAM,SAEVva,EAAAtB,EAAAC,cAACumB,GAAAxmB,EAAD,CACIqB,MAAM,SACNolB,QACInlB,EAAAtB,EAAAC,cAACymB,GAAA1mB,EAAD,CACI+B,QAAS,CACLoc,KAAMpc,EAAQilB,WACdrS,QAAS5S,EAAQ4S,WAI7BkH,MAAM,WAEVva,EAAAtB,EAAAC,cAACumB,GAAAxmB,EAAD,CACIqB,MAAM,aACNolB,QACInlB,EAAAtB,EAAAC,cAACymB,GAAA1mB,EAAD,CACI+B,QAAS,CACLoc,KAAMpc,EAAQklB,eACdtS,QAAS5S,EAAQ4S,WAI7BkH,MAAM,2BAtMZvb,IAAMC,WAkNjBqC,OAtQA,SAAAC,GAAK,MAAK,CACrBqjB,YAAa,CACTxS,OAA6B,EAArB7Q,EAAMmM,QAAQC,MAE1BsX,MAAO,CACH7S,OAAM,GAAA/R,OAAKkB,EAAMmM,QAAQC,KAAnB,SAEV0X,QAAS,CACLpe,MAAOid,KAAI,KACX0B,YAAa,CACT3e,MAAOid,KAAI,OAGnBoB,WAAY,CACRre,MAAOkd,KAAO,KACdyB,YAAa,CACT3e,MAAOkd,KAAO,OAGtBoB,UAAW,CACPte,MAAOmd,KAAM,KACbwB,YAAa,CACT3e,MAAOmd,KAAM,OAGrBoB,UAAW,CACPve,MAAOod,KAAM,KACbuB,YAAa,CACT3e,MAAOod,KAAM,OAGrBoB,SAAU,CACNxe,MAAOqd,KAAK,KACZsB,YAAa,CACT3e,MAAOqd,KAAK,OAGpBoB,WAAY,CACRze,MAAOsd,KAAO,KACdqB,YAAa,CACT3e,MAAOsd,KAAO,OAGtBoB,eAAgB,CACZ1e,MAAOud,KAAW,KAClBoB,YAAa,CACT3e,MAAOud,KAAW,OAG1BnR,QAAS,KAqNqB,CAAEtR,WAAW,GAAhCT,CAAwCsiB,cCjQjDiC,eACF,SAAAA,EAAY5nB,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAqnB,IACf7nB,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAumB,GAAAjjB,KAAApE,KAAMP,KAWV6b,aAAe,SAAA7P,GACXjM,EAAKE,SAAS,CAAE4nB,SAAU7b,EAAM4Z,OAAO9jB,QAEvCpC,KAAgBqI,aAAa,CAAEnI,QAAS,6BAA8BioB,SAAU7b,EAAM4Z,OAAO9jB,SAf9E/B,EAkBnB+H,YAAc,WACV/H,EAAKE,SAAS,CAAEmO,MAAM,KAnBPrO,EAsBnBqO,KAAO,WACHrO,EAAKE,SAAS,CAAEmO,MAAM,KAvBP,IAGP0Z,EAAS9nB,EAAT8nB,KACFD,EAAWC,EAAOA,EAAKD,SAAW,KAJzB,OAMf9nB,EAAKX,MAAQ,CACTgP,MAAM,EACNyZ,SAAUA,GAAY,MARX9nB,wEA0BV,IAAAwC,EACkBhC,KAAKP,MAAXkI,GADZ3F,EACGC,QADHD,EACY2F,GADZkE,EAEsB7L,KAAKnB,MAAxBgP,EAFHhC,EAEGgC,KAAMyZ,EAFTzb,EAESyb,SAGRE,GAFOC,KAAkBhgB,MAAQ,CAAEigB,eAAgB,KAElCA,eAAezhB,IAAI,SAAAC,GAAC,OACvC1E,EAAAtB,EAAAC,cAACumB,GAAAxmB,EAAD,CACIoB,IAAK4E,EAAEhH,GACPqC,MAAO2E,EAAEhH,GACTynB,QAASnlB,EAAAtB,EAAAC,cAACymB,GAAA1mB,EAAD,CAAOuI,MAAM,YACtBsT,MAAK,GAAAla,OAAKqE,EAAEsgB,KAAP,SAAA3kB,OAAmBqE,EAAEyhB,YAArB,SAIb,OACInmB,EAAAtB,EAAAC,cAACyN,EAAA1N,EAAD,CACI+lB,mBAAoB,EACpBpY,KAAMA,EACNC,QAAS9N,KAAKuH,YACdwG,kBAAgB,wBAChBC,mBAAiB,+BACjBxM,EAAAtB,EAAAC,cAAC+N,EAAAhO,EAAD,CAAahB,GAAG,yBAAyByI,EAAE,aAC3CnG,EAAAtB,EAAAC,cAAC+lB,GAAAhmB,EAAD,KACIsB,EAAAtB,EAAAC,cAACgmB,GAAAjmB,EAAD,CAAaqW,UAAU,YACnB/U,EAAAtB,EAAAC,cAAComB,GAAArmB,EAAD,CACIsI,aAAW,WACXge,KAAK,YACLjlB,MAAO+lB,EACP1S,SAAU5U,KAAKsb,cACdkM,aAxDAhnB,IAAMC,WA0EpBqO,GAPCC,YACZ0L,cACAjL,cACA1M,IA/EW,SAAAC,GAAK,MAAK,CACrBqjB,YAAa,CACTxS,OAA6B,EAArB7Q,EAAMmM,QAAQC,MAE1BsX,MAAO,CACH7S,OAAM,GAAA/R,OAAKkB,EAAMmM,QAAQC,KAAnB,WA0ES,CAAE5L,WAAW,IAChCqX,cAGW9L,CAAQuY,IC3EjBO,WAAmB,CACrBC,SAAU,SACVC,WAAY,SAGVC,eACF,SAAAA,EAAYtoB,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA+nB,IACfvoB,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAinB,GAAA3jB,KAAApE,KAAMP,KAgBVuoB,2BAA6B,SAAApY,GACzBpQ,EAAKE,SAAS,CAAEuoB,mBAAoBrY,EAAOsY,uBAlB5B1oB,EAqBnB2oB,eAAiB,SAAA1c,GAAS,IACdwc,EAAuBzoB,EAAKX,MAA5BopB,mBACHG,aAAqBH,IAE1BzoB,EAAKE,SAAS,CAAE2oB,SAAU5c,EAAM6c,iBAzBjB9oB,EA4BnB+oB,gBAAkB,WACd/oB,EAAKE,SAAS,CAAE2oB,SAAU,QA7BX7oB,EAgCnBgpB,aAAe,WACXhpB,EAAK+oB,kBAEL/oB,EAAKC,MAAMgpB,YAnCIjpB,EAsCnBkpB,mBAtCmB5nB,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAsCE,SAAAC,IAAA,IAAAlF,EAAA,OAAAgF,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjB7F,EAAK+oB,kBADYpjB,EAAAE,KAAA,EAGIsjB,MAAK,GAAA9mB,OAAI+mB,KAAJ,kBAAA/mB,OAAmCgnB,OAH5C,OAGXtpB,EAHW4F,EAAAkB,KAIjB6E,QAAQC,IAAI,cAAe5L,GAJV,wBAAA4F,EAAAyB,SAAAnC,MAtCFjF,EA8CnBspB,iBAAmB,SAAArd,GACfjM,EAAK+oB,kBAEL/oB,EAAKupB,YAAYlb,QAjDFrO,EAoDnBwpB,eAAiB,SAAAvd,GACbjM,EAAK+oB,kBAEL/oB,EAAKypB,eAAepb,QAvDLrO,EA0DnB0pB,OAAS,SAAA/a,GACLjD,QAAQC,IAARrK,OAAAqoB,GAAA,EAAAroB,QAAAqoB,GAAA,EAAAroB,CAAAtB,KACAA,EAAKypB,eAAiB9a,GAzDtB3O,EAAKX,MAAQ,CACTopB,mBAAoB9f,IAAiBihB,wBACrCf,SAAU,MALC7oB,mFAUf2I,IAAiBmI,GAAG,2BAA4BtQ,KAAKgoB,2EAIrD7f,IAAiBoI,eAAe,2BAA4BvQ,KAAKgoB,6DAiD5D,IAAAza,EAAAvN,KAAAgC,EACkBhC,KAAKP,MAApBwC,EADHD,EACGC,QAAS0F,EADZ3F,EACY2F,EADZkE,EAEoC7L,KAAKnB,MAAtCwpB,EAFHxc,EAEGwc,SAAUJ,EAFbpc,EAEaoc,mBAEZoB,EAAkBjB,aAAqBH,GACzCzmB,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAACmpB,GAAAppB,EAAD,CACIhB,GAAG,YACHmpB,SAAUA,EACVxa,KAAMqS,QAAQmI,GACdva,QAAS9N,KAAKuoB,gBACdgB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBC,aAAc9B,IACdpmB,EAAAtB,EAAAC,cAACwpB,GAAAzpB,EAAD,CAAUuC,QAASzC,KAAK0oB,oBAAqB/gB,EAAE,mBAC/CnG,EAAAtB,EAAAC,cAACwpB,GAAAzpB,EAAD,CAAUuC,QAASzC,KAAK8oB,kBAAmBnhB,EAAE,eAC7CnG,EAAAtB,EAAAC,cAACwpB,GAAAzpB,EAAD,CAAUuC,QAASzC,KAAKgpB,gBAAiBrhB,EAAE,aAC3CnG,EAAAtB,EAAAC,cAACwpB,GAAAzpB,EAAD,CAAUuC,QAASzC,KAAKwoB,cAAe7gB,EAAE,aAGjD,KAEJ,OACInG,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACI0pB,YAAWvB,EAAW,cAAgB,KACtCwB,gBAAc,OACdzpB,UAAW6B,EAAQ6nB,eACnBthB,aAAW,OACX/F,QAASzC,KAAKmoB,gBACd3mB,EAAAtB,EAAAC,cAAC4pB,GAAA7pB,EAAD,OAEHmpB,EACD7nB,EAAAtB,EAAAC,cAAC6pB,GAAD,CAAaC,SAAU,SAAA9b,GAAG,OAAKZ,EAAKwb,YAAc5a,KAClD3M,EAAAtB,EAAAC,cAAC+pB,GAAD,CAAgB/b,IAAK,SAAAA,GAAG,OAAKZ,EAAK0b,eAAiB9a,aAnGtC3N,IAAMC,WA8GpBqO,GALCC,YACZS,cACA1M,IAzHW,CACXgnB,eAAgB,CACZlW,OAAQ,qBAEZuW,iBAAkB,CACdvW,OAAQ,mBAoHO,CAAErQ,WAAW,IAGrBuL,CAAQiZ,IC3GjBqC,uBACF,SAAAA,EAAY3qB,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAoqB,IACf5qB,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAspB,GAAAhmB,KAAApE,KAAMP,KA8BVuoB,2BAA6B,SAAApY,GACzBpQ,EAAKE,SAAS,CAAEuoB,mBAAoBrY,EAAOsY,uBAhC5B1oB,EAmCnBgpB,aAAe,WACXhpB,EAAKE,SAAS,CAAEmO,MAAM,KApCPrO,EAuCnB6qB,WAAa,WACT7qB,EAAK+H,cACLpI,KAAgBmrB,UAzCD9qB,EA4CnB+H,YAAc,WACV/H,EAAKE,SAAS,CAAEmO,MAAM,KA7CPrO,EAgDnB+qB,aAAe,WAAM,IAAAvoB,EACgBxC,EAAKC,MAA9B+qB,EADSxoB,EACTwoB,SAAUC,EADDzoB,EACCyoB,WACVxC,EAAuBzoB,EAAKX,MAA5BopB,mBACHG,aAAqBH,IAE1BuC,GAAUC,IArDKjrB,EAwDnBkrB,cAAgB,SAAAjf,GACU,KAAlBA,EAAMC,SACND,EAAME,kBA1DKnM,EA8DnBmrB,YAAc,WACV,IAAMrf,EAAY9L,EAAKorB,YAAYnhB,QAAQ6B,UACrCC,EAAY/L,EAAKorB,YAAYnhB,QAAQ8B,WAEvCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC/L,EAAKorB,YAAYnhB,QAAQ8B,UAAY,IAGzCpD,IAAiBmd,KAAK,yBAA0B,CAAEhc,KAAMgC,KAtEzC9L,EAyEnBqrB,YAAc,SAAApf,GACV,IAAMe,EAAYf,EAAMgB,cAAcC,QAAQ,cAC1CF,IACAf,EAAME,iBACNgB,SAASC,YAAY,cAAc,EAAOJ,KA1E9ChN,EAAKorB,YAAcpqB,IAAM8M,YAEzB9N,EAAKX,MAAQ,CACTopB,mBAAoB9f,IAAiBihB,wBACrCvb,MAAM,GAGVrO,EAAKsrB,YAAcC,aAASvrB,EAAKsrB,YAAa,KAV/BtrB,kFAaAK,EAAWC,EAAWC,GAAU,IAAAwN,EAAAvN,KAC3CA,KAAKP,MAAMgrB,YAAczqB,KAAKP,MAAMgrB,aAAe5qB,EAAU4qB,YAC7Drd,WAAW,WACHG,EAAKqd,YAAYnhB,SACjB8D,EAAKqd,YAAYnhB,QAAQ4D,SAE9B,iDAKPlF,IAAiBmI,GAAG,2BAA4BtQ,KAAKgoB,2EAIrD7f,IAAiBoI,eAAe,2BAA4BvQ,KAAKgoB,6DAqD5D,IAAA/f,EACuCjI,KAAKP,MAAzCwC,EADHgG,EACGhG,QAASQ,EADZwF,EACYxF,QAASgoB,EADrBxiB,EACqBwiB,WAAY9iB,EADjCM,EACiCN,EAC9BkG,EAAS7N,KAAKnB,MAAdgP,KAEFmd,EAAsBnd,EACxBrM,EAAAtB,EAAAC,cAAC8qB,GAAA,EAAD,CAAQhF,mBAAoB,EAAGpY,KAAMA,EAAMC,QAAS9N,KAAKuH,YAAawG,kBAAgB,qBAClFvM,EAAAtB,EAAAC,cAAC8qB,GAAA,EAAD,CAAa/rB,GAAG,qBAAqByI,EAAE,YACvCnG,EAAAtB,EAAAC,cAAC8qB,GAAA,EAAD,KACIzpB,EAAAtB,EAAAC,cAAC8qB,GAAA,EAAD,CAAmB7qB,UAAW6B,EAAQipB,YAAavjB,EAAE,sBAEzDnG,EAAAtB,EAAAC,cAAC8qB,GAAA,EAAD,KACIzpB,EAAAtB,EAAAC,cAAC8qB,GAAA,EAAD,CAAQxoB,QAASzC,KAAKuH,YAAakB,MAAM,WACpCd,EAAE,WAEPnG,EAAAtB,EAAAC,cAAC8qB,GAAA,EAAD,CAAQxoB,QAASzC,KAAKqqB,WAAY5hB,MAAM,WACnCd,EAAE,SAIf,KAEJ,OACInG,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,iBACTqqB,EASEjpB,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,4BACXoB,EAAAtB,EAAAC,cAAA,OACIjB,GAAG,yBACHiP,IAAKnO,KAAK4qB,YACVtc,YAAa3G,EAAE,UACfrG,IAAKmgB,OACLrT,iBAAe,EACfC,gCAA8B,EAC9BE,UAAWvO,KAAK0qB,cAChBlc,QAASxO,KAAK2qB,YACdlc,QAASzO,KAAK6qB,gBAnB1BrpB,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAACgrB,GAAD,CAAgB1C,SAAUzoB,KAAKwoB,eAC9BwC,EACDxpB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,oCAAoCqC,QAASA,GACxDjB,EAAAtB,EAAAC,cAAA,QAAMC,UAAU,yBAAyBuH,EAAE,cAoBvDnG,EAAAtB,EAAAC,cAAC8qB,GAAA,EAAD,CACI7qB,UAAW6B,EAAQmpB,iBACnB5iB,aAAYb,EAAE,UACdud,YAAallB,KAAKuqB,cAClB/oB,EAAAtB,EAAAC,cAACkrB,GAAAnrB,EAAD,CAAe2N,KAAM4c,EAAYa,KAAM9pB,EAAAtB,EAAAC,cAACorB,GAAArrB,EAAD,MAAgBsrB,SAAUhqB,EAAAtB,EAAAC,cAACyI,EAAA1I,EAAD,iBAtIzDM,IAAMC,YAyJnBqO,GALCC,YACZS,cACA1M,IA/JW,CACXsoB,iBAAkB,CACdxX,OAAQ,kBAEZsX,WAAY,CACRjR,WAAY,cA6JLnL,CAAQsb,cCzKjBqB,eACF,SAAAA,EAAYhsB,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAyrB,IACfjsB,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA2qB,GAAArnB,KAAApE,KAAMP,KAeVisB,kCAAoC,WAChClsB,EAAKE,SAAS,CAAEisB,qBAAqB,KAjBtBnsB,EAoBnBosB,aAAe,WACPpsB,EAAKqsB,UAETrsB,EAAKqsB,SAAU,EACfze,WAAW,WACP0e,OAAOC,SAASC,UACjB,OAvBHxsB,EAAKX,MAAQ,CACT8sB,qBAAqB,GAJVnsB,mFASf2I,IAAiBmI,GAAG,kCAAmCtQ,KAAK0rB,kFAI5DvjB,IAAiBoI,eAAe,kCAAmCvQ,KAAK0rB,oEAgBnE,IACGC,EAAwB3rB,KAAKnB,MAA7B8sB,oBACA1pB,EAAYjC,KAAKP,MAAjBwC,QAEF+G,EAAU2iB,EACZnqB,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQsU,QAAQ,YAAY/L,MAAM,UAAUrI,UAAW6B,EAAQoc,KAAM5b,QAASzC,KAAK4rB,cAAnF,UAGA,KAEJ,OAAOpqB,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KAAG9M,UAxCQxI,IAAMC,WA4CjBqC,OAvDA,CACXub,KAAM,CACFzK,OAAQ,EACR3E,QAAS,OACT3E,MAAO,OACP2hB,aAAc,EACdxjB,MAAO,QACPyjB,UAAW,SAgDJppB,CAAmB2oB,IC3C5BU,uBACF,SAAAA,EAAY1sB,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAmsB,IACf3sB,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAqrB,GAAA/nB,KAAApE,KAAMP,KA4CV2sB,0BAA4B,SAAAxc,GACxBpQ,EAAK4L,eA9CU5L,EAiDnB6sB,oCAAsC,SAAAzc,GAClCpQ,EAAKE,SAAS,CACV4sB,qBAAsBnkB,IAAiBmkB,wBAnD5B9sB,EAuDnB+sB,yBAA2B,SAAA3c,GACvBpQ,EAAKE,SAAS,CACV+qB,YAAY,EACZ+B,aAAc5c,EAAO1N,OACrBoK,WAAY,QA3DD9M,EA+DnBqY,kBAAoB,WAChBrY,EAAKitB,YAAYhjB,QAAQijB,eAhEVltB,EAmEnB+qB,aAAe,SAAAoC,GACXntB,EAAKE,SAAS,CACV+qB,WAAYkC,EACZH,aAAc,EACdlgB,WAAY,QAvED9M,EA2EnB2jB,oBAAsB,SAACjhB,EAAQ4c,EAAW2L,GAAe,IAC7CmC,EAAiBptB,EAAKC,MAAtBmtB,aAERvU,aAASnW,EAAQ4c,GAEjB8N,EAAa1qB,EAAQ4c,GAErB,IAAM0N,EAAe/B,EAAajrB,EAAKX,MAAM2tB,aAAe,EACtDlgB,EAAame,EAAajrB,EAAKX,MAAMyN,WAAa,KAExD9M,EAAKE,SAAS,CACV+qB,WAAYA,EACZ+B,aAAcA,EACdlgB,WAAYA,KAxFD9M,EA4FnB+H,YAAc,WACV/H,EAAKE,SAAS,CACV+qB,YAAY,EACZ+B,aAAc,EACdlgB,WAAY,QAhGD9M,EAoGnBqtB,uBAAyB,SAAAvjB,GACrB9J,EAAKE,SAAS,CACV4M,WAAYhD,KAnGhB9J,EAAKitB,YAAcjsB,IAAM8M,YAEzB9N,EAAKX,MAAQ,CACTytB,qBAAsBnkB,IAAiBmkB,qBACvC7B,YAAY,EACZ+B,aAAc,EACdlgB,WAAY,MATD9M,qFAaG4Q,EAAWC,GAC7B,OAAIA,EAAUic,uBAAyBtsB,KAAKnB,MAAMytB,uBAI9Cjc,EAAUoa,aAAezqB,KAAKnB,MAAM4rB,aAIpCpa,EAAUmc,eAAiBxsB,KAAKnB,MAAM2tB,cAItCnc,EAAU/D,aAAetM,KAAKnB,MAAMyN,yDAQxCnE,IAAiBmI,GAAG,oCAAqCtQ,KAAKqsB,qCAC9DlkB,IAAiBmI,GAAG,yBAA0BtQ,KAAKusB,0BACnDpkB,IAAiBmI,GAAG,0BAA2BtQ,KAAKosB,0EAIpDjkB,IAAiBoI,eAAe,oCAAqCvQ,KAAKqsB,qCAC1ElkB,IAAiBoI,eAAe,yBAA0BvQ,KAAKusB,0BAC/DpkB,IAAiBoI,eAAe,0BAA2BvQ,KAAKosB,4DAgE3D,IACGnqB,EAAYjC,KAAKP,MAAjBwC,QADH4J,EAEkE7L,KAAKnB,MAApEytB,EAFHzgB,EAEGygB,qBAAsB7B,EAFzB5e,EAEyB4e,WAAY+B,EAFrC3gB,EAEqC2gB,aAAclgB,EAFnDT,EAEmDS,WAExD,OACI9K,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IAAWN,EAAQe,YAAa,UAAW,CAClD8pB,uBAAwBR,KAE5B9qB,EAAAtB,EAAAC,cAAC4sB,GAAD,CACItC,WAAYA,EACZhoB,QAASzC,KAAK6X,kBACd2S,SAAUxqB,KAAKuqB,aACfyC,mBAAoBhtB,KAAK6sB,yBAE7BrrB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,mBACXoB,EAAAtB,EAAAC,cAAC8sB,GAAA,EAAD,CAAa9e,IAAKnO,KAAKysB,cACtBhC,GACGjpB,EAAAtB,EAAAC,cAAC+sB,GAAD,CACIhrB,OAAQsqB,EACRljB,KAAMgD,EACNgX,gBAAiBtjB,KAAKmjB,oBACtBrV,QAAS9N,KAAKuH,eAI1B/F,EAAAtB,EAAAC,cAACgtB,GAAD,cArIM1sB,cA+IPqC,OAnJA,SAAAC,GAAK,OAAAjC,OAAAkO,EAAA,EAAAlO,CAAA,GACbyO,YAAYxM,KAkJJD,CAAmBqpB,ICvI5BiB,sNACFvuB,MAAQ,CACJqD,OAAQiG,IAAiB8U,gBAiB7BoQ,+BAAiC,SAAAzd,GAAU,IAC/B1N,EAAW0N,EAAX1N,OAER1C,EAAKE,SAAS,CAAEwC,cAGpBqF,YAAc,WACVpI,KAAgBqI,aAAa,CACzBnI,QAAS,2BACT6C,OAAQ,0FAvBMkO,EAAWC,EAAWid,GAAa,IAC7CprB,EAAWlC,KAAKnB,MAAhBqD,OAER,OAAOmO,EAAUnO,SAAWA,8CAI5BiG,IAAiBmI,GAAG,2BAA4BtQ,KAAKqtB,+EAIrDllB,IAAiBoI,eAAe,2BAA4BvQ,KAAKqtB,iEAgB5D,IACGprB,EAAYjC,KAAKP,MAAjBwC,QACAC,EAAWlC,KAAKnB,MAAhBqD,OACR,OAAKA,EAGDV,EAAAtB,EAAAC,cAACyN,EAAA1N,EAAD,CACI2N,MAAI,EACJoY,mBAAoB,EACpBnY,QAAS9N,KAAKuH,YACdtF,QAAS,CAAEoc,KAAMpc,EAAQsrB,WAAYC,UAAWvrB,EAAQwrB,cAAenqB,MAAOrB,EAAQyrB,YACtFlsB,EAAAtB,EAAAC,cAACwtB,GAAD,CAAUvtB,UAAW6B,EAAQ2rB,aAAc1rB,OAAQA,EAAQ+V,OAAK,KARpD,YAnCCzX,IAAMC,YAmDpBqC,OAnEA,SAAAC,GAAK,MAAK,CACrB6qB,aAAc,CACVtjB,MAAO,KAEXmjB,cAAe,CACXI,WAAY,SAEhBN,WAAY,CACR9kB,MAAO1F,EAAME,QAAQqG,KAAKpG,QAC1B0a,OAAQ7a,EAAM6a,OAAOkQ,OAEzBJ,UAAW,CACPpjB,MAAO,OAuDAxH,CAAmBsqB,gGCRnBW,uBA7DX,SAAAA,EAAYtuB,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA+tB,IACfvuB,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAitB,GAAA3pB,KAAApE,KAAMP,KAeVuuB,YAAc,WACV,IAAMC,EAAM,IAAIxM,KACVyM,EAAU1uB,EAAK2uB,OAASF,EACxB1sB,EAAQ,IAAO2sB,EAAU1uB,EAAKC,MAAM2W,QAAW,IAErD5W,EAAKE,SAAS,CACVwuB,QAASA,EAAU,EAAIA,EAAU,EACjC3sB,MAAOA,EAAQ,IAAM,IAAMA,IAG3B0sB,GAAOzuB,EAAK2uB,QACR3uB,EAAK4uB,UACLC,cAAc7uB,EAAK4uB,SACnB5uB,EAAK4uB,QAAU,OA1BvB5uB,EAAKX,MAAQ,CACTqvB,QAAS1uB,EAAKC,MAAM2W,QAAU,IAC9B7U,MAAO,GALI/B,mFAUfQ,KAAKsuB,UAAY,IAAI7M,KACrBzhB,KAAKmuB,OAASnuB,KAAKsuB,UACnBtuB,KAAKmuB,OAAOI,gBAAgBvuB,KAAKmuB,OAAOK,kBAAoBxuB,KAAKP,MAAM2W,SACvEpW,KAAKouB,QAAUK,YAAYzuB,KAAKguB,YAAa,oDAsBzChuB,KAAKouB,UACLC,cAAcruB,KAAKouB,SACnBpuB,KAAKouB,QAAU,uCAId,IAAAviB,EACsB7L,KAAKnB,MAAxB0C,EADHsK,EACGtK,MAAO2sB,EADVriB,EACUqiB,QAEf,OACI1sB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,sBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,2BACXoB,EAAAtB,EAAAC,cAACuuB,GAAA,EAAD,CAAYjmB,MAAM,YAAYylB,EAAU,KAAMS,YAElDntB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,+BACXoB,EAAAtB,EAAAC,cAACyuB,GAAA1uB,EAAD,CAAkBmK,KAAM,GAAI9I,MAAO,IAAMA,EAAOiT,QAAQ,oBAnD5ChU,IAAMC,YCwBhCmnB,WAAmB,CACrBC,SAAU,SACVC,WAAY,UAGV+G,GAAsB,CACxBhH,SAAU,MACVC,WAAY,SAGVgH,8MACFC,oBAAsB,SAAA7sB,GAClB,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,OAAO,KAClB,IAAKA,EAAKE,KAAM,OAAO,KAEvB,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,8CAAA1P,OAA+CwP,EAAK2d,MAApD,KAEJ,IAAK,qBACD,IAAMvc,EAAaE,KAAgB3O,IAAIqN,EAAKE,KAAKc,eACjD,OAAII,EACOA,EAAWwc,WAAX,0CAAAptB,OACyCwP,EAAK2d,MAD9C,6CAAAntB,OAEuCwP,EAAK2d,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,mDAAAntB,OAAoDS,YAAkBJ,GAAtE,KAIR,OAAO,8EAGF,IAAAF,EACiChC,KAAKP,MAAnCqO,EADH9L,EACG8L,QAAS5L,EADZF,EACYE,OAAWgtB,EADvBpuB,OAAAquB,GAAA,EAAAruB,CAAAkB,EAAA,sBAGL,OACIR,EAAAtB,EAAAC,cAACyN,EAAA1N,EAADY,OAAAsuB,OAAA,CACInJ,mBAAoB,EACpBnY,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,uBACZmhB,GACJ1tB,EAAAtB,EAAAC,cAAC+N,EAAAhO,EAAD,CAAahB,GAAG,uBAAuBoD,YAAkBJ,IACzDV,EAAAtB,EAAAC,cAAC+lB,GAAAhmB,EAAD,KACIsB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,yBACXoB,EAAAtB,EAAAC,cAACuC,EAAA,EAAD,CAAUR,OAAQA,IAClBV,EAAAtB,EAAAC,cAACkvB,GAAAnvB,EAAD,CAAmBhB,GAAG,6BACjBc,KAAK+uB,oBAAoB7sB,MAItCV,EAAAtB,EAAAC,cAACwO,EAAAzO,EAAD,KACIsB,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAAS,kBAAMqL,GAAQ,IAAQrF,MAAM,WAA7C,UAGAjH,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAAS,kBAAMqL,GAAQ,IAAOrF,MAAM,UAAUoG,WAAS,GAA/D,eAnDUrO,IAAMC,WA4D9B6uB,oLACO,IAAArnB,EACiCjI,KAAKP,MAAnCqO,EADH7F,EACG6F,QAAS5L,EADZ+F,EACY/F,OAAWgtB,EADvBpuB,OAAAquB,GAAA,EAAAruB,CAAAmH,EAAA,sBAGL,OACIzG,EAAAtB,EAAAC,cAACyN,EAAA1N,EAADY,OAAAsuB,OAAA,CACInJ,mBAAoB,EACpBnY,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,uBACZmhB,GACJ1tB,EAAAtB,EAAAC,cAAC+N,EAAAhO,EAAD,CAAahB,GAAG,uBAAuBoD,YAAkBJ,IACzDV,EAAAtB,EAAAC,cAAC+lB,GAAAhmB,EAAD,KACIsB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,yBACXoB,EAAAtB,EAAAC,cAACuC,EAAA,EAAD,CAAUR,OAAQA,IAClBV,EAAAtB,EAAAC,cAACkvB,GAAAnvB,EAAD,CAAmBhB,GAAG,6BAAtB,0CAKRsC,EAAAtB,EAAAC,cAACwO,EAAAzO,EAAD,KACIsB,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAAS,kBAAMqL,GAAQ,IAAQrF,MAAM,WAA7C,UAGAjH,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAAS,kBAAMqL,GAAQ,IAAOrF,MAAM,UAAUoG,WAAS,GAA/D,eAvBarO,IAAMC,WAgCjCsnB,eACF,SAAAA,EAAYtoB,GAAO,IAAA8N,EAAA,OAAAzM,OAAAC,EAAA,EAAAD,CAAAd,KAAA+nB,IACfxa,EAAAzM,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAinB,GAAA3jB,KAAApE,KAAMP,KASV8vB,kBAAoB,SAAA9jB,GAChB8B,EAAK7N,SAAS,CAAE2oB,SAAU5c,EAAM6c,iBAXjB/a,EAcnBgb,gBAAkB,WACdhb,EAAK7N,SAAS,CAAE2oB,SAAU,QAfX9a,EAkBnBiiB,eAAiB,WACbjiB,EAAKgb,kBACLnb,WAAW,kBAAMG,EAAK9N,MAAMgwB,mBAAmB,MApBhCliB,EAuBnBmiB,mBAAqB,WACjBniB,EAAKgb,kBAELhb,EAAK7N,SAAS,CAAEiwB,kBAAkB,KA1BnBpiB,EA6BnBqiB,2BAA6B,SAAArwB,GAGzB,GAFAgO,EAAK7N,SAAS,CAAEiwB,kBAAkB,IAE7BpwB,EAAL,CAEA,IAAM2C,EAASiG,IAAiBiN,YAE1Bya,EAAU,CACZxwB,QAAS,oBACT8H,QAASjF,EACT4tB,uBAAuB,GAG3BviB,EAAKxF,sBAAsB7F,EAAQ,2BAPnB,mBAOwD2tB,KA1CzDtiB,EA6CnBwiB,YAAc,WACVxiB,EAAKgb,kBAELhb,EAAK7N,SAAS,CAAEswB,YAAY,KAhDbziB,EAmDnB0iB,oBAAsB,SAAA1wB,GAGlB,GAFAgO,EAAK7N,SAAS,CAAEswB,YAAY,IAEvBzwB,EAAL,CAEA,IAAM2C,EAASiG,IAAiBiN,YAC1BvN,EAAU0F,EAAK2iB,yBAAyBhuB,GACxC2tB,EAAUtc,YAAcrR,GACxB,CAAE7C,QAAS,oBAAqB8H,QAASjF,EAAQ4tB,uBAAuB,GACxE,CAAEzwB,QAAS,YAAa8H,QAASjF,GAEvCqL,EAAKxF,sBAAsB7F,EAAQ,wBAAyB2F,EAASgoB,KA9DtDtiB,EAiEnBxF,sBAAwB,SAAC7F,EAAQiuB,EAAkBtoB,EAASgoB,GACxD,GAAKM,EAAL,CAEA,IAAM7uB,EAAG,GAAAO,OAAMsuB,EAAN,YAAAtuB,OAAiCK,GACpC8F,EAAM,eAAA8U,EAAAhc,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAAG,SAAAC,IAAA,OAAAF,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEDlG,KAAgBC,KAAKywB,GAFpB,cAAA1qB,EAAAC,KAAA,EAIPjG,KAAgBqI,aAAa,CAAEnI,QAAS8wB,EAAkBjuB,OAAQA,EAAQkuB,YAAY,IAJ/EjrB,EAAAkrB,OAAA,2BAAAlrB,EAAAyB,SAAAnC,EAAA,oBAAH,yBAAAqY,EAAA5b,MAAAlB,KAAAmB,YAAA,GAJwDmvB,EAe/B/iB,EAAK9N,MAAlCyI,EAf4DooB,EAe5DpoB,gBAf4DooB,EAe3CruB,QACzB,GAAKiG,EAAL,CAGIC,IAAiBC,mBAAmB9G,EAAK+G,IAAoCL,EARlE,WACX7I,KAAgBqI,aAAa,CAAEnI,QAAS8wB,EAAkBjuB,OAAQA,EAAQkuB,YAAY,QAQtFjxB,KAAgBqI,aAAa,CAAEnI,QAAS8wB,EAAkBjuB,OAAQA,EAAQkuB,YAAY,IACtFloB,EAAgBL,EAAS,CACrBS,iBAAkBD,IAAqC,IACvDL,OAAQ,CACJxG,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CAAYoB,IAAI,WAAWmH,MAAM,UAAUrI,UAAU,mBACjDoB,EAAAtB,EAAAC,cAACowB,GAAD,CAAmBna,QAAS/N,OAEhC7G,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CACIoB,IAAI,OACJmH,MAAM,UACN4B,KAAK,QACL5H,QAAS,kBAAM0F,IAAiBQ,sBAAsBrH,KAJ1D,eA5FGiM,EAwGnBijB,kBAAoB,SAAAtuB,GAChB,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,OAAO,KAClB,IAAKA,EAAKE,KAAM,OAAO,KAEvB,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,MAAO,kBAEX,IAAK,qBACD,IAAMkB,EAAaE,KAAgB3O,IAAIqN,EAAKE,KAAKc,eACjD,OAAII,EACOA,EAAWwc,WAAa,gBAAkB,cAG9C,KAEX,IAAK,kBACL,IAAK,iBACD,MAAO,sBAIf,OAAO,MA/HQ1hB,EAkInB2iB,yBAA2B,SAAAhuB,GACvB,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,MAAO,eAClB,IAAKA,EAAKE,KAAM,MAAO,eAEvB,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,MAAO,eAEX,IAAK,qBACD,IAAMkB,EAAaE,KAAgB3O,IAAIqN,EAAKE,KAAKc,eACjD,OAAII,EACOA,EAAWwc,WAAa,eAAiB,aAG7C,eAEX,IAAK,kBACL,IAAK,iBACD,MAAO,eAIf,MAAO,gBAtJP1hB,EAAK1O,MAAQ,CACTwpB,SAAU,KACV2H,YAAY,EACZL,kBAAkB,GANPpiB,wEA4JV,IACGtL,EAAYjC,KAAKP,MAAjBwC,QADH4J,EAE8C7L,KAAKnB,MAAhDwpB,EAFHxc,EAEGwc,SAAU2H,EAFbnkB,EAEamkB,WAAYL,EAFzB9jB,EAEyB8jB,iBAExBztB,EAASiG,IAAiBiN,YAC1Bqb,EAAeC,YAAgBxuB,GAC/ByuB,EAAaC,YAAc1uB,GAC3B2uB,EAAiB7wB,KAAKwwB,kBAAkBtuB,GAE9C,OACIV,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACI0pB,YAAWvB,EAAW,cAAgB,KACtCwB,gBAAc,OACdzpB,UAAW6B,EAAQ6nB,eACnBthB,aAAW,OACX/F,QAASzC,KAAKuvB,mBACd/tB,EAAAtB,EAAAC,cAAC2wB,GAAA5wB,EAAD,OAEJsB,EAAAtB,EAAAC,cAACmpB,GAAAppB,EAAD,CACIhB,GAAG,YACHmpB,SAAUA,EACVxa,KAAMqS,QAAQmI,GACdva,QAAS9N,KAAKuoB,gBACdgB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBC,aAAc9B,GACdmJ,gBAAiBlC,IACjBrtB,EAAAtB,EAAAC,cAACwpB,GAAAzpB,EAAD,CAAUuC,QAASzC,KAAKwvB,gBAAxB,aACCiB,GAAgBjvB,EAAAtB,EAAAC,cAACwpB,GAAAzpB,EAAD,CAAUuC,QAASzC,KAAK0vB,oBAAxB,iBAChBiB,GAAcE,GAAkBrvB,EAAAtB,EAAAC,cAACwpB,GAAAzpB,EAAD,CAAUuC,QAASzC,KAAK+vB,aAAcc,IAE3ErvB,EAAAtB,EAAAC,cAAC6wB,GAAD,CAAiB9uB,OAAQA,EAAQ2L,KAAMmiB,EAAYliB,QAAS9N,KAAKiwB,sBACjEzuB,EAAAtB,EAAAC,cAAC8wB,GAAD,CAAoB/uB,OAAQA,EAAQ2L,KAAM8hB,EAAkB7hB,QAAS9N,KAAK4vB,qCA/L7DpvB,IAAMC,WA0MpBqO,GALCC,YACZjM,IAlTW,SAAAC,GAAK,MAAK,CACrB+mB,eAAgB,CACZlW,OAAQ,qBAiTZnE,eAGWX,CAAQiZ,yBC7SjBmJ,uBACF,SAAAA,EAAYzxB,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAkxB,IACf1xB,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAowB,GAAA9sB,KAAApE,KAAMP,KAOV0xB,aAAe,WACXhyB,KAAgBqI,aAAa,CAAEnI,QAAS,gCATzBG,EAYnB4xB,aAAe,WACX,IAAIC,GAA0B,EADbC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEjB,QAAAC,EAAAC,EAAkC7oB,IAAa8oB,cAAcC,SAA7DC,OAAAC,cAAAT,GAAAI,EAAAC,EAAAtsB,QAAA2sB,MAAAV,GAAA,EAAuE,KAAAzsB,EAAA6sB,EAAAnwB,MAA5DW,EAA4D2C,EAA5D3C,OAAQ4c,EAAoDja,EAApDia,UACTjX,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GACzC,IAAKjX,EAAS,CACVwpB,GAA0B,EAC1B,MAEJ,IAAKxpB,EAAQoqB,6BAA8B,CACvCZ,GAA0B,EAC1B,QAVS,MAAAa,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAcjBhyB,EAAKE,SAAS,CACV0yB,kBAAkB,EAClBf,wBAAyBA,EACzBgB,OAAQhB,KA7BG7xB,EAiCnB8yB,qBAAuB,WAAM,IAGrBpzB,EAFImzB,EAAW7yB,EAAKX,MAAhBwzB,OAGFvrB,EAAa,GAJMyrB,GAAA,EAAAC,GAAA,EAAAC,OAAAhB,EAAA,IAKzB,QAAAiB,EAAAC,EAAkC7pB,IAAa8oB,cAAcC,SAA7DC,OAAAC,cAAAQ,GAAAG,EAAAC,EAAAttB,QAAA2sB,MAAAO,GAAA,EAAuE,KAAA5P,EAAA+P,EAAAnxB,MAA5DW,EAA4DygB,EAA5DzgB,OAAQ4c,EAAoD6D,EAApD7D,UACf5f,EAAKgD,EACL4E,EAAWpB,KAAKoZ,IAPK,MAAAoT,GAAAM,GAAA,EAAAC,EAAAP,EAAA,YAAAK,GAAA,MAAAI,EAAAR,QAAAQ,EAAAR,SAAA,WAAAK,EAAA,MAAAC,GAUzBjzB,EAAK2xB,eAELhyB,KAAgBC,KAAK,CACjBC,QAAS,iBACT8H,QAASjI,EACT2L,YAAa/D,EACburB,OAAQA,KAjDG7yB,EAqDnBozB,mBAAqB,WACjBpzB,EAAKE,SAAS,CAAE2yB,QAAS7yB,EAAKX,MAAMwzB,UAtDrB7yB,EAyDnBqzB,kBAAoB,WAChBrzB,EAAKE,SAAS,CAAE0yB,kBAAkB,KA1DnB5yB,EA6DnBszB,cAAgB,WACZ,IAAI5zB,EACE4H,EAAa,GAFDisB,GAAA,EAAAC,GAAA,EAAAC,OAAAxB,EAAA,IAGlB,QAAAyB,EAAAC,EAAkCrqB,IAAa8oB,cAAcC,SAA7DC,OAAAC,cAAAgB,GAAAG,EAAAC,EAAA9tB,QAAA2sB,MAAAe,GAAA,EAAuE,KAAAK,EAAAF,EAAA3xB,MAA5DW,EAA4DkxB,EAA5DlxB,OAAQ4c,EAAoDsU,EAApDtU,UACf5f,EAAKgD,EACL4E,EAAWpB,KAAKoZ,IALF,MAAAoT,GAAAc,GAAA,EAAAC,EAAAf,EAAA,YAAAa,GAAA,MAAAI,EAAAhB,QAAAgB,EAAAhB,SAAA,WAAAa,EAAA,MAAAC,GAQlBzzB,EAAK2xB,eAELhyB,KAAgBqI,aAAa,CACzBnI,QAAS,sBACToI,KAAM,CACFvF,OAAQhD,EACR4H,WAAYA,MA3ELtH,EAgFnB6zB,YAAc,WACV,GAAwC,IAApCvqB,IAAa8oB,cAAcvnB,KAA/B,CADgB,IAAAipB,EAGcxqB,IAAa8oB,cAAcC,SAASxsB,OAAO9D,MAAjEW,EAHQoxB,EAGRpxB,OAAQ4c,EAHAwU,EAGAxU,UAEhBtf,EAAK2xB,eAELhyB,KAAgBqI,aAAa,CAAEnI,QAAS,oBAAqB6C,OAAQA,EAAQ4c,UAAWA,MApFxFtf,EAAKX,MAAQ,CACTuzB,kBAAkB,GAJP5yB,wEA0FV,IAAAwC,EACyBhC,KAAKP,MAA3BwC,EADHD,EACGC,QAAS0F,EADZ3F,EACY2F,EAAG4rB,EADfvxB,EACeuxB,MADf1nB,EAEyD7L,KAAKnB,MAA3DuzB,EAFHvmB,EAEGumB,iBAAkBf,EAFrBxlB,EAEqBwlB,wBAAyBgB,EAF9CxmB,EAE8CwmB,OAE7CnwB,EAASiG,IAAiBiN,YAE5Boe,GAAe,EANdC,GAAA,EAAAC,GAAA,EAAAC,OAAAlC,EAAA,IAOL,QAAAmC,EAAAC,EAAkC/qB,IAAa8oB,cAAcC,SAA7DC,OAAAC,cAAA0B,GAAAG,EAAAC,EAAAxuB,QAAA2sB,MAAAyB,GAAA,EAAuE,KAAAK,EAAAF,EAAAryB,MAA5DW,EAA4D4xB,EAA5D5xB,OAAQ4c,EAAoDgV,EAApDhV,UACTjX,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GACzC,IAAKjX,EAAS,CACV2rB,GAAe,EACf,MAEJ,IAAK3rB,EAAQksB,+BAAiClsB,EAAQoqB,6BAA8B,CAChFuB,GAAe,EACf,QAfH,MAAAtB,GAAAwB,GAAA,EAAAC,EAAAzB,EAAA,YAAAuB,GAAA,MAAAI,EAAA1B,QAAA0B,EAAA1B,SAAA,WAAAuB,EAAA,MAAAC,GAmBL,IAAIK,GAAiB,EAnBhBC,GAAA,EAAAC,GAAA,EAAAC,OAAA1C,EAAA,IAoBL,QAAA2C,EAAAC,EAAkCvrB,IAAa8oB,cAAcC,SAA7DC,OAAAC,cAAAkC,GAAAG,EAAAC,EAAAhvB,QAAA2sB,MAAAiC,GAAA,EAAuE,KAAAK,EAAAF,EAAA7yB,MAA5DW,EAA4DoyB,EAA5DpyB,OAAQ4c,EAAoDwV,EAApDxV,UACTjX,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GACzC,IAAKjX,EAAS,CACVmsB,GAAiB,EACjB,MAEJ,IAAKnsB,EAAQkB,iBAAkB,CAC3BirB,GAAiB,EACjB,QA5BH,MAAA9B,GAAAgC,GAAA,EAAAC,EAAAjC,EAAA,YAAA+B,GAAA,MAAAI,EAAAlC,QAAAkC,EAAAlC,SAAA,WAAA+B,EAAA,MAAAC,GAgCL,IAAMI,EAAyB,IAAVhB,GAAennB,YAAgBlK,GAEpD,OACIV,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAWN,EAAQe,YAAa,mBAC3CgxB,GACGxyB,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuI,MAAM,UAAUrI,UAAW6B,EAAQuyB,WAAY/xB,QAASzC,KAAK8yB,eAChES,GAAS,EAAI5rB,EAAE,WAAf,GAAA9F,OAA+B8F,EAAE,WAAjC,KAAA9F,OAA+C0xB,IAGvDC,GACGhyB,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuI,MAAM,UAAUrI,UAAW6B,EAAQuyB,WAAY/xB,QAASzC,KAAKoxB,cAChEmC,GAAS,EAAI5rB,EAAE,UAAf,GAAA9F,OAA8B8F,EAAE,UAAhC,KAAA9F,OAA6C0xB,IAGrDgB,GACG/yB,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuI,MAAM,UAAUrI,UAAW6B,EAAQuyB,WAAY/xB,QAASzC,KAAKqzB,aAChE1rB,EAAE,UAGXnG,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,yBACfoB,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuI,MAAM,UAAUrI,UAAW6B,EAAQwyB,YAAahyB,QAASzC,KAAKmxB,cACjExpB,EAAE,YAGXnG,EAAAtB,EAAAC,cAACyN,EAAA1N,EAAD,CACI+lB,mBAAoB,EACpBpY,KAAMukB,EACNtkB,QAAS9N,KAAK6yB,kBACd9kB,kBAAgB,uBAChBvM,EAAAtB,EAAAC,cAAC+N,EAAAhO,EAAD,CAAahB,GAAG,uBAAhB,WACAsC,EAAAtB,EAAAC,cAAC+lB,GAAAhmB,EAAD,KACIsB,EAAAtB,EAAAC,cAACkvB,GAAAnvB,EAAD,KACe,IAAVqzB,EACK,6CADL,mCAAA1xB,OAEwC0xB,EAFxC,eAIJlC,GACG7vB,EAAAtB,EAAAC,cAACumB,GAAAxmB,EAAD,CACIymB,QACInlB,EAAAtB,EAAAC,cAACu0B,GAAAx0B,EAAD,CAAU2U,QAASwd,EAAQzd,SAAU5U,KAAK4yB,mBAAoBnqB,MAAM,YAExEsT,MACIxI,YAAcrR,GAAd,cAAAL,OAAsCS,YAAkBJ,IAAY,oBAKpFV,EAAAtB,EAAAC,cAACwO,EAAAzO,EAAD,KACIsB,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAASzC,KAAK6yB,kBAAmBpqB,MAAM,WAA/C,UAGAjH,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAASzC,KAAKsyB,qBAAsB7pB,MAAM,WAAlD,gBA/KIjI,IAAMC,YAkMnBqO,GALCC,YACZjM,IA1MW,SAAAC,GAAK,OAAAjC,OAAAkO,EAAA,EAAAlO,CAAA,CAChB0zB,WAAY,CACR5gB,OAAQ,mBACRoI,SAAU,SAEdyY,YAAa,CACT7gB,OAAQ,mBACRoI,SAAU,UAEXzM,YAAYxM,KAiMI,CAAEQ,WAAW,IAChCiM,cAGWV,CAAQoiB,aCtLjByD,eACF,SAAAA,EAAYl1B,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA20B,IACfn1B,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA6zB,GAAAvwB,KAAApE,KAAMP,KA8DVm1B,8BAAgC,SAAAhlB,GAC5B,IAAMyB,EAAOC,KAAUtN,IAAImE,IAAiBiN,aACvC/D,GACDA,EAAKnS,KAAO0Q,EAAOzI,SAEvB3H,EAAK4L,eApEU5L,EAuEnBq1B,8BAAgC,SAAAjlB,GAC5BpQ,EAAKE,SAAS,CAAEo1B,eAAgBhsB,IAAa8oB,cAAcvnB,QAxE5C7K,EA2EnB0c,qBAAuB,SAAAtM,GACnBpQ,EAAK4L,eA5EU5L,EA+EnBu1B,wBAA0B,SAAAnlB,GACtBpQ,EAAKE,SAAS,CAAEs1B,gBAAiBplB,EAAO/Q,SAhFzBW,EAmFnBwoB,2BAA6B,SAAApY,GACzBpQ,EAAKE,SAAS,CAAEuoB,mBAAoBrY,EAAOsY,uBApF5B1oB,EAuFnBy1B,kBAAoB,SAAArlB,GAChB,IAAMyB,EAAOC,KAAUtN,IAAImE,IAAiBiN,aACvC/D,GACDA,EAAKnS,KAAO0Q,EAAOzI,SAEvB3H,EAAK4L,eA5FU5L,EA+FnBmQ,mBAAqB,SAAAC,GACjB,IAAMyB,EAAOC,KAAUtN,IAAImE,IAAiBiN,aAC5C,GAAK/D,GACAA,EAAKE,KAEV,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,IAAME,EAAWC,KAAgBC,YAAYN,EAAKE,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAA5L,GAAC,OAAIA,EAAEP,UAAYiK,EAAOjK,WAE3DnG,EAAK4L,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACGiG,EAAKE,KAAK5L,UAAYiK,EAAOjK,SAC7BnG,EAAK4L,gBAvHF5L,EAiInB01B,uBAAyB,SAAAtlB,GACCzH,IAAiBiN,cAEjBxF,EAAOzI,SACzB3H,EAAK4L,eArIM5L,EAyInB8S,mBAAqB,SAAA1C,GACjB,IAAMyB,EAAOC,KAAUtN,IAAImE,IAAiBiN,aACvC/D,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBhC,EAAO2C,YAAYrT,IAEhDM,EAAK4L,eAlJM5L,EAsJnBgT,mBAAqB,SAAA5C,GACjB,IAAMyB,EAAOC,KAAUtN,IAAImE,IAAiBiN,aACvC/D,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkBzC,EAAO6C,WAAWvT,IAE9CM,EAAK4L,eA/JM5L,EAmKnB2S,2BAA6B,SAAAvC,GACzB,IAAMyB,EAAOC,KAAUtN,IAAImE,IAAiBiN,aACvC/D,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBhC,EAAOgC,gBAEpCpS,EAAK4L,eA5KM5L,EAgLnB4S,2BAA6B,SAAAxC,GACzB,IAAMyB,EAAOC,KAAUtN,IAAImE,IAAiBiN,aACvC/D,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkBzC,EAAOyC,eAEnC7S,EAAK4L,eAzLM5L,EA6LnB0S,qBAAuB,SAAAtC,GACnB,IAAMyB,EAAOC,KAAUtN,IAAImE,IAAiBiN,aACvC/D,KAGDA,EAAKE,MACmB,oBAAvBF,EAAKE,KAAK,UAAyD,mBAAvBF,EAAKE,KAAK,UACvDF,EAAKE,KAAK5L,UAAYiK,EAAOjK,SAE7BnG,EAAK4L,gBAtMM5L,EA0MnBiwB,gBAAkB,WACd,IAAMvtB,EAASiG,IAAiBiN,YACnB9D,KAAUtN,IAAI9B,IAG3BiG,IAAiByU,6BAA4B,IA/M9Bpd,EAkNnB21B,iBAAmB,WACf,IAAMjzB,EAASiG,IAAiBiN,YACnB9D,KAAUtN,IAAI9B,IAG3BiG,IAAiBitB,WAAWlzB,IAvNb1C,EA0NnB61B,SAAW,SAAAC,GAGP,OAAO3tB,EAFOnI,EAAKC,MAAXkI,GAEC2tB,GACJC,QAAQ,MAAO,IACfA,QAAQ,SAAK,KA5NlB/1B,EAAKX,MAAQ,CACTopB,mBAAoB9f,IAAiBihB,wBACrC4L,gBAAiB7sB,IAAiBqtB,sBALvBh2B,qFASG4Q,EAAWC,GAC7B,OAAIA,IAAcrQ,KAAKnB,QAInBuR,EAAUrN,QAAU/C,KAAKP,MAAMsD,OAI/BqN,EAAUzI,IAAM3H,KAAKP,MAAMkI,+CAQ/BQ,IAAiBmI,GAAG,wBAAyBtQ,KAAK+0B,yBAClD5sB,IAAiBmI,GAAG,2BAA4BtQ,KAAKgoB,4BACrD7f,IAAiBmI,GAAG,qBAAsBtQ,KAAKkc,sBAE/CpT,IAAawH,GAAG,8BAA+BtQ,KAAK60B,+BACpD/rB,IAAawH,GAAG,6BAA8BtQ,KAAK60B,+BAEnDvjB,KAAUhB,GAAG,8BAA+BtQ,KAAK40B,+BACjDtjB,KAAUhB,GAAG,kBAAmBtQ,KAAKi1B,mBACrCrvB,KAAU0K,GAAG,mBAAoBtQ,KAAK2P,oBACtC2B,KAAUhB,GAAG,uBAAwBtQ,KAAKk1B,wBAC1CtvB,KAAU0K,GAAG,qBAAsBtQ,KAAKkS,sBACxCR,KAAgBpB,GAAG,2BAA4BtQ,KAAKmS,4BACpDQ,KAAgBrC,GAAG,2BAA4BtQ,KAAKoS,4BACpDV,KAAgBpB,GAAG,mBAAoBtQ,KAAKsS,oBAC5CK,KAAgBrC,GAAG,mBAAoBtQ,KAAKwS,mEAI5CrK,IAAiBoI,eAAe,wBAAyBvQ,KAAK+0B,yBAC9D5sB,IAAiBoI,eAAe,2BAA4BvQ,KAAKgoB,4BACjE7f,IAAiBoI,eAAe,qBAAsBvQ,KAAKkc,sBAE3DpT,IAAayH,eAAe,8BAA+BvQ,KAAK60B,+BAChE/rB,IAAayH,eAAe,6BAA8BvQ,KAAK60B,+BAE/DvjB,KAAUf,eAAe,8BAA+BvQ,KAAK40B,+BAC7DtjB,KAAUf,eAAe,kBAAmBvQ,KAAKi1B,mBACjDrvB,KAAU2K,eAAe,mBAAoBvQ,KAAK2P,oBAClD2B,KAAUf,eAAe,uBAAwBvQ,KAAKk1B,wBACtDtvB,KAAU2K,eAAe,qBAAsBvQ,KAAKkS,sBACpDR,KAAgBnB,eAAe,2BAA4BvQ,KAAKmS,4BAChEQ,KAAgBpC,eAAe,2BAA4BvQ,KAAKoS,4BAChEV,KAAgBnB,eAAe,mBAAoBvQ,KAAKsS,oBACxDK,KAAgBpC,eAAe,mBAAoBvQ,KAAKwS,qDAsKnD,IAAAxQ,EACkBhC,KAAKP,MAApBwC,EADHD,EACGC,QAAS0F,EADZ3F,EACY2F,EADZkE,EAE2D7L,KAAKnB,MAA7DopB,EAFHpc,EAEGoc,mBAAoB+M,EAFvBnpB,EAEuBmpB,gBAAiBF,EAFxCjpB,EAEwCipB,eAE7C,GAAIA,EACA,OAAOtzB,EAAAtB,EAAAC,cAACs1B,GAAD,CAAelC,MAAOuB,IAGjC,IAAM5yB,EAASiG,IAAiBiN,YAC1B/D,EAAOC,KAAUtN,IAAI9B,GAErBwzB,EAAmBC,YAAqBzzB,GAC1C8sB,EAAQjiB,YAAa7K,GAAQ,EAAMyF,GACnCoK,EAAW6jB,YAAgB1zB,GAAQ,GACnC2zB,GAAwB,EAE5B,GAAIb,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACDhG,EAAQhvB,KAAKq1B,SAAS,cACtBtjB,EAAW,GACX8jB,GAAwB,EACxB,MACJ,IAAK,mCACD7G,EAAQhvB,KAAKq1B,SAAS,uBACtBtjB,EAAW,GACX8jB,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACD7G,EAAQhvB,KAAKq1B,SAAS,YACtBtjB,EAAW,GACX8jB,GAAwB,EACxB,MACJ,IAAK,mCACD7G,EAAQhvB,KAAKq1B,SAAS,uBACtBtjB,EAAW,GACX8jB,GAAwB,OAG7B,GAAI5N,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,6BACD,MACJ,IAAK,+BACD+G,EAAQhvB,KAAKq1B,SAAS,eACtBtjB,EAAW,GACX8jB,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACD7G,EAAQhvB,KAAKq1B,SAAS,WACtBtjB,EAAW,GACX8jB,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACD7G,EAAQhvB,KAAKq1B,SAAS,WACtBtjB,EAAW,GACX8jB,GAAwB,OAIhC7G,EAAQhvB,KAAKq1B,SAAS,WACtBtjB,EAAW,GACX8jB,GAAwB,EAG5B,OACIr0B,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAWN,EAAQe,YAAa,mBAC5CxB,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IAAW,gBAAiB,OAAQ8O,EAAO,iBAAmB,kBACzE5O,QAASzC,KAAKyvB,iBACdjuB,EAAAtB,EAAAC,cAAA,QAAMC,UAAU,yBAAyB4uB,GACxC6G,GAAyBr0B,EAAAtB,EAAAC,cAAC21B,GAAA,EAAD,MAC1Bt0B,EAAAtB,EAAAC,cAAA,QACIC,UAAWmC,IAAW,sBAAuBN,EAAQ8zB,kBAAhCj1B,OAAA2P,GAAA,EAAA3P,CAAA,GAChBmB,EAAQ+zB,wBAA0BN,KAEtC3jB,GAELvQ,EAAAtB,EAAAC,cAAA,QAAMC,UAAU,wBAEnBiR,GACG7P,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACIE,UAAW6B,EAAQg0B,wBACnBztB,aAAW,SACX/F,QAASzC,KAAKm1B,kBACd3zB,EAAAtB,EAAAC,cAACorB,GAAArrB,EAAD,OAEJsB,EAAAtB,EAAAC,cAAC+1B,GAAD,CAAgBzG,gBAAiBzvB,KAAKyvB,2BAvUzChvB,aAoVNqO,GALCC,YACZS,cACA1M,IA1WW,SAAAC,GAAK,OAAAjC,OAAAkO,EAAA,EAAAlO,CAAA,CAChBkT,OAAQ,CACJJ,OAAQ,QAEZkW,eAAgB,CACZlW,OAAQ,qBAEZuW,iBAAkB,CACdvW,OAAQ,kBAEZqiB,wBAAyB,CACrBriB,OAAQ,kBAEZuiB,eAAgB,CACZviB,OAAQ,kBAEZmiB,kBAAmB,CACfttB,MAAO1F,EAAME,QAAQqG,KAAKsH,WAE9BolB,wBAAyB,CACrBvtB,MAAO1F,EAAME,QAAQC,QAAQ2N,KAAO,eAErCtB,YAAYxM,KAoVI,CAAEQ,WAAW,IAGrBuL,CAAQ6lB,0MC9VjByB,sNACFv3B,MAAQ,CACJwpB,SAAU,KACV9mB,MAAO80B,KAAYC,OACnBC,UAAWF,KAAYC,OACvBE,UAAU,EACVC,YAAY,EACZC,WAAW,KAWfC,0BAA4B,SAAA/mB,GAAU,IAC1B0mB,EAAuB1mB,EAAvB0mB,OAAQM,EAAehnB,EAAfgnB,gBAEGnF,IAAfmF,EACAp3B,EAAKE,SAAS,CAAE6B,MAAO+0B,IAEvB92B,EAAKE,SAAS,CAAE6B,MAAO+0B,EAAQC,UAAWK,OAIlDC,kBAAoB,SAAAxO,GAChB7oB,EAAKE,SAAS,CAAE2oB,SAAUA,OAG9ByO,mBAAqB,WAAM,IAAAjrB,EACqBrM,EAAKX,MAAzC23B,EADe3qB,EACf2qB,SAAUC,EADK5qB,EACL4qB,WAAYC,EADP7qB,EACO6qB,UAE1BF,GACAC,GACAC,GAEJl3B,EAAKE,SAAS,CAAE2oB,SAAU,UAG9B0O,iBAAmB,SAACtrB,EAAOurB,GACvBx3B,EAAKE,SAAS,CAAE+2B,YAAY,IAExBO,GACAx3B,EAAKq3B,kBAAkBprB,EAAM6c,kBAIrC2O,iBAAmB,WACfz3B,EAAKE,SAAS,CAAE+2B,YAAY,GAAS,WACjCj3B,EAAKs3B,0BAIbI,sBAAwB,WACpB13B,EAAKE,SAAS,CAAEg3B,WAAW,GAAS,WAChCl3B,EAAKs3B,0BAIbK,iBAAmB,WAAM,IAAA1pB,EACQjO,EAAKX,MAA1B0C,EADakM,EACblM,MAAOg1B,EADM9oB,EACN8oB,UACTa,EAAY71B,EAAQ,EAAI,EAAIg1B,GAAac,IAE/Cl4B,KAAgBqI,aAAa,CACzBnI,QAAS,0BACTi3B,OAAQc,OAIhB9b,aAAe,SAAC7P,EAAOlK,GAAU,IAAA+1B,EACG93B,EAAKX,MAA7B23B,EADqBc,EACrBd,SAAUD,EADWe,EACXf,UAEdC,EACAr3B,KAAgBqI,aAAa,CACzBnI,QAAS,0BACTi3B,OAAQ/0B,IAGZpC,KAAgBqI,aAAa,CACzBnI,QAAS,0BACTu3B,WAAYr1B,EAAQ,EAAIA,EAAQg1B,EAChCD,OAAQ/0B,OAKpBg2B,gBAAkB,WAAM,IACZh2B,EAAU/B,EAAKX,MAAf0C,MAER/B,EAAKE,SAAS,CACV82B,UAAU,EACVD,UAAWh1B,OAInBi2B,cAAgB,WAAM,IAAAC,EACWj4B,EAAKX,MAA1B0C,EADUk2B,EACVl2B,MAAOg1B,EADGkB,EACHlB,UAEf/2B,EAAKE,SACD,CACI82B,UAAU,EACVD,UAAWh1B,EAAQ,EAAIA,EAAQg1B,GAEnC,WACI/2B,EAAKs3B,0BAKjBY,cAAgB,SAAAn2B,GACZ,OAAc,IAAVA,EACOC,EAAAtB,EAAAC,cAACw3B,GAAAz3B,EAAD,CAAe03B,SAAS,UAG/Br2B,EAAQ,IACDC,EAAAtB,EAAAC,cAAC03B,GAAA33B,EAAD,CAAgB03B,SAAS,UAGhCr2B,EAAQ,GACDC,EAAAtB,EAAAC,cAAC23B,GAAA53B,EAAD,CAAgB03B,SAAS,UAG7Bp2B,EAAAtB,EAAAC,cAAC43B,GAAA73B,EAAD,CAAc03B,SAAS,8FAlH9BvB,KAAY/lB,GAAG,0BAA2BtQ,KAAK22B,0EAI/CN,KAAY9lB,eAAe,0BAA2BvQ,KAAK22B,4DAiHtD,IAAAppB,EAAAvN,KACGiC,EAAYjC,KAAKP,MAAjBwC,QADH+1B,EAEuBh4B,KAAKnB,MAAzBwpB,EAFH2P,EAEG3P,SAAU9mB,EAFby2B,EAEaz2B,MACZsM,EAAOqS,QAAQmI,GAErB,OACI7mB,EAAAtB,EAAAC,cAAA,OACI83B,aAAc,SAAA7xB,GAAC,OAAImH,EAAKwpB,iBAAiB3wB,GAAG,IAC5C8xB,aAAcl4B,KAAKi3B,iBACnBjd,MAAO,CACH1K,SAAU,WACVjM,WAAY,gBAEhB7B,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CAAYE,UAAW6B,EAAQk2B,WAAY1vB,MAAM,UAAUhG,QAASzC,KAAKm3B,kBACpEn3B,KAAK03B,cAAcn2B,IAExBC,EAAAtB,EAAAC,cAAA,OACI6Z,MAAO,CACH1K,SAAU,WACVjM,WAAY,cACZ+0B,WAAYvqB,EAAO,UAAY,SAC/B+P,OAAQ,GAEZqa,aAAc,SAAA7xB,GAAC,OAAImH,EAAKwpB,iBAAiB3wB,GAAG,IAC5C8xB,aAAcl4B,KAAKk3B,uBACnB11B,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IAAWN,EAAQe,YAAaf,EAAQoc,MACnDrE,MAAO,CACHqe,UAAW,EACXC,YAAa,EACb/oB,YAAa,UAEjB/N,EAAAtB,EAAAC,cAACo4B,GAAAr4B,EAAD,CACI+B,QAAS,CAAEurB,UAAWvrB,EAAQu2B,OAAQC,MAAOx2B,EAAQw2B,OACrDC,IAAK,EACLC,IAAK,EACLp3B,MAAOA,EACPqT,SAAU5U,KAAKsb,aACfsd,YAAa54B,KAAKu3B,gBAClBsB,UAAW74B,KAAKw3B,cAChB3P,UAAQ,cAxKTrnB,IAAMC,YAiLlBqC,OArMA,SAAAC,GAAK,OAAAjC,OAAAkO,EAAA,EAAAlO,CAAA,CAChBq3B,WAAY,CACRlpB,QAAS,GAEboP,KAAM,CACFhP,QAAS,OACT9E,OAAQ,IACRD,MAAO,GACP2E,QAAS,SACT5L,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAW8hB,QAAU,WAEnFqT,OAAQ,CACJvpB,QAAS,UAEbwpB,MAAO,CACHK,QAAS,IAEVvpB,YAAYxM,KAoLe,CAAEQ,WAAW,GAAhCT,CAAwCszB,8CCtMjD2C,eACF,SAAAA,EAAYt5B,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA+4B,IACfv5B,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAi4B,GAAA30B,KAAApE,KAAMP,KAiBVu5B,0BAA4B,SAAAppB,GAAU,IAC1BqpB,EAAWrpB,EAAXqpB,OAERz5B,EAAKE,SAAS,CAAEu5B,YArBDz5B,EAwBnB05B,aAAe,WAAM,IACTD,EAAWz5B,EAAKX,MAAhBo6B,OAEJE,EAAaF,EACjB,OAAQA,GACJ,KAAKG,KAAWC,KACZF,EAAaC,KAAWE,OACxB,MAEJ,KAAKF,KAAWE,OACZH,EAAaC,KAAWG,WACxB,MAEJ,KAAKH,KAAWG,WACZJ,EAAaC,KAAWC,KAKhCl6B,KAAgBqI,aAAa,CACzBnI,QAAS,0BACT45B,OAAQE,KA7CG35B,EAiDnBg6B,QAAU,SAAAP,GACN,OAAQA,GACJ,KAAKG,KAAWC,KAGhB,KAAKD,KAAWE,OACZ,OAAO93B,EAAAtB,EAAAC,cAACs5B,GAAAv5B,EAAD,CAAY03B,SAAS,UAEhC,KAAKwB,KAAWG,WACZ,OAAO/3B,EAAAtB,EAAAC,cAACu5B,GAAAx5B,EAAD,CAAe03B,SAAS,UAEnC,QACI,OAAOp2B,EAAAtB,EAAAC,cAACs5B,GAAAv5B,EAAD,CAAY03B,SAAS,YA7DrB,IAGPqB,EAAW5C,KAAX4C,OAHO,OAKfz5B,EAAKX,MAAQ,CACTo6B,UANWz5B,mFAWf62B,KAAY/lB,GAAG,0BAA2BtQ,KAAKg5B,0EAI/C3C,KAAY9lB,eAAe,0BAA2BvQ,KAAKg5B,4DAmDtD,IACG/2B,EAAYjC,KAAKP,MAAjBwC,QACAg3B,EAAWj5B,KAAKnB,MAAhBo6B,OAER,OACIz3B,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACIE,UAAW6B,EAAQk2B,WACnB1vB,MAAOwwB,IAAWG,KAAWC,KAAO,UAAY,UAChD52B,QAASzC,KAAKk5B,cACbl5B,KAAKw5B,QAAQP,WA5EHz4B,IAAMC,WAkFlBqC,OAxFA,CACXq1B,WAAY,CACRlpB,QAAS,IAsFFnM,CAAmBi2B,yBCnF5BY,eACF,SAAAA,EAAYl6B,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA25B,IACfn6B,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA64B,GAAAv1B,KAAApE,KAAMP,KAiBVm6B,2BAA6B,SAAAhqB,GAAU,IAC3BiqB,EAAYjqB,EAAZiqB,QAERr6B,EAAKE,SAAS,CAAEm6B,aArBDr6B,EAwBnBs6B,cAAgB,WAAM,IACVD,EAAYr6B,EAAKX,MAAjBg7B,QAER16B,KAAgBqI,aAAa,CACzBnI,QAAS,2BACTw6B,SAAUA,KA7BC,IAGPA,EAAYxD,KAAZwD,QAHO,OAKfr6B,EAAKX,MAAQ,CACTg7B,WANWr6B,mFAWf62B,KAAY/lB,GAAG,2BAA4BtQ,KAAK45B,2EAIhDvD,KAAY9lB,eAAe,2BAA4BvQ,KAAK45B,6DAkBvD,IACG33B,EAAYjC,KAAKP,MAAjBwC,QACA43B,EAAY75B,KAAKnB,MAAjBg7B,QAER,OACIr4B,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACIE,UAAW6B,EAAQk2B,WACnB1vB,MAAQoxB,EAAsB,UAAZ,UAClBp3B,QAASzC,KAAK85B,eACdt4B,EAAAtB,EAAAC,cAAC45B,GAAA75B,EAAD,CAAa03B,SAAS,kBA3CVp3B,IAAMC,WAiDnBqC,OAvDA,CACXq1B,WAAY,CACRlpB,QAAS,IAqDFnM,CAAmB62B,IClD5BK,eACF,SAAAA,EAAYv6B,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAg6B,IACfx6B,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAk5B,GAAA51B,KAAApE,KAAMP,KAiBVw6B,gCAAkC,SAAArqB,GAAU,IAChCsqB,EAAiBtqB,EAAjBsqB,aAER16B,EAAKE,SAAS,CAAEw6B,kBArBD16B,EAwBnB26B,mBAAqB,WAAM,IAGjBC,EAFmB56B,EAAKX,MAAtBq7B,eAGaG,IAA6BC,IAA2BD,IAE7El7B,KAAgBqI,aAAa,CACzBnI,QAAS,gCACT66B,aAAcE,KAhCH,IAGPF,EAAiB7D,KAAjB6D,aAHO,OAKf16B,EAAKX,MAAQ,CACTq7B,gBANW16B,mFAWf62B,KAAY/lB,GAAG,gCAAiCtQ,KAAKi6B,gFAIrD5D,KAAY9lB,eAAe,gCAAiCvQ,KAAKi6B,kEAqB5D,IACGh4B,EAAYjC,KAAKP,MAAjBwC,QACAi4B,EAAiBl6B,KAAKnB,MAAtBq7B,aAER,OACI14B,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACIE,UAAW6B,EAAQk2B,WACnB1vB,MAAOyxB,EAAeG,IAA6B,UAAY,UAC/D53B,QAASzC,KAAKm6B,oBACd34B,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,+BAAf,cA9CiBI,IAAMC,WAoDxBqC,OAzDA,CACXq1B,WAAY,CACRlpB,QAAS,IAuDFnM,CAAmBk3B,ICdnBO,eA7CX,SAAAA,EAAY96B,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAu6B,IACf/6B,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAy5B,GAAAn2B,KAAApE,KAAMP,KAiBV+6B,wBAA0B,SAAA5qB,GAAU,IACxB6qB,EAAgB7qB,EAAhB6qB,YAERj7B,EAAKE,SAAS,CACV+6B,YAAaA,EACbC,kBAAmBC,aAAkBC,KAAKC,MAAMJ,GAAe,OAvBpDj7B,EA2BnBs7B,cAAgB,SAACL,EAAaM,GAGHJ,aAAkBC,KAAKC,MAAME,GAAY,IAKhE,OAJ0BJ,aAAkBC,KAAKC,MAAMJ,GAAe,KA5BtEj7B,EAAKX,MAAQ,CACT47B,YAAa,EACbM,SAAU,EACVC,WAAYx7B,EAAKs7B,cAAc,EAAG,IANvBt7B,mFAWf62B,KAAY/lB,GAAG,wBAAyBtQ,KAAKw6B,wEAI7CnE,KAAY9lB,eAAe,wBAAyBvQ,KAAKw6B,0DAuBpD,IACGE,EAAsB16B,KAAKnB,MAA3B67B,kBAER,OAAOl5B,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KAAG4kB,UA1CCl6B,IAAMC,oBCanBw6B,uBACF,SAAAA,EAAYx7B,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAi7B,IACfz7B,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAm6B,GAAA72B,KAAApE,KAAMP,KA0BVy7B,eAAiB,WACb,IAAMxiB,EAAOlZ,EAAKgkB,QAAQ/Z,QAC1B,GAAKiP,EAAL,CAFmB,IAIXoG,EAJWhe,OAAAqoB,GAAA,EAAAroB,QAAAqoB,GAAA,EAAAroB,CAAAtB,IAIXsf,UACR,GAAKA,EAAL,CAEA,IAAMqc,EAAO37B,EAAK47B,WAAWp3B,IAAI8a,GACjC,GAAKqc,EAAL,CAEA,IAAME,EAAOC,eAAqBH,GAC7BE,IAEL3iB,EAAKX,UAAYsjB,EAAKE,UAAY,QAxCnB/7B,EAyDnBg8B,kCAAoC,SAAA5rB,GAAU,IAClC6rB,EAAS7rB,EAAT6rB,KAEJA,EACAj8B,EAAKE,SACD,CACIg8B,kBAAmBD,GAEvB,WACIj8B,EAAKm8B,YAIbn8B,EAAKE,SACD,CACIg8B,kBAAmBD,GAEvB,WACIj8B,EAAKo8B,cA3EFp8B,EAiFnBq8B,0BAA4B,SAAAjsB,GAAU,IAC1B1N,EAAsB0N,EAAtB1N,OAAQ4c,EAAclP,EAAdkP,UAEhBtf,EAAK0C,OAASA,EACd1C,EAAKsf,UAAYA,GArFFtf,EAwFnBs8B,mCAAqC,SAAAlsB,GAAU,IAAAmsB,EAAAj7B,OAAAqoB,GAAA,EAAAroB,QAAAqoB,GAAA,EAAAroB,CAAAtB,IACnC0C,EADmC65B,EACnC75B,OAAQ4c,EAD2Bid,EAC3Bjd,UAEZlP,EAAO1N,SAAWA,GAAU0N,EAAOkP,YAAcA,GACjDtf,EAAKE,SAAS,CACVs8B,SAAU,QA7FHx8B,EAkGnBy8B,4BAA8B,SAAArsB,GAAU,IAAAssB,EAAAp7B,OAAAqoB,GAAA,EAAAroB,QAAAqoB,GAAA,EAAAroB,CAAAtB,IAC5B0C,EAD4Bg6B,EAC5Bh6B,OAAQ4c,EADoBod,EACpBpd,UACRkd,EAAapsB,EAAbosB,SAEJ95B,IAAW85B,EAAS95B,QAAU4c,IAAckd,EAASld,WACrDtf,EAAKE,SAAS,CACVs8B,SAAUA,KAxGHx8B,EA6GnBm8B,QAAU,WACNQ,aAAa38B,EAAK48B,aAElB58B,EAAK48B,YAAchvB,WAAW,WAAM,IAAAvB,EACcrM,EAAKX,MAA3Cw9B,EADwBxwB,EACxBwwB,eAAgBX,EADQ7vB,EACR6vB,kBACxBl8B,EAAKE,SAAS,CACVmO,KAAMwuB,GAAkBX,KAE7B,MArHYl8B,EAwHnBo8B,SAAW,WACPO,aAAa38B,EAAK4W,SAElB5W,EAAK4W,QAAUhJ,WAAW,WAAM,IAAAK,EACkBjO,EAAKX,MAA3Cw9B,EADoB5uB,EACpB4uB,eAAgBX,EADIjuB,EACJiuB,kBACxBl8B,EAAKE,SAAS,CACVmO,KAAMwuB,GAAkBX,KAE7B,MAhIYl8B,EAmInBu3B,iBAAmB,WACfv3B,EAAKE,SAAS,CACVg8B,mBAAmB,EACnB7tB,MAAM,KAtIKrO,EA0InBy3B,iBAAmB,WACfz3B,EAAKE,SACD,CACIg8B,mBAAmB,GAEvB,WACIl8B,EAAKo8B,cAhJEp8B,EAqJnB+jB,aAAe,WACX,IAAM7K,EAAOlZ,EAAKgkB,QAAQ/Z,QACrBiP,IAEkB,IAAnBA,EAAKX,UACL5Y,KAAgBqI,aAAa,CACzBnI,QAAS,kCAENqZ,EAAKC,eAAiBD,EAAKX,UAAYW,EAAKE,cACnDzZ,KAAgBqI,aAAa,CACzBnI,QAAS,oCA5JjBG,EAAKgkB,QAAUhjB,IAAM8M,YACrB9N,EAAK47B,WAAa,IAAIx3B,IAJP,IAMPiE,EAAsBwuB,KAAtBxuB,QAASm0B,EAAa3F,KAAb2F,SANF,OAQfx8B,EAAK0C,OAAS2F,EAAUA,EAAQV,QAAU,EAC1C3H,EAAKsf,UAAYjX,EAAUA,EAAQ3I,GAAK,EAExCM,EAAKX,MAAQ,CACTgP,MAAM,EACNwuB,gBAAgB,EAChBX,mBAAmB,EACnBM,SAAUA,GAfCx8B,kFAmBAK,EAAWC,EAAWC,GAAU,IACvC8N,EAAS7N,KAAKnB,MAAdgP,MAEH/N,EAAU+N,MAAQA,GACnB7N,KAAKk7B,6DAqBT7E,KAAY/lB,GAAG,0BAA2BtQ,KAAK67B,2BAC/CxF,KAAY/lB,GAAG,4BAA6BtQ,KAAKi8B,6BACjD5F,KAAY/lB,GAAG,mCAAoCtQ,KAAK87B,oCACxDzF,KAAY/lB,GAAG,kCAAmCtQ,KAAKw7B,kFAIvDnF,KAAY9lB,eAAe,0BAA2BvQ,KAAK67B,2BAC3DxF,KAAY9lB,eAAe,4BAA6BvQ,KAAKi8B,6BAC7D5F,KAAY9lB,eAAe,mCAAoCvQ,KAAK87B,oCACpEzF,KAAY9lB,eAAe,kCAAmCvQ,KAAKw7B,oEA8G9D,IAAAjuB,EAAAvN,KACGiC,EAAYjC,KAAKP,MAAjBwC,QADHq1B,EAGsBt3B,KAAKnB,MAAxBgP,EAHHypB,EAGGzpB,KAAMmuB,EAHT1E,EAGS0E,SACd,IAAKnuB,EAAM,OAAO,KAClB,IAAKmuB,EAAU,OAAO,KALjB,IAOGxa,EAAawa,EAAbxa,SACR,OAAKA,EACDA,EAAS7d,QAAU,EAAU,MAEjC3D,KAAKo7B,WAAWkB,QAGZ96B,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,YACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,mBAAoBN,EAAQoc,KAAMpc,EAAQe,cACjExB,EAAAtB,EAAAC,cAAA,OACIgO,IAAKnO,KAAKwjB,QACVpjB,UAAU,iBACV63B,aAAcj4B,KAAK+2B,iBACnBmB,aAAcl4B,KAAKi3B,iBACnBlS,SAAU/kB,KAAKujB,cACdyY,EAASxa,SACL+a,MAAM,GACNC,UACAv2B,IAAI,SAAAC,GAAC,OACF1E,EAAAtB,EAAAC,cAAA,OAAKmB,IAAK4E,EAAEhH,GAAIiP,IAAK,SAAAyT,GAAE,OAAIrU,EAAK6tB,WAAWnwB,IAAI/E,EAAEhH,GAAI0iB,IAAKxhB,UAAU,iBAC/Dq8B,aAASv2B,EAAG,kBAAMw2B,aAAUx2B,EAAEiB,QAASjB,EAAEhH,aAnBhD,YA7KPsB,IAAMC,YA0MdqC,OAjNA,SAAAC,GAAK,OAAAjC,OAAAkO,EAAA,EAAAlO,CAAA,CAChBud,KAAM,CACFhb,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAW8hB,QAAU,YAEhF5V,YAAYxM,KA6MJD,CAAmBm4B,ICvL5B0B,uBACF,SAAAA,EAAYl9B,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA28B,IACfn9B,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA67B,GAAAv4B,KAAApE,KAAMP,KA6EVw6B,gCAAkC,SAAArqB,GAAU,IAChCsqB,EAAiBtqB,EAAjBsqB,aAEF0C,EAASp9B,EAAKq9B,SAASpzB,QACxBmzB,IAELA,EAAO1C,aAAeA,IApFP16B,EAuFnBm3B,0BAA4B,SAAA/mB,GAAU,IAC1B0mB,EAAW1mB,EAAX0mB,OAEFsG,EAASp9B,EAAKq9B,SAASpzB,QACxBmzB,IAELA,EAAOtG,OAASA,IA7FD92B,EAgGnBs9B,iCAAmC,SAAAltB,GAC/BpQ,EAAKu9B,mBAAqB7c,QAAQ/X,IAAiB60B,qBAjGpCx9B,EAoGnBy9B,+BAAiC,SAAArtB,GAC7BpQ,EAAKu9B,oBAAqB,GArGXv9B,EAwGnB09B,+BAAiC,SAAAttB,GAC7BpQ,EAAKu9B,oBAAqB,GAzGXv9B,EA4GnB29B,8BAAgC,SAAAvtB,GAC5BpQ,EAAKu9B,oBAAqB,EAE1B,IAAMH,EAASp9B,EAAKq9B,SAASpzB,QACxBmzB,GAELA,EAAOQ,SAlHQ59B,EAqHnB69B,iBAAmB,SAACC,EAAMz1B,GAAY,IAC1BV,EAAgBU,EAAhBV,QAASjI,EAAO2I,EAAP3I,GAEjBM,EAAKE,SACD,CACI69B,IAAK/9B,EAAKg+B,YAAY31B,IAE1B,WACI,IAAM+0B,EAASp9B,EAAKq9B,SAASpzB,QACzBmzB,GACIp9B,EAAKu9B,qBACLH,EAAOQ,QAEPj+B,KAAgBqI,aAAa,CACzBnI,QAAS,yBACT6C,OAAQiF,EACR2X,UAAW5f,QArIhBM,EA6InBi+B,wBAA0B,SAAA7tB,GAAU,IACxB1N,EAAsB0N,EAAtB1N,OAAQ4c,EAAclP,EAAdkP,UACRjX,EAAYrI,EAAKX,MAAjBgJ,QAER,GAAKA,EAAL,CAJgC,IAMxBV,EAAyBU,EAAzBV,QAASjI,EAAgB2I,EAAhB3I,GAAI8J,EAAYnB,EAAZmB,QACrB,GAAKA,GACD9G,IAAWiF,GAAW2X,IAAc5f,EAExC,OAAQ8J,EAAQ,UACZ,IAAK,cAAe,IACR00B,EAAa10B,EAAb00B,SACR,GAAIA,EAAU,KACFC,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAE3B,GAAIF,EAAO,CACP,IAAML,EAAOK,EAAMA,MACfL,GACA99B,EAAK69B,iBAAiBC,EAAMz1B,GAIpC,GAAI+1B,EAAY,KACJE,EAAUF,EAAVE,MACJA,GACAt+B,EAAK69B,iBAAiBS,EAAOj2B,GAIrC,GAAIg2B,EAAY,KACJE,EAAUF,EAAVE,MACJA,GACAv+B,EAAK69B,iBAAiBU,EAAOl2B,IAKzC,MAEJ,IAAK,eAAgB,IACT81B,EAAU30B,EAAV20B,MACR,GAAIA,EAAO,CACP,IAAML,EAAOK,EAAMA,MACfL,GACA99B,EAAK69B,iBAAiBC,EAAMz1B,GAIpC,MAEJ,IAAK,mBAAoB,IACb+1B,EAAe50B,EAAf40B,WACR,GAAIA,EAAY,KACJE,EAAUF,EAAVE,MACJA,GACAt+B,EAAK69B,iBAAiBS,EAAOj2B,GAIrC,MAEJ,IAAK,mBAAoB,IACbg2B,EAAe70B,EAAf60B,WACR,GAAIA,EAAY,KACJE,EAAUF,EAAVE,MACJA,GACAv+B,EAAK69B,iBAAiBU,EAAOl2B,OAhN9BrI,EAyNnBy8B,4BAA8B,SAAArsB,GAAU,IAC5BosB,EAAapsB,EAAbosB,SACA95B,EAAsB85B,EAAtB95B,OAAQ4c,EAAckd,EAAdld,UACRjX,EAAYrI,EAAKX,MAAjBgJ,QAEJA,GAAWA,EAAQV,UAAYjF,GAAU2F,EAAQ3I,KAAO4f,GACxDtf,EAAKE,SAAS,CAAEs8B,SAAUA,KA/Nfx8B,EAmOnBw+B,yBAA2B,SAAApuB,GACvBpQ,EAAKE,SAAS,CACVmI,QAAS,KACTm0B,SAAU,KACViC,SAAS,EACTV,IAAK,QAxOM/9B,EA4OnBq8B,0BAA4B,SAAAjsB,GAAU,IAC1B1N,EAAsB0N,EAAtB1N,OAAQ4c,EAAclP,EAAdkP,UADkBjT,EAETrM,EAAKX,MAAtBgJ,EAF0BgE,EAE1BhE,QAAS01B,EAFiB1xB,EAEjB0xB,IAEjB,GAAI11B,GAAWA,EAAQV,UAAYjF,GAAU2F,EAAQ3I,KAAO4f,GACxD,GAAIye,EAAK,CACL,IAAMX,EAASp9B,EAAKq9B,SAASpzB,QACzBmzB,IACIA,EAAOsB,OACPtB,EAAOuB,OAEPvB,EAAOQ,cAIhB,CACH,IAAMG,EAAM/9B,EAAKg+B,YAAYnH,KAAYxuB,SACnCo2B,EAAU/d,QAAQqd,GACPlH,KAAY2F,SAC7Bx8B,EAAKE,SACD,CACImI,QAASwuB,KAAYxuB,QACrBm0B,SAAU3F,KAAY2F,SACtBiC,QAASA,EACTV,IAAKA,GAET,WACI,IAAMX,EAASp9B,EAAKq9B,SAASpzB,QACzBmzB,IACAA,EAAOnC,YAAcj7B,EAAK8uB,UACtB9uB,EAAKu9B,mBACLH,EAAOQ,QAGAR,EAAOsB,QACdtB,EAAOuB,YA/QZ3+B,EAuRnB4+B,WAAa,WACTj/B,KAAgBqI,aAAa,CACzBnI,QAAS,2BAzREG,EA6RnB6+B,WAAa,WAAM,IACPx2B,EAAYrI,EAAKX,MAAjBgJ,QACHA,GAEL1I,KAAgBqI,aAAa,CACzBnI,QAAS,0BACT6C,OAAQ2F,EAAQV,QAChB2X,UAAWjX,EAAQ3I,MApSRM,EAwSnB8+B,WAAa,WACTn/B,KAAgBqI,aAAa,CACzBnI,QAAS,2BA1SEG,EA8SnBg+B,YAAc,SAAA31B,GACV,GAAIA,EAAS,KACDmB,EAAYnB,EAAZmB,QACR,GAAIA,EAAS,KACD20B,EAA4C30B,EAA5C20B,MAAOC,EAAqC50B,EAArC40B,WAAYC,EAAyB70B,EAAzB60B,WAAYH,EAAa10B,EAAb00B,SAEvC,GAAIC,EAAO,CACP,IAAML,EAAOK,EAAMA,MACnB,GAAIL,EACA,OAAOiB,YAAOjB,GAItB,GAAIM,EAAY,KACJE,EAAUF,EAAVE,MACR,GAAIA,EACA,OAAOS,YAAOT,GAItB,GAAID,EAAY,KACJE,EAAUF,EAAVE,MACR,GAAIA,EACA,OAAOQ,YAAOR,GAItB,GAAIL,EAAU,CACV,GAAIA,EAASC,MAAO,CAChB,IAAML,EAAOI,EAASC,MAAMA,MAC5B,GAAIL,EACA,OAAOiB,YAAOjB,GAItB,GAAII,EAASE,WAAY,KACbE,EAAUJ,EAASE,WAAnBE,MACR,GAAIA,EACA,OAAOS,YAAOT,GAItB,GAAIJ,EAASG,WAAY,KACbE,EAAUL,EAASG,WAAnBE,MACR,GAAIA,EACA,OAAOQ,YAAOR,MAOlC,MAAO,IAlWQv+B,EAqWnBg/B,YAAc,WAAqB,IAApBC,IAAoBt9B,UAAAwC,OAAA,QAAA8tB,IAAAtwB,UAAA,KAAAA,UAAA,GACvB0G,EAAYrI,EAAKX,MAAjBgJ,QACHA,IAEL1I,KAAgBqI,aAAa,CACzBnI,QAAS,0BACT6C,OAAQ2F,EAAQV,QAChB2X,UAAWjX,EAAQ3I,GACnBu/B,SAAUA,IAGdj/B,EAAKE,SACD,GAKA,WACIP,KAAgBqI,aAAa,CACzBnI,QAAS,uBACT6C,OAAQ2F,EAAQV,QAChB2X,UAAWjX,EAAQ3I,GACnBu/B,SAAUA,QA3XPj/B,EAiYnBk/B,iBAAmB,WACfl/B,EAAKg/B,aAAY,IAlYFh/B,EAqYnB+H,YAAc,WACV,IAAMq1B,EAASp9B,EAAKq9B,SAASpzB,QACzBmzB,GACAA,EAAOQ,QAGX59B,EAAKg/B,aAAY,IA3YFh/B,EA8YnBm/B,iBAAmB,WAAM,IACb92B,EAAYrI,EAAKX,MAAjBgJ,QACR,GAAKA,EAAL,CAEA,IAAM+0B,EAASp9B,EAAKq9B,SAASpzB,QACxBmzB,IAELp9B,EAAKE,SAAS,CACV+6B,YAAamC,EAAOnC,YACpBC,kBAAmBC,aAAkBC,KAAKC,MAAM+B,EAAOnC,aAAe,MAG1Et7B,KAAgBqI,aAAa,CACzBnI,QAAS,wBACT6C,OAAQ2F,EAAQV,QAChB2X,UAAWjX,EAAQ3I,GACnB67B,SAAU6B,EAAO7B,SACjBN,YAAamC,EAAOnC,YACpBmE,UAAWnd,KAAKwM,WAhaLzuB,EAoanBq/B,cAAgB,WAAM,IACVh3B,EAAYrI,EAAKX,MAAjBgJ,QACR,GAAKA,EAAL,CAEA,IAAM+0B,EAASp9B,EAAKq9B,SAASpzB,QAC7B,GAAKmzB,EAAL,CALkB,IAOV1C,EAAyB7D,KAAzB6D,aAAc5D,EAAWD,KAAXC,OAEdnvB,EAAgBU,EAAhBV,QAASjI,EAAO2I,EAAP3I,GACXy+B,EAAQmB,aAAS33B,EAASjI,GAMhC,GAJA09B,EAAO1C,aAAeyD,EAAQtD,IAA6BH,EAC3D0C,EAAOtG,OAASA,EAChBsG,EAAOmC,OAAQ,GAEXpB,EAAJ,CAIA,IAAIqB,EAAS,KACT,kBAAmBpC,EACnBoC,EAASpC,EAAOqC,gBACT,qBAAsBrC,IAC7BoC,EAASpC,EAAOsC,oBAGfF,GAIL7/B,KAAgBqI,aAAa,CACzBnI,QAAS,iCACT6C,OAAQ2F,EAAQV,QAChB2X,UAAWjX,EAAQ3I,GACnB8/B,OAAQA,QAvcGx/B,EA2cnB2/B,gBAAkB,WAAM,IACZt3B,EAAYrI,EAAKX,MAAjBgJ,QACR,GAAKA,EAAL,CAEArI,EAAKE,SAAS,CACVu+B,SAAS,IAGb,IAAMrB,EAASp9B,EAAKq9B,SAASpzB,QACxBmzB,GAELz9B,KAAgBqI,aAAa,CACzBnI,QAAS,wBACT6C,OAAQ2F,EAAQV,QAChB2X,UAAWjX,EAAQ3I,GACnBu7B,YAAamC,EAAOnC,YACpBM,SAAU6B,EAAO7B,SACjB6D,UAAWnd,KAAKwM,UA5dLzuB,EAgenB4/B,iBAAmB,WAAM,IACbv3B,EAAYrI,EAAKX,MAAjBgJ,QACHA,IAELrI,EAAKE,SAAS,CACVu+B,SAAS,IAGEz+B,EAAKq9B,SAASpzB,SAG7BtK,KAAgBqI,aAAa,CACzBnI,QAAS,yBACT6C,OAAQ2F,EAAQV,QAChB2X,UAAWjX,EAAQ3I,OA9eRM,EAkfnB26B,mBAAqB,WAAM,IAGjBC,EAFmB56B,EAAKX,MAAtBq7B,eAGaG,IAA6BC,IAA2BD,IAE7E76B,EAAKE,SACD,CACIw6B,aAAcE,GAElB,WACI,IAAMwC,EAASp9B,EAAKq9B,SAASpzB,QACxBmzB,IAELA,EAAO1C,aAAeE,KAI9Bj7B,KAAgBqI,aAAa,CACzBnI,QAAS,gCACT66B,aAAcE,KAtgBH56B,EA0gBnB6/B,QAAU,SAACx3B,EAASm0B,GAChB,IAAKn0B,EAAS,OAAO,EACrB,IAAKm0B,IAAaA,EAASxa,SAAS7d,OAAQ,OAAO,EAFtB,IAIrBwD,EAAgBU,EAAhBV,QAASjI,EAAO2I,EAAP3I,GAEXogC,EAAQtD,EAASxa,SAAS+d,UAAU,SAAAr5B,GAAC,OAAIA,EAAEiB,UAAYA,GAAWjB,EAAEhH,KAAOA,IACjF,OAAe,IAAXogC,GAEGA,EAAQ,EAAItD,EAASxa,SAAS7d,QAnhBtBnE,EAshBnBggC,QAAU,SAAC33B,EAASm0B,GAChB,IAAKn0B,EAAS,OAAO,EACrB,IAAKm0B,IAAaA,EAASxa,SAAS7d,OAAQ,OAAO,EAFtB,IAIrBwD,EAAgBU,EAAhBV,QAASjI,EAAO2I,EAAP3I,GAEXogC,EAAQtD,EAASxa,SAAS+d,UAAU,SAAAr5B,GAAC,OAAIA,EAAEiB,UAAYA,GAAWjB,EAAEhH,KAAOA,IACjF,OAAe,IAAXogC,GAEGA,EAAQ,GAAK,GA/hBL9/B,EAkiBnBigC,sBAAwB,WACpBtgC,KAAgBqI,aAAa,CACzBnI,QAAS,kCACTo8B,MAAM,KAriBKj8B,EAyiBnBkgC,sBAAwB,WACpBvgC,KAAgBqI,aAAa,CACzBnI,QAAS,kCACTo8B,MAAM,KA5iBKj8B,EAgjBnBmgC,iBAAmB,WAAM,IACb93B,EAAYrI,EAAKX,MAAjBgJ,QACHA,GAELwQ,aAASxQ,EAAQV,QAASU,EAAQ3I,KAjjBlCM,EAAKq9B,SAAWr8B,IAAM8M,YAHP,IAKPzF,EAAsBwuB,KAAtBxuB,QAASm0B,EAAa3F,KAAb2F,SALF,OAOfx8B,EAAK8uB,UAAYsR,IAEjBpgC,EAAKX,MAAQ,CACT47B,YAAa,EACbC,kBAAmBC,aAAkB,GACrC9yB,QAASA,EACTm0B,SAAUA,EACViC,SAAS,EACTV,IAAK/9B,EAAKg+B,YAAY31B,IAfXrI,qFAmBG4Q,EAAWC,EAAWid,GAAa,IAC7CvqB,EAAU/C,KAAKP,MAAfsD,MAD6C0K,EAETzN,KAAKnB,MAAzCgJ,EAF6C4F,EAE7C5F,QAASm0B,EAFoCvuB,EAEpCuuB,SAAUuB,EAF0B9vB,EAE1B8vB,IAAKU,EAFqBxwB,EAErBwwB,QAEhC,OAAI7tB,EAAUrN,QAAUA,IAIpBsN,EAAUxI,UAAYA,IAItBwI,EAAU2rB,WAAaA,IAIvB3rB,EAAUktB,MAAQA,GAIlBltB,EAAU4tB,UAAYA,iDAQ1Bx3B,IAAU6J,GAAG,4BAA6BtQ,KAAKy9B,yBAC/Ch3B,IAAU6J,GAAG,4BAA6BtQ,KAAKy9B,yBAC/Ch3B,IAAU6J,GAAG,wBAAyBtQ,KAAKy9B,yBAC3CpH,KAAY/lB,GAAG,0BAA2BtQ,KAAK67B,2BAC/CxF,KAAY/lB,GAAG,yBAA0BtQ,KAAKg+B,0BAC9C3H,KAAY/lB,GAAG,4BAA6BtQ,KAAKi8B,6BACjD5F,KAAY/lB,GAAG,8BAA+BtQ,KAAKm9B,+BACnD9G,KAAY/lB,GAAG,+BAAgCtQ,KAAKk9B,gCACpD7G,KAAY/lB,GAAG,+BAAgCtQ,KAAKi9B,gCACpD5G,KAAY/lB,GAAG,0BAA2BtQ,KAAK22B,2BAC/CN,KAAY/lB,GAAG,gCAAiCtQ,KAAKi6B,iCAErD9xB,IAAiBmI,GAAG,iCAAkCtQ,KAAK88B,iFAI3Dr2B,IAAU8J,eAAe,4BAA6BvQ,KAAKy9B,yBAC3Dh3B,IAAU8J,eAAe,4BAA6BvQ,KAAKy9B,yBAC3Dh3B,IAAU8J,eAAe,wBAAyBvQ,KAAKy9B,yBACvDpH,KAAY9lB,eAAe,0BAA2BvQ,KAAK67B,2BAC3DxF,KAAY9lB,eAAe,yBAA0BvQ,KAAKg+B,0BAC1D3H,KAAY9lB,eAAe,4BAA6BvQ,KAAKi8B,6BAC7D5F,KAAY9lB,eAAe,8BAA+BvQ,KAAKm9B,+BAC/D9G,KAAY9lB,eAAe,+BAAgCvQ,KAAKk9B,gCAChE7G,KAAY9lB,eAAe,+BAAgCvQ,KAAKi9B,gCAChE5G,KAAY9lB,eAAe,0BAA2BvQ,KAAK22B,2BAC3DN,KAAY9lB,eAAe,gCAAiCvQ,KAAKi6B,iCAEjE9xB,IAAiBoI,eAAe,iCAAkCvQ,KAAK88B,mEA4elE,IACG76B,EAAYjC,KAAKP,MAAjBwC,QADHq1B,EAEuCt3B,KAAKnB,MAAzCo/B,EAFH3G,EAEG2G,QAASp2B,EAFZyvB,EAEYzvB,QAASm0B,EAFrB1E,EAEqB0E,SAAUuB,EAF/BjG,EAE+BiG,IAEhCI,GAAQ,EACZ,GAAI91B,EAAS,KACDV,EAAgBU,EAAhBV,QAASjI,EAAO2I,EAAP3I,GACjBy+B,EAAQmB,aAAS33B,EAASjI,GAG9B,IAAM8vB,EAAQ6Q,aAAch4B,GACtBi4B,EAAWC,aAAYl4B,GACvBsX,EAAO6gB,aAAQn4B,GACfo4B,GAAYtC,EACZuC,GAAoBvC,EACpBwC,EAAaxC,EACbyC,EAAczC,EACd0B,EAAUr/B,KAAKq/B,QAAQx3B,EAASm0B,GAChCwD,EAAUx/B,KAAKw/B,QAAQ33B,EAASm0B,GAEtC,OACIx6B,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAAA,SACIC,UAAU,sBACV+N,IAAKnO,KAAK68B,SACVU,IAAKA,EACL8C,UAAU,EACVC,UAAU,EACVh2B,MAAO,GACPC,OAAQ,GACRg2B,UAAWvgC,KAAK6+B,cAChB2B,OAAQxgC,KAAKm/B,gBACbsB,QAASzgC,KAAKo/B,iBACdsB,aAAc1gC,KAAK2+B,iBACnBgC,QAAS3gC,KAAK0+B,mBAEjB72B,GACGrG,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAWN,EAAQe,YAAa,kBAC5CxB,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACIqa,UAAW8kB,EACXj/B,UAAW6B,EAAQk2B,WACnB1vB,MAAM,UACNhG,QAASzC,KAAKo+B,YACd58B,EAAAtB,EAAAC,cAACygC,GAAA1gC,EAAD,CAAkB03B,SAAS,WAE/Bp2B,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACIE,UAAW6B,EAAQk2B,WACnB1vB,MAAM,UACN8R,UAAWgjB,EACX96B,QAASzC,KAAKq+B,YACbJ,EAAUz8B,EAAAtB,EAAAC,cAAC0gC,GAAA3gC,EAAD,MAAgBsB,EAAAtB,EAAAC,cAAC2gC,GAAA5gC,EAAD,OAE/BsB,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACIqa,UAAWilB,EACXp/B,UAAW6B,EAAQk2B,WACnB1vB,MAAM,UACNhG,QAASzC,KAAKs+B,YACd98B,EAAAtB,EAAAC,cAAC4gC,GAAA7gC,EAAD,CAAc03B,SAAS,WAE3Bp2B,EAAAtB,EAAAC,cAAC6gC,GAAD,MACAx/B,EAAAtB,EAAAC,cAAA,OACIC,UAAU,wBACV63B,aAAcj4B,KAAKy/B,sBACnBvH,aAAcl4B,KAAK0/B,sBACnBj9B,QAASzC,KAAK2/B,kBACdn+B,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,uBACV4uB,EACAiR,GACGz+B,EAAAtB,EAAAC,cAAA,QAAM6uB,MAAO8Q,GAAb,OAEK3gB,IAVjB,OAeI3d,EAAAtB,EAAAC,cAAC8gC,GAAD,OAEJz/B,EAAAtB,EAAAC,cAAC+gC,GAAD,MACChB,GAAoB1+B,EAAAtB,EAAAC,cAACghC,GAAD,MACpBhB,GAAc3+B,EAAAtB,EAAAC,cAACihC,GAAD,MACdhB,GAAe5+B,EAAAtB,EAAAC,cAACkhC,GAAD,MAChB7/B,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CAAYE,UAAW6B,EAAQk2B,WAAY11B,QAASzC,KAAKuH,aACrD/F,EAAAtB,EAAAC,cAACyI,EAAA1I,EAAD,CAAW03B,SAAS,oBA1oBrBp3B,IAAMC,YAwpBlBqO,GALCC,YACZS,cACA1M,IA5pBW,SAAAC,GAAK,OAAAjC,OAAAkO,EAAA,EAAAlO,CAAA,CAChBq3B,WAAY,CACRlpB,QAAS,IAEVM,YAAYxM,KAwpBI,CAAEQ,WAAW,IAGrBuL,CAAQ6tB,IC7qBjB2E,sNASFC,uBAAyB,WACrB/hC,EAAK4L,kGARLqc,KAAkBnX,GAAG,6BAA8BtQ,KAAKuhC,uEAIxD9Z,KAAkBlX,eAAe,6BAA8BvQ,KAAKuhC,yDAO/D,IAAAv/B,EAC2BhC,KAAKP,MAA7BwC,EADHD,EACGC,QAASkd,EADZnd,EACYmd,KAAMoI,EADlBvlB,EACkBulB,KAEvB,OACI/lB,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,WAAYN,EAAQu/B,UAC1C,IAAI/f,KAAY,IAAPtC,GAAasiB,mBAAmB,CAACla,EAAKD,UAAW,CAAEoa,IAAK,UAAWC,MAAO,iBAlB9EnhC,IAAMC,YAiCbqO,GALCC,YACZjM,IAnCW,SAAAC,GAAK,MAAK,CACrBy+B,QAAS,CACL/4B,MAAO1F,EAAME,QAAQqG,KAAKsH,aAiCX,CAAErN,WAAW,IAChCiM,cAGWV,CAAQwyB,ICoERM,uBA7GX,SAAAA,EAAYniC,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA4hC,IACfpiC,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA8gC,GAAAx9B,KAAApE,KAAMP,KAeVoiC,uBAAyB,SAAAjyB,GACrBpQ,EAAKE,SAAS,CAAE82B,SAAUruB,IAAiB25B,iBAjB5BtiC,EAoBnBuiC,gBAAkB,SAAAt2B,GACdA,EAAME,iBACNF,EAAMyX,mBAtBS1jB,EAyBnBwiC,WAAa,SAAAv2B,GACTA,EAAME,iBACNF,EAAMyX,kBACN/a,IAAiB85B,aAAY,GAE7BziC,EAAK0iC,6BAA6Bz2B,EAAM02B,aAAaC,QA9BtC5iC,EAiCnB6iC,gBAAkB,SAAA52B,GACdA,EAAME,iBACNF,EAAMyX,kBACN/a,IAAiB85B,aAAY,IApCdziC,EAuCnB0iC,6BAA+B,SAAAE,GAC3B,GAAqB,IAAjBA,EAAMz+B,OAEV,IAAK,IAAIG,EAAI,EAAGA,EAAIs+B,EAAMz+B,OAAQG,IAAK,CACnC,IAAIw5B,EAAO8E,EAAMt+B,GACXkF,EAAU,CACZ3J,QAAS,uBACTsN,SAAU,CAAEtN,QAAS,gBAAiBmnB,KAAM8W,EAAK9W,KAAM8b,KAAMhF,IAGjE99B,EAAK+iC,eAAev5B,EAAS,SAAAzJ,GAAM,OAAIkH,IAAU+7B,WAAWjjC,EAAOyJ,QAAQ2D,SAASA,SAASzN,GAAIK,OAjDtFC,EAqDnB+iC,eArDmB,eAAAzlB,EAAAhc,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAqDF,SAAAC,EAAOuE,EAASy5B,GAAhB,IAAAttB,EAAA5V,EAAA,OAAAgF,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACP8P,EAAgBhN,IAAiBiN,YAD1B,CAAAjQ,EAAAE,KAAA,eAAAF,EAAA6B,OAAA,oBAIRgC,EAJQ,CAAA7D,EAAAE,KAAA,eAAAF,EAAA6B,OAAA,wBAAA7B,EAAAC,KAAA,EAOT+C,IAAiBu6B,sBAAjB,mCAAA7gC,OAA0EsT,IAPjEhQ,EAAAE,KAAA,EASUlG,KAAgBC,KAAK,CACpCC,QAAS,cACT8H,QAASgO,EACTtL,oBAAqB,EACrBI,sBAAuBjB,IAblB,OASLzJ,EATK4F,EAAAkB,KAkBTlH,KAAgBC,KAAK,CACjBC,QAAS,eACT8H,QAASgO,EACTtK,YAAa,CAACtL,EAAOL,MAGzBujC,EAASljC,GAxBA4F,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAw9B,GAAAx9B,EAAA,SA0BTy9B,MAAM,qBAAuBC,KAAKC,UAAL39B,EAAAw9B,KA1BpB,yBAAAx9B,EAAAyB,SAAAnC,EAAA,kBArDE,gBAAAsY,EAAAgmB,GAAA,OAAAjmB,EAAA5b,MAAAlB,KAAAmB,YAAA,GAGf3B,EAAKX,MAAQ,CACT23B,SAAUruB,IAAiB25B,eAJhBtiC,mFASf2I,IAAiBmI,GAAG,uBAAwBtQ,KAAK6hC,uEAIjD15B,IAAiBoI,eAAe,uBAAwBvQ,KAAK6hC,yDAsExD,IACGrL,EAAax2B,KAAKnB,MAAlB23B,SAER,OACIh1B,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACK0gB,GACGh1B,EAAAtB,EAAAC,cAAA,OACIC,UAAU,oBACV4iC,YAAahjC,KAAK+hC,gBAClBkB,YAAajjC,KAAKqiC,gBAClBa,OAAQljC,KAAKgiC,YACbxgC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,6BACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,0BACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,2BAAf,mBACAoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,8BAAf,+CAlGFI,IAAMC,kDCoDpC,IAwBM0iC,8MACFtkC,MAAQ,CACJukC,SAAU,QAGdC,eAAiB,SAAAhI,GACb77B,EAAKE,SAAS,CACV0jC,SAAU/H,OAIlBiI,YAAc,SAAA73B,GACVA,EAAMyX,kBADa,IAGXqgB,EAAgB/jC,EAAKC,MAArB8jC,YACR,IAAKA,EAAa,OAAO,KAJN,IAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrBtkB,EAAmBskB,EAAnBtkB,eAER3G,aAAS2G,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAA+B,IACxB/X,EAAwBq8B,EAAxBr8B,QAASC,EAAeo8B,EAAfp8B,WAEjBiR,aAASlR,EAASC,6EAMrB,IAAApF,EAC+BhC,KAAKP,MAAjCkI,EADH3F,EACG2F,EAAG1F,EADND,EACMC,QAASshC,EADfvhC,EACeuhC,YACZH,EAAapjC,KAAKnB,MAAlBukC,SAEFpU,EAAQyU,aAAgBF,EAAa57B,GACrC+7B,EAAUC,aAAsBJ,GAClC/hC,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACKnO,EAAE,cACHnG,EAAAtB,EAAAC,cAAA,QAAMC,UAAW6B,EAAQ2hC,MAAOz1B,IAAKnO,KAAKqjC,kBAG9C,GAGJ,OACI7hC,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,iBAAkBN,EAAQ4hC,aAAc,YAAnE,GAAAhiC,OACQ8F,EAAE,oBADV,MAAA9F,OACkC8F,EAAE,QADpC,KAEInG,EAAAtB,EAAAC,cAAC2jC,GAAA5jC,EAAD,CACI8uB,MAAO0U,EACPzhC,QAAS,CAAE8hC,OAAQ9hC,EAAQ+hC,YAAaN,QAASzhC,EAAQyhC,SACzDO,YAAa,CACTC,cAAe,CACXC,UAAW,CACPP,MAAO,CACHQ,QAASlkB,QAAQkjB,GACjBiB,QAASjB,MAKzBkB,UAAU,OACV9iC,EAAAtB,EAAAC,cAAA,KAAGsC,QAASzC,KAAKsjC,aAActU,YArE7BxuB,IAAMC,WAqFbqO,GALCC,YACZjM,IAzGW,SAAAC,GAAK,MAAK,CACrB8gC,aAAc,CACVp7B,MAAO1F,EAAME,QAAQC,QAAQC,MAEjC6gC,aAnDoBv7B,EAmDQ1F,EAAME,QAAQ8c,KAAK,KAlDxC,CACHwkB,kCAAmC,CAC/BxiB,IAAK,EACLyiB,KAAM,EACNnM,UAAW,UACX/tB,MAAO,MACPC,OAAQ,MACRk6B,YAAa,CACTnM,YAAa,gBACbt1B,YAAW,2BAAAnB,OAA6B4G,EAA7B,kBAGnBi8B,+BAAgC,CAC5B/mB,OAAQ,EACR6mB,KAAM,EACNG,aAAc,UACdr6B,MAAO,MACPC,OAAQ,MACRk6B,YAAa,CACTnM,YAAa,gBACbt1B,YAAW,GAAAnB,OAAK4G,EAAL,0CAGnBm8B,iCAAkC,CAC9BJ,KAAM,EACNK,WAAY,UACZt6B,OAAQ,MACRD,MAAO,MACPm6B,YAAa,CACTnM,YAAa,gBACbt1B,YAAW,eAAAnB,OAAiB4G,EAAjB,8BAGnBq8B,gCAAiC,CAC7BpnB,MAAO,EACPqnB,YAAa,UACbx6B,OAAQ,MACRD,MAAO,MACPm6B,YAAa,CACTnM,YAAa,gBACbt1B,YAAW,uCAAAnB,OAAyC4G,OAWhEm7B,MAAO,CACHt0B,SAAU,WACVsoB,SAAU,EACVttB,MAAO,MACPC,OAAQ,MACRk6B,YAAa,CACTz7B,QAAS,KACT4K,OAAQ,OACRvE,QAAS,QACT/E,MAAO,EACPC,OAAQ,EACRgF,YAAa,UAGrBm0B,QAAS,CACL9vB,OAAQ,iBAnEhB,IAAwBnL,GAwJD,CAAElF,WAAW,IAChCiM,cAGWV,CAAQq0B,ICzGR6B,uBAvDX,SAAAA,EAAYvlC,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAglC,IACfxlC,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAkkC,GAAA5gC,KAAApE,KAAMP,KACDwlC,wBAA0BzlC,EAAKylC,wBAAwBC,KAA7BpkC,OAAAqoB,GAAA,EAAAroB,QAAAqoB,GAAA,EAAAroB,CAAAtB,KAC/BA,EAAK2lC,2BAA6B3lC,EAAK2lC,2BAA2BD,KAAhCpkC,OAAAqoB,GAAA,EAAAroB,QAAAqoB,GAAA,EAAAroB,CAAAtB,KAElCA,EAAKX,MAAQ,CACTumC,aAAc3lC,EAAM2lC,aACpBC,QAAQ,GAPG7lC,mFAYfsJ,IAAawH,GAAG,0BAA2BtQ,KAAKilC,yBAChDn8B,IAAawH,GAAG,6BAA8BtQ,KAAKilC,yBAEnD3zB,KAAUhB,GAAG,uBAAwBtQ,KAAKmlC,4EAGtBG,GAChBtlC,KAAKP,MAAMqf,YAAcwmB,EAAQC,gBAAkBD,EAAQz9B,UAC3D7H,KAAKwlC,aAAeF,EAAQz9B,QAAQ3I,GACpCc,KAAKN,SAAS,CAAE0lC,aAAcE,EAAQz9B,QAAQ49B,oEAI3BH,GAEnBtlC,KAAKP,MAAMyC,SAAWojC,EAAQn+B,UAC5BnH,KAAKP,MAAM+lC,cAAgBxlC,KAAKP,MAAM+lC,cAAgBF,EAAQI,6BAC5D1lC,KAAKP,MAAMqf,WAAawmB,EAAQI,8BAEpC1lC,KAAKN,SAAS,CAAE0lC,aAAc,KAAMC,QAAQ,mDAKhDv8B,IAAayH,eAAe,0BAA2BvQ,KAAKilC,yBAC5Dn8B,IAAayH,eAAe,6BAA8BvQ,KAAKilC,yBAE/D3zB,KAAUf,eAAe,uBAAwBvQ,KAAKmlC,6DAItD,IAAIQ,EAAiB,yBAQrB,OAPI3lC,KAAKnB,MAAMumC,eACXO,EACyC,8BAArC3lC,KAAKnB,MAAMumC,aAAa,SAClB,uBACA,yBAGPplC,KAAKnB,MAAMwmC,QAAU7jC,EAAAtB,EAAAC,cAAA,KAAGC,UAAWmC,IAAW,qBAAsBojC,YApDvDnlC,IAAMC,4BCYnBqC,WAbA,SAAAC,GAAK,MAAK,CACrB6iC,gBAAiB,CACbviC,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQ8c,KAAK,KAAO,UACtEtX,MAA8B,SAAvB1F,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQqG,KAAKpG,QAAU,aAU7DJ,CANf,SAAyBrD,GAAO,IACpBwC,EAAYxC,EAAZwC,QAER,OAAOT,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,mBAAoBN,EAAQ2jC,kBAAvD,qGCQLC,sNACFpmB,WAAa,WAAM,IAAAzd,EACwExC,EAAKC,MAApFwC,EADOD,EACPC,QAASC,EADFF,EACEE,OAAQ4c,EADV9c,EACU8c,UAAWzU,EADrBrI,EACqBqI,KAAmBy7B,GADxC9jC,EAC2B1B,YAD3B0B,EACwC8jC,kBAAkBpJ,EAD1D16B,EAC0D06B,UAEnE70B,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GACzC,IAAKjX,EAAS,OAAO,KAJN,IAMPmB,EAAYnB,EAAZmB,QACR,IAAKA,EAAS,OAAO,KAPN,IASP00B,EAAa10B,EAAb00B,SACR,IAAKA,EAAU,OAAO,KAVP,IAaXqI,EAaArI,EAbAqI,UACA/W,EAYA0O,EAZA1O,MACAgX,EAWAtI,EAXAsI,YAEA/8B,GASAy0B,EAVAuI,IAUAvI,EATAz0B,OACAi9B,EAQAxI,EARAwI,UACAnI,EAOAL,EAPAK,MACAJ,EAMAD,EANAC,MACAhxB,EAKA+wB,EALA/wB,SACAixB,EAIAF,EAJAE,WACAC,EAGAH,EAHAG,WACA5+B,EAEAy+B,EAFAz+B,QACAsS,EACAmsB,EADAnsB,KAGJ,GAAItS,EACA,OACIuC,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACKiwB,GACGvkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,qBAAsBN,EAAQkkC,kBAAmBJ,GAE/E/W,GAASxtB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4uB,GAC1CgX,GAAexkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB4lC,GACvDxkC,EAAAtB,EAAAC,cAACimC,GAAA,EAAD,CAASlkC,OAAQA,EAAQ4c,UAAWA,EAAW7f,QAASA,EAASy9B,UAAWA,KAKxF,GAAIkB,EACA,OACIp8B,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACKiwB,GACGvkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,qBAAsBN,EAAQkkC,kBAAmBJ,GAE/E/W,GAASxtB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4uB,GAC1CgX,GAAexkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB4lC,GACvDxkC,EAAAtB,EAAAC,cAACkmC,GAAA,EAAD,CAAWnkC,OAAQA,EAAQ4c,UAAWA,EAAWwnB,UAAW1I,EAAYlB,UAAWA,KAK/F,GAAImB,EACA,OACIr8B,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACKiwB,GACGvkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,qBAAsBN,EAAQkkC,kBAAmBJ,GAE/E/W,GAASxtB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4uB,GAC1CgX,GAAexkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB4lC,GACvDxkC,EAAAtB,EAAAC,cAAComC,GAAA,EAAD,CAAWrkC,OAAQA,EAAQ4c,UAAWA,EAAW0nB,UAAW3I,EAAYnB,UAAWA,KAK/F,GAAIiB,EACA,OACIn8B,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACKiwB,GACGvkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,qBAAsBN,EAAQkkC,kBAAmBJ,GAE/E/W,GAASxtB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4uB,GAC1CgX,GAAexkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB4lC,GACvDxkC,EAAAtB,EAAAC,cAACsmC,GAAA,EAAD,CAAOvkC,OAAQA,EAAQ4c,UAAWA,EAAW6e,MAAOA,EAAOjB,UAAWA,KAKlF,GAAI/vB,EACA,OACInL,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACKiwB,GACGvkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,qBAAsBN,EAAQkkC,kBAAmBJ,GAE/E/W,GAASxtB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4uB,GAC1CgX,GAAexkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB4lC,GACvDxkC,EAAAtB,EAAAC,cAACumC,GAAA,EAAD,CAAUxkC,OAAQA,EAAQ4c,UAAWA,EAAWnS,SAAUA,EAAU+vB,UAAWA,KAK3F,GAAIwJ,IACqB3H,YAAO2H,EAAUA,YAClBA,EAAU17B,WAC1B,OACIhJ,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACKiwB,GACGvkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,qBAAsBN,EAAQkkC,kBAAmBJ,GAE/E/W,GAASxtB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4uB,GAC1CgX,GAAexkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB4lC,GACvDxkC,EAAAtB,EAAAC,cAACwmC,GAAA,EAAD,CAAWzkC,OAAQA,EAAQ4c,UAAWA,EAAWonB,UAAWA,EAAWxJ,UAAWA,KAMlG,GAAIqB,GACIA,EAAMvzB,UACN,OACIhJ,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACKiwB,GACGvkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,qBAAsBN,EAAQkkC,kBAAmBJ,GAE/E/W,GAASxtB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4uB,GAC1CgX,GAAexkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB4lC,GACvDxkC,EAAAtB,EAAAC,cAACymC,GAAA,EAAD,CAAO1kC,OAAQA,EAAQ4c,UAAWA,EAAWif,MAAOA,EAAOrB,UAAWA,KAMtF,GAAIzzB,EAAO,CACP,IAAMI,EAAYw9B,aAAQ59B,EAAMC,MAAOmB,GACjCy8B,GACQ,YAATv1B,GAA+B,UAATA,KACtBw0B,GAAa/W,GAASgX,IACvB38B,GACAA,EAAUiB,QAAUjB,EAAUkB,OAE5ByP,EAAQ8sB,EACR,CACIC,MAAO,QACPlC,WAAY,EACZF,aAAc,GAElB,GACN,OACInjC,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACKgxB,GACGtlC,EAAAtB,EAAAC,cAAC6mC,GAAA,EAAD,CACI1mC,YAAawlC,EACb9rB,MAAOA,EACP9X,OAAQA,EACR4c,UAAWA,EACX7V,MAAOA,EACPyzB,UAAWA,IAGlBqJ,GACGvkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,qBAAsBN,EAAQkkC,kBAAmBJ,GAE/E/W,GAASxtB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4uB,GAC1CgX,GAAexkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB4lC,IACrDc,GAActlC,EAAAtB,EAAAC,cAAC6mC,GAAA,EAAD,CAAO9kC,OAAQA,EAAQ4c,UAAWA,EAAW7V,MAAOA,EAAOyzB,UAAWA,KAKlG,OACIl7B,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACKiwB,GACGvkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,qBAAsBN,EAAQkkC,kBAAmBJ,GAE/E/W,GAASxtB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4uB,GAC1CgX,GAAexkC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB4lC,6EAK1D,IACG/jC,EAAYjC,KAAKP,MAAjBwC,QAER,OACIT,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,YACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,kBAAmBN,EAAQglC,yBACtDzlC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,oBAAoBJ,KAAKyf,sBAnLlCjf,IAAMC,YAkM5BolC,GAAQzyB,aAAe,CACnB/I,KAAM68B,IACN5mC,YAAa6mC,IACbrB,iBAAkBsB,KAGPtkC,WA5MA,SAAAC,GAAK,OAAAjC,OAAAkO,EAAA,EAAAlO,CAAA,GACbumC,YAAatkC,KA2MLD,CAAmB+iC,IC/K5ByB,uBACF,SAAAA,EAAY7nC,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAsnC,IACf9nC,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAwmC,GAAAljC,KAAApE,KAAMP,KAoFV8nC,6BAA+B,SAAA33B,GACtBpQ,EAAKX,MAAMsD,UAEhB3C,EAAKE,SAAS,CAAEyC,UAAU,KAxFX3C,EA2FnBgoC,iCAAmC,SAAA53B,GAAU,IAAA5N,EACXxC,EAAKC,MAA3ByC,EADiCF,EACjCE,OAAQ4c,EADyB9c,EACzB8c,UADyBjT,EAEPrM,EAAKX,MAA/BsD,EAFiC0J,EAEjC1J,SAAUslC,EAFuB57B,EAEvB47B,YAEdtlC,IAEAD,IAAW0N,EAAO1N,QAAU4c,IAAclP,EAAOkP,UAC7C2oB,EACAjoC,EAAKE,SAAS,CAAE+nC,aAAa,GAAS,WAClCr6B,WAAW,WACP5N,EAAKE,SAAS,CAAE+nC,aAAa,KAC9B,KAGPjoC,EAAKE,SAAS,CAAE+nC,aAAa,IAE1BA,GACPjoC,EAAKE,SAAS,CAAE+nC,aAAa,MA5GlBjoC,EAgHnBq1B,8BAAgC,SAAAjlB,GAAU,IAAA3H,EACRzI,EAAKC,MAA3ByC,EAD8B+F,EAC9B/F,OAAQ4c,EADsB7W,EACtB6W,UACR3c,EAAayN,EAAbzN,SAEJD,IAAW0N,EAAO1N,QAAU4c,IAAclP,EAAOkP,WACjDtf,EAAKE,SAAS,CAAEyC,WAAUslC,aAAa,KArH5BjoC,EAyHnBkoC,sBAAwB,SAAA93B,GAAU,IACtBzI,EAAwByI,EAAxBzI,QAASC,EAAewI,EAAfxI,WADagC,EAEA5J,EAAKC,MAA3ByC,EAFsBkH,EAEtBlH,OAAQ4c,EAFc1V,EAEd0V,UAEZ5c,IAAWiF,GAAW2X,IAAc1X,GACpC5H,EAAK4L,eA9HM5L,EAkInBmoC,qBAAuB,SAAA/3B,GAAU,IACrBzI,EAAwByI,EAAxBzI,QAASC,EAAewI,EAAfxI,WADYoG,EAEChO,EAAKC,MAA3ByC,EAFqBsL,EAErBtL,OAAQ4c,EAFatR,EAEbsR,UAEZ5c,IAAWiF,GAAW2X,IAAc1X,GACpC5H,EAAK4L,eAvIM5L,EA2InBooC,uBAAyB,SAAAh4B,GAAU,IACvBzI,EAAwByI,EAAxBzI,QAASC,EAAewI,EAAfxI,WADcgR,EAED5Y,EAAKC,MAA3ByC,EAFuBkW,EAEvBlW,OAAQ4c,EAFe1G,EAEf0G,UACR+oB,EAAiBroC,EAAKX,MAAtBgpC,aAEJ3lC,IAAWiF,IACX2X,IAAc1X,IAEM0gC,aAAgB5lC,EAAQ4c,KACxB+oB,EACpBroC,EAAKE,SAAS,CAAEmoC,aAAcC,aAAgB5lC,EAAQ4c,KAEtDtf,EAAK4L,iBAvJM5L,EA2JnBqd,iBAAmB,SAAAhN,GACf0I,aAAS1I,GAAQ,IA5JFrQ,EA+JnBmX,iBAAmB,SAAAzU,GACfmW,aAASnW,EAAQ,MAAM,IAhKR1C,EAmKnBuoC,gBAAkB,WACd,GAAKvoC,EAAKwoC,YAEQlc,OAAOmc,eAAeC,WACxC,CAJoB,IAAArvB,EAMUrZ,EAAKC,MAA3ByC,EANY2W,EAMZ3W,OAAQ4c,EANIjG,EAMJiG,UAEV3c,GAAY2G,IAAa8oB,cAAc7tB,IAA3B,UAAAlC,OAAyCK,EAAzC,eAAAL,OAA6Did,IAC/EqpB,aAAcjmC,EAAQ4c,EAAW3c,KA5KlB3C,EA+KnB4oC,gBAAkB,SAAAhiC,GACdA,EAAEuF,iBACFvF,EAAE8c,kBAFiB,IAAApK,EAIWtZ,EAAKC,MAA3ByC,EAJW4W,EAIX5W,OAAQ4c,EAJGhG,EAIHgG,UAEVjX,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GAEpB1S,YAAgBlK,GAEjC/C,KAAgBqI,aAAa,CACzBnI,QAAS,oBACT6C,OAAQA,EACR4c,UAAWA,IAKIjX,GAAWA,EAAQkB,kBAEtC5J,KAAgBqI,aAAa,CACzBnI,QAAS,sBACToI,KAAM,CACFvF,OAAQA,EACR4E,WAAY,CAACgY,OAvMVtf,EA6MnBk9B,UAAY,SAAAjxB,GACJA,IACAA,EAAME,iBACNF,EAAMyX,mBAHO,IAAAmlB,EAMa7oC,EAAKC,MAA3ByC,EANSmmC,EAMTnmC,OAAQ4c,EANCupB,EAMDvpB,UAEhB4d,aAAUx6B,EAAQ4c,IArNHtf,EAwNnB8oC,mBAAqB,WACjB9oC,EAAKE,SAAS,CAAE+nC,aAAa,KAzNdjoC,EA4NnB+oC,gBAAkB,WACd/oC,EAAKwoC,WAAY,GA7NFxoC,EAgOnBgpC,gBAAkB,WACdhpC,EAAKwoC,WAAY,GAjOFxoC,EAoOnBipC,eAAiB,WACbjpC,EAAKkpC,UAAW,GArODlpC,EAwOnBmpC,iBAAmB,WAAM,IAAAC,EACSppC,EAAKC,MAA3ByC,EADa0mC,EACb1mC,OAAQ4c,EADK8pB,EACL9pB,UAChB+pB,aAAU3mC,EAAQ4c,IA1OH,IAAAgqB,EAGetpC,EAAKC,MAA3ByC,EAHO4mC,EAGP5mC,OAAQ4c,EAHDgqB,EAGChqB,UAHD,OAYXtf,EAAKX,MAAQ,CACTgpC,aAAcC,aAAgB5lC,EAAQ4c,GACtC3c,UAAU,EACVslC,aAAa,GAfNjoC,qFAoBG4Q,EAAWC,GAAW,IAAA04B,EAC2C/oC,KAAKP,MAAhFsD,EADgCgmC,EAChChmC,MAAOb,EADyB6mC,EACzB7mC,OAAQ4c,EADiBiqB,EACjBjqB,UAAWsmB,EADM2D,EACN3D,aAAc4D,EADRD,EACQC,oBAAqBC,EAD7BF,EAC6BE,UAD7Bx7B,EAEqBzN,KAAKnB,MAA1DqqC,EAFgCz7B,EAEhCy7B,YAAa/mC,EAFmBsL,EAEnBtL,SAAUslC,EAFSh6B,EAETg6B,YAAaI,EAFJp6B,EAEIo6B,aAE5C,OAAIz3B,EAAUrN,QAAUA,IAIpBqN,EAAUlO,SAAWA,IAIrBkO,EAAU0O,YAAcA,IAIxB1O,EAAUg1B,eAAiBA,IAI3Bh1B,EAAU44B,sBAAwBA,IAIlC54B,EAAU64B,YAAcA,IAIxB54B,EAAU64B,cAAgBA,IAI1B74B,EAAUlO,WAAaA,IAIvBkO,EAAUo3B,cAAgBA,GAI1Bp3B,EAAUw3B,eAAiBA,sDAQ/B/+B,IAAawH,GAAG,iCAAkCtQ,KAAKwnC,kCACvD1+B,IAAawH,GAAG,8BAA+BtQ,KAAK60B,+BACpD/rB,IAAawH,GAAG,6BAA8BtQ,KAAKunC,8BACnDz+B,IAAawH,GAAG,uBAAwBtQ,KAAK4nC,wBAC7C9+B,IAAawH,GAAG,sBAAuBtQ,KAAK0nC,uBAC5C5+B,IAAawH,GAAG,qBAAsBtQ,KAAK2nC,qEAI3C7+B,IAAayH,eAAe,iCAAkCvQ,KAAKwnC,kCACnE1+B,IAAayH,eAAe,8BAA+BvQ,KAAK60B,+BAChE/rB,IAAayH,eAAe,6BAA8BvQ,KAAKunC,8BAC/Dz+B,IAAayH,eAAe,uBAAwBvQ,KAAK4nC,wBACzD9+B,IAAayH,eAAe,sBAAuBvQ,KAAK0nC,uBACxD5+B,IAAayH,eAAe,qBAAsBvQ,KAAK2nC,uDA2JlD,IAAA3pB,EAAAmrB,EACqEnpC,KAAKP,MAAvEkI,EADHwhC,EACGxhC,EAAG1F,EADNknC,EACMlnC,QAASC,EADfinC,EACejnC,OAAQ4c,EADvBqqB,EACuBrqB,UAAWkqB,EADlCG,EACkCH,oBAAqBC,EADvDE,EACuDF,UADvD3R,EAE2Ct3B,KAAKnB,MAA7CgpC,EAFHvQ,EAEGuQ,aAAc1lC,EAFjBm1B,EAEiBn1B,SAAUslC,EAF3BnQ,EAE2BmQ,YAE1B5/B,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GACzC,IAAKjX,EAAS,OAAOrG,EAAAtB,EAAAC,cAAA,8BALhB,IAOGslC,EAAuF59B,EAAvF49B,cAAe2D,EAAwEvhC,EAAxEuhC,MAAOC,EAAiExhC,EAAjEwhC,UAAWx/B,EAAsDhC,EAAtDgC,oBAAqBy/B,EAAiCzhC,EAAjCyhC,aAAcpqB,EAAmBrX,EAAnBqX,eAEtE5V,EAAOigC,aAAQ1hC,GACf2hC,EAAUC,aAAW5hC,GACrBsX,EAAO6gB,aAAQn4B,GACfi4B,EAAWC,aAAYl4B,GACvB6hC,EAAQjN,aAAS50B,EAAS7H,KAAK08B,WACrC18B,KAAKqlC,OAASsE,aAAU9hC,GAExB,IAAI6X,EAAO,KACPupB,IACAvpB,EAAOR,EACH1d,EAAAtB,EAAAC,cAAC+Q,GAAA,EAAD,CAAUrB,OAAQqP,EAAgB9c,SAAUpC,KAAK6c,mBAEjDrb,EAAAtB,EAAAC,cAACuC,EAAA,EAAD,CAAUR,OAAQA,EAAQE,SAAUpC,KAAK2W,oBAIjD,IAAMizB,EAAmBrnC,IAAW,UAAWN,EAAQ4F,SAApBmW,EAAA,CAC/B6rB,mBAAoB1nC,GADWrB,OAAA2P,GAAA,EAAA3P,CAAAkd,EAE9B/b,EAAQ6nC,gBAAkB3nC,GAFIrB,OAAA2P,GAAA,EAAA3P,CAAAkd,EAG9B/b,EAAQ8nC,mBAAqBtC,IAAgBtlC,GAHfrB,OAAA2P,GAAA,EAAA3P,CAAAkd,EAI/B,0BAA2BirB,GAJIjrB,IAO7BgsB,EACFxoC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gBACXoB,EAAAtB,EAAAC,cAAA,oBACCipC,EAAQ,GACL5nC,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAAA,KAAGC,UAAU,uBACboB,EAAAtB,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,OAEKgpC,EAFL,cAOPC,EAAY,GAAK7nC,EAAAtB,EAAAC,cAAA,YAAOwH,EAAE,iBAAT,QAClBnG,EAAAtB,EAAAC,cAAA,KAAGC,UAAU,eAAeqC,QAASzC,KAAKooC,iBACtC5mC,EAAAtB,EAAAC,cAAA,QAAM6uB,MAAO8Q,GAAW3gB,KAKpC,OACI3d,EAAAtB,EAAAC,cAAA,OACIC,UAAWwpC,EACXK,YAAajqC,KAAKwoC,gBAClB0B,WAAYlqC,KAAKyoC,eACjBvjB,YAAallB,KAAKuoC,gBAClB9lC,QAASzC,KAAK+nC,gBACdoC,eAAgBnqC,KAAKsoC,oBACpBU,GAAuBxnC,EAAAtB,EAAAC,cAACiqC,GAAD,MACxB5oC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,mBACXoB,EAAAtB,EAAAC,cAAA,KAAGC,UAAU,wBACZJ,KAAKqlC,QACF7jC,EAAAtB,EAAAC,cAACkqC,GAAD,CAAenoC,OAAQA,EAAQ4c,UAAWA,EAAWsmB,aAAcK,IAEtE/lB,EACDle,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,mBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,iBACV6oC,IAAcK,GACX9nC,EAAAtB,EAAAC,cAACmqC,GAAA,EAAD,CAAepoC,OAAQA,EAAQmW,UAAQ,EAACxI,OAAQqP,EAAgB3G,UAAQ,IAE3E+wB,GAAgB9nC,EAAAtB,EAAAC,cAACoqC,GAAD,CAAShH,YAAa+F,IACtCL,GAAae,GAEjB9pB,QAAQrW,IACLrI,EAAAtB,EAAAC,cAACqqC,GAAA,EAAD,CAAOtoC,OAAQA,EAAQ4c,UAAWjV,EAAqBpH,QAASzC,KAAK2oC,mBAExEe,EACDloC,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IAAW,eAAgB,CAClCkoC,sBAAwC,IAAjB5C,EACvB6C,sBAAwC,IAAjB7C,EACvB8C,sBAAwC,IAAjB9C,KAE1Bv+B,GAEJkgC,GAAWhoC,EAAAtB,EAAAC,cAACyqC,GAAD,CAAS1oC,OAAQA,EAAQ4c,UAAWA,EAAW4d,UAAW18B,KAAK08B,cAE7EuM,GAAae,WAvUbvpC,cAmVPqO,GALCC,YACZjM,IAlWW,SAAAC,GAAK,MAAK,CACrB8E,QAAS,CACL4W,gBAAiB,eAErBosB,mBAAoB,CAChBpiC,MAAO1F,EAAME,QAAQC,QAAQC,MAEjC2mC,gBAAiB,CACbrrB,gBAAiB1b,EAAME,QAAQC,QAAQC,KAAO,MAElD2nC,yBAA0B,CACtBC,KAAM,CAAEtsB,gBAAiB1b,EAAME,QAAQC,QAAQC,KAAO,MACtD6nC,GAAI,CAAEvsB,gBAAiB,gBAE3BsrB,mBAAoB,CAChB7D,UAAW,6BAmVI,CAAE3iC,WAAW,IAChCiM,cAGWV,CAAQw4B,cC1VjB2D,uBACF,SAAAA,EAAYxrC,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAirC,IACfzrC,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAmqC,GAAA7mC,KAAApE,KAAMP,KAgDVyrC,gCAAkC,SAAAt7B,GAAU,IAChC1N,EAAuB0N,EAAvB1N,OAAQipC,EAAev7B,EAAfu7B,WAEZ3rC,EAAKC,MAAMyC,SAAWA,GAE1B1C,EAAKE,SAAS,CAAEyrC,gBAtDD3rC,EAyDnB4rC,0BAA4B,SAAAx7B,GAAU,IAC1BzI,EAA+ByI,EAA/BzI,QAASkkC,EAAsBz7B,EAAtBy7B,kBACE7rC,EAAKC,MAAhByC,SAEOiF,GAEf3H,EAAKE,SAAS,CAAEof,UAAWusB,KA/DZ7rC,EAkEnB6E,YAAc,WAAM,IACRnC,EAAW1C,EAAKC,MAAhByC,OACA4c,EAActf,EAAKX,MAAnBigB,UAEH5c,IACA4c,IAEWhW,IAAa9E,IAAI9B,EAAQ4c,IAGzC3f,KAAgBC,KAAK,CACjBC,QAAS,aACT8H,QAASjF,EACTkF,WAAY0X,IAEXxf,KAAK,SAAAC,GACFuJ,IAAamC,IAAI1L,GAEjB,IAAM0F,EAAQwB,IAAUC,WACxB4kC,YAAoBrmC,EAAO,CAAC1F,IAE5BC,EAAK4L,gBAERjF,MAAM,SAAA0c,GACH,IAAM0oB,EAAiB,CACnBlsC,QAAS,iBACT8H,QAASjF,EACThD,GAAI4f,EACJ9V,QAAS,MAEbF,IAAamC,IAAIsgC,GACjB/rC,EAAK4L,mBAjGE5L,EAoInBuR,YAAc,SAAAtF,GAAS,IACXvJ,EAAW1C,EAAKC,MAAhByC,OACA4c,EAActf,EAAKX,MAAnBigB,UAEHA,GAELzG,aAASnW,EAAQ4c,IA1IFtf,EA6InB4xB,aA7ImB,eAAAtU,EAAAhc,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KA6IJ,SAAAC,EAAMgH,GAAN,IAAAvJ,EAAA4c,EAAAwjB,EAAA,OAAA/9B,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACXoG,EAAME,iBACNF,EAAMyX,kBAEEhhB,EAAW1C,EAAKC,MAAhByC,OACA4c,EAActf,EAAKX,MAAnBigB,WAEO0sB,YAAetpC,GAPnB,CAAAiD,EAAAE,KAAA,QASP7F,EAAKE,SAAS,CAAE+rC,SAAS,IATlBtmC,EAAAE,KAAA,uBAWDi9B,EAAOhxB,KAAUo6B,cAAcxpC,GAX9BiD,EAAAE,KAAA,GAYDlG,KAAgBqI,aAAa,CAC/BnI,QAAS,gCACT6C,OAAQA,EACRipC,WAAYrqC,OAAOsuB,OAAO,GAAIkT,EAAM,CAAEqJ,oBAAqB7sB,MAfxD,yBAAA3Z,EAAAyB,SAAAnC,MA7II,gBAAAsY,GAAA,OAAAD,EAAA5b,MAAAlB,KAAAmB,YAAA,GAAA3B,EAiKnBosC,YAjKmB9qC,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAiKL,SAAAqC,IAAA,IAAA3E,EAAA,OAAAqC,EAAArE,EAAAgF,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OACFnD,EAAW1C,EAAKC,MAAhByC,OAER1C,EAAK+H,cAELpI,KAAgBC,KAAK,CACjBC,QAAS,mBACT8H,QAASjF,IAPH,wBAAA6E,EAAAH,SAAAC,MAjKKrH,EA4KnB+H,YAAc,WACV/H,EAAKE,SAAS,CAAE+rC,SAAS,KA1KzB,IAAMp6B,EAAOC,KAAUtN,IAAIvE,EAAMyC,QAHlB,OAIf1C,EAAKX,MAAQ,CACTqlB,gBAAiBzkB,EAAMyC,OACvBipC,WAAY75B,KAAUo6B,cAAcjsC,EAAMyC,QAC1C4c,UAAWzN,GAAQA,EAAKg6B,kBAAoBh6B,EAAKg6B,kBAAoB,EACrEI,SAAS,GAREjsC,kFA6BAK,EAAWC,EAAWC,GAAU,IACvC+e,EAAc9e,KAAKnB,MAAnBigB,UAEJA,GAAahf,EAAUgf,YAAcA,GACrC9e,KAAKqE,0DAKTrE,KAAKqE,cAELiN,KAAUhB,GAAG,0BAA2BtQ,KAAKorC,2BAC7C95B,KAAUhB,GAAG,gCAAiCtQ,KAAKkrC,gFAInD55B,KAAUf,eAAe,0BAA2BvQ,KAAKorC,2BACzD95B,KAAUf,eAAe,gCAAiCvQ,KAAKkrC,+EAuD7C96B,EAAWC,EAAWid,GAAa,IAAAtrB,EACxBhC,KAAKP,MAA1ByC,EAD6CF,EAC7CE,OAAQyF,EADqC3F,EACrC2F,EAAG5E,EADkCf,EAClCe,MADkC8I,EAEV7L,KAAKnB,MAAxCssC,EAF6Ct/B,EAE7Cs/B,WAAYM,EAFiC5/B,EAEjC4/B,QAAS3sB,EAFwBjT,EAExBiT,UAE7B,OAAI1O,EAAUzI,IAAMA,IAIhByI,EAAUrN,QAAUA,IAIpBqN,EAAUlO,SAAWA,IAIrBmO,EAAU86B,aAAeA,IAIzB96B,EAAUo7B,UAAYA,GAItBp7B,EAAUyO,YAAcA,uCAmDvB,IAAA7W,EAC0BjI,KAAKP,MAA5ByC,EADH+F,EACG/F,OAAQD,EADXgG,EACWhG,QAAS0F,EADpBM,EACoBN,EADpB8F,EAE0BzN,KAAKnB,MAA5BigB,EAFHrR,EAEGqR,UAAW2sB,EAFdh+B,EAEcg+B,QAEnB,IAAKvpC,EAAQ,OAAO,KAGpB,GADgCoP,KAAUo6B,cAAcxpC,GAAhDypC,sBACoB7sB,EAAW,OAAO,KAE9C,IAAMjX,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GACzC,IAAKjX,EAAS,OAAO,KAErB,IAAImB,EAAWnB,EAAyB4X,aAAW5X,EAASF,GAAnCA,EAAE,WACrB0B,EAAYwiC,aAAkB3pC,EAAQ4c,GAM5C,OAJIgtB,aAAiBjkC,KACjBmB,EAAUrB,EAAE,mBAIZnG,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IAAW,iBAAkBN,EAAQ8pC,cAAe9pC,EAAQe,aACvEP,QAASzC,KAAK+Q,aACdvP,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,0BACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,eAAgBN,EAAQglC,yBAClD59B,GAAa7H,EAAAtB,EAAAC,cAAC6rC,GAAA,EAAD,CAAW9pC,OAAQA,EAAQ4c,UAAWA,EAAWzV,UAAWA,IAC1E7H,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,0BACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,+BAAgCN,EAAQkkC,kBAC9Dx+B,EAAE,kBAEPnG,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IACP,kCACAN,EAAQgqC,+BAEXjjC,IAGTxH,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gCACXoB,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CAAYE,UAAW6B,EAAQk2B,WAAY11B,QAASzC,KAAKoxB,cACrD5vB,EAAAtB,EAAAC,cAACyI,EAAA1I,EAAD,UAKfurC,GACGjqC,EAAAtB,EAAAC,cAACyN,EAAA1N,EAAD,CACI+lB,mBAAoB,EACpBpY,MAAI,EACJC,QAAS9N,KAAKuH,YACdwG,kBAAgB,8BAChBvM,EAAAtB,EAAAC,cAAC+N,EAAAhO,EAAD,CAAahB,GAAG,8BAA8ByI,EAAE,YAChDnG,EAAAtB,EAAAC,cAAC+lB,GAAAhmB,EAAD,KACIsB,EAAAtB,EAAAC,cAACkvB,GAAAnvB,EAAD,KAAoByH,EAAE,uBAE1BnG,EAAAtB,EAAAC,cAACwO,EAAAzO,EAAD,KACIsB,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAASzC,KAAKuH,YAAakB,MAAM,WACpCd,EAAE,WAEPnG,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAASzC,KAAK4rC,YAAanjC,MAAM,WACpCd,EAAE,6DAjOClI,EAAOZ,GAAO,IAClCqlB,EAAoBrlB,EAApBqlB,gBACAhiB,EAAWzC,EAAXyC,OAER,GAAIgiB,IAAoBhiB,EAAQ,CAC5B,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,MAAO,CACHgiB,gBAAiBhiB,EACjBipC,WAAY75B,KAAUo6B,cAAcxpC,GACpC4c,UAAWzN,GAAQA,EAAKg6B,kBAAoBh6B,EAAKg6B,kBAAoB,EACrEI,SAAS,GAIjB,OAAO,YA3BajrC,IAAMC,YAiQnBqO,GALCC,YACZjM,IA5QW,SAAAC,GAAK,OAAAjC,OAAAkO,EAAA,EAAAlO,CAAA,GACbumC,YAAatkC,GACbwM,YAAYxM,GAFC,CAGhBo1B,WAAY,GAGZ4T,cAAe,CACX1oC,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAW8hB,QAAU,UAC/E1c,MAAO1F,EAAME,QAAQqG,KAAKpG,SAE9B+oC,6BAA8B,CAC1BxjC,MAAO1F,EAAME,QAAQqG,KAAKsH,cAiQX,CAAErN,WAAW,IAChCiM,cAGWV,CAAQm8B,ICjTvB,SAAAiB,KAAmR,OAA9PA,GAAAprC,OAAAsuB,QAAA,SAAA/J,GAAgD,QAAAvhB,EAAA,EAAgBA,EAAA3C,UAAAwC,OAAsBG,IAAA,CAAO,IAAAqoC,EAAAhrC,UAAA2C,GAA2B,QAAAxC,KAAA6qC,EAA0BrrC,OAAAsrC,UAAAC,eAAAjoC,KAAA+nC,EAAA7qC,KAAyD+jB,EAAA/jB,GAAA6qC,EAAA7qC,IAAiC,OAAA+jB,IAAkBnkB,MAAAlB,KAAAmB,WAEnR,SAAAmrC,GAAAH,EAAAI,GAAqD,SAAAJ,EAAA,SAA+B,IAA8D7qC,EAAAwC,EAA9DuhB,EAEpF,SAAA8mB,EAAAI,GAA0D,SAAAJ,EAAA,SAA+B,IAAuD7qC,EAAAwC,EAAvDuhB,EAAA,GAAiBmnB,EAAA1rC,OAAA0hB,KAAA2pB,GAAkD,IAAAroC,EAAA,EAAYA,EAAA0oC,EAAA7oC,OAAuBG,IAAOxC,EAAAkrC,EAAA1oC,GAAqByoC,EAAAt/B,QAAA3L,IAAA,IAA0C+jB,EAAA/jB,GAAA6qC,EAAA7qC,IAA6B,OAAA+jB,EAF9MonB,CAAAN,EAAAI,GAA0E,GAAAzrC,OAAA4rC,sBAAA,CAAoC,IAAAC,EAAA7rC,OAAA4rC,sBAAAP,GAA6D,IAAAroC,EAAA,EAAYA,EAAA6oC,EAAAhpC,OAA6BG,IAAOxC,EAAAqrC,EAAA7oC,GAA2ByoC,EAAAt/B,QAAA3L,IAAA,GAA0CR,OAAAsrC,UAAAQ,qBAAAxoC,KAAA+nC,EAAA7qC,KAAwE+jB,EAAA/jB,GAAA6qC,EAAA7qC,IAA+B,OAAA+jB,EAM3d,IAAIwnB,GAEJrrC,EAAAtB,EAAKC,cAAA,SAA0BqB,EAAAtB,EAAKC,cAAA,QACpC2sC,KAAA,UACAC,EAAA,k4BACIvrC,EAAAtB,EAAKC,cAAA,QACT2sC,KAAA,UACAC,EAAA,g5BAGIC,GAAU,SAAAlwB,GACd,IAAAmwB,EAAAnwB,EAAAmwB,OACAxtC,EAAA6sC,GAAAxvB,EAAA,YAEA,OAAStb,EAAAtB,EAAKC,cAAA,MAAA+rC,GAAA,CACdhtC,GAAA,SACAgH,EAAA,MACAuT,EAAA,MACAyzB,QAAA,cACAlzB,MAAA,CACAmzB,iBAAA,mBAEAC,SAAA,WACAj/B,IAAA8+B,GACGxtC,GAAUotC,KAGbQ,GAAiB7rC,EAAAtB,EAAKotC,WAAA,SAAA7tC,EAAA0O,GACtB,OAAS3M,EAAAtB,EAAKC,cAAe6sC,GAAUd,GAAA,CACvCe,OAAA9+B,GACG1O,MCzBG8tC,ID2BSC,EAAAC,qBC1BX,SAAAF,EAAY9tC,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAutC,IACf/tC,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAysC,GAAAnpC,KAAApE,KAAMP,KAmBVyc,qBAAuB,SAAAtM,GAAU,IACT1N,EAAW0N,EAAvBuM,WAER3c,EAAKE,SAAS,CAAEwC,YAvBD1C,EA0BnBkuC,2BAA6B,SAAA99B,GAAU,IAC3B+9B,EAAiBxlC,IAAjBwlC,aAERnuC,EAAKE,SAAS,CAAEiuC,kBA7BD,IAGPzrC,EAAyBiG,IAAzBjG,OAAQyrC,EAAiBxlC,IAAjBwlC,aAHD,OAIfnuC,EAAKX,MAAQ,CACTqD,SACAyrC,gBANWnuC,mFAWf2I,IAAiBmI,GAAG,qBAAsBtQ,KAAKkc,sBAC/C/T,IAAiBmI,GAAG,2BAA4BtQ,KAAK0tC,2EAIrDvlC,IAAiBoI,eAAe,qBAAsBvQ,KAAKkc,sBAC3D/T,IAAiBoI,eAAe,2BAA4BvQ,KAAK0tC,6DAe5D,IACG/lC,EAAM3H,KAAKP,MAAXkI,EADHkE,EAE4B7L,KAAKnB,MAA9BqD,EAFH2J,EAEG3J,OAAQyrC,EAFX9hC,EAEW8hC,aAChB,OAAIzrC,EAAe,KACdyrC,EAGDnsC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,eACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,uBACXoB,EAAAtB,EAAAC,cAACktC,GAAD,CAAajtC,UAAU,qBACtBuH,EAAE,gCANW,YArCRnH,IAAMC,YAoDjB+O,iBAAkB+9B,wBC3C3BK,4LACO,IAAA5rC,EACwBhC,KAAKP,MAA1BwC,EADHD,EACGC,QAASQ,EADZT,EACYS,QAEjB,OACIjB,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,qBAAsBN,EAAQ4rC,mBACrDrsC,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CAAY4tC,eAAe,EAAM5oB,YAAaziB,GAC1CjB,EAAAtB,EAAAC,cAAC4tC,GAAA7tC,EAAD,eAPWM,IAAMC,YAkBtBqC,OAzBA,SAAAC,GAAK,MAAK,CACrB8qC,iBAAkB,CACdxqC,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAW8hB,QAAU,UAC/EniB,YAAaD,EAAME,QAAQ+qC,WAsBpBlrC,CAAmB8qC,aCvB5BK,WAAiB,CACnB3jC,MAAO,GACPC,OAAQ,GACR0hB,aAAc,MACdrY,OAAQ,wBAgBNs6B,eACF,SAAAA,EAAYzuC,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAkuC,IACf1uC,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAotC,GAAA9pC,KAAApE,KAAMP,KAsDV+nC,iCAAmC,SAAA53B,GAAU,IAAA5N,EACXxC,EAAKC,MAA3ByC,EADiCF,EACjCE,OAAQ4c,EADyB9c,EACzB8c,UADyBjT,EAEPrM,EAAKX,MAA/BsD,EAFiC0J,EAEjC1J,SAAUslC,EAFuB57B,EAEvB47B,YAEdtlC,IAEAD,IAAW0N,EAAO1N,QAAU4c,IAAclP,EAAOkP,UAC7C2oB,EACAjoC,EAAKE,SAAS,CAAE+nC,aAAa,GAAS,WAClCr6B,WAAW,WACP5N,EAAKE,SAAS,CAAE+nC,aAAa,KAC9B,KAGPjoC,EAAKE,SAAS,CAAE+nC,aAAa,IAE1BA,GACPjoC,EAAKE,SAAS,CAAE+nC,aAAa,MAxElBjoC,EA4EnB8oC,mBAAqB,WACjB9oC,EAAKE,SAAS,CAAE+nC,aAAa,KA7EdjoC,EAgFnBk9B,UAAY,SAAAjxB,GACJA,IACAA,EAAME,iBACNF,EAAMyX,mBAHO,IAAAjb,EAMazI,EAAKC,MAA3ByC,EANS+F,EAMT/F,OAAQ4c,EANC7W,EAMD6W,UAEhB4d,aAAUx6B,EAAQ4c,IA9Edtf,EAAKX,MAAQ,CACT4oC,aAAa,GAXNjoC,qFAgBG4Q,EAAWC,GAAW,IAAA7C,EACgCxN,KAAKP,MAArEyC,EADgCsL,EAChCtL,OAAQ4c,EADwBtR,EACxBsR,UAAWsmB,EADa53B,EACb43B,aAAc4D,EADDx7B,EACCw7B,oBAAqBjmC,EADtByK,EACsBzK,MACtD0kC,EAAgBznC,KAAKnB,MAArB4oC,YAER,OAAIr3B,EAAUlO,SAAWA,IAIrBkO,EAAU0O,YAAcA,IAIxB1O,EAAUg1B,eAAiBA,IAI3Bh1B,EAAU44B,sBAAwBA,IAIlC54B,EAAUrN,QAAUA,GAIpBsN,EAAUo3B,cAAgBA,kDAQ9B3+B,IAAawH,GAAG,iCAAkCtQ,KAAKwnC,iFAIvD1+B,IAAayH,eAAe,iCAAkCvQ,KAAKwnC,mEAuC9D,IAAApvB,EACuDpY,KAAKP,MAAzDwC,EADHmW,EACGnW,QAASC,EADZkW,EACYlW,OAAQ4c,EADpB1G,EACoB0G,UAAWkqB,EAD/B5wB,EAC+B4wB,oBAC5BvB,EAAgBznC,KAAKnB,MAArB4oC,YAEF5/B,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GACzC,IAAKjX,EAAS,OAAOrG,EAAAtB,EAAAC,cAAA,sCALhB,IAOG6I,EAAYnB,EAAZmB,QACR,IAAKA,EAAS,OAAOxH,EAAAtB,EAAAC,cAAA,sCARhB,IAUG8I,EAAUD,EAAVC,MAEFK,EAAO6kC,aAAyBtmC,GAAS,GAEzC+hC,EAAmBrnC,IAAW,kBAADzB,OAAA2P,GAAA,EAAA3P,CAAA,GAAuBmB,EAAQ8nC,mBAAqBtC,IAEvF,OACIjmC,EAAAtB,EAAAC,cAAA,OAAKC,UAAWwpC,EAAkBO,eAAgBnqC,KAAKsoC,oBAClDU,GAAuBxnC,EAAAtB,EAAAC,cAACiqC,GAAD,MACxB5oC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,2BACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,0BAA2BN,EAAQmsC,wBAAyB9kC,IAE1FL,GACGzH,EAAAtB,EAAAC,cAAC6mC,GAAA,EAAD,CACI9kC,OAAQA,EACR4c,UAAWA,EACX7V,MAAOA,EACP+Q,MAAOi0B,GACPvR,UAAW18B,KAAK08B,oBAxHXl8B,IAAMC,WAgIpBqC,OA7IA,SAAAC,GAAK,MAAK,CACrB+nC,yBAA0B,CACtBC,KAAM,CAAEtsB,gBAAiB1b,EAAME,QAAQC,QAAQC,KAAO,MACtD6nC,GAAI,CAAEvsB,gBAAiB,gBAE3BsrB,mBAAoB,CAChB7D,UAAW,2BAEfkI,sBAAuB,CACnB3lC,MAAO1F,EAAME,QAAQqG,KAAKsH,aAoIA,CAAErN,WAAW,GAAhCT,CAAwCorC,wBCzIjDG,uBACF,SAAAA,EAAY5uC,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAquC,IACf7uC,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAutC,GAAAjqC,KAAApE,KAAMP,KAuBV6uC,iCAAmC,SAAA1+B,GAAU,IACjC2+B,EAAS3+B,EAAT2+B,KACMC,EAAgBhvC,EAAKX,MAA3B0vC,KAER,IAAIC,GAAeD,EAAK3P,YAAc4P,EAAY5P,UAAlD,CAEAp/B,EAAKE,SAAS,CACV6uC,KAAME,KAAaF,KACnBh1B,MAAO/Z,EAAKkvC,SAASD,KAAaF,QAGtC,IAAMtpC,EAAQwB,IAAUC,WAChBioC,EAAaJ,EAAbI,SACRC,YAAoB3pC,EAAO0pC,EAASA,YArCrBnvC,EAwCnBqvC,gCAAkC,SAAAj/B,GAAU,IAChC2+B,EAAS3+B,EAAT2+B,KAUR,GARA/uC,EAAKE,SAAS,CACV6uC,OACAh1B,MAAO/Z,EAAKkvC,SAASH,GACrBO,iBAAkB,EAClBC,aAAa,EACbC,YAAY,IAGXT,EAAL,CAEA,IAAMtpC,EAAQwB,IAAUC,WAChBioC,EAAaJ,EAAbI,SACRC,YAAoB3pC,EAAO0pC,EAASA,YAvDrBnvC,EA0DnB2J,WAAa,SAAAlK,GACcO,EAAKX,MAApBmwC,YAEH/vC,GAELE,KAAgBqI,aAAa,CACzBnI,QAAS,0BACTJ,aAjEWO,EAqEnByvC,mBAAqB,SAAAC,GAAa,IACtB31B,EAAU/Z,EAAKX,MAAf0a,MAEFta,EAAUsa,EAAMzH,KAAK,SAAA5L,GAAC,OAAIA,EAAEjH,QAAQC,KAAOgwC,IACjD,GAAKjwC,EAAL,CAEA,IAAMgG,EAAQwB,IAAUC,WACxByoC,YAAmBlqC,EAAOhG,EAAS,MAEnC,IAAImwC,EAAiB,EACjB5vC,EAAK6vC,UAAY7vC,EAAK6vC,SAAS5lC,UAC/B2lC,EAAiBxU,KAAKC,MAAMr7B,EAAK6vC,SAAS5lC,QAAQ6lC,YAAcC,MAG5C/vC,EAAKgwC,oBAAoBN,EAAW31B,EAAO61B,GACnDzlC,QAAQ,SAAAzD,GACpBipC,YAAmBlqC,EAAOiB,EAAG,UArFlB1G,EAyFnBgwC,oBAAsB,SAACN,EAAWP,EAAUS,GACxC,IAAKT,EAAU,MAAO,GAEtB,IAAMc,EAAU,GACVnQ,EAAQqP,EAASpP,UAAU,SAAAr5B,GAAC,OAAIA,EAAEjH,QAAQC,KAAOgwC,IACvD,IAAe,IAAX5P,EAAc,MAAO,GAEzB,IAAMoQ,EAAM9U,KAAKC,MAAMyE,EAAQ8P,GACzBO,EAASrQ,EAAQ8P,EAEjBQ,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQ/pC,KAAK0pC,EAAiBQ,EAAUE,GAE5CL,EAAQ/pC,KAAK0pC,EAAiBQ,EAAUD,GACpCI,EAAaX,GACbK,EAAQ/pC,KAAK0pC,EAAiBQ,EAAUG,IAI5CD,GAAc,GACdL,EAAQ/pC,KAAK0pC,EAAiBM,EAAMI,GAEpCC,EAAaX,GACbK,EAAQ/pC,KAAK0pC,EAAiBM,EAAMK,GAGpCF,EAAUjV,KAAKoV,KAAKrB,EAAShrC,OAASyrC,KAClCU,GAAc,GACdL,EAAQ/pC,KAAK0pC,EAAiBS,EAAUC,GAE5CL,EAAQ/pC,KAAK0pC,EAAiBS,EAAUF,GACpCI,EAAaX,GACbK,EAAQ/pC,KAAK0pC,EAAiBS,EAAUE,IAIzCN,EAAQxpC,IAAI,SAAAnC,GAAC,OAAI6qC,EAAS7qC,MAnIlBtE,EAsInBgpC,gBAAkB,SAAA/8B,GACd,IAAMyjC,EAAYe,OAAOxkC,EAAM4Z,OAAO6qB,QAAQhB,WACzCA,GAEA1vC,EAAKwoC,YAENxoC,EAAK2wC,qBAAuBjB,IAC5B1vC,EAAK2wC,mBAAqB,MAE9B3wC,EAAKE,SAAS,CAAEovC,iBAAkBI,IAClC1vC,EAAKyvC,mBAAmBC,KAhJT1vC,EAmJnB+oC,gBAAkB,SAAA98B,GACd,IAAMyjC,EAAYe,OAAOxkC,EAAM4Z,OAAO6qB,QAAQhB,WAC9C,GAAKA,EAAL,CAEA1vC,EAAK2wC,mBAAqBjB,EAC1B,IAAMjhB,EAAMxM,KAAKwM,MAiBjB,OAfAzuB,EAAKE,SAAS,CAAEovC,iBAAkBI,EAAWtQ,UAAW3Q,EAAK8gB,aAAa,EAAOC,YAAY,IAC7F5hC,WAAW,WACe5N,EAAKX,MAAnB+/B,YACU3Q,GACdzuB,EAAKE,SAAS,CAAEqvC,aAAa,EAAMC,YAAY,KAEpD,KAEHxvC,EAAKyvC,mBAAmBC,GAExB1vC,EAAKwoC,WAAY,EACjBr7B,SAASyjC,iBAAiB,UAAW5wC,EAAK6wC,eAE1C5kC,EAAME,iBACNF,EAAMyX,mBACC,IAzKQ1jB,EA4KnB6wC,cAAgB,WACZ7wC,EAAKE,SAAS,CAAEovC,iBAAkB,EAAGlQ,UAAW,EAAGmQ,aAAa,IAChEvvC,EAAKwoC,WAAY,EACjBr7B,SAAS2jC,oBAAoB,UAAW9wC,EAAK6wC,gBA/K9B7wC,EAkLnBkvC,SAAW,SAAAH,GACP,IAAMh1B,EAAQ,GACd,IAAKg1B,EAAM,OAAOh1B,EAElB,IAAMg3B,EAAO,IAAI3sC,IACT+qC,EAA4BJ,EAA5BI,SAAU6B,EAAkBjC,EAAlBiC,cAgBlB,OAfI7B,GACAA,EAASA,SAAShlC,QAAQ,SAAAzD,GACtBqT,EAAM7T,KAAKQ,GACXqqC,EAAKtlC,IAAI/E,EAAEjH,QAAQC,GAAIgH,EAAEjH,QAAQC,MAGrCsxC,GACAA,EAAc7B,SAAShlC,QAAQ,SAAAzD,GACtBqqC,EAAKxsC,IAAImC,EAAEjH,QAAQC,MACpBqa,EAAM7T,KAAKQ,GACXqqC,EAAKtlC,IAAI/E,EAAEjH,QAAQC,GAAIgH,EAAEjH,QAAQC,OAKtCqa,GApMP/Z,EAAK6vC,SAAW7uC,IAAM8M,YAEtB9N,EAAKX,MAAQ,CACT0vC,KAAM,KACNh1B,MAAO,GACPu1B,iBAAkB,EAClBC,aAAa,EACbC,YAAY,GAVDxvC,mFAefivC,KAAan+B,GAAG,gCAAiCtQ,KAAK6uC,iCACtDJ,KAAan+B,GAAG,iCAAkCtQ,KAAKsuC,iFAIvDG,KAAal+B,eAAe,gCAAiCvQ,KAAK6uC,iCAClEJ,KAAal+B,eAAe,iCAAkCvQ,KAAKsuC,mEAqL9D,IAAA/gC,EAAAvN,KACGiC,EAAYjC,KAAKP,MAAjBwC,QADH4J,EAEkD7L,KAAKnB,MAApD0vC,EAFH1iC,EAEG0iC,KAAMh1B,EAFT1N,EAES0N,MAAOu1B,EAFhBjjC,EAEgBijC,iBAAkBC,EAFlCljC,EAEkCkjC,YACvC,IAAKR,EAAM,OAAO,KAClB,IAAKh1B,EAAO,OAAO,KACnB,IAAKA,EAAM5V,OAAQ,OAAO,KAE1B,IAAM28B,EAAW/mB,EAAMtT,IAAI,SAAAC,GAAC,OACxB1E,EAAAtB,EAAAC,cAAA,OACIC,UAAU,0BACVkB,IAAK4E,EAAEjH,QAAQC,GACfuxC,kBAAiBvqC,EAAEjH,QAAQC,GAC3B8a,MAAO,CAAE1P,MAAOilC,IAA2BhlC,OAAQglC,KACnD9sC,QAAS,kBAAM8K,EAAKpE,WAAWjD,KAC/B1E,EAAAtB,EAAAC,cAACimC,GAAA,EAAD,CACI9kC,IAAK4E,EAAEjH,QAAQC,GACfkB,UAAU,kCACVswC,SAAO,EACPzxC,QAASiH,EACT5F,YAAaqwC,IACbC,MAAM,OAKZC,EAAet3B,EAAMgmB,UAAU,SAAAr5B,GAAC,OAAIA,EAAEjH,QAAQC,KAAO4vC,IACrD7vC,GAA4B,IAAlB4xC,EAAsBt3B,EAAMs3B,GAAgB,KAE5D,OACIrvC,EAAAtB,EAAAC,cAAA,OACIgO,IAAKnO,KAAKqvC,SACVjvC,UAAWmC,IAAW,gBAAiBN,EAAQe,YAAaf,EAAQoc,MACpE4rB,YAAajqC,KAAKwoC,gBAClBtjB,YAAallB,KAAKuoC,iBACjBjI,EACApgB,QAAQjhB,IAAY8vC,GAAevtC,EAAAtB,EAAAC,cAACvB,GAAA,EAAD,CAAgBK,QAASA,YA9OlDuB,IAAMC,YAoPlBqC,OA3PA,SAAAC,GAAK,OAAAjC,OAAAkO,EAAA,EAAAlO,CAAA,CAChBud,KAAM,CACFhb,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAW8hB,QAAU,YAEhF5V,YAAYxM,KAuPJD,CAAmBurC,IC7O5ByC,WAAqBhwC,OAAOiwC,OAAO,CACrC1X,KAAM,OACN2X,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,qBAAsB,0BASpBC,eACF,SAAAA,EAAY3xC,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAoxC,IACf5xC,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAswC,GAAAhtC,KAAApE,KAAMP,KAkKV4xC,wBAA0B,SAAAzhC,GAAU,IACxB1N,EAAsB0N,EAAtB1N,OAAQ4c,EAAclP,EAAdkP,UACRwyB,EAAiB9xC,EAAKX,MAAtByyC,aAER,GAAI9xC,EAAKC,MAAMyC,SAAWA,EAA1B,CAIA,IAAMqvC,EAAWD,EAAa3tC,OAAS,EAAI2tC,EAAaA,EAAa3tC,OAAS,GAAK,KAC/E4tC,GAAYA,EAASrvC,SAAWA,GAAUqvC,EAASzyB,YAAcA,GAIrEwyB,EAAa5rC,KAAK,CAAExD,SAAQ4c,gBAhLbtf,EAmLnBq8B,0BAA4B,SAAAjsB,GACxB,IAAM8I,EAAOlZ,EAAKgkB,QAAQ/Z,QAEpB+nC,EAAmB94B,EAAKE,aACxB64B,EAAgB/4B,EAAKX,UAC3BvY,EAAKE,SAAS,CAAEgyC,cAAc,GAAQ,WAC9Bh5B,EAAKX,YAAc05B,IACnB/4B,EAAKX,WAAa6iB,KAAK+W,IAAIH,EAAmB94B,EAAKE,kBA1L5CpZ,EA+LnBoyC,0BAA4B,SAAAC,GACxB,IAAMn5B,EAAOlZ,EAAKgkB,QAAQ/Z,QAE1BjK,EAAKgyC,iBAAmB94B,EAAKE,aAC7BpZ,EAAKiyC,cAAgB/4B,EAAKX,WAnMXvY,EAsMnBsyC,uBAAyB,SAAAD,GACrB,IAAMn5B,EAAOlZ,EAAKgkB,QAAQ/Z,QAK1BjK,EAAKE,SAAS,CAAEgyC,cAAc,GAAS,WAC/Bh5B,EAAKX,YAAcvY,EAAKiyC,gBACxB/4B,EAAKX,WAAa6iB,KAAK+W,IAAInyC,EAAKgyC,iBAAmB94B,EAAKE,kBA9MjDpZ,EAmNnBuyC,wBAA0B,SAAAniC,GACtBpQ,EAAKE,SAAS,CACVsyC,gBAAiBlpC,IAAa8oB,cAAcvnB,KAAO,EACnD4nC,eAAgBnB,GAAmBK,wBAtNxB3xC,EA0NnB0yC,2BAA6B,SAAAtiC,GACNpQ,EAAKC,MAAhByC,SAEO0N,EAAO1N,QAClB1C,EAAKE,SAAS,CAAE+wB,aAAc7gB,EAAOwgB,cA9N1B5wB,EAkOnBooC,uBAAyB,SAAAh4B,GAAU,IACvB1N,EAAW1C,EAAKC,MAAhByC,OACAiwC,EAAY3yC,EAAKX,MAAjBszC,QACAhrC,EAAwByI,EAAxBzI,QAASC,EAAewI,EAAfxI,WAEjB,GAAIlF,IAAWiF,IAEsC,IAAjDgrC,EAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAOkI,IAAoB,CACpD,IAAMS,EAAUiB,IAAa9E,IAAImD,EAASC,GAC1C,IAAKS,EAAS,OAEd,IAAM5C,EAAQwB,IAAUC,WACxB4kC,YAAoBrmC,EAAO,CAAC4C,MA9OjBrI,EAkPnB4yC,wBAA0B,SAAAxiC,GACHpQ,EAAKC,MAAhByC,OACO0N,EAAOzI,SApPP3H,EAuPnB6yC,6BAA+B,SAAAziC,GAAU,IAC7B/H,EAA4B+H,EAA5B/H,QAAS09B,EAAmB31B,EAAnB21B,eAEjB,GADmB/lC,EAAKC,MAAhByC,SACO2F,EAAQV,QAAvB,CAEA,IAAImrC,GAAsB,EAE1B,OADoBzqC,EAAZmB,QACQ,UACZ,IAAK,cACDspC,GAAsB,EAK9B,GAAKA,EAAL,CAEA,IAAIL,EAAiBnB,GAAmBzX,KAClC3gB,EAAOlZ,EAAKgkB,QAAQ/Z,QAEtBiP,EAAKX,YAAcW,EAAKC,aAAeD,EAAKE,aAC5Cq5B,EAAiBnB,GAAmBE,iBAG/BnpC,EAAQ0qC,cACbN,EAAiBnB,GAAmBE,kBAGxC9lC,QAAQC,IAAI,mEAAqE8mC,GACjFzyC,EAAKgzC,eAAejN,EAAgB19B,EAASoqC,GAC7C,IAAMhtC,EAAQwB,IAAUC,WACxB4kC,YAAoBrmC,EAAO,CAAC4C,IAC5BupC,EAAaqB,aAAa,CAAC5qC,OAtRZrI,EAyRnBkzC,mBAAqB,SAAA9iC,GACjB,GAAKpQ,EAAKmzC,UAAV,CAD2B,IAGnB9qC,EAAY+H,EAAZ/H,QAER,GADmBrI,EAAKC,MAAhByC,SACO2F,EAAQV,QAAvB,CAEA,IAAI8qC,EAAiBnB,GAAmBzX,KAClC3gB,EAAOlZ,EAAKgkB,QAAQ/Z,QAEtBiP,EAAKX,YAAcW,EAAKC,aAAeD,EAAKE,aAC5Cq5B,EAAiBnB,GAAmBE,iBAG/BnpC,EAAQ0qC,cACbN,EAAiBnB,GAAmBE,kBAGxC,IAAMmB,EAAU,CAACtqC,GAEjBqD,QAAQC,IAAI,yDAA2D8mC,GACvE,IAAMW,EAAW,CACbX,iBACAY,mBAAmB,GAEvBrzC,EAAKszC,YAAYtzC,EAAKwkB,eAAemuB,GAAUS,GAC/C,IAAM3tC,EAAQwB,IAAUC,WACxB4kC,YAAoBrmC,EAAOktC,GAC3Bf,EAAaqB,aAAaN,MArTX3yC,EAwTnBuzC,uBAAyB,SAAAnjC,GACFpQ,EAAKC,MAAhByC,SACO0N,EAAOzI,SAEjByI,EAAOojC,cAEZxzC,EAAKyzC,cAAcrjC,EAAO/E,cA9TXrL,EAiUnB0zC,kBAAoB,WAChB,GAAK1zC,EAAKgiB,SAAV,CAIA,IAFA,IAAMA,EAAW,IAAI5d,IACf2V,EAAQ45B,aAAY3zC,EAAKgkB,QAAShkB,EAAK4zC,UACpCtvC,EAAI,EAAGA,EAAIyV,EAAM5V,OAAQG,IAAK,CACnC,IAAM+D,EAAUrI,EAAKgiB,SAASjI,EAAMzV,IACpC,GAAI+D,EAAS,KAAAwrC,EACqBxrC,EAAQpI,MAA9ByC,EADCmxC,EACDnxC,OAAQ4c,EADPu0B,EACOv0B,UACVxd,EAAG,GAAAO,OAAMK,EAAN,KAAAL,OAAgBid,GACzB0C,EAASvW,IAAI3J,EAAKA,IAI1BnC,KAAgBqI,aAAa,CACzBnI,QAAS,6BACTmiB,SAAUA,MAjVChiB,EAugBnB8zC,sBAvgBmB,eAAAx2B,EAAAhc,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAugBK,SAAAC,EAAMlF,GAAN,IAAAg0C,EAAAC,EAAA1vC,EAAA,OAAAS,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACdkuC,EAAiB,EACnBC,EAAaj0C,GAAUA,EAAOiiB,SAAS7d,OAAS,GAAKpE,EAAOiiB,SAAS7d,OAAS8vC,IAEzE3vC,EAAI,EAJO,YAIJA,EAAIyvC,GAAkBC,GAJlB,CAAAruC,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKD7F,EAAKk0C,aALJ,OAKhBn0C,EALgB4F,EAAAkB,KAMhBmtC,EAAaj0C,GAAUA,EAAOiiB,SAAS7d,OAAS,GAAKpE,EAAOiiB,SAAS7d,OAAS8vC,IAN9D,OAI8B3vC,IAJ9BqB,EAAAE,KAAA,iCAAAF,EAAAyB,SAAAnC,MAvgBL,gBAAAsY,GAAA,OAAAD,EAAA5b,MAAAlB,KAAAmB,YAAA,GAAA3B,EAihBnBk0C,WAjhBmB5yC,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAihBN,SAAAqC,IAAA,IAAA3E,EAAAyxC,EAAA9yB,EAAAthB,EAAA0F,EAAA,OAAAV,EAAArE,EAAAgF,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,UACDnD,EAAW1C,EAAKC,MAAhByC,OADC,CAAA6E,EAAA1B,KAAA,eAAA0B,EAAAC,OAAA,qBAILxH,EAAKukB,QAJA,CAAAhd,EAAA1B,KAAA,eAAA0B,EAAAC,OAAA,qBAMLxH,EAAKo0C,oBANA,CAAA7sC,EAAA1B,KAAA,eAOL7F,EAAKq0C,wBAPA9sC,EAAAC,OAAA,wBAWL2sC,EAAgB,EAChBn0C,EAAKX,MAAMszC,SAAW3yC,EAAKX,MAAMszC,QAAQxuC,OAAS,IAClDgwC,EAAgBn0C,EAAKX,MAAMszC,QAAQ,GAAGjzC,IAG1CM,EAAKukB,SAAU,EAETlD,EAAYrhB,EAAKqhB,UAlBd9Z,EAAA1B,KAAA,GAmBUlG,KAAgBC,KAAK,CACpCC,QAAS,iBACT8H,QAASjF,EACTggB,gBAAiByxB,EACjBxxB,OAAQ,EACR1c,MAAOguC,MACRK,QAAQ,WACPt0C,EAAKukB,SAAU,IA1BV,WAmBLxkB,EAnBKwH,EAAAV,KA6BLwa,IAAcrhB,EAAKqhB,UA7Bd,CAAA9Z,EAAA1B,KAAA,gBAAA0B,EAAAC,OAAA,qBAiCLxH,EAAKC,MAAMyC,SAAWA,EAjCjB,CAAA6E,EAAA1B,KAAA,gBAAA0B,EAAAC,OAAA,yBAsCT8B,IAAawZ,SAAS/iB,EAAOiiB,UAC7BjiB,EAAOiiB,SAASgb,UAChBh9B,EAAKu0C,aAAav0C,EAAKwkB,eAAezkB,EAAOiiB,UAAW,WAC/CjiB,EAAOiiB,SAAS7d,QACjBnE,EAAKq0C,0BAGP5uC,EAAQwB,IAAUC,WACxB4kC,YAAoBrmC,EAAO1F,EAAOiiB,UAClC4vB,EAAaqB,aAAalzC,EAAOiiB,UA/CxBza,EAAAC,OAAA,SAiDFzH,GAjDE,yBAAAwH,EAAAH,SAAAC,MAjhBMrH,EAqkBnBwkB,eAAiB,SAAAxC,GACb,OAAOA,EAASrV,OAAO,SAAAjG,GAAC,MAA2B,yBAAvBA,EAAE8C,QAAQ,YAtkBvBxJ,EAykBnBq0C,sBAzkBmB/yC,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAykBK,SAAAue,IAAA,IAAA7gB,EAAA8xC,EAAAviC,EAAAwiC,EAAAN,EAAA9yB,EAAAthB,EAAA0F,EAAA,OAAAV,EAAArE,EAAAgF,KAAA,SAAA8d,GAAA,cAAAA,EAAA5d,KAAA4d,EAAA3d,MAAA,UACZnD,EAAW1C,EAAKC,MAAhByC,OADY,CAAA8gB,EAAA3d,KAAA,eAAA2d,EAAAhc,OAAA,qBAIhBxH,EAAKukB,QAJW,CAAAf,EAAA3d,KAAA,eAAA2d,EAAAhc,OAAA,oBAMdgtC,EAAeE,YAAgBhyC,GANjB,CAAA8gB,EAAA3d,KAAA,eAAA2d,EAAAhc,OAAA,oBASdyK,EAAWkB,KAAgBhB,YAAYqiC,GATzB,CAAAhxB,EAAA3d,KAAA,gBAAA2d,EAAAhc,OAAA,qBAWfyK,EAAS0iC,6BAXM,CAAAnxB,EAAA3d,KAAA,gBAAA2d,EAAAhc,OAAA,yBAapBxH,EAAKo0C,qBAAsB,EAbP5wB,EAAA3d,KAAA,GAeSlG,KAAgBC,KAAK,CAC9CC,QAAS,uBACTuS,eAAgBH,EAAS0iC,+BAjBT,WAedF,EAfcjxB,EAAA3c,KAAA,CAAA2c,EAAA3d,KAAA,gBAAA2d,EAAAhc,OAAA,yBAsBhB2sC,EAAgB,EAEhBn0C,EAAKX,MAAMszC,SACX3yC,EAAKX,MAAMszC,QAAQxuC,OAAS,GAC5BnE,EAAKX,MAAMszC,QAAQ,GAAGhrC,UAAY8sC,EAAe/0C,KAEjDy0C,EAAgBn0C,EAAKX,MAAMszC,QAAQ,GAAGjzC,IAG1CM,EAAKukB,SAAU,EAETlD,EAAYrhB,EAAKqhB,UAjCHmC,EAAA3d,KAAA,GAkCClG,KAAgBC,KAAK,CACtCC,QAAS,iBACT8H,QAAS8sC,EAAe/0C,GACxBgjB,gBAAiByxB,EACjBxxB,OAAQ,EACR1c,MAAOguC,MACRK,QAAQ,WACPt0C,EAAKukB,SAAU,IAzCC,WAkCdxkB,EAlCcyjB,EAAA3c,KA4ChBwa,IAAcrhB,EAAKqhB,UA5CH,CAAAmC,EAAA3d,KAAA,gBAAA2d,EAAAhc,OAAA,qBAgDhBxH,EAAKC,MAAMyC,SAAWA,EAhDN,CAAA8gB,EAAA3d,KAAA,gBAAA2d,EAAAhc,OAAA,kBAqDpB8B,IAAawZ,SAAS/iB,EAAOiiB,UAC7BjiB,EAAOiiB,SAASgb,UAChBh9B,EAAKu0C,aAAav0C,EAAKwkB,eAAezkB,EAAOiiB,WACvCvc,EAAQwB,IAAUC,WACxB4kC,YAAoBrmC,EAAO1F,EAAOiiB,UAClC4vB,EAAaqB,aAAalzC,EAAOiiB,UA1Db,yBAAAwB,EAAApc,SAAAmc,MAzkBLvjB,EAsoBnBikB,eAtoBmB3iB,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAsoBF,SAAAqf,IAAA,IAAA3hB,EAAAmP,EAAAsiC,EAAA9yB,EAAAthB,EAAA0F,EAAA,OAAAV,EAAArE,EAAAgF,KAAA,SAAA4e,GAAA,cAAAA,EAAA1e,KAAA0e,EAAAze,MAAA,UACLnD,EAAW1C,EAAKC,MAAhByC,OACFmP,EAAOC,KAAUtN,IAAI9B,GAFd,CAAA4hB,EAAAze,KAAA,eAAAye,EAAA9c,OAAA,qBAKTxH,EAAKukB,QALI,CAAAD,EAAAze,KAAA,eAAAye,EAAA9c,OAAA,qBAMTxH,EAAKmzC,UANI,CAAA7uB,EAAAze,KAAA,eAAAye,EAAA9c,OAAA,wBAQT2sC,EAAgB,EAChBn0C,EAAKX,MAAMszC,SAAW3yC,EAAKX,MAAMszC,QAAQxuC,OAAS,IAClDgwC,EAAgBn0C,EAAKX,MAAMszC,QAAQ3yC,EAAKX,MAAMszC,QAAQxuC,OAAS,GAAGzE,IAGtEM,EAAKukB,SAAU,EAETlD,EAAYrhB,EAAKqhB,UAfViD,EAAAze,KAAA,GAgBMlG,KAAgBC,KAAK,CACpCC,QAAS,iBACT8H,QAASjF,EACTggB,gBAAiByxB,EACjBxxB,QAASsxB,IAAsB,EAC/BhuC,MAAOguC,IAAsB,IAC9BK,QAAQ,WACPt0C,EAAKukB,SAAU,IAvBN,WAgBTxkB,EAhBSukB,EAAAzd,KA0BTwa,IAAcrhB,EAAKqhB,UA1BV,CAAAiD,EAAAze,KAAA,gBAAAye,EAAA9c,OAAA,qBA8BTxH,EAAKC,MAAMyC,SAAWA,EA9Bb,CAAA4hB,EAAAze,KAAA,gBAAAye,EAAA9c,OAAA,yBAkCTqK,EAAK+iC,aACL50C,EAAKmzC,UAAYpzC,EAAOiiB,SAAS7d,OAAS,GAAK0N,EAAK+iC,aAAal1C,KAAOK,EAAOiiB,SAAS,GAAGtiB,GAE3FM,EAAKmzC,WAAY,EAGrB3uB,aAAezkB,EAAQC,EAAKX,MAAMszC,SAIlCrpC,IAAawZ,SAAS/iB,EAAOiiB,UAC7BjiB,EAAOiiB,SAASgb,UAChBtxB,QAAQC,IAAI,0DACZ3L,EAAKszC,YAAYtzC,EAAKwkB,eAAezkB,EAAOiiB,UAAW,CAAEywB,eAAgBnB,GAAmBzX,OACtFp0B,EAAQwB,IAAUC,WACxB4kC,YAAoBrmC,EAAO1F,EAAOiiB,UAClC4vB,EAAaqB,aAAalzC,EAAOiiB,UAlDpBsC,EAAA9c,OAAA,SAoDNzH,GApDM,yBAAAukB,EAAAld,SAAAid,MAtoBErkB,EA8uBnB+jB,aAAe,WAAM,IAAA1X,EACoCrM,EAAKX,MAAlDg0C,EADShnC,EACTgnC,kBAAmBvB,EADVzlC,EACUylC,aAAca,EADxBtmC,EACwBsmC,QACnCz5B,EAAOlZ,EAAKgkB,QAAQ/Z,QAE1ByB,QAAQC,IAAI,wCACR3L,EAAK60C,qBACL70C,EAAK80C,iCACL90C,EAAKiyC,eAETjyC,EAAK0zC,oBAGD1zC,EAAK60C,qBACL70C,EAAK60C,sBAAuB,EAI5B70C,EAAK80C,mCAIL57B,EAAKX,WAAa,GAClB7M,QAAQC,IAAI,kCACZ3L,EAAKk0C,cACEh7B,EAAKX,UAAYW,EAAKE,eAAiBF,EAAKC,cAC/CnZ,EAAKmzC,WAAaE,IACdrzC,EAAKiyC,gBAAkB/4B,EAAKX,WAAavY,EAAKiyC,eAAiBjyC,EAAK+0C,cAAgBpC,GACpFjnC,QAAQC,IAAI,wCAAwC,EAAO3L,EAAKmzC,UAAWE,EAAmBrzC,EAAKiyC,cAAe/4B,EAAKX,WACvHvY,EAAKE,SAAS,CACVmzC,mBAAmB,EACnBZ,eAAgBnB,GAAmBK,qBACnCG,aAAc,MAEVA,EAAa3tC,SACrBuH,QAAQC,IAAI,wCAAwC,EAAO3L,EAAKmzC,UAAWE,EAAmBvB,EAAa3tC,QAC3GnE,EAAKE,SAAS,CACVmzC,mBAAmB,EACnBZ,eAAgBnB,GAAmBK,yBAK/CjmC,QAAQC,IAAI,sCACZ3L,EAAKikB,kBAEAovB,GACDrzC,EAAKE,SAAS,CAAEmzC,mBAAmB,IAK3CrzC,EAAKiyC,cAAgB/4B,EAAKX,UAC1BvY,EAAK+0C,YAAcpC,IAlyBJ3yC,EAqyBnBg1C,qBAAuB,SAAAz0C,GAAY,IAAAiC,EACDxC,EAAKC,MAA3ByC,EADuBF,EACvBE,OADuBuL,GAAAzL,EACf8c,UACoBtf,EAAKX,OAAjCozC,EAFuBxkC,EAEvBwkC,eAAgBE,EAFO1kC,EAEP0kC,QAChBp6B,EAA0ChY,EAA1CgY,UAAWY,EAA+B5Y,EAA/B4Y,aAAcC,EAAiB7Y,EAAjB6Y,aAUjC,GARA1N,QAAQC,IAAR,8DAAAtJ,OAEqBowC,EAFrB,uCAAApwC,OAGwBkW,EAHxB,0CAAAlW,OAI2B8W,EAJ3B,0CAAA9W,OAK2B+W,EAL3B,4BAAA/W,OAMaK,IAET+vC,IAAmBnB,GAAmBzX,WACnC,GAAI4Y,IAAmBnB,GAAmBE,iBAC7CxxC,EAAKi1C,sBACF,GAAIxC,IAAmBnB,GAAmBI,kBAC7C1xC,EAAKk1C,uBACF,GAAIzC,IAAmBnB,GAAmBG,iBAAkB,CAC/D,IAAMv4B,EAAOlZ,EAAKgkB,QAAQ/Z,QAC1ByB,QAAQC,IAAR,qEAAAtJ,OAEqB6W,EAAKX,UAF1B,2CAAAlW,OAGwB6W,EAAKE,aAH7B,2CAAA/W,OAIwB6W,EAAKC,aAJ7B,gCAAA9W,OAKaK,IAIb,IADA,IAAIyyC,GAAW,EACN7wC,EAAI,EAAGA,EAAIquC,EAAQxuC,OAAQG,IAAK,CACrC,IAAI8wC,EAAgBp1C,EAAKq1C,SAAS7wC,IAAIF,GAClCq3B,EAAOG,eAAqBsZ,GAChC,GAAIzZ,GAEIyZ,EAAcn1C,MAAMupC,oBAAqB,CACzCtwB,EAAKX,UAAYojB,EAAKI,UACtBoZ,GAAW,EACX,OAKPA,GACDn1C,EAAKi1C,iBAGTvpC,QAAQC,IAAR,oEAAAtJ,OAEqB6W,EAAKX,UAF1B,2CAAAlW,OAGwB6W,EAAKE,aAH7B,2CAAA/W,OAIwB6W,EAAKC,aAJ7B,gCAAA9W,OAKaK,SAEV,GAAI+vC,IAAmBnB,GAAmBK,qBAAsB,CACnE,IAAMz4B,EAAOlZ,EAAKgkB,QAAQ/Z,QAC1ByB,QAAQC,IAAR,yEAAAtJ,OAEqB6W,EAAKX,UAF1B,2CAAAlW,OAGwB6W,EAAKE,aAH7B,2CAAA/W,OAIwB6W,EAAKC,aAJ7B,gCAAA9W,OAKaK,IAEbwW,EAAKX,UAAYA,GAAaW,EAAKC,aAAeA,GAClDzN,QAAQC,IAAR,wEAAAtJ,OAEqB6W,EAAKX,UAF1B,2CAAAlW,OAGwB6W,EAAKE,aAH7B,2CAAA/W,OAIwB6W,EAAKC,aAJ7B,gCAAA9W,OAKaK,MAz2BF1C,EA82BnBk1C,gBAAkB,WAAM,IAAAzsC,EACUzI,EAAKC,MAA3ByC,EADY+F,EACZ/F,OAAQ4c,EADI7W,EACJ6W,UACRqzB,EAAY3yC,EAAKX,MAAjBszC,QAEFz5B,EAAOlZ,EAAKgkB,QAAQ/Z,QAC1ByB,QAAQC,IAAR,uCAAAtJ,OAC2Cid,EAD3C,2CAAAjd,OAEqB6W,EAAKX,UAF1B,uCAAAlW,OAGwB6W,EAAKE,aAH7B,uCAAA/W,OAIwB6W,EAAKC,aAJ7B,4BAAA9W,OAKaK,IAIb,IADA,IAAIyyC,GAAW,EACN7wC,EAAI,EAAGA,EAAIquC,EAAQxuC,OAAQG,IAAK,CACrC,IAAI8wC,EAAgBp1C,EAAKq1C,SAAS7wC,IAAIF,GAClCq3B,EAAOG,eAAqBsZ,GAChC,GAAIzZ,GAEIyZ,EAAcn1C,MAAMqf,YAAcA,EAAW,CAC7CpG,EAAKX,UAAYojB,EAAKI,UAAY7iB,EAAKE,aAAe,EACtD+7B,GAAW,EACX,OAKPA,GACDn1C,EAAKi1C,iBAGTvpC,QAAQC,IAAR,uCAAAtJ,OAC2Cid,EAD3C,0CAAAjd,OAEqB6W,EAAKX,UAF1B,uCAAAlW,OAGwB6W,EAAKE,aAH7B,uCAAA/W,OAIwB6W,EAAKC,aAJ7B,4BAAA9W,OAKaK,KAl5BE1C,EAs5BnBi1C,eAAiB,WACbj1C,EAAK60C,sBAAuB,EAC5B,IAAM37B,EAAOlZ,EAAKgkB,QAAQ/Z,QAC1ByB,QAAQC,IAAR,oEAAAtJ,OAEwB6W,EAAKC,aAF7B,uCAAA9W,OAGwB6W,EAAKE,aAH7B,oCAAA/W,OAIqB6W,EAAKX,UAJ1B,4BAAAlW,OAKarC,EAAKC,MAAMyC,SAGFwW,EAAKC,aAAeD,EAAKE,eACzBF,EAAKX,WACvBW,EAAKX,UAAYW,EAAKC,aAAeD,EAAKE,aAC1C1N,QAAQC,IAAR,oEAAAtJ,OAEqB6W,EAAKX,UAF1B,2CAAAlW,OAGwB6W,EAAKE,aAH7B,2CAAA/W,OAIwB6W,EAAKC,aAJ7B,8CAAA9W,OAK2BrC,EAAK60C,qBALhC,gCAAAxyC,OAMarC,EAAKC,MAAMyC,UAGxBgJ,QAAQC,IAAR,oFAAAtJ,OAEqB6W,EAAKX,UAF1B,2CAAAlW,OAGwB6W,EAAKE,aAH7B,2CAAA/W,OAIwB6W,EAAKC,aAJ7B,8CAAA9W,OAK2BrC,EAAK60C,qBALhC,gCAAAxyC,OAMarC,EAAKC,MAAMyC,UAn7Bb1C,EAw7BnBs1C,cAx7BmBh0C,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAw7BH,SAAAuwC,IAAA,IAAA7yC,EAAAmP,EAAA5L,EAAAob,EAAAthB,EAAA0F,EAAA,OAAAV,EAAArE,EAAAgF,KAAA,SAAA8vC,GAAA,cAAAA,EAAA5vC,KAAA4vC,EAAA3vC,MAAA,UACJnD,EAAW1C,EAAKC,MAAhByC,OACFmP,EAAOC,KAAUtN,IAAI9B,GAFf,CAAA8yC,EAAA3vC,KAAA,eAAA2vC,EAAAhuC,OAAA,wBAKZxH,EAAKqhB,UAAYY,KAAKwM,MACtBzuB,EAAKukB,SAAU,EACfvkB,EAAKmzC,WAAY,EAEK,EACP,EACTltC,EAAQguC,IAER5yB,EAAYrhB,EAAKqhB,UAbXm0B,EAAA3vC,KAAA,GAcSlG,KAAgBC,KAAK,CACtCC,QAAS,iBACT8H,QAASkK,EAAKnS,GACdgjB,gBARkB,EASlBC,OARW,EASX1c,MAAOA,IAnBC,WAcNlG,EAdMy1C,EAAA3uC,KAsBRwa,IAAcrhB,EAAKqhB,UAtBX,CAAAm0B,EAAA3vC,KAAA,gBAAA2vC,EAAAhuC,OAAA,qBA4BRxH,EAAKC,MAAMyC,SAAWA,EA5Bd,CAAA8yC,EAAA3vC,KAAA,gBAAA2vC,EAAAhuC,OAAA,kBAgCRqK,EAAK+iC,aACL50C,EAAKmzC,UAAYpzC,EAAOiiB,SAAS7d,OAAS,GAAK0N,EAAK+iC,aAAal1C,KAAOK,EAAOiiB,SAAS,GAAGtiB,GAE3FM,EAAKmzC,WAAY,EAErBznC,QAAQC,IAAI,yCAAyC,GACrD3L,EAAKE,SAAS,CAAEmzC,mBAAmB,EAAOvB,aAAc,KAExDxoC,IAAawZ,SAAS/iB,EAAOiiB,UAC7BjiB,EAAOiiB,SAASgb,UAGS,EACzBtxB,QAAQC,IAAI,yCAEZ3L,EAAK+1B,QAHoB,EAGQh2B,EAAOiiB,SAAUsvB,GAAmBE,kBAG/D/rC,EAAQwB,IAAUC,WACxB4kC,YAAoBrmC,EAAO1F,EAAOiiB,UAClC7a,YAAiB1B,EAAO,CAAC/C,IAEzBkvC,EAAaqB,aAAalzC,EAAOiiB,UAEjChiB,EAAK8zC,sBAAsB/zC,GAxDf,yBAAAy1C,EAAApuC,SAAAmuC,MAx7BGv1C,EAm/BnBy1C,oBAAsB,SAAAxpC,GAClBA,EAAME,iBACNF,EAAMyX,kBAFqB,IAInBhhB,EAAW1C,EAAKC,MAAhByC,OACHgzC,YAAahzC,IAElBiG,IAAiB85B,aAAY,IA1/BdziC,EA6/BnB21C,sBAAwB,SAAA1pC,GAAS,IACrB6lC,EAAiB9xC,EAAKX,MAAtByyC,aAER,GAAIA,EAAa3tC,OAAS,EAAG,CACzB,IAAMyxC,EAAY9D,EAAa+D,MAC/B,GAAID,EAAW,KACHlzC,EAAsBkzC,EAAtBlzC,OAAQ4c,EAAcs2B,EAAdt2B,UACZ5c,IAAW1C,EAAKC,MAAMyC,QACtBmW,aAASnW,EAAQ4c,SAIzBtf,EAAKs1C,iBAtgCT5pC,QAAQC,IAAR,6BAAAtJ,OAAyCpC,EAAMyC,OAA/C,gBAAAL,OAAoEpC,EAAMqf,YAE1Etf,EAAKqhB,UAAYY,KAAKwM,MACtBzuB,EAAKX,MAAQ,CACT6T,WAAY,EACZ4iC,cAAe,KACf5D,cAAc,EACdS,QAAS,GACT1hB,cAAc,EACduhB,iBAAiB,EACjBC,eAAgBnB,GAAmBzX,KACnCkc,mBAAoB,EACpB1C,mBAAmB,EACnBvB,aAAc,IAGlB9xC,EAAKgkB,QAAUhjB,IAAM8M,YACrB9N,EAAK4zC,SAAW5yC,IAAM8M,YAEtB9N,EAAKq1C,SAAW,IAAIjxC,IAEpBpE,EAAK0zC,kBAAoBsC,aAASh2C,EAAK0zC,kBAAmB,KAxB3C1zC,uFA6CKK,EAAWC,GAAW,IAClCoC,EAAWlC,KAAKP,MAAhByC,OAEFwW,EAAO1Y,KAAKwjB,QAAQ/Z,QACpB1J,EAAW,CACbgY,UAAWW,EAAKX,UAChBY,aAAcD,EAAKC,aACnBC,aAAcF,EAAKE,cAWvB,OARA1N,QAAQC,IAAR,iEAAAtJ,OAEqB6W,EAAKX,UAF1B,uCAAAlW,OAGwB6W,EAAKC,aAH7B,uCAAA9W,OAIwB6W,EAAKE,aAJ7B,4BAAA/W,OAKaK,IAGNnC,6CAGQF,EAAWC,EAAWC,GAAU,IAAAqJ,EACjBpJ,KAAKP,MAA3ByC,EADuCkH,EACvClH,OAAQ4c,EAD+B1V,EAC/B0V,UAEVpG,EAAO1Y,KAAKwjB,QAAQ/Z,QAC1ByB,QAAQC,IAAR,2CAAAtJ,OAC+CK,EAD/C,gBAAAL,OACoEid,EADpE,kCAAAjd,OAEmBhC,EAAUqC,OAF7B,qBAAAL,OAEuDhC,EAAUif,UAFjE,oCAAAjd,OAGqB6W,EAAKX,UAH1B,uCAAAlW,OAIwB6W,EAAKC,aAJ7B,uCAAA9W,OAKwB6W,EAAKE,eAGzB/Y,EAAUqC,SAAWA,GAAUrC,EAAUif,YAAcA,EACvD9e,KAAK2W,iBAAiBzU,EAAQrC,EAAUqC,OAAQ4c,EAAWjf,EAAUif,WAErE9e,KAAKw0C,qBAAqBz0C,iDAIZqQ,EAAWC,GAAW,IAAA7C,EACHxN,KAAKP,MAAlCyC,EADgCsL,EAChCtL,OAAQ4c,EADwBtR,EACxBsR,UAAW/b,EADayK,EACbzK,MADau0B,EAEsDt3B,KAAKnB,MAA3F6yC,EAFgCpa,EAEhCoa,aAAcS,EAFkB7a,EAElB6a,QAAS3b,EAFSc,EAETd,SAAU/F,EAFD6G,EAEC7G,aAAcuhB,EAFf1a,EAEe0a,gBAAiBa,EAFhCvb,EAEgCub,kBAExE,OAAIziC,EAAUrN,QAAUA,IAIpBqN,EAAUlO,SAAWA,IAIrBkO,EAAU0O,YAAcA,IAIxBzO,EAAUwiC,oBAAsBA,IAIhCxiC,EAAUqhC,eAAiBA,IAI3BrhC,EAAU8hC,UAAYA,IAItB9hC,EAAUmmB,WAAaA,IAIvBnmB,EAAUogB,eAAiBA,GAI3BpgB,EAAU2hC,kBAAoBA,qDAOlB,IACR9vC,EAAWlC,KAAKP,MAAhByC,OACRlC,KAAK2W,iBAAiBzU,EAAQ,GAE9B4G,IAAawH,GAAG,mBAAoBtQ,KAAK0yC,oBACzC5pC,IAAawH,GAAG,uBAAwBtQ,KAAK+yC,wBAC7CjqC,IAAawH,GAAG,uBAAwBtQ,KAAK4nC,wBAC7C9+B,IAAawH,GAAG,6BAA8BtQ,KAAKqyC,8BACnDvpC,IAAawH,GAAG,8BAA+BtQ,KAAK+xC,yBACpDjpC,IAAawH,GAAG,6BAA8BtQ,KAAK+xC,yBACnDjpC,IAAawH,GAAG,wBAAyBtQ,KAAKqxC,yBAC9C//B,KAAUhB,GAAG,wBAAyBtQ,KAAKoyC,yBAC3C9gC,KAAUhB,GAAG,2BAA4BtQ,KAAKkyC,4BAE9C7b,KAAY/lB,GAAG,0BAA2BtQ,KAAK67B,2BAC/CxF,KAAY/lB,GAAG,0BAA2BtQ,KAAK4xC,2BAC/Cvb,KAAY/lB,GAAG,uBAAwBtQ,KAAK8xC,uEAI5ChpC,IAAayH,eAAe,mBAAoBvQ,KAAK0yC,oBACrD5pC,IAAayH,eAAe,uBAAwBvQ,KAAK+yC,wBACzDjqC,IAAayH,eAAe,uBAAwBvQ,KAAK4nC,wBACzD9+B,IAAayH,eAAe,6BAA8BvQ,KAAKqyC,8BAC/DvpC,IAAayH,eAAe,8BAA+BvQ,KAAK+xC,yBAChEjpC,IAAayH,eAAe,6BAA8BvQ,KAAK+xC,yBAC/DjpC,IAAayH,eAAe,wBAAyBvQ,KAAKqxC,yBAC1D//B,KAAUf,eAAe,wBAAyBvQ,KAAKoyC,yBACvD9gC,KAAUf,eAAe,2BAA4BvQ,KAAKkyC,4BAE1D7b,KAAY9lB,eAAe,0BAA2BvQ,KAAK67B,2BAC3DxF,KAAY9lB,eAAe,0BAA2BvQ,KAAK4xC,2BAC3Dvb,KAAY9lB,eAAe,uBAAwBvQ,KAAK8xC,yGA6MrC5vC,EAAQ6b,EAAgBe,EAAWC,2GAChD1N,EAAOC,KAAUtN,IAAI9B,GACrBuzC,EAAenkC,KAAUtN,IAAI+Z,GAEnC/d,KAAK6gB,UAAYY,KAAKwM,MACtBjuB,KAAK+jB,SAAU,EACf/jB,KAAK2yC,WAAY,EACjB3yC,KAAK4zC,qBAAsB,EAE3B5zC,KAAKs0C,kCAAmC,GACpCjjC,0BACAlS,KAAgBC,KAAK,CACjBC,QAAS,WACT8H,QAASkK,EAAKnS,KAGZmmC,GAAUvmB,GAAazN,EAAKqkC,aAAe,EAC3C/B,EACFtO,GAAUh0B,EAAKqkC,aAAe,EAAIrkC,EAAKskC,2BAA6B72B,GAAwB,EAC1FqD,EAAUkjB,GAAUh0B,EAAKqkC,aAAe,GAAM52B,GAAa,EAAI20B,IAAsB,EACrFhuC,EACD4/B,GAAUh0B,EAAKqkC,aAAe,GAAM52B,EAAY,EAAI20B,IAAsBA,IAEzE5yB,EAAY7gB,KAAK6gB,oBACF1hB,KAAgBC,KAAK,CACtCC,QAAS,iBACT8H,QAASkK,EAAKnS,GACdgjB,gBAAiByxB,EACjBxxB,OAAQA,EACR1c,MAAOA,eALLlG,SAQFshB,IAAc7gB,KAAK6gB,gEAMnBxP,EAAK+iC,aACLp0C,KAAK2yC,UAAYpzC,EAAOiiB,SAAS7d,OAAS,GAAK0N,EAAK+iC,aAAal1C,KAAOK,EAAOiiB,SAAS,GAAGtiB,GAE3Fc,KAAK2yC,WAAY,EAGrB7pC,IAAawZ,SAAS/iB,EAAOiiB,UAC7BjiB,EAAOiiB,SAASgb,UAGZ+Y,EAAqBtF,OAAO2F,YAC5BvkC,GAAQA,EAAKqkC,aAAe,oBACnB5xC,EAAIvE,EAAOiiB,SAAS7d,OAAS,eAAGG,GAAK,uBAClC5E,EAAOK,EAAOiiB,SAAS1d,GAAvB5E,MAEHK,EAAOiiB,SAAS1d,GAAGyuC,aACpBrzC,EAAKmS,EAAKskC,4BACVz2C,EAAKq2C,oBAELA,EAAqBr2C,8DAPoB4E,4BAarDyxC,EAAqBA,IAAuBtF,OAAO2F,UAAY,EAAIL,EACnErqC,QAAQC,IAAI,uCAAyCoqC,GAEjDtD,EAAiBnB,GAAmBE,iBACpClyB,EACAmzB,EAAiBnB,GAAmBI,kBAC7B7L,GAAUkQ,IACjBtD,EAAiBnB,GAAmBG,kBAGxCjxC,KAAKu1B,QAAQggB,EAAoBh2C,EAAOiiB,SAAUywB,EAAgB,WAC9D1kC,EAAK+mC,kCAAmC,EACpCx1B,GACA+2B,aAAiB3zC,EAAQ4c,KAK3B7Z,EAAQwB,IAAUC,WACxB4kC,YAAoBrmC,EAAO1F,EAAOiiB,UAClC7a,YAAiB1B,EAAO,CAAC/C,IACzB4zC,YAAiB7wC,EAAO/C,GAExBkvC,EAAaqB,aAAalzC,EAAOiiB,UAEjCxhB,KAAKszC,sBAAsB/zC,GAG3ByX,YAAgB3F,EAAKnS,4BAErBc,KAAKu1B,QACD,EACA,GACAub,GAAmBE,iBACnB,kBAAOzjC,EAAK+mC,kCAAmC,YAInDmB,GAAgB13B,IAAmB7b,GACnC/C,KAAgBC,KAAK,CACjBC,QAAS,YACT8H,QAAS4W,gKAiBKyD,GAEtB,IAAK,IAAI1d,EAAI0d,EAAS7d,OAAS,EAAGG,GAAK,EAAGA,IAAK,CAC3C,IAAI+D,EAAU2Z,EAAS1d,GACvB,GAAI+D,GAAWA,EAAQmB,QACnB,OAAQnB,EAAQmB,QAAQ,UACpB,IAAK,eAAgB,IAAA+sC,EACD/1C,KAAKg2C,gBAAgBnuC,GADpBouC,EAAAn1C,OAAAwF,EAAA,EAAAxF,CAAAi1C,EAAA,GACZ72C,EADY+2C,EAAA,GAEjB,GAFiBA,EAAA,GAGHC,aAAaruC,EAAQmB,QAAQC,MAAMC,OACpCitC,MACL1vC,IAAU2vC,oBAAoBl3C,EAAI2I,GAG1C,MAEJ,IAAK,iBAAkB,IAAAwuC,EACHr2C,KAAKs2C,kBAAkBzuC,GADpB0uC,EAAAz1C,OAAAwF,EAAA,EAAAxF,CAAAu1C,EAAA,GACdn3C,EADcq3C,EAAA,GAEnB,GAFmBA,EAAA,GAGL1uC,EAAQmB,QAAQ/J,QAAQA,QACzBk3C,MACL1vC,IAAU2vC,oBAAoBl3C,EAAI2I,qCAkMtD0tC,EAAoBpD,EAASF,EAAgBxP,GACjDziC,KAAKN,SACD,CAAE61C,mBAAoBA,EAAoBpD,QAASA,EAASF,eAAgBA,GAC5ExP,wCAIK0P,EAAS1P,GACK,IAAnB0P,EAAQxuC,OAKZ3D,KAAKN,SACD,CAAEyyC,QAASA,EAAQtwC,OAAO7B,KAAKnB,MAAMszC,SAAUF,eAAgBnB,GAAmBK,sBAClF1O,GANIA,GAAUA,2CAUP+T,EAAc3uC,EAASoqC,EAAgBxP,GAC7C56B,GAEL7H,KAAKN,SACD,CACIyyC,QAASnyC,KAAKnB,MAAMszC,QAAQhmC,OAAO,SAAAjG,GAAC,OAAIA,EAAEhH,KAAOs3C,IAAc30C,OAAO,CAACgG,IACvEoqC,eAAgBA,GAEpBxP,uCAII0P,EAASS,EAAUnQ,GACJ,IAAnB0P,EAAQxuC,QAEZ3D,KAAKN,SAALoB,OAAAkO,EAAA,EAAAlO,CAAA,CAAgBqxC,QAASnyC,KAAKnB,MAAMszC,QAAQtwC,OAAOswC,IAAaS,GAAYnQ,yCAGlE53B,EAAa43B,GAAU,IACzB0P,EAAYnyC,KAAKnB,MAAjBszC,QACR,GAAuB,IAAnBA,EAAQxuC,OAAZ,CAEA,IAAIsC,EAAM,IAAIrC,IAAIiH,EAAY5E,IAAI,SAAAC,GAAC,MAAI,CAACA,EAAGA,MAE3ClG,KAAKN,SACD,CAAEyyC,QAASA,EAAQhmC,OAAO,SAAAjG,GAAC,OAAKD,EAAIlC,IAAImC,EAAEhH,MAAM+yC,eAAgBnB,GAAmBE,kBACnFvO,qCAmSC,IAAAxnB,EAAAjb,KAAAoY,EACuBpY,KAAKP,MAAzBwC,EADHmW,EACGnW,QAASC,EADZkW,EACYlW,OADZu1B,EAEqFz3B,KAAKnB,MAAvFszC,EAFH1a,EAEG0a,QAASoD,EAFZ9d,EAEY8d,mBAAoB9kB,EAFhCgH,EAEgChH,aAAcuhB,EAF9Cva,EAE8Cua,gBAAiBa,EAF/Dpb,EAE+Dob,kBAEpE3nC,QAAQC,IAAI,iCAAkCnL,KAAKP,MAAMyC,OAAQlC,KAAKP,MAAMqf,UAAW+zB,EAAmBV,EAAQxuC,QAElH,IAAMkS,EAAYrC,YAActR,GA6DhC,OA1DAlC,KAAK60C,SAASvY,QACdt8B,KAAKwhB,SAAWiP,EACV,KACA0hB,EAAQlsC,IAAI,SAACC,EAAGpC,GACZ,IAAM2yC,EAAc3yC,EAAI,EAAIquC,EAAQruC,EAAI,GAAK,KACvCqb,EAAO,IAAIsC,KAAc,IAATvb,EAAEiZ,MAClBu3B,EAAWD,EAAc,IAAIh1B,KAAwB,IAAnBg1B,EAAYt3B,MAAeA,EAC/D8gB,GAAW,EAEL,IAANn8B,GACAqb,EAAKw3B,gBAAkBD,EAASC,eAChCx3B,EAAKy3B,aAAeF,EAASE,YAC7Bz3B,EAAK6gB,YAAc0W,EAAS1W,YAE5BC,GAAW,GAGf,IAAI4W,EAAI,KACR,GAAIC,aAAiB5wC,GACjB2wC,EACIr1C,EAAAtB,EAAAC,cAAC42C,GAAD,CACI5oC,IAAK,SAAAyT,GAAE,OAAI3G,EAAK45B,SAAS5pC,IAAInH,EAAG8d,IAChC1f,OAAQgE,EAAEiB,QACV2X,UAAW5Y,EAAEhH,GACb8pC,oBAAqBuM,IAAuBrvC,EAAEhH,SAGnD,CACH,IAAM+pC,EAEFpzB,GACM,IAAN/R,GACC2yC,IACIK,aAAiBL,IACdvwC,EAAEgZ,iBAAmBu3B,EAAYv3B,gBACjChZ,EAAEiZ,KAAOs3B,EAAYt3B,KAAO63B,KAExCH,EACIr1C,EAAAtB,EAAAC,cAAC82C,GAAD,CACI9oC,IAAK,SAAAyT,GAAE,OAAI3G,EAAK45B,SAAS5pC,IAAInH,EAAG8d,IAChC1f,OAAQgE,EAAEiB,QACV2X,UAAW5Y,EAAEhH,GACbkmC,aAAcl/B,EAAEu/B,cAChBwD,UAAWA,EACXD,oBAAqBuM,IAAuBrvC,EAAEhH,KAM1D,OACIsC,EAAAtB,EAAAC,cAAA,OAAKmB,IAAG,WAAAO,OAAaqE,EAAEiB,QAAf,gBAAAtF,OAAqCqE,EAAEhH,KAC1C+gC,GAAYz+B,EAAAtB,EAAAC,cAAC+2C,GAAD,CAAS/3B,KAAMjZ,EAAEiZ,OAC7B03B,KAMfr1C,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IAAWN,EAAQoB,WAAY,gBAAiB,CACvD8zC,iCAAkCnF,IAEtChP,YAAahjC,KAAKi1C,qBAClBzzC,EAAAtB,EAAAC,cAAA,OAAKgO,IAAKnO,KAAKwjB,QAASpjB,UAAU,wBAAwB2kB,SAAU/kB,KAAKujB,cACrE/hB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,sBACfoB,EAAAtB,EAAAC,cAAA,OAAKgO,IAAKnO,KAAKozC,SAAUhzC,UAAU,uBAC9BJ,KAAKwhB,WAGdhgB,EAAAtB,EAAAC,cAACi3C,GAAD,MACCvE,GAAqBrxC,EAAAtB,EAAAC,cAACk3C,GAAD,CAAkB50C,QAASzC,KAAKm1C,wBACtD3zC,EAAAtB,EAAAC,cAACm3C,GAAD,CAAep1C,OAAQA,IACvBV,EAAAtB,EAAAC,cAACo3C,GAAD,MACA/1C,EAAAtB,EAAAC,cAACq3C,GAAD,0DApkCoB/3C,EAAOZ,GACnC,OAAIY,EAAMyC,SAAWrD,EAAM6T,YAAcjT,EAAMqf,YAAcjgB,EAAMy2C,cACxD,CACH5iC,WAAYjT,EAAMyC,OAClBozC,cAAe71C,EAAMqf,UACrB2R,cAAc,EACduhB,iBAAiB,EACjBC,eAAgBnB,GAAmBE,iBACnCuE,mBAAoB,EACpB1C,kBAAmBpzC,EAAMyC,SAAWrD,EAAM6T,WAC1C4+B,aAAc7xC,EAAMyC,SAAWrD,EAAM6T,WAAa,GAAK7T,EAAMyyC,cAI9D,0CAgbS9vB,GACXA,GACmB,IAApBA,EAAS7d,QACR6d,EAAS,GAAGra,SAEjBhI,KAAgBC,KAAK,CACjBC,QAAS,eACT8H,QAASqa,EAAS,GAAGra,QACrB0D,YAAa2W,EAASvb,IAAI,SAAAC,GAAC,OAAIA,EAAEhH,cAnelBsB,IAAMC,WAumClBqC,OA7mCA,SAAAC,GAAK,MAAK,CACrBM,WAAY,CACRA,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQ8c,KAAK,KAAO,iBA2mC5C,CAAExc,WAAW,GAAhCT,CAAwCsuC,8CCrnCjDqG,8MACF54C,MAAQ,CACJwpB,SAAU,QAGdqvB,gBAAkB,SAAAjsC,GACdjM,EAAKm4C,WAAWlsC,EAAM6c,kBAG1BqvB,WAAa,SAAAtvB,GACT7oB,EAAKE,SAAS,CAAE2oB,gBAGpB9gB,YAAc,WACV/H,EAAKE,SAAS,CAAE2oB,SAAU,UAG9B3gB,eAAiB,WACblI,EAAK+H,cADc,IAGXI,EAAMnI,EAAKC,MAAXkI,EAEFC,EAAOpI,EAAKo4C,gBAAgBnJ,KAAaoJ,YAC/C,GAAKjwC,EAAL,CAEAE,IAAKF,GAEL,IAAMtG,EAAG,GAAAO,OAAM+F,EAAN,uBACHC,EAAUF,EAAE,cAGlBnI,EAAKuI,sBAAsBzG,EAAKuG,EAFjB,UAKnB+vC,gBAAkB,SAAAC,GACd,IAAKA,EAAY,MAAO,GADI,IAGpBrxB,EAASqxB,EAATrxB,KACR,IAAKA,EAAM,MAAO,GAElB,IAAMlP,EAAoBC,KAAYvT,IAAI,YAE1C,OAAQsT,EAAoBA,EAAkB/V,MAAQ,yBAA2B,eAAiBilB,KAGtGze,sBAAwB,SAACzG,EAAKuG,EAASG,GACnC,GAAK1G,EAAL,CAD8C,IAAAU,EAGNxC,EAAKC,MAArCyI,EAHsClG,EAGtCkG,gBAAiBjG,EAHqBD,EAGrBC,QAHqBD,EAGZ2F,EAClC,GAAKO,EAAL,CAIIC,IAAiBC,mBAAmB9G,EAAK+G,IAAqC,IAAsBL,IAEpGE,EAAgBL,EAAS,CACrBS,iBAAkBD,IAClBL,OAAQ,CACJxG,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACIoB,IAAI,QACJkH,aAAW,QACXC,MAAM,UACNrI,UAAW6B,EAAQyG,MACnBjG,QAAS,kBAAM0F,IAAiBQ,sBAAsBrH,KACtDE,EAAAtB,EAAAC,cAACyI,EAAA1I,EAAD,eAOpB43C,YAAc,WACVt4C,EAAK+H,cAEL,IAAMK,EAAOpI,EAAKo4C,gBAAgBnJ,KAAaoJ,YAC1CjwC,IAELzI,KAAgBqI,aAAa,CACzBnI,QAAS,yBACTw4C,WAAY,OAGhB14C,KAAgBqI,aAAa,CACzBnI,QAAS,sBACToI,KAAM,CAAEG,oFAIP,IAAAK,EAC6BjI,KAAKP,MAA/BwC,EADHgG,EACGhG,QAAS0F,EADZM,EACYN,EAAGvH,EADf6H,EACe7H,UACZioB,EAAaroB,KAAKnB,MAAlBwpB,SAER,OACI7mB,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAACoI,EAAArI,EAAD,CACIE,UAAW6B,EAAQk2B,WAAa,IAAM/3B,EACtCoI,aAAW,QACXqF,KAAMqS,QAAQmI,GACd5lB,QAASzC,KAAK03C,iBACdl2C,EAAAtB,EAAAC,cAAC2wB,GAAA5wB,EAAD,OAEJsB,EAAAtB,EAAAC,cAACmpB,GAAAppB,EAAD,CACIhB,GAAG,cACHmpB,SAAUA,EACVxa,KAAMqS,QAAQmI,GACdkB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBC,aAAc,CACV7B,SAAU,SACVC,WAAY,SAEhBiJ,gBAAiB,CACblJ,SAAU,MACVC,WAAY,SAEhBha,QAAS9N,KAAKuH,aACd/F,EAAAtB,EAAAC,cAACwpB,GAAAzpB,EAAD,CAAUuC,QAASzC,KAAK0H,gBACpBlG,EAAAtB,EAAAC,cAACgU,GAAAjU,EAAD,KACIsB,EAAAtB,EAAAC,cAAC43C,GAAA73C,EAAD,OAEJsB,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CAAcgD,QAASyE,EAAE,eAE7BnG,EAAAtB,EAAAC,cAACwpB,GAAAzpB,EAAD,CAAUuC,QAASzC,KAAK83C,aACpBt2C,EAAAtB,EAAAC,cAACgU,GAAAjU,EAAD,KACIsB,EAAAtB,EAAAC,cAAC63C,GAAA93C,EAAD,OAEJsB,EAAAtB,EAAAC,cAACmU,GAAApU,EAAD,CAAcgD,QAASyE,EAAE,6BA/HbnH,IAAMC,WA+I3BqO,GANCC,YACZjM,IAhJW,SAAAC,GAAK,MAAK,CACrB2F,MAAO,CACHuG,QAASlM,EAAMmM,QAAQC,KAAO,KA8If,CAAE5L,WAAW,IAChCiM,cACAC,eAGWX,CAAQ2oC,ICtHjBQ,uBACF,SAAAA,EAAYx4C,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAi4C,IACfz4C,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAm3C,GAAA7zC,KAAApE,KAAMP,KAwBVy4C,iCAAmC,SAAAtoC,GAAU,IACjCioC,EAAepJ,KAAfoJ,WAERr4C,EAAKE,SAAS,CAAEm4C,gBA5BDr4C,EA+BnB24C,6BAA+B,SAAAvoC,GAAU,IAC7BioC,EAAejoC,EAAfioC,WAIR,GAFAr4C,EAAKE,SAAS,CAAEm4C,eAEZA,EAAY,CACZ,IAAM5yC,EAAQwB,IAAUC,WACxB0xC,YAAsBnzC,EAAO4yC,KAtClBr4C,EA0CnB+H,YAAc,WACVpI,KAAgBqI,aAAa,CACzBnI,QAAS,yBACTw4C,WAAY,QA7CDr4C,EAiDnB6qB,WAAa,WAAM,IACPwtB,EAAer4C,EAAKX,MAApBg5C,WACR,GAAKA,EAAL,CAFe,IAIPQ,EAAiBR,EAAjBQ,aAERl5C,KAAgBC,KAAK,CACjBC,QAAS,mBACTi5C,OAAQT,EAAW34C,GACnBm5C,cAAeA,IAGnB74C,EAAK+H,gBA7DU/H,EAgEnByvC,mBAAqB,SAAAC,GAAa,IAGxBjwC,EAFiBO,EAAKX,MAApBg5C,WACAlJ,SACiB78B,KAAK,SAAA5L,GAAC,OAAIA,EAAEjH,QAAQC,KAAOgwC,IACpD,GAAKjwC,EAAL,CAEA,IAAMgG,EAAQwB,IAAUC,WACxByoC,YAAmBlqC,EAAOhG,EAAS,MAEXO,EAAKgwC,oBAAoBN,GACjCvlC,QAAQ,SAAAzD,GACpBipC,YAAmBlqC,EAAOiB,EAAG,UA3ElB1G,EA+EnBgwC,oBAAsB,SAAAN,GAAa,IACvB2I,EAAer4C,EAAKX,MAApBg5C,WACR,IAAKA,EAAY,MAAO,GAFO,IAIvBlJ,EAAakJ,EAAblJ,SACR,IAAKA,EAAU,MAAO,GAEtB,IAAMc,EAAU,GACVnQ,EAAQqP,EAASpP,UAAU,SAAAr5B,GAAC,OAAIA,EAAEjH,QAAQC,KAAOgwC,IACvD,IAAe,IAAX5P,EAAc,MAAO,GAEzB,IACMoQ,EAAM9U,KAAKC,MAAMyE,EADE,GAEnBqQ,EAASrQ,EAFU,EAInBsQ,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQ/pC,KAXS,EAWekqC,EAAUE,GAE9CL,EAAQ/pC,KAba,EAaWkqC,EAAUD,GACtCI,EAdiB,GAejBN,EAAQ/pC,KAfS,EAeekqC,EAAUG,IAI9CD,GAAc,GACdL,EAAQ/pC,KApBa,EAoBWgqC,EAAMI,GAEtCC,EAtBqB,GAuBrBN,EAAQ/pC,KAvBa,EAuBWgqC,EAAMK,GAGtCF,EAAUjV,KAAKoV,KAAKrB,EAAShrC,OA1BR,KA2BjBmsC,GAAc,GACdL,EAAQ/pC,KA5BS,EA4BemqC,EAAUC,GAE9CL,EAAQ/pC,KA9Ba,EA8BWmqC,EAAUF,GACtCI,EA/BiB,GAgCjBN,EAAQ/pC,KAhCS,EAgCemqC,EAAUE,IAI3CN,EAAQxpC,IAAI,SAAAnC,GAAC,OAAI6qC,EAAS7qC,MA9HlBtE,EAiInBgpC,gBAAkB,SAAA/8B,GACd,IAAMyjC,EAAYe,OAAOxkC,EAAM4Z,OAAO6qB,QAAQhB,WACzCA,GAEA1vC,EAAKwoC,YAEVxoC,EAAKE,SAAS,CAAEwvC,cAChB1vC,EAAKyvC,mBAAmBC,KAxIT1vC,EA2InB+oC,gBAAkB,SAAA98B,GACd,IAAMyjC,EAAYe,OAAOxkC,EAAM4Z,OAAO6qB,QAAQhB,WAC9C,GAAKA,EAUL,OARA1vC,EAAKE,SAAS,CAAEwvC,cAChB1vC,EAAKyvC,mBAAmBC,GAExB1vC,EAAKwoC,WAAY,EACjBr7B,SAASyjC,iBAAiB,UAAW5wC,EAAK6wC,eAE1C5kC,EAAME,iBACNF,EAAMyX,mBACC,GAvJQ1jB,EA0JnB6wC,cAAgB,WACZ7wC,EAAKE,SAAS,CAAEwvC,UAAW,IAC3B1vC,EAAKwoC,WAAY,EACjBr7B,SAAS2jC,oBAAoB,UAAW9wC,EAAK6wC,gBA1J7C7wC,EAAKX,MAAQ,CACTg5C,WAAYpJ,KAAaoJ,WACzB3I,UAAW,GALA1vC,qFASG4Q,EAAWC,EAAWid,GAAa,IAAAzhB,EACnB7L,KAAKnB,MAA/Bg5C,EAD6ChsC,EAC7CgsC,WAAY3I,EADiCrjC,EACjCqjC,UAEpB,OAAO2I,IAAexnC,EAAUwnC,YAAc3I,IAAc7+B,EAAU6+B,sDAItET,KAAan+B,GAAG,yBAA0BtQ,KAAKm4C,8BAC/C1J,KAAan+B,GAAG,6BAA8BtQ,KAAKk4C,iFAInDzJ,KAAal+B,eAAe,yBAA0BvQ,KAAKm4C,8BAC3D1J,KAAal+B,eAAe,6BAA8BvQ,KAAKk4C,mEA0I1D,IAAAl2C,EACkBhC,KAAKP,MAApBkI,EADH3F,EACG2F,EAAG1F,EADND,EACMC,QADNwL,EAE6BzN,KAAKnB,MAA/Bg5C,EAFHpqC,EAEGoqC,WAAY3I,EAFfzhC,EAEeyhC,UACpB,IAAK2I,EAAY,OAAO,KAHnB,IAKG7oB,EAAkC6oB,EAAlC7oB,MAAO2f,EAA2BkJ,EAA3BlJ,SAAU0J,EAAiBR,EAAjBQ,aAEnB9+B,EAAQo1B,EAAS1oC,IAAI,SAAAC,GAAC,OACxB1E,EAAAtB,EAAAC,cAAA,OACIC,UAAU,0BACVkB,IAAK4E,EAAEjH,QAAQC,GACfuxC,kBAAiBvqC,EAAEjH,QAAQC,GAC3B8a,MAAO,CAAE1P,MAAO,GAAIC,OAAQ,KAC5B/I,EAAAtB,EAAAC,cAACimC,GAAA,EAAD,CACI9kC,IAAK4E,EAAEjH,QAAQC,GACfkB,UAAU,kCACVswC,SAAO,EACPzxC,QAASiH,EACT5F,YAAaqwC,IACbC,MAAM,IAEVpvC,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,iCAAiC8F,EAAEpH,UAIpD+xC,EAAelC,EAASpP,UAAU,SAAAr5B,GAAC,OAAIA,EAAEjH,QAAQC,KAAOgwC,IACxDjwC,GAA4B,IAAlB4xC,EAAsBlC,EAASkC,GAAgB,KAE/D,OACIrvC,EAAAtB,EAAAC,cAACyN,EAAA1N,EAAD,CACIE,UAAW6B,EAAQsrB,WACnB1f,MAAI,EACJoY,mBAAoB,EACpBnY,QAAS9N,KAAKuH,YACdwG,kBAAgB,gCAChB9L,QAAS,CAAEqB,MAAOrB,EAAQyrB,YAC1BlsB,EAAAtB,EAAAC,cAAC+N,EAAAhO,EAAD,CACIhB,GAAG,gCACHkB,UAAWmC,IAAWN,EAAQs2C,gBAATz3C,OAAA2P,GAAA,EAAA3P,CAAA,GAChBmB,EAAQu2C,qBAAuBt4B,QAAQjhB,KAE5Cw5C,mBAAiB,GACjBj3C,EAAAtB,EAAAC,cAACoU,GAAArU,EAAD,CAAYsU,QAAQ,KAAKpU,UAAW6B,EAAQy2C,eAAgBjkC,QAAM,GAC7Dua,GAELxtB,EAAAtB,EAAAC,cAACw4C,GAAD,CAAuBv4C,UAAW6B,EAAQ22C,mBAE9Cp3C,EAAAtB,EAAAC,cAAC+lB,GAAAhmB,EAAD,CACI+B,QAAS,CAAEoc,KAAMpc,EAAQ42C,aACzB5O,YAAajqC,KAAKwoC,gBAClB0B,WAAYlqC,KAAKyoC,eACjBvjB,YAAallB,KAAKuoC,iBACjBhvB,GAEL/X,EAAAtB,EAAAC,cAACwO,EAAAzO,EAAD,CAAeE,UAAWmC,IAAWzB,OAAA2P,GAAA,EAAA3P,CAAA,GAAGmB,EAAQu2C,qBAAuBt4B,QAAQjhB,MAC3EuC,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuI,MAAM,UAAUhG,QAASzC,KAAKuH,aACjCI,EAAE,WAEPnG,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuI,MAAM,UAAUhG,QAASzC,KAAKqqB,YAClB1iB,EAAf0wC,EAAiB,iBAAsB,SAG/Cn4B,QAAQjhB,IAAYuC,EAAAtB,EAAAC,cAACvB,GAAA,EAAD,CAAgBK,QAASA,YA/N/BuB,IAAMC,YA4OtBqO,GALCC,YACZjM,IAvQW,SAAAC,GAAK,MAAK,CACrB81C,YAAa,CACTxpC,QAAS,OACTypC,SAAU,OACV5sB,UAAW,IACXjd,QAAS,cACT5L,WAAY,eAEhBqqB,UAAW,CACPpjB,MAAO,KAEXiuC,gBAAiB,CACblpC,QAAS,OACT0pC,cAAe,MACflrB,WAAY,UAEhBN,WAAY,CACR9kB,MAAO1F,EAAME,QAAQqG,KAAKpG,SAE9B01C,gBAAiB,CACbhlC,OAAQ,uBAEZ8kC,eAAgB,CACZM,SAAU,EACVC,WAAY,GAEhBT,qBAAsB,CAClBU,cAAe,WA6OnB1pC,cAGWV,CAAQmpC,IC1KRkB,uBA1GX,SAAAA,EAAY15C,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAm5C,IACf35C,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAq4C,GAAA/0C,KAAApE,KAAMP,KAiCV25C,8BAAgC,SAAAxpC,GAC5BpQ,EAAK4L,eAnCU5L,EAsCnB0c,qBAAuB,SAAAtM,GACnBpQ,EAAKE,SAAS,CACVwC,OAAQ0N,EAAOuM,WACf2C,UAAWlP,EAAOgP,iBAzCPpf,EA6CnBi1C,eAAiB,WACbj1C,EAAK65C,aAAa5E,kBA9CHj1C,EAiDnBs1C,cAAgB,WACZt1C,EAAK65C,aAAavE,iBAlDHt1C,EAqDnBk1C,gBAAkB,WACdl1C,EAAK65C,aAAa3E,mBAnDlBl1C,EAAKX,MAAQ,CACTqD,OAAQiG,IAAiBiN,YACzB0J,UAAW3W,IAAiB0W,eAC5By6B,cAAe,GANJ95C,qFAUG4Q,EAAWC,GAC7B,OAAIA,EAAUnO,SAAWlC,KAAKnB,MAAMqD,SAGhCmO,EAAUyO,YAAc9e,KAAKnB,MAAMigB,WAGnCzO,EAAUipC,gBAAkBt5C,KAAKnB,MAAM+yB,2DAQ3CzpB,IAAiBmI,GAAG,oCAAqCtQ,KAAKo5C,+BAC9DjxC,IAAiBmI,GAAG,qBAAsBtQ,KAAKkc,qEAI/C/T,IAAiBoI,eAAe,oCAAqCvQ,KAAKo5C,+BAC1EjxC,IAAiBoI,eAAe,qBAAsBvQ,KAAKkc,uDA0BtD,IAAA3O,EAAAvN,KAAA6L,EAiCwC7L,KAAKnB,MAA1CqD,EAjCH2J,EAiCG3J,OAAQ4c,EAjCXjT,EAiCWiT,UACRwN,GAlCHzgB,EAiCsBytC,cACMnxC,IAAzBmkB,sBAER,OACI9qB,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,iBAAkB,CAAEg3C,8BAA+BjtB,KAC1E9qB,EAAAtB,EAAAC,cAACq5C,GAAD,MACAh4C,EAAAtB,EAAAC,cAACs5C,GAAD,CAAQv3C,OAAQA,IAChBV,EAAAtB,EAAAC,cAACu5C,GAAD,CAAczvB,SAAU,SAAA9b,GAAG,OAAKZ,EAAK8rC,aAAelrC,GAAMjM,OAAQA,EAAQ4c,UAAWA,IACrFtd,EAAAtB,EAAAC,cAACw5C,GAAA,EAAD,CAAQz3C,OAAQA,IAChBV,EAAAtB,EAAAC,cAACy5C,GAAD,MACAp4C,EAAAtB,EAAAC,cAAC05C,GAAD,cArGYp5C,sJCoCbq5C,uBAtCX,SAAAA,EAAYr6C,GAAQ,OAAAqB,OAAAC,EAAA,EAAAD,CAAAd,KAAA85C,GAAAh5C,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAg5C,GAAA11C,KAAApE,KACVP,0EAGD,IAAAuC,EACyBhC,KAAKP,MAA3ByC,EADHF,EACGE,OAAQ4c,EADX9c,EACW8c,UAEVjX,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GACzC,IAAKjX,EAAS,OAAO,KAErB,IAAMgI,EAASkqC,aAAgBlyC,GACzBi4B,EAAWC,aAAYl4B,GAEvBmyC,EAAcnqC,EAASrO,EAAAtB,EAAAC,cAAC+Q,GAAA,EAAD,CAAUrB,OAAQA,IAAarO,EAAAtB,EAAAC,cAACuC,EAAA,EAAD,CAAUR,OAAQA,IAE9E,OACIV,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gCACV45C,EACDx4C,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gCACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,oBACXoB,EAAAtB,EAAAC,cAACmqC,GAAA,EAAD,CAAepoC,OAAQA,EAAQ2N,OAAQA,KAE3CrO,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,iCACXoB,EAAAtB,EAAAC,cAAA,QAAMC,UAAU,gBAAgB0/B,cAzB3Bt/B,IAAMC,qBCHjCw5C,uBACF,SAAAA,EAAYx6C,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAi6C,IACfz6C,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAm5C,GAAA71C,KAAApE,KAAMP,KAGVsR,YAAc,SAAAtF,GACVA,EAAMyX,mBALS1jB,wEAQV,IACG8J,EAAStJ,KAAKP,MAAd6J,KAER,OACI9H,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gBAAgBqC,QAASzC,KAAK+Q,aACzCvP,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,sBAAsBkJ,WAd1B9I,IAAMC,YAwBjCw5C,GAAa7mC,aAAe,GAEb6mC,mBClBTC,WAAS15C,IAAM25C,KAAK,kBAAMp0C,QAAAC,IAAA,CAAAwnC,EAAApnC,EAAA,GAAAonC,EAAApnC,EAAA,KAAA9G,KAAAkuC,EAAAtI,KAAA,cAoXjBkV,eAjXX,SAAAA,EAAY36C,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAo6C,IACf56C,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAs5C,GAAAh2C,KAAApE,KAAMP,KA4FV46C,2BAA6B,SAAAzqC,GAAU,IAAA5N,EACLxC,EAAKC,MAA3ByC,EAD2BF,EAC3BE,OAAQ4c,EADmB9c,EACnB8c,UAEZ5c,IAAW0N,EAAO1N,QAAU4c,IAAclP,EAAOkP,WACjDtf,EAAK86C,uBAjGM96C,EAqGnB86C,oBArGmBx5C,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAqGG,SAAAC,IAAA,IAAAwD,EAAA/F,EAAA4c,EAAAzU,EAAAkwC,EAAAC,EAAAld,EAAAmd,EAAA,OAAAl2C,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAA4C,EACkBzI,EAAKC,MAAjCyC,EADU+F,EACV/F,OAAQ4c,EADE7W,EACF6W,UAAWzU,EADTpC,EACSoC,KAEtBqwC,aAAgBx4C,EAAQ4c,GAHX,CAAA3Z,EAAAE,KAAA,eAAAF,EAAA6B,OAAA,wBAAAuzC,EAOYI,YAAaz4C,EAAQ4c,EAAWzU,GAP5CmwC,EAAA15C,OAAAwF,EAAA,EAAAxF,CAAAy5C,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAOIld,EAPJkd,EAAA,GAAAr1C,EAAAE,KAAA,EAQU7F,EAAKo7C,iBAAiBtd,GARhC,OAQZmd,EARYt1C,EAAAkB,KAUlB7G,EAAKE,SAAS,CAAE+6C,kBAVE,wBAAAt1C,EAAAyB,SAAAnC,MArGHjF,EAkHnBo7C,iBAAmB,SAAAtd,GACf,OAAO,IAAIv3B,QAAQ,SAAA80C,GACf,GAAKvd,EAAL,CAKA,IAAM6Y,EAAO1vC,IAAUq0C,QAAQxd,EAAKp+B,IACpC,GAAKi3C,EAAL,CAKA,IAAM4E,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAAAxvC,GAAK,OAAIovC,EAAQhY,KAAKqY,MAAMzvC,EAAM4Z,OAAO9lB,UAC7Dw7C,EAAWI,QAAU,kBAAMN,EAAQ,OACnCE,EAAWK,QAAU,kBAAMP,EAAQ,OACnCE,EAAWM,WAAWlF,QARlB0E,EAAQ,WANRA,EAAQ,SArHDr7C,EAuInBi+B,wBAA0B,SAAA7tB,GAAU,IAAAxG,EACI5J,EAAKC,MAAjCyC,EADwBkH,EACxBlH,OAAQ4c,EADgB1V,EAChB0V,UAAWzU,EADKjB,EACLiB,KAE3B,GAAInI,IAAW0N,EAAO1N,QAAU4c,IAAclP,EAAOkP,UAAW,KAAAw8B,EAC9BX,YAAaz4C,EAAQ4c,EAAWzU,GADFkxC,EAAAz6C,OAAAwF,EAAA,EAAAxF,CAAAw6C,EAAA,GACrDhxC,EADqDixC,EAAA,GAC9ChxC,EAD8CgxC,EAAA,GACtCje,EADsCie,EAAA,GAE5D/7C,EAAKE,SAAS,CACV4K,QACAC,SACA+yB,WA/IO99B,EAoJnBg8C,iCAAmC,SAAA5rC,GAAU,IAAApC,EACXhO,EAAKC,MAA3ByC,EADiCsL,EACjCtL,OAAQ4c,EADyBtR,EACzBsR,UAEhB,GAAI5c,IAAW0N,EAAO1N,QAAU4c,IAAclP,EAAOkP,UAAW,KAAA28B,EAC9BC,YAAoBx5C,EAAQ4c,GADE68B,EAAA76C,OAAAwF,EAAA,EAAAxF,CAAA26C,EAAA,GACrDnxC,EADqDqxC,EAAA,GAC9CpxC,EAD8CoxC,EAAA,GACtCre,EADsCqe,EAAA,GAE5Dn8C,EAAKE,SAAS,CACVk8C,eAAgBtxC,EAChBuxC,gBAAiBtxC,EACjBC,UAAW8yB,MA5JJ99B,EAiKnBooC,uBAAyB,SAAAh4B,GAAU,IAAAwI,EACK5Y,EAAKC,MAAjCyC,EADuBkW,EACvBlW,OAAQ4c,EADe1G,EACf0G,UAAWzU,EADI+N,EACJ/N,KACnBlD,EAAwByI,EAAxBzI,QAASC,EAAewI,EAAfxI,WAEjB,GAAIlF,IAAWiF,GAAW2X,IAAc1X,EAAY,KAAA00C,EAClBnB,YAAaz4C,EAAQ4c,EAAWzU,GADd0xC,EAAAj7C,OAAAwF,EAAA,EAAAxF,CAAAg7C,EAAA,GACzCxxC,EADyCyxC,EAAA,GAClCxxC,EADkCwxC,EAAA,GAC1Bze,EAD0Bye,EAAA,GAE1Cl0C,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GACnCxV,EAAOigC,aAAQ1hC,GACrBrI,EAAKE,SAAS,CACV4K,MAAOA,EACPC,OAAQA,EACR+yB,KAAMA,EACNh0B,KAAMA,MA7KC9J,EAkLnBw8C,mBAAqB,SAAAvwC,GACbA,GAAOA,EAAMyX,mBAnLF1jB,EAsLnBy8C,YAAc,SAAAC,GACV18C,EAAKE,SAAS,CACVw8C,WArLJ18C,EAAKq9B,SAAWr8B,IAAM8M,YACtB9N,EAAK28C,UAAY37C,IAAM8M,YAJR,IAAAuL,EAMqBrZ,EAAKC,MAAjCyC,EANO2W,EAMP3W,OAAQ4c,EANDjG,EAMCiG,UAAWzU,EANZwO,EAMYxO,KANZ+xC,EAQazB,YAAaz4C,EAAQ4c,EAAWzU,GAR7CgyC,EAAAv7C,OAAAwF,EAAA,EAAAxF,CAAAs7C,EAAA,GAQV9xC,EARU+xC,EAAA,GAQH9xC,EARG8xC,EAAA,GAQK/e,EARL+e,EAAA,GASf/e,EAAO72B,IAAUzC,IAAIs5B,EAAKp+B,KAAOo+B,EATlB,IAAAgf,EAWoCZ,YAAoBx5C,EAAQ4c,GAXhEy9B,EAAAz7C,OAAAwF,EAAA,EAAAxF,CAAAw7C,EAAA,GAWVV,EAXUW,EAAA,GAWMV,EAXNU,EAAA,GAWuB/xC,EAXvB+xC,EAAA,GAYf/xC,EAAYA,EAAY/D,IAAUzC,IAAIwG,EAAUtL,KAAOsL,EAAY,KAEnE,IAAM3C,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GACnCxV,EAAOigC,aAAQ1hC,GAfN,OAiBfrI,EAAKX,MAAQ,CACTq9C,MAAO,EACPxpC,WAAYxQ,EACZozC,cAAex2B,EACf09B,WAAW,EACXlyC,MAAOA,EACPC,OAAQA,EACR+yB,KAAMA,EACNh0B,KAAMA,EACNsyC,eAAgBA,EAChBC,gBAAiBA,EACjBrxC,UAAWA,GAGfhL,EAAK86C,sBA/BU96C,mFAkEfiH,IAAU6J,GAAG,2BAA4BtQ,KAAKq6C,4BAC9C5zC,IAAU6J,GAAG,wBAAyBtQ,KAAKy9B,yBAC3Ch3B,IAAU6J,GAAG,wBAAyBtQ,KAAKy9B,yBAC3Ch3B,IAAU6J,GAAG,4BAA6BtQ,KAAKy9B,yBAC/Ch3B,IAAU6J,GAAG,iCAAkCtQ,KAAKw7C,kCACpD/0C,IAAU6J,GAAG,qCAAsCtQ,KAAKw7C,kCACxD1yC,IAAawH,GAAG,uBAAwBtQ,KAAK4nC,uEAI7CnhC,IAAU8J,eAAe,2BAA4BvQ,KAAKq6C,4BAC1D5zC,IAAU8J,eAAe,wBAAyBvQ,KAAKy9B,yBACvDh3B,IAAU8J,eAAe,wBAAyBvQ,KAAKy9B,yBACvDh3B,IAAU8J,eAAe,4BAA6BvQ,KAAKy9B,yBAC3Dh3B,IAAU8J,eAAe,iCAAkCvQ,KAAKw7C,kCAChE/0C,IAAU8J,eAAe,qCAAsCvQ,KAAKw7C,kCACpE1yC,IAAayH,eAAe,uBAAwBvQ,KAAK4nC,mEAG1C/nC,EAAWC,EAAWC,GAAU,IAAA+Y,EACjB9Y,KAAKP,MAA3ByC,EADuC4W,EACvC5W,OAAQ4c,EAD+BhG,EAC/BgG,UAEZjf,EAAUqC,SAAWA,GAAUrC,EAAUif,YAAcA,GACvD9e,KAAKs6C,uDAmGJ,IAAA/sC,EAAAvN,KAAAqoC,EACyBroC,KAAKP,MAA3ByC,EADHmmC,EACGnmC,OAAQ4c,EADXupB,EACWvpB,UADXjT,EAYD7L,KAAKnB,MATL47C,EAHC5uC,EAGD4uC,cACAnwC,EAJCuB,EAIDvB,MACAC,EALCsB,EAKDtB,OACAqxC,EANC/vC,EAMD+vC,eACAC,EAPChwC,EAODgwC,gBACAve,EARCzxB,EAQDyxB,KACAh0B,EATCuC,EASDvC,KACAkB,EAVCqB,EAUDrB,UACAgyC,EAXC3wC,EAWD2wC,UAEJ,IAAKlf,EAAM,OAAO,KAElB,IAAM6Y,EAAO1vC,IAAUq0C,QAAQxd,EAAKp+B,KAAOo+B,EAAK6Y,KAC1C5Y,EAAM92B,IAAUg2C,WAAWtG,IAAS,GAEpCuG,EAAgBlyC,EAAY/D,IAAUq0C,QAAQtwC,EAAUtL,KAAOsL,EAAU2rC,KAAO,KAChFwG,EAAel2C,IAAUg2C,WAAWC,GACpCE,EAAYC,aAAmB,CAAEvyC,MAAOsxC,EAAgBrxC,OAAQsxC,IAEhEiB,EAAUC,aAAe76C,EAAQ4c,GACjCk+B,EAAcC,aAAmB/6C,EAAQ4c,GACzCo+B,EAAWxC,aAAgBx4C,EAAQ4c,GACrCq+B,EAAa7yC,EACb8yC,EAAc7yC,EAClB,GAAIqwB,KAAKjC,IAAIwkB,EAAYC,GAAe,IAAK,CACzC,IAAMC,EAAQ,IAAMziB,KAAKjC,IAAIwkB,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAMxiB,KAAKC,MAAMsiB,EAAaE,IAC7B,IAAMziB,KAAKC,MAAMuiB,EAAcC,GAG5E,IAAIr0C,EAAU,KACd,GAAI8zC,EACA9zC,EACIxH,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gCACXoB,EAAAtB,EAAAC,cAAA,SACIgO,IAAKnO,KAAK68B,SACVz8B,UAAU,oCACVm9B,IAAKA,EACL96B,QAASzC,KAAKg8C,mBACd1b,UAAQ,EACRD,UAAQ,EACR/1B,MAAO6yC,EACP5yC,OAAQ6yC,EACR5c,OAAQ,WACJjzB,EAAK7N,SAAS,CAAE88C,WAAW,IAC3Br9C,KAAgBqI,aAAa,CACzBnI,QAAS,iCAGjBkhC,UAAW,WACP,IAAM3D,EAASrvB,EAAKsvB,SAASpzB,QACzBmzB,IACAA,EAAOtG,OAASD,KAAYC,SAGpCmK,QAAS,WACLthC,KAAgBqI,aAAa,CACzBnI,QAAS,kCAGjBshC,QAAS,WACLxhC,KAAgBqI,aAAa,CACzBnI,QAAS,kCAGjBi+C,eAAgB,WACZ,IAAM1gB,EAASrvB,EAAKsvB,SAASpzB,QACzBmzB,GACAz9B,KAAgBqI,aAAa,CACzBnI,QAAS,0BACTi3B,OAAQsG,EAAOtG,aAK7BkmB,KACIjf,GAAOof,EACLn7C,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IAAW,uCAAwC,CAC1Dg7C,gBAAiBX,IAErBrf,IAAKof,EACLa,IAAI,GACJlzC,MAAO6yC,EACP5yC,OAAQ6yC,IAGZ57C,EAAAtB,EAAAC,cAAA,OACIC,UAAU,uCACV4Z,MAAO,CACH1P,MAAO6yC,EACP5yC,OAAQ6yC,YAM7B,GAAIJ,EACPh0C,EACIxH,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gCACXoB,EAAAtB,EAAAC,cAAA,SACIC,UAAU,oCACVm9B,IAAKA,EACL96B,QAASzC,KAAKg8C,mBACdyB,MAAI,EACJpd,UAAQ,EACR/1B,MAAO6yC,EACP5yC,OAAQ6yC,EACR5c,OAAQ,WACJjzB,EAAK7N,SAAS,CAAE88C,WAAW,QAGjCA,KACIjf,GAAOof,EACLn7C,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IAAW,uCAAwC,CAC1Dg7C,gBAAiBX,IAErBrf,IAAKof,EACLa,IAAI,GACJlzC,MAAO6yC,EACP5yC,OAAQ6yC,IAGZ57C,EAAAtB,EAAAC,cAAA,OACIC,UAAU,uCACV4Z,MAAO,CACH1P,MAAO6yC,EACP5yC,OAAQ6yC,YAM7B,GAAIF,EAAU,CACjB,IAAMQ,EAAiB,CACnBD,MAAM,EACNE,UAAU,EAEVlD,cAAeA,EACfmD,iBAAkB,CACdC,oBAAqB,mBAGrB3B,EAAUl8C,KAAKnB,MAAfq9C,MAERlzC,EACIxH,EAAAtB,EAAAC,cAAC+5C,GAAD,CACI/rC,IAAKnO,KAAKm8C,UACVD,MAAOA,EACP4B,QAASJ,EACTnzC,OAAO,OACPD,MAAO,IACPyzC,WAAW,EACXC,UAAU,SAIlBh1C,EAAUxH,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,6BAA6Bm9B,IAAKA,EAAKigB,IAAI,GAAG/6C,QAASzC,KAAKg8C,qBAGzF,OACIx6C,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBACXoB,EAAAtB,EAAAC,cAACqB,EAAAtB,EAAM+9C,SAAP,CAAgBC,SAAS,IAAIl1C,GAE7BxH,EAAAtB,EAAAC,cAACg+C,GAAA,EAAD,CAAc7gB,KAAMA,EAAM1f,OAAQ,IACjCtU,GAAQA,EAAK3F,OAAS,GAAKnC,EAAAtB,EAAAC,cAACi+C,GAAD,CAAc90C,KAAMA,wDAnU5B7J,EAAOZ,GAAO,IAClCqD,EAA4BzC,EAA5ByC,OAAQ4c,EAAoBrf,EAApBqf,UAAWzU,EAAS5K,EAAT4K,KAE3B,GAAInI,IAAWrD,EAAM6T,YAAcoM,IAAcjgB,EAAMy2C,cAAe,KAAA+I,EACtC1D,YAAaz4C,EAAQ4c,EAAWzU,GADMi0C,EAAAx9C,OAAAwF,EAAA,EAAAxF,CAAAu9C,EAAA,GAC7D/zC,EAD6Dg0C,EAAA,GACtD/zC,EADsD+zC,EAAA,GAC9ChhB,EAD8CghB,EAAA,GAElEhhB,EAAO72B,IAAUzC,IAAIs5B,EAAKp+B,KAAOo+B,EAFiC,IAAAihB,EAIf7C,YAAoBx5C,EAAQ4c,GAJb0/B,EAAA19C,OAAAwF,EAAA,EAAAxF,CAAAy9C,EAAA,GAI7D3C,EAJ6D4C,EAAA,GAI7C3C,EAJ6C2C,EAAA,GAI5Bh0C,EAJ4Bg0C,EAAA,GAKlEh0C,EAAY/D,IAAUzC,IAAIwG,EAAUtL,KAAOsL,EAE3C,IAAM3C,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GAGzC,MAAO,CACHo9B,MAAO,EACPxpC,WAAYxQ,EACZozC,cAAex2B,EACf09B,WAAW,EACXlyC,MAAOA,EACPC,OAAQA,EACR+yB,KAAMA,EACNh0B,KAVSigC,aAAQ1hC,GAWjB+zC,eAAgBA,EAChBC,gBAAiBA,EACjBrxC,UAAWA,GAInB,OAAO,YA/DkBhK,IAAMC,WCqBxBg+C,sNA/BX1tC,YAAc,SAAAtF,GACVA,EAAMyX,kBADa,IAAAlhB,EAGWxC,EAAKC,MAA3B8a,EAHWvY,EAGXuY,SAAU9X,EAHCT,EAGDS,QAEd8X,GAEJ9X,EAAQgJ,4EAGH,IAAAxD,EACgCjI,KAAKP,MAAlC8a,EADHtS,EACGsS,SAAUmkC,EADbz2C,EACay2C,KAAMC,EADnB12C,EACmB02C,SAElBv+C,EAAYmC,IACdgY,EAAW,+BAAiC,sBAC5C,CAAEmkC,KAAMA,IAGZ,OACIl9C,EAAAtB,EAAAC,cAAA,OAAKC,UAAWA,EAAWqC,QAASzC,KAAK+Q,aACpC4tC,UArBen+C,IAAMC,YCyBvBm+C,4LAzBF,IAAA58C,EACuBhC,KAAKP,MAAzBuvB,EADHhtB,EACGgtB,MAAOjd,EADV/P,EACU+P,SAEf,OACIvQ,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,4BACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,oCACXoB,EAAAtB,EAAAC,cAAA,YAAO6uB,GAEH9O,QAAQnO,IACJvQ,EAAAtB,EAAAC,cAAA,mBAEK4R,YAZGvR,IAAMC,YCCpCo+C,sNACF9tC,YAAc,SAAAtF,GACVA,EAAMyX,kBADa,IAAAlhB,EAGWxC,EAAKC,MAA3BgD,EAHWT,EAGXS,QAHWT,EAGFuY,UAIjB9X,EAAQgJ,4EAGH,IAAAxD,EACmDjI,KAAKP,MAArDoV,EADH5M,EACG4M,QAAS8pC,EADZ12C,EACY02C,SAAU18C,EADtBgG,EACsBhG,QAASsY,EAD/BtS,EAC+BsS,SAAUyU,EADzC/mB,EACyC+mB,MAE9C,OACIxtB,EAAAtB,EAAAC,cAAA,OACIC,UAAWmC,IAAWgY,EAAW,sCAAwC,6BAApDzZ,OAAA2P,GAAA,EAAA3P,CAAA,GAChBmB,EAAQ4S,QAAUA,IAEvBma,MAAOA,EACPvsB,QAASzC,KAAK+Q,aACb4tC,UArBqBn+C,IAAMC,YAkC7BqC,OAxCA,SAAAC,GAAK,MAAK,CACrB8R,QAAS,CACLpM,MAAO1F,EAAME,QAAQC,QAAQC,QAsCtBL,CAAmB+7C,yBCvC5BC,GAAY,CACd7vC,QAAS,GACTxG,MAAO,SAGLs2C,eACF,SAAAA,EAAYt/C,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAA++C,IACfv/C,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAi+C,GAAA36C,KAAApE,KAAMP,KA4CVg+B,wBAA0B,SAAA7tB,GAAU,IACxBovC,EAAWx/C,EAAKX,MAAhBmgD,OAEJA,IAAWpvC,EAAOovC,QAClBx/C,EAAKE,SAAS,CACV6a,SAAUwkC,EAA0BE,aAAaD,MAlD1Cx/C,EA2DnBuR,YAAc,SAAAtF,GACVA,EAAMyX,kBADa,IAGXzgB,EAAYjD,EAAKC,MAAjBgD,QACajD,EAAKX,MAAlB0b,UAGR9X,EAAQgJ,IAlEO,IAGPuzC,EAAWv/C,EAAXu/C,OAHO,OAKfx/C,EAAKX,MAAQ,CACTqgD,gBAAiBF,EACjBA,OAAQA,EACRzkC,SAAUwkC,EAA0BE,aAAaD,IARtCx/C,mFA4BfiH,IAAU6J,GAAG,4BAA6BtQ,KAAKy9B,yBAC/Ch3B,IAAU6J,GAAG,uBAAwBtQ,KAAKy9B,yBAC1Ch3B,IAAU6J,GAAG,2BAA4BtQ,KAAKy9B,yBAC9Ch3B,IAAU6J,GAAG,wBAAyBtQ,KAAKy9B,yBAC3Ch3B,IAAU6J,GAAG,uBAAwBtQ,KAAKy9B,yBAC1Ch3B,IAAU6J,GAAG,wBAAyBtQ,KAAKy9B,wEAI3Ch3B,IAAU8J,eAAe,4BAA6BvQ,KAAKy9B,yBAC3Dh3B,IAAU8J,eAAe,uBAAwBvQ,KAAKy9B,yBACtDh3B,IAAU8J,eAAe,2BAA4BvQ,KAAKy9B,yBAC1Dh3B,IAAU8J,eAAe,wBAAyBvQ,KAAKy9B,yBACvDh3B,IAAU8J,eAAe,uBAAwBvQ,KAAKy9B,yBACtDh3B,IAAU8J,eAAe,wBAAyBvQ,KAAKy9B,0DA2BlD,IACGzO,EAAUhvB,KAAKP,MAAfuvB,MACAzU,EAAava,KAAKnB,MAAlB0b,SAER,OACI/Y,EAAAtB,EAAAC,cAACg/C,GAAD,CAAyB5kC,SAAUA,EAAUyU,MAAOA,EAAOvsB,QAASzC,KAAK+Q,aACrEvP,EAAAtB,EAAAC,cAACi/C,GAAAl/C,EAAD,CAAU8Z,MAAO8kC,yDA/DGr/C,EAAOZ,GAAO,IAClCmgD,EAAWv/C,EAAXu/C,OAGR,OAAIA,IAFwBngD,EAApBqgD,gBAGG,CACHA,gBAAiBF,EACjBA,OAAQA,EACRzkC,SAAUwkC,EAA0BE,aAAaD,IAIlD,YAzByBx+C,IAAMC,WAAxCs+C,GAwDKE,aAAe,SAAAD,GAClB,OAAQ9+B,QAAQzZ,IAAUq0C,QAAQkE,KA+B3BD,UC5CTM,WAAmB,CACrBpwC,QAAS,GACTqwC,UAAW,eAGTR,GAAY,CACd7vC,QAAS,IAGPswC,GAAsB,CACxBtwC,QAAS,IAGPuwC,eACF,SAAAA,EAAY//C,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAw/C,IACfhgD,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA0+C,GAAAp7C,KAAApE,KAAMP,KA4FV8O,UAAY,SAAA9C,GACR,GAAsB,KAAlBA,EAAMC,QAAgB,CAEtB,GADqClM,EAAKX,MAAlC4gD,yBACsB,OAE9BjgD,EAAK+H,mBACoB,KAAlBkE,EAAMC,QACblM,EAAK8+B,aACoB,KAAlB7yB,EAAMC,SACblM,EAAKkgD,kBAtGMlgD,EA0GnBooC,uBAAyB,SAAAh4B,GAAU,IACvBzI,EAAkDyI,EAAlDzI,QAASC,EAAyCwI,EAAzCxI,WAAYu4C,EAA6B/vC,EAA7B+vC,YAAaC,EAAgBhwC,EAAhBgwC,YAClC19C,EAAW1C,EAAKC,MAAhByC,OAFuB2J,EAGUrM,EAAKX,MAAtCghD,EAHuBh0C,EAGvBg0C,iBAAkBC,EAHKj0C,EAGLi0C,WAE1B,GAAI59C,IAAWiF,EAAf,CAEA,IAAMU,EAAUiB,IAAa9E,IAAImD,EAASC,GAC1C,GAAKS,EAAL,CAKA,GAHAk4C,YAAuB,CAACl4C,IAELm4C,aAAeL,KAAiBK,aAAeJ,GAClD,CACZ,GACIpgD,EAAK2yC,QAAQxuC,QAAU,IACtBnE,EAAKygD,kBACFC,aAAQ94C,EAAY5H,EAAK2yC,QAAQ,GAAGjzC,GAAIM,EAAK2yC,QAAQ3yC,EAAK2yC,QAAQxuC,OAAS,GAAGzE,KACpF,CAGE,IAFA,IAAIihD,GAAW,EACXhO,EAAU,GACLruC,EAAI,EAAGA,EAAItE,EAAK2yC,QAAQxuC,OAAQG,IACjCtE,EAAK2yC,QAAQruC,GAAG5E,GAAKkI,EACrB+qC,EAAQzsC,KAAKlG,EAAK2yC,QAAQruC,KAErBq8C,IACDA,GAAW,EACXhO,EAAQzsC,KAAKmC,IAEjBsqC,EAAQzsC,KAAKlG,EAAK2yC,QAAQruC,KAGlCtE,EAAK2yC,QAAUA,EAGnB,IAAM7S,EAAQ9/B,EAAK2yC,QAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAO2gD,IACnDrgD,EAAKE,SAAS,CACV0gD,aAAc5gD,EAAK4gD,aAAa9gB,GAChC+gB,iBAAkB7gD,EAAK6gD,iBAAiB/gB,GACxCwgB,WAAYA,EAAa,IAKjC,IADuBE,aAAeL,IAAgBK,aAAeJ,GAClD,CACf,IAAIU,EAAa9gD,EAAK2yC,QAGtB,GAFA3yC,EAAK2yC,QAAU3yC,EAAK2yC,QAAQhmC,OAAO,SAAAjG,GAAC,OAAIA,EAAEhH,KAAOkI,IAE7Cy4C,IAAqBz4C,EAAY,CACjC,IAAMm5C,EAAY,IAAI38C,IACtB28C,EAAUt1C,IAAI7D,EAAYA,GAE1B5H,EAAKghD,gBAAgBF,EAAYC,GACjC/gD,EAAKE,SAAS,CACVogD,WAAYllB,KAAKjC,IAAImnB,EAAa,EAAG,SAEtC,CACH,IAAMxgB,EAAQ9/B,EAAK2yC,QAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAO2gD,IACnDrgD,EAAKE,SAAS,CACV0gD,aAAc5gD,EAAK4gD,aAAa9gB,GAChC+gB,iBAAkB7gD,EAAK6gD,iBAAiB/gB,GACxCwgB,WAAYllB,KAAKjC,IAAImnB,EAAa,EAAG,UAvKlCtgD,EA6KnBuzC,uBAAyB,SAAAnjC,GAAU,IACvBzI,EAAuCyI,EAAvCzI,QAAS0D,EAA8B+E,EAA9B/E,YAAamoC,EAAiBpjC,EAAjBojC,aACtB9wC,EAAW1C,EAAKC,MAAhByC,OAFuBuL,EAGUjO,EAAKX,MAAtCghD,EAHuBpyC,EAGvBoyC,iBAAkBC,EAHKryC,EAGLqyC,WAE1B,GAAK9M,GACD9wC,IAAWiF,EAAf,CAEA,IAAMo5C,EAAY11C,EAAY41C,OAAO,SAACC,EAAaC,GAE/C,OADAD,EAAYz1C,IAAI01C,EAAWA,GACpBD,GACR,IAAI98C,KAED08C,EAAa9gD,EAAK2yC,QACpByO,EAAeN,EAAW38C,OAE9BnE,EAAK2yC,QAAU3yC,EAAK2yC,QAAQhmC,OAAO,SAAAjG,GAAC,OAAKq6C,EAAUx8C,IAAImC,EAAEhH,MACzD0hD,GAAgBphD,EAAK2yC,QAAQxuC,OAE7BnE,EAAKE,SAAS,CAAEogD,WAAYllB,KAAKjC,IAAImnB,EAAac,EAAc,KAE3DphD,EAAK2yC,QAAQxuC,OAKd48C,EAAUx8C,IAAI87C,IACdrgD,EAAKghD,gBAAgBF,EAAYC,GALjCM,aAAsB,QAnMXrhD,EA4MnBkzC,mBAAqB,SAAA9iC,GAAU,IACnB1N,EAAW1C,EAAKC,MAAhByC,OADmBo1B,EAEc93B,EAAKX,MAAtCghD,EAFmBvoB,EAEnBuoB,iBAAkBC,EAFCxoB,EAEDwoB,WAElBj4C,EAAY+H,EAAZ/H,QACR,GAAKA,GACAm4C,aAAen4C,EAAQmB,UAExBnB,EAAQV,UAAYjF,GACnB1C,EAAKygD,iBAAV,CAEAzgD,EAAK2yC,QAAU,CAACtqC,GAAShG,OAAOrC,EAAK2yC,SACrC,IAAM7S,EAAQ9/B,EAAK2yC,QAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAO2gD,IAEnDrgD,EAAKE,SAAS,CACV0gD,aAAc5gD,EAAK4gD,aAAa9gB,GAChC+gB,iBAAkB7gD,EAAK6gD,iBAAiB/gB,GACxCwgB,WAAYA,EAAa,MA7NdtgD,EAiOnBshD,UAAY,SAAC5+C,EAAQ4c,GACjB,IAAMjX,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GACzC,IAAKjX,EAAS,OAAO,KAFU,IAIvBmB,EAAYnB,EAAZmB,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACH3J,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACHA,QAAS,qCAGjB,QACI,OAAO,OAzPAG,EA8PnBuhD,YA9PmBjgD,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KA8PL,SAAAC,IAAA,IAAAzC,EAAAE,EAAA4c,EAAA3S,EAAA5M,EAAAsgD,EAAAvgB,EAAA0hB,EAAAC,EAAA1tB,EAAA2tB,EAAA,OAAA38C,EAAArE,EAAAgF,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,UAAArD,EACoBxC,EAAKC,MAA3ByC,EADEF,EACFE,OAAQ4c,EADN9c,EACM8c,UAEV3S,EAAS3M,EAAKshD,UAAU5+C,EAAQ4c,GAElCvf,EAAS,CACTF,QAAS,WACTmiB,SAAU,GACVoC,YAAa,IAEbzX,EAVM,CAAApF,EAAA1B,KAAA,eAAA0B,EAAA1B,KAAA,EAWSlG,KAAgBC,KAAK,CAChCC,QAAS,qBACT8H,QAASjF,EACTwf,MAAO,GACPxC,eAAgB,EAChBgD,gBAAiBpD,EACjBqD,QAASg/B,IACT17C,MAAO,EAAI07C,IACXh1C,OAAQA,IAnBN,OAWN5M,EAXMwH,EAAAV,KAAA,UAuBV2d,aAAezkB,EAAQC,EAAK2yC,SAC5BrpC,IAAawZ,SAAS/iB,EAAOiiB,UAE7BhiB,EAAK2yC,QAAU5yC,EAAOiiB,SACtBhiB,EAAKygD,iBAA8C,IAA3B1gD,EAAOiiB,SAAS7d,OAEhCk8C,EAAqBrgD,EAAKX,MAA1BghD,iBACFvgB,EAAQ9/B,EAAK2yC,QAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAO2gD,IAEnDrgD,EAAKE,SAAS,CACV0gD,aAAc5gD,EAAK4gD,aAAa9gB,GAChC+gB,iBAAkB7gD,EAAK6gD,iBAAiB/gB,MAG7B,IAAXA,EArCM,CAAAv4B,EAAA1B,KAAA,SAsCN7F,EAAK2yC,QAAU,CAACrpC,IAAa9E,IAAI9B,EAAQ29C,IACzCuB,YAA0B,EAAG5hD,EAAK2yC,SAvC5BprC,EAAA1B,KAAA,oBAyCN+7C,YAA0B9hB,EAAO9/B,EAAK2yC,SAEhChmC,EAAS3M,EAAKshD,UAAU5+C,EAAQ4c,GA3ChC,CAAA/X,EAAA1B,KAAA,gBAAA0B,EAAAC,OAAA,kBA8CAi6C,EAAW,KACb1tB,EAAQ,EA/CN2tB,EAAA38C,EAAArE,EAAAsE,KAAA,SAAA08C,IAAA,IAAA3hD,EAAAsgD,EAAAvgB,EAAA,OAAA/6B,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAiDmBlG,KAAgBC,KAAK,CACtCC,QAAS,qBACT8H,QAASjF,EACTwf,MAAO,GACPxC,eAAgB,EAChBgD,gBAAiB1iB,EAAK2yC,QAAQxuC,OAAS,EAAInE,EAAK2yC,QAAQ,GAAGjzC,GAAK,EAChEijB,QAAS,GACT1c,MAAO,IACP0G,OAAQA,IAzDV,OAiDI5M,EAjDJ4F,EAAAkB,KA2DFktB,GAASh0B,EAAOiiB,SAAS7d,OAEzBqgB,aAAezkB,EAAQC,EAAK2yC,SAC5BrpC,IAAawZ,SAAS/iB,EAAOiiB,UAE7BhiB,EAAK2yC,QAAU5yC,EAAOiiB,SAAS3f,OAAOrC,EAAK2yC,SAC3C3yC,EAAKygD,iBAA8C,IAA3B1gD,EAAOiiB,SAAS7d,OAEhCk8C,EAAqBrgD,EAAKX,MAA1BghD,iBACFvgB,EAAQ9/B,EAAK2yC,QAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAO2gD,IAEnDrgD,EAAKE,SAAS,CACV0gD,aAAc5gD,EAAK4gD,aAAa9gB,GAChC+gB,iBAAkB7gD,EAAK6gD,iBAAiB/gB,GACxC2gB,iBAAkBzgD,EAAKygD,iBACvBH,WAAYvgD,EAAOqkB,cA1ErB,yBAAAze,EAAAyB,SAAAs6C,KAAA,WAgDE1hD,EAAKygD,oBAAoB1sB,EAAQ0tB,GAhDnC,CAAAl6C,EAAA1B,KAAA,gBAAA0B,EAAAs6C,cAAAH,IAAA,iBAAAn6C,EAAA1B,KAAA,kCAAA0B,EAAAH,SAAAnC,MA9PKjF,EA8UnB+H,YAAc,WACVs5C,aAAsB,MADN,IAGRhB,EAAqBrgD,EAAKX,MAA1BghD,iBACFvgB,EAAQ9/B,EAAK2yC,QAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAO2gD,KACpC,IAAXvgB,GACAgiB,YAAgChiB,EAAO9/B,EAAK2yC,UApVjC3yC,EAwVnB+hD,cAAgB,SAACrb,EAAWr+B,GACxB,GAAKA,EAAL,CADoC,IAE5BV,EAAgBU,EAAhBV,QAASjI,EAAO2I,EAAP3I,GAEjB,GAAKgnC,EAAL,CAJoC,IAMjB5I,EAAoB4I,EAA/BA,UAAiBsb,EAActb,EAAdsb,UACzB,GAAKlkB,EAAL,CAPoC,IASxB0hB,EAAW1hB,EAAfp+B,GAERuiD,YAAenkB,EAAMkkB,GAAatiD,EAAI2I,EAAS,kBAAMpB,IAAUi7C,oBAAoBv6C,EAASjI,EAAI8/C,SAnWjFx/C,EAsWnBmiD,aAAe,SAACh1C,EAAU9E,GACtB,GAAKA,EAAL,CADkC,IAE1BV,EAAgBU,EAAhBV,QAASjI,EAAO2I,EAAP3I,GAEjB,GAAKyN,EAAL,CAJkC,IAMhB2wB,EAAoB3wB,EAA9BA,SAAgB60C,EAAc70C,EAAd60C,UACxB,GAAKlkB,EAAL,CAPkC,IAStB0hB,EAAW1hB,EAAfp+B,GAERuiD,YAAenkB,EAAMkkB,GAAatiD,EAAI2I,EAAS,kBAAMpB,IAAUm7C,mBAAmBz6C,EAASjI,EAAI8/C,SAjXhFx/C,EAoXnBqiD,UAAY,SAAC9jB,EAAOl2B,GAChB,GAAKA,EAAL,CAD4B,IAEpBV,EAAgBU,EAAhBV,QAASjI,EAAO2I,EAAP3I,GAEjB,GAAK6+B,EAAL,CAJ4B,IAMbT,EAAoBS,EAA3BA,MAAayjB,EAAczjB,EAAdyjB,UACrB,GAAKlkB,EAAL,CAP4B,IAShB0hB,EAAW1hB,EAAfp+B,GAERuiD,YAAenkB,EAAMkkB,GAAatiD,EAAI2I,EAAS,kBAAMpB,IAAUq7C,gBAAgB36C,EAASjI,EAAI8/C,SA/X7Ex/C,EAkYnBuiD,UAAY,SAAC94C,EAAOpB,GAChB,GAAKA,EAAL,CAD4B,IAEpBV,EAAgBU,EAAhBV,QAASjI,EAAO2I,EAAP3I,GAEjB,GAAK+J,EAAL,CAEA,IAAMI,EAAYw9B,aAAQ59B,EAAMC,MAAO84C,KACvC,GAAK34C,EAAL,CAP4B,IASbi0B,EAASj0B,EAAhBJ,MACR,GAAKq0B,EAAL,CAV4B,IAYhB0hB,EAAW1hB,EAAfp+B,GAERuiD,YAAenkB,EAAMA,EAAKp+B,GAAK,OAAQ2I,EAAS,kBAAMpB,IAAUw7C,gBAAgB96C,EAASjI,EAAI8/C,UAhZ9Ex/C,EAmZnB0iD,WAAa,WAAM,IACPhgD,EAAW1C,EAAKC,MAAhByC,OACA29C,EAAqBrgD,EAAKX,MAA1BghD,iBAEFh4C,EAAUiB,IAAa9E,IAAI9B,EAAQ29C,GACzC,GAAKh4C,EAAL,CALe,IAOPmB,EAAYnB,EAAZmB,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbk9B,EAAcl9B,EAAdk9B,UAER1mC,EAAK+hD,cAAcrb,EAAWr+B,GAC9B,MAEJ,IAAK,yBAA0B,IACnBoB,EAAUD,EAAVC,MAERzJ,EAAKuiD,UAAU94C,EAAOpB,GACtB,MAEJ,IAAK,kBAAmB,IACZ8E,EAAa3D,EAAb2D,SAERnN,EAAKmiD,aAAah1C,EAAU9E,GAC5B,MAEJ,IAAK,eAAgB,IACToB,EAAUD,EAAVC,MAERzJ,EAAKuiD,UAAU94C,EAAOpB,GACtB,MAEJ,IAAK,cAAe,IACR61B,EAAa10B,EAAb00B,SACR,IAAKA,EAAU,OAFC,IAIRwI,EAAsCxI,EAAtCwI,UAAWv5B,EAA2B+wB,EAA3B/wB,SAAU1D,EAAiBy0B,EAAjBz0B,MAAO80B,EAAUL,EAAVK,MAEpC,GAAImI,EAEA,YADA1mC,EAAK+hD,cAAcrb,EAAWr+B,GAIlC,GAAI8E,EAEA,YADAnN,EAAKmiD,aAAah1C,EAAU9E,GAIhC,GAAIoB,EAEA,YADAzJ,EAAKuiD,UAAU94C,EAAOpB,GAI1B,GAAIk2B,EAEA,YADAv+B,EAAKqiD,UAAU9jB,EAAOl2B,GAG1B,MAEJ,IAAK,eAAgB,IACTk2B,EAAU/0B,EAAV+0B,MAERv+B,EAAKqiD,UAAU9jB,EAAOl2B,MApdfrI,EA0dnBszB,cAAgB,WAAM,IACV5wB,EAAW1C,EAAKC,MAAhByC,OACA29C,EAAqBrgD,EAAKX,MAA1BghD,iBAER1gD,KAAgBqI,aAAa,CACzBnI,QAAS,sBACToI,KAAM,CACFvF,OAAQA,EACR4E,WAAY,CAAC+4C,OAleNrgD,EAuenB4xB,aAAe,WACX5xB,EAAK2iD,oBAxeU3iD,EAigBnB6gD,iBAAmB,SAAA/gB,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP9/B,EAAK2yC,QAAQxuC,QArgBjBnE,EAwgBnBkgD,eAAiB,SAAAj0C,GACTA,GACAA,EAAMyX,kBAFY,IAKd28B,EAAqBrgD,EAAKX,MAA1BghD,iBAEFuC,EADQ5iD,EAAK2yC,QAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAO2gD,IACzB,EAE1B,OAAOrgD,EAAK6iD,UAAUD,EAAW,WACzBA,IAAc5iD,EAAK2yC,QAAQxuC,OAAS,GACpCnE,EAAK8iD,kBAnhBE9iD,EAwhBnB8iD,aAxhBmBxhD,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAwhBJ,SAAAqC,IAAA,IAAAuC,EAAAlH,EAAA4c,EAAA+gC,EAAA1zC,EAAA5M,EAAA+/B,EAAA,OAAA/6B,EAAArE,EAAAgF,KAAA,SAAA8d,GAAA,cAAAA,EAAA5d,KAAA4d,EAAA3d,MAAA,UAAA+D,EACmB5J,EAAKC,MAA3ByC,EADGkH,EACHlH,OAAQ4c,EADL1V,EACK0V,UACR+gC,EAAqBrgD,EAAKX,MAA1BghD,iBAEF1zC,EAAS3M,EAAKshD,UAAU5+C,EAAQ4c,GAElCvf,EAAS,CACTF,QAAS,WACTmiB,SAAU,GACVoC,YAAa,IAEbzX,EAXO,CAAA6W,EAAA3d,KAAA,eAAA2d,EAAA3d,KAAA,EAYQlG,KAAgBC,KAAK,CAChCC,QAAS,qBACT8H,QAASjF,EACTwf,MAAO,GACPxC,eAAgB,EAChBgD,gBAAiB29B,EACjB19B,OAAQ,EACR1c,MAAO07C,IACPh1C,OAAQA,IApBL,OAYP5M,EAZOyjB,EAAA3c,KAAA,OAwBX2d,aAAezkB,EAAQC,EAAK2yC,SAC5BrpC,IAAawZ,SAAS/iB,EAAOiiB,UAE7BhiB,EAAK2yC,QAAU3yC,EAAK2yC,QAAQtwC,OAAOtC,EAAOiiB,UAEpC8d,EAAQ9/B,EAAK2yC,QAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAO2gD,IAEnDrgD,EAAKE,SAAS,CACV0gD,aAAc5gD,EAAK4gD,aAAa9gB,GAChC+gB,iBAAkB7gD,EAAK6gD,iBAAiB/gB,GACxCwgB,WAAYvgD,EAAOqkB,cAlCZ,yBAAAZ,EAAApc,SAAAC,MAxhBIrH,EA8jBnB4gD,aAAe,SAAA9gB,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAlkBL9/B,EAqkBnB8+B,WAAa,SAAA7yB,GACLA,GACAA,EAAMyX,kBAFQ,IAKV28B,EAAqBrgD,EAAKX,MAA1BghD,iBAEFuC,EADQ5iD,EAAK2yC,QAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAO2gD,IACzB,EAE1B,OAAOrgD,EAAK6iD,UAAUD,EAAW,WACX,IAAdA,GACA5iD,EAAK+iD,cAhlBE/iD,EAqlBnB+iD,SArlBmBzhD,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAqlBR,SAAAue,IAAA,IAAAvV,EAAAtL,EAAA4c,EAAA+gC,EAAA1zC,EAAA5M,EAAA+/B,EAAA,OAAA/6B,EAAArE,EAAAgF,KAAA,SAAA4e,GAAA,cAAAA,EAAA1e,KAAA0e,EAAAze,MAAA,UAAAmI,EACuBhO,EAAKC,MAA3ByC,EADDsL,EACCtL,OAAQ4c,EADTtR,EACSsR,UACR+gC,EAAqBrgD,EAAKX,MAA1BghD,iBAEF1zC,EAAS3M,EAAKshD,UAAU5+C,EAAQ4c,GAElCvf,EAAS,CACTF,QAAS,WACTmiB,SAAU,GACVoC,YAAa,IAEbzX,EAXG,CAAA2X,EAAAze,KAAA,eAAAye,EAAAze,KAAA,EAYYlG,KAAgBC,KAAK,CAChCC,QAAS,qBACT8H,QAASjF,EACTwf,MAAO,GACPxC,eAAgB,EAChBgD,gBAAiB29B,EACjB19B,QAASg/B,IACT17C,MAAO07C,IAAoB,EAC3Bh1C,OAAQA,IApBT,OAYH5M,EAZGukB,EAAAzd,KAAA,OAwBP2d,aAAezkB,EAAQC,EAAK2yC,SAC5BrpC,IAAawZ,SAAS/iB,EAAOiiB,UAE7BhiB,EAAKygD,iBAA8C,IAA3B1gD,EAAOiiB,SAAS7d,OACxCnE,EAAK2yC,QAAU5yC,EAAOiiB,SAAS3f,OAAOrC,EAAK2yC,SAErC7S,EAAQ9/B,EAAK2yC,QAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAO2gD,IAEnDrgD,EAAKE,SAAS,CACV0gD,aAAc5gD,EAAK4gD,aAAa9gB,GAChC+gB,iBAAkB7gD,EAAK6gD,iBAAiB/gB,GACxC2gB,iBAAkBzgD,EAAKygD,iBACvBH,WAAYvgD,EAAOqkB,cApChB,yBAAAE,EAAAld,SAAAmc,MArlBQvjB,EA6nBnB6iD,UAAY,SAAC/iB,EAAOmD,GAChB,QAAInD,EAAQ,OACRA,GAAS9/B,EAAK2yC,QAAQxuC,UAE1BnE,EAAKE,SACD,CACImgD,iBAAkBrgD,EAAK2yC,QAAQ7S,GAAOpgC,GACtCkhD,aAAc5gD,EAAK4gD,aAAa9gB,GAChC+gB,iBAAkB7gD,EAAK6gD,iBAAiB/gB,IAE5CmD,GAGJ2e,YAA0B9hB,EAAO9/B,EAAK2yC,UAC/B,KA3oBQ3yC,EA8oBnBghD,gBAAkB,SAACF,EAAYC,GAK3B,IALyC,IACjCV,EAAqBrgD,EAAKX,MAA1BghD,iBAEFvgB,EAAQghB,EAAW/gB,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAO2gD,IAC7C2C,EAAS,EACJ1+C,EAAIw7B,EAAQ,EAAGx7B,GAAK,EAAGA,IAC5B,GAAIy8C,IAAcA,EAAUx8C,IAAIu8C,EAAWx8C,GAAG5E,IAAK,CAC/CsjD,EAASlC,EAAWx8C,GAAG5E,GACvB,MAGR,IAAKsjD,EACD,IAAK,IAAI1+C,EAAIw7B,EAAQ,EAAGx7B,EAAIw8C,EAAW38C,OAAQG,IAC3C,GAAIy8C,IAAcA,EAAUx8C,IAAIu8C,EAAWx8C,GAAG5E,IAAK,CAC/CsjD,EAASlC,EAAWx8C,GAAG5E,GACvB,MAKZ,GAAKsjD,EAAL,CAEA,IAAMJ,EAAY5iD,EAAK2yC,QAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAOsjD,IAEvD,OAAOhjD,EAAK6iD,UAAUD,EAAW,WACX,IAAdA,EACA5iD,EAAK+iD,WACEH,IAAc5iD,EAAK2yC,QAAQxuC,OAAS,GAC3CnE,EAAK8iD,mBA1qBE9iD,EA+qBnB2iD,iBAAmB,WACf3iD,EAAKE,SAAS,CAAE+/C,0BAA0B,KAhrB3BjgD,EAmrBnBijD,kBAAoB,WAChBjjD,EAAKE,SAAS,CAAE+/C,0BAA0B,KAprB3BjgD,EAurBnB6qB,WAAa,WACT7qB,EAAKE,SAAS,CAAE+/C,0BAA0B,IAD3B,IAGPv9C,EAAW1C,EAAKC,MAAhByC,OAHOu1B,EAI4Bj4B,EAAKX,MAAxCghD,EAJOpoB,EAIPooB,iBAAkB6C,EAJXjrB,EAIWirB,aAEpB76C,EAAUiB,IAAa9E,IAAI9B,EAAQ29C,GACzC,GAAKh4C,EAAL,CAPe,IASPksB,EAA+DlsB,EAA/DksB,6BAA8B9B,EAAiCpqB,EAAjCoqB,8BACjB8B,GAAgC9B,IAGrD9yB,KAAgBC,KAAK,CACjBC,QAAS,iBACT8H,QAASjF,EACT2I,YAAa,CAACg1C,GACdxtB,OAAQJ,GAAgCywB,MAxsB7BljD,EA4sBnBmjD,yBAA2B,SAAAl3C,GACvBjM,EAAKE,SAAS,CAAEgjD,aAAcj3C,EAAM4Z,OAAOxQ,WA7sB5BrV,EAgtBnBojD,mBAAqB,WAAM,IAGnBC,EAAiB,uBACrB,OAHuBrjD,EAAKX,MAApBwE,YAIJ,IAAK,uBACDw/C,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzBrjD,EAAKE,SAAS,CACV2D,WAAYw/C,KApuBDrjD,EAwuBnBsjD,kBAAoB,WAChB,GAAKtjD,EAAKujD,WAAV,CADsB,IAGdt5C,EAAYjK,EAAKujD,WAAjBt5C,QACR,GAAKA,EAAL,CAJsB,IAOhBu5C,EADYxjD,EAAKX,MAAfq9C,MACkB,EAAI,EAAI,GAElC18C,EAAKE,SAAS,CAAEw8C,MAAO8G,IAEvBv5C,EAAQwyC,YAAY+G,MAnvBLxjD,EAsvBnBw0B,eAAiB,SAAC9xB,EAAQ4c,GACtB,IAAMjX,EAAUiB,IAAa9E,IAAI9B,EAAQ4c,GACzC,IAAKjX,EAAS,OAAO,EAFe,IAI5BkB,EAA8BlB,EAA9BkB,iBAAkBC,EAAYnB,EAAZmB,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOD,IA/vBfvJ,EAAKujD,WAAaviD,IAAM8M,YACxB9N,EAAK2yC,QAAU,GAJA,IAAA/5B,EAMe5Y,EAAKC,MAA3ByC,EANOkW,EAMPlW,OAAQ4c,EAND1G,EAMC0G,UAND,OAQftf,EAAKX,MAAQ,CACTq9C,MAAO,EACP74C,WAAY,uBACZqP,WAAYxQ,EACZozC,cAAex2B,EACf+gC,iBAAkB/gC,EAClBshC,cAAc,EACdC,kBAAkB,EAClBZ,0BAA0B,EAC1BiD,cAAc,GAjBHljD,qFAqBG4Q,EAAWC,GAAW,IAAAwI,EACV7Y,KAAKP,MAA3ByC,EADgC2W,EAChC3W,OAAQ4c,EADwBjG,EACxBiG,UADwBkZ,EAWpCh4B,KAAKnB,MARLwE,EAHoC20B,EAGpC30B,WACAw8C,EAJoC7nB,EAIpC6nB,iBACAJ,EALoCznB,EAKpCynB,yBACAQ,EANoCjoB,EAMpCioB,iBACAG,EAPoCpoB,EAOpCooB,aACAC,EARoCroB,EAQpCqoB,iBACAnE,EAToClkB,EASpCkkB,MACA4D,EAVoC9nB,EAUpC8nB,WAGJ,OAAIzvC,EAAUhN,aAAeA,IAIzB+M,EAAUlO,SAAWA,IAIrBkO,EAAU0O,YAAcA,IAIxBzO,EAAUwvC,mBAAqBA,IAI/BxvC,EAAU4yC,kBAAoB5C,IAI9BhwC,EAAU+vC,eAAiBA,IAI3B/vC,EAAU4vC,mBAAqBA,IAI/B5vC,EAAUyvC,aAAeA,IAIzBzvC,EAAUovC,2BAA6BA,GAIvCpvC,EAAU6rC,QAAUA,sDAQxBl8C,KAAK+gD,cAELp0C,SAASyjC,iBAAiB,UAAWpwC,KAAKuO,WAAW,GACrDzF,IAAawH,GAAG,uBAAwBtQ,KAAK+yC,wBAC7CjqC,IAAawH,GAAG,mBAAoBtQ,KAAK0yC,oBACzC5pC,IAAawH,GAAG,uBAAwBtQ,KAAK4nC,uEAI7Cj7B,SAAS2jC,oBAAoB,UAAWtwC,KAAKuO,WAAW,GACxDzF,IAAayH,eAAe,uBAAwBvQ,KAAK+yC,wBACzDjqC,IAAayH,eAAe,mBAAoBvQ,KAAK0yC,oBACrD5pC,IAAayH,eAAe,uBAAwBvQ,KAAK4nC,yDA6qBpD,IAAA9uB,EACiB9Y,KAAKP,MAAnByC,EADH4W,EACG5W,OAAQyF,EADXmR,EACWnR,EADXu7C,EAYDljD,KAAKnB,MATLwE,EAHC6/C,EAGD7/C,WACAw8C,EAJCqD,EAIDrD,iBACAJ,EALCyD,EAKDzD,yBACAiD,EANCQ,EAMDR,aACAzC,EAPCiD,EAODjD,iBACAG,EARC8C,EAQD9C,aACAC,EATC6C,EASD7C,iBACAnE,EAVCgH,EAUDhH,MACA4D,EAXCoD,EAWDpD,WAGAxgB,GAAS,EACTwgB,GAAcG,IACd3gB,EAAQt/B,KAAKmyC,QAAQ5S,UAAU,SAAAr5B,GAAC,OAAIA,EAAEhH,KAAO2gD,KAEjD,IAAMoB,EAAWrmB,KAAKjC,IAAI34B,KAAKmyC,QAAQxuC,OAAQm8C,GAEzCj4C,EAAUiB,IAAa9E,IAAI9B,EAAQ29C,GACjC5tB,EAA+DpqB,EAA/DoqB,6BAA8B8B,EAAiClsB,EAAjCksB,6BAEhCP,EAAevB,GAAgC8B,EAC/CC,EAAiBh0B,KAAKg0B,eAAe9xB,EAAQ29C,GAE/CsD,EAA4B,GAE5BA,EADApG,aAAe76C,EAAQ29C,GACKl4C,EAAE,yBACvBs1C,aAAmB/6C,EAAQ29C,GACNl4C,EAAE,uBAEFA,EAAE,yBAElC,IAAMy7C,EAAqB3D,EACvBj+C,EAAAtB,EAAAC,cAACyN,EAAA1N,EAAD,CACI+lB,mBAAoB,EACpBpY,KAAM4xC,EACN3xC,QAAS9N,KAAKyiD,kBACd10C,kBAAgB,qBAChBvM,EAAAtB,EAAAC,cAAC+N,EAAAhO,EAAD,CAAahB,GAAG,qBAAqByI,EAAE,YACvCnG,EAAAtB,EAAAC,cAAC+lB,GAAAhmB,EAAD,KACIsB,EAAAtB,EAAAC,cAACkvB,GAAAnvB,EAAD,KAAoBijD,GACnBlxB,GACGzwB,EAAAtB,EAAAC,cAACumB,GAAAxmB,EAAD,CACI6b,MAAOpU,EAAE,gBACTgf,QACInlB,EAAAtB,EAAAC,cAACu0B,GAAAx0B,EAAD,CAAUuI,MAAM,UAAUlH,MAAM,YAAYqT,SAAU5U,KAAK2iD,2BAE/D9tC,QAAS6tC,KAIrBlhD,EAAAtB,EAAAC,cAACwO,EAAAzO,EAAD,KACIsB,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAASzC,KAAKyiD,kBAAmBh6C,MAAM,WAC1Cd,EAAE,WAEPnG,EAAAtB,EAAAC,cAACyO,EAAA1O,EAAD,CAAQuC,QAASzC,KAAKqqB,WAAY5hB,MAAM,WACnCd,EAAE,SAIf,KA9DC4yC,EAgEyBI,YAAaz4C,EAAQ29C,EAAkBmC,KAhEhExH,EAAA15C,OAAAwF,EAAA,EAAAxF,CAAAy5C,EAAA,GAgEiBjd,GAhEjBkd,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAkECwE,EAAS1hB,EAAOA,EAAKp+B,GAAK,EAC5B8vB,EAAQrnB,EAAE,eASd,OARIo1C,aAAe76C,EAAQ29C,GACvB7wB,EAAQrnB,EAAE,eACHs1C,aAAmB/6C,EAAQ29C,GAClC7wB,EAAQrnB,EAAE,aACH+yC,aAAgBx4C,EAAQ29C,KAC/B7wB,EAAQ,IAIRxtB,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAW,eAAgBc,IACtC+/C,EACD5hD,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,uBAAuBqC,QAASzC,KAAK0/C,gBAChDl+C,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,4BACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,oCACfoB,EAAAtB,EAAAC,cAACkjD,GAAD,CAAmB9oC,UAAW8lC,EAAkB3B,MAAI,EAACj8C,QAASzC,KAAK0/C,gBAC/Dl+C,EAAAtB,EAAAC,cAACmjD,GAAApjD,EAAD,CAAoB03B,SAAS,QAAQ5d,MAAOulC,OAIpD/9C,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,+BACXoB,EAAAtB,EAAAC,cAACojD,GAAD,CACIp1C,IAAKnO,KAAK+iD,WACV7gD,OAAQA,EACR4c,UAAW+gC,EACXx1C,KAAM23C,IACNv/C,QAASzC,KAAK0/C,kBAItBl+C,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,6BACXoB,EAAAtB,EAAAC,cAACkjD,GAAD,CAAmB5gD,QAASzC,KAAKuH,aAC7B/F,EAAAtB,EAAAC,cAACyI,EAAA1I,EAAD,CAAW03B,SAAS,QAAQ5d,MAAOulC,MAEvC/9C,EAAAtB,EAAAC,cAACkjD,GAAD,CAAmB9oC,UAAW6lC,EAAc1B,MAAI,EAACj8C,QAASzC,KAAKs+B,YAC3D98B,EAAAtB,EAAAC,cAACqjD,GAAAtjD,EAAD,CAAkB03B,SAAS,QAAQ5d,MAAOulC,QAItD/9C,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,uBACXoB,EAAAtB,EAAAC,cAACsjD,GAAD,CAAoBvhD,OAAQA,EAAQ4c,UAAW+gC,IAC/Cr+C,EAAAtB,EAAAC,cAACujD,GAAD,CACI10B,MAAOA,EACPjd,SAAUkvC,GAAY3hB,GAAS,EAArB,GAAAz9B,OAA4Bo/C,EAAW3hB,EAAvC,QAAAz9B,OAAmDo/C,GAAa,OAE7EvG,aAAgBx4C,EAAQ29C,IACrBr+C,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAACg/C,GAAD,CACInwB,MAAOrnB,EAAE,eACTkN,QAASqnC,EAAQ,EACjBz5C,QAASzC,KAAK8iD,mBACdthD,EAAAtB,EAAAC,cAACwjD,GAAAzjD,EAAD,CAAqB8Z,MAAO8kC,MAEhCt9C,EAAAtB,EAAAC,cAACg/C,GAAD,CACInwB,MAAOrnB,EAAE,yBACTlF,QAASzC,KAAK4iD,oBACdphD,EAAAtB,EAAAC,cAACyjD,GAAA1jD,EAAD,CAAkB8Z,MAAO8kC,OAIrCt9C,EAAAtB,EAAAC,cAAC0jD,GAAD,CAA2B70B,MAAOrnB,EAAE,QAASq3C,OAAQA,EAAQv8C,QAASzC,KAAKkiD,aAC3E1gD,EAAAtB,EAAAC,cAACg/C,GAAD,CACInwB,MAAOrnB,EAAE,WACT4S,UAAWyZ,EACXvxB,QAASzC,KAAK8yB,eACdtxB,EAAAtB,EAAAC,cAAC2jD,GAAA5jD,EAAD,CAAW8Z,MAAOqlC,MAEtB79C,EAAAtB,EAAAC,cAACg/C,GAAD,CAAyBnwB,MAAOrnB,EAAE,UAAW4S,UAAWiZ,EAAc/wB,QAASzC,KAAKoxB,cAChF5vB,EAAAtB,EAAAC,cAAC4jD,GAAA7jD,EAAD,CAAY8Z,MAAO8kC,eA/4BjBt+C,IAAMC,WA45BjB+O,iBAAkBgwC,IC13BlBwE,uBA9FX,SAAAA,EAAYvkD,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAgkD,IACfxkD,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAkjD,GAAA5/C,KAAApE,KAAMP,KA0CVwkD,uBAAyB,SAAAr0C,GAAU,IAAA5N,EACLxC,EAAKC,MAAvByC,EADuBF,EACvBE,OAAQ+G,EADejH,EACfiH,MAEhB,GAAI/G,IAAW0N,EAAO1N,QAAU+G,EAAMi7C,IAAIhlD,KAAO0Q,EAAOovC,OAAQ,CAC5D,IAAM1hB,EAAO72B,IAAUzC,IAAI4L,EAAOovC,SAAWx/C,EAAKX,MAAMy+B,KACxD99B,EAAKE,SAAS,CACV49B,KAAMA,MAjDC99B,EAsDnB2kD,uBAAyB,SAAAv0C,GAAU,IAAA3H,EACLzI,EAAKC,MAAvByC,EADuB+F,EACvB/F,OAAQ+G,EADehB,EACfgB,MAGhB,GAFeiO,YAAchV,KAEd0N,EAAOC,QAAU5G,EAAMi7C,IAAIhlD,KAAO0Q,EAAOovC,OAAQ,CAC5D,IAAM1hB,EAAO72B,IAAUzC,IAAI4L,EAAOovC,SAAWx/C,EAAKX,MAAMy+B,KACxD99B,EAAKE,SAAS,CACV49B,KAAMA,MA7DC99B,EAkEnBw8C,mBAAqB,SAAAvwC,GACbA,GAAOA,EAAMyX,kBAEjB1jB,EAAKC,MAAMgD,QAAQgJ,IArEJ,IAAArC,EAGW5J,EAAKC,MAAvByC,EAHOkH,EAGPlH,OAAQ+G,EAHDG,EAGCH,MAELq0B,EAASr0B,EAAdi7C,IALS,OAMf5mB,EAAO72B,IAAUzC,IAAIs5B,EAAKp+B,KAAOo+B,EAEjC99B,EAAKX,MAAQ,CACT6T,WAAYxQ,EACZkiD,UAAWn7C,EACXqB,MAAO+5C,IACP95C,OAAQ85C,IACR/mB,KAAMA,GAbK99B,mFAkCfiH,IAAU6J,GAAG,uBAAwBtQ,KAAKikD,wBAC1Cx9C,IAAU6J,GAAG,uBAAwBtQ,KAAKmkD,uEAI1C19C,IAAU8J,eAAe,uBAAwBvQ,KAAKikD,wBACtDx9C,IAAU8J,eAAe,uBAAwBvQ,KAAKmkD,yDAgCjD,IAAAt4C,EAC2B7L,KAAKnB,MAAdy+B,GADlBzxB,EACGvB,MADHuB,EACUtB,OADVsB,EACkByxB,MACvB,IAAKA,EAAM,OAAO,KAElB,IAAM6Y,EAAO1vC,IAAUq0C,QAAQxd,EAAKp+B,KAAOo+B,EAAK6Y,KAC1C5Y,EAAM92B,IAAUg2C,WAAWtG,GAGjC,OADAjrC,QAAQC,IAAI,cAAeoyB,GAEvB/7B,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,6BAA6Bm9B,IAAKA,EAAKigB,IAAI,GAAG/6C,QAASzC,KAAKg8C,qBAC3Ex6C,EAAAtB,EAAAC,cAACg+C,GAAA,EAAD,CAAc7gB,KAAMA,wDAlEA79B,EAAOZ,GAAO,IAClCqD,EAAkBzC,EAAlByC,OAAQ+G,EAAUxJ,EAAVwJ,MAEhB,OAAI/G,IAAWrD,EAAM6T,YAAczJ,IAAUpK,EAAMulD,UACxC,CACH1xC,WAAYxQ,EACZkiD,UAAWn7C,EACXqB,MAAO+5C,IACP95C,OAAQ85C,IACR/mB,KAAMr0B,EAAMi7C,KAIb,YA/ByB1jD,IAAMC,YCsC/B6jD,eAhCX,SAAAA,EAAY7kD,GAAQ,OAAAqB,OAAAC,EAAA,EAAAD,CAAAd,KAAAskD,GAAAxjD,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAwjD,GAAAlgD,KAAApE,KACVP,0EAGD,IAAAuC,EACoBhC,KAAKP,MAAtByC,EADHF,EACGE,OAAQid,EADXnd,EACWmd,KAEhB,OACI3d,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,wBACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gCACXoB,EAAAtB,EAAAC,cAACuC,EAAA,EAAD,CAAUR,OAAQA,EAAQ+Q,mBAAmB,IAC7CzR,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gCACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,oBACXoB,EAAAtB,EAAAC,cAACmqC,GAAA,EAAD,CAAepoC,OAAQA,KAE1Bid,GACG3d,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,iCACXoB,EAAAtB,EAAAC,cAAA,QAAMC,UAAU,gBAAgB+e,cAlBxB3e,IAAMC,WCkBxC4+C,GAAmB,CACrBpwC,QAAS,GACTxG,MAAO,QACP62C,UAAW,cAGTiF,GAAkB,CACpBt1C,QAAS,GACTxG,MAAO,SAGL82C,GAAsB,CACxBtwC,QAAS,GACTxG,MAAO,SAGL+7C,eACF,SAAAA,EAAY/kD,GAAO,IAAAD,EAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAwkD,IACfhlD,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA0jD,GAAApgD,KAAApE,KAAMP,KA4EV8O,UAAY,SAAA9C,GACR,GAAsB,KAAlBA,EAAMC,QAAgB,CAEtB,GADqClM,EAAKX,MAAlC4gD,yBACsB,OAE9BjgD,EAAK+H,mBACoB,KAAlBkE,EAAMC,QACblM,EAAKkgD,iBACoB,KAAlBj0C,EAAMC,SACblM,EAAK8+B,cAtFM9+B,EA0FnBuhD,YA1FmBjgD,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KA0FL,SAAAC,IAAA,IAAAvC,EAAA3C,EAAA,OAAAgF,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACFnD,EAAW1C,EAAKC,MAAhByC,OAEHqR,YAAcrR,GAHT,CAAAiD,EAAAE,KAAA,eAAAF,EAAA6B,OAAA,wBAAA7B,EAAAE,KAAA,EAKWlG,KAAgBC,KAAK,CACtCC,QAAS,uBACTsG,QAASuR,YAAchV,GACvBigB,OAAQ,EACR1c,MAAO,MATD,OAKJlG,EALI4F,EAAAkB,KAYV7G,EAAK2yC,QAAU5yC,EAAOklD,OACtBjlD,EAAKygD,iBAA4C,IAAzB1gD,EAAOklD,OAAO9gD,OAExB,EAEdnE,EAAKE,SAAS,CACVglD,aAHU,EAIVtE,aAAc5gD,EAAK4gD,aAJT,GAKVC,iBAAkB7gD,EAAK6gD,iBALb,GAMVP,WAAYvgD,EAAOqkB,cAGvB+gC,YAAiCziD,EATnB,EASkC1C,EAAK2yC,SAxB3C,yBAAAhtC,EAAAyB,SAAAnC,MA1FKjF,EAqHnB+H,YAAc,WACV2Q,aAA6B,OAtHd1Y,EAyHnB0iD,WAAa,WAAM,IACPhgD,EAAW1C,EAAKC,MAAhByC,OADO2J,EAEsBrM,EAAKX,MAAlC6lD,EAFO74C,EAEP64C,aAAc5E,EAFPj0C,EAEOi0C,WAEhBzuC,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,EAAL,CAEA,IAAIiuB,GAAS,EACTwgB,IACAxgB,EAAQolB,GAGZ,IAAMz7C,EACFq2B,EAAQ,GAAKA,EAAQ9/B,EAAK2yC,QAAQxuC,OAASihD,aAAgBplD,EAAK2yC,QAAQ7S,IAAUulB,YAAiB3iD,GACvG,GAAK+G,GACAA,EAAMi7C,IAAX,CAEA,IAAM5mB,EAAO72B,IAAUzC,IAAIiF,EAAMi7C,IAAIhlD,KAAO+J,EAAMi7C,IAC7C5mB,GAELmkB,YAAenkB,EAAMA,EAAKp+B,GAAK,OAAQmS,EAAM,kBAAM5K,IAAUq+C,oBAAoB5iD,EAAQo7B,EAAKp+B,SA7I/EM,EAgJnBszB,cAAgB,WAAM,IACV5wB,EAAW1C,EAAKC,MAAhByC,OACR,GAAKqR,YAAcrR,GAAnB,CAFkB,IAAAuL,EAImBjO,EAAKX,MAAlC6lD,EAJUj3C,EAIVi3C,aAEJplB,GAAS,EAKb,GAXkB7xB,EAIIqyC,aAIlBxgB,EAAQolB,KAGRplB,EAAQ,GAAKA,GAAS9/B,EAAK2yC,QAAQxuC,QAAvC,CACA,IAAMsF,EAAQ27C,aAAgBplD,EAAK2yC,QAAQ7S,IAC3C,GAAKr2B,EAAL,CAbkB,IAePq0B,EAASr0B,EAAdi7C,IAEN,GADA5mB,EAAO72B,IAAUzC,IAAIs5B,EAAKp+B,KAAOo+B,EACjC,CAEA,IAAMj0B,EAAY,CACdhK,QAAS,YACTkS,KAAM,IACNtI,MAAOq0B,EACPhzB,MAAO,IACPC,OAAQ,KAGZpL,KAAgBqI,aAAa,CACzBnI,QAAS,sBACToI,KAAM,CAAE4B,oBA7KG7J,EAiLnB4xB,aAAe,WAAM,IAAApvB,EACaxC,EAAKC,MAA3ByC,EADSF,EACTE,OADSo1B,GAAAt1B,EACD8c,UACqBtf,EAAKX,OAAlC6lD,EAFSptB,EAETotB,aAEJplB,GAAS,EAJIhI,EAEKwoB,aAIlBxgB,EAAQolB,GAGZ,IAAMz7C,EACFq2B,EAAQ,GAAKA,EAAQ9/B,EAAK2yC,QAAQxuC,OAASihD,aAAgBplD,EAAK2yC,QAAQ7S,IAAUulB,YAAiB3iD,GAEvG,GAAI+G,EAAO,CACP,IAAIq0B,EAAOr0B,EAAMi7C,IAEjB,GADA5mB,EAAO72B,IAAUzC,IAAIs5B,EAAKp+B,KAAOo+B,EACvB,CACN,IAAMr4B,EAAQwB,IAAUs+C,oBAExBt+C,IAAUu+C,gBAAgB//C,EAAOq4B,MAnM1B99B,EAwMnB6gD,iBAAmB,SAAA/gB,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP9/B,EAAK2yC,QAAQxuC,QA5MjBnE,EA+MnBkgD,eAAiB,SAAAj0C,GACTA,GACAA,EAAMyX,kBAFY,IAMhBk/B,EADmB5iD,EAAKX,MAAtB6lD,aACyB,EAEjC,OAAOllD,EAAK6iD,UAAUD,EAAW,WACzBA,IAAc5iD,EAAK2yC,QAAQxuC,OAAS,GACpCnE,EAAK8iD,kBAzNE9iD,EA8NnB8iD,aA9NmBxhD,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KA8NJ,SAAAqC,IAAA,OAAAtC,EAAArE,EAAAgF,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAAC,OAAA,kCAAAD,EAAAH,SAAAC,MA9NIrH,EAkOnB4gD,aAAe,SAAA9gB,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAtOL9/B,EAyOnB8+B,WAAa,SAAA7yB,GACLA,GACAA,EAAMyX,kBAFQ,IAMZk/B,EADmB5iD,EAAKX,MAAtB6lD,aACyB,EAEjC,OAAOllD,EAAK6iD,UAAUD,EAAW,WACX,IAAdA,GACA5iD,EAAK+iD,cAnPE/iD,EAwPnB+iD,SAxPmBzhD,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAwPR,SAAAue,IAAA,OAAAxe,EAAArE,EAAAgF,KAAA,SAAA8d,GAAA,cAAAA,EAAA5d,KAAA4d,EAAA3d,MAAA,cAAA2d,EAAAhc,OAAA,kCAAAgc,EAAApc,SAAAmc,MAxPQvjB,EA4PnB6iD,UAAY,SAAC/iB,EAAOmD,GAChB,GAAInD,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAAS9/B,EAAK2yC,QAAQxuC,OAAQ,OAAO,EAEzCnE,EAAKE,SACD,CACIglD,aAAcplB,EACd8gB,aAAc5gD,EAAK4gD,aAAa9gB,GAChC+gB,iBAAkB7gD,EAAK6gD,iBAAiB/gB,IAE5CmD,GAVyB,IAarBvgC,EAAW1C,EAAKC,MAAhByC,OAGR,OADAyiD,YAAiCziD,EAAQo9B,EAAO9/B,EAAK2yC,UAC9C,GAzQP3yC,EAAK2yC,QAAU,GAHA,IAAAlqC,EAKYzI,EAAKC,MAAxByC,EALO+F,EAKP/F,OAAQ88C,EALD/2C,EAKC+2C,OALD,OAOfx/C,EAAKX,MAAQ,CACT6T,WAAYxQ,EACZ+iD,WAAYjG,EACZ0F,aAAc,EACdtE,cAAc,EACdC,kBAAkB,EAClBZ,0BAA0B,GAbfjgD,qFAiBG4Q,EAAWC,GAAW,IAAAjH,EACVpJ,KAAKP,MAA3ByC,EADgCkH,EAChClH,OAAQ4c,EADwB1V,EACxB0V,UADwB2Y,EASpCz3B,KAAKnB,MANLqmD,EAHoCztB,EAGpCytB,cACA7E,EAJoC5oB,EAIpC4oB,iBACAD,EALoC3oB,EAKpC2oB,aACAH,EANoCxoB,EAMpCwoB,iBACAH,EAPoCroB,EAOpCqoB,WACAL,EARoChoB,EAQpCgoB,yBAGJ,OAAIrvC,EAAUlO,SAAWA,IAIrBkO,EAAU0O,YAAcA,IAIxBzO,EAAU60C,gBAAkBA,IAI5B70C,EAAU4yC,kBAAoB5C,IAI9BhwC,EAAU+vC,eAAiBA,IAI3B/vC,EAAU4vC,mBAAqBA,IAI/B5vC,EAAUyvC,aAAeA,GAIzBzvC,EAAUovC,2BAA6BA,oDAO3B,IACRv9C,EAAWlC,KAAKP,MAAhByC,OACF+G,EAAQ47C,YAAiB3iD,GAC/BijD,YAA8BjjD,EAAQ,CAAC+G,IAEvCjJ,KAAK+gD,cAELp0C,SAASyjC,iBAAiB,UAAWpwC,KAAKuO,WAAW,kDAIrD5B,SAAS2jC,oBAAoB,UAAWtwC,KAAKuO,WAAW,oCAqMnD,IAAAf,EACiBxN,KAAKP,MAAnByC,EADHsL,EACGtL,OAAQyF,EADX6F,EACW7F,EADXqwB,EAUDh4B,KAAKnB,MAPL6lD,EAHC1sB,EAGD0sB,aACAtE,EAJCpoB,EAIDooB,aACAC,EALCroB,EAKDqoB,iBAEAP,GAPC9nB,EAMDioB,iBANCjoB,EAOD8nB,YAKAxgB,GAZCtH,EAQDynB,yBARCznB,EASD0qB,cAGS,GACT5C,IACAxgB,EAAQolB,GAGZ,IACMU,EAAY9lB,GAAS,GAAKA,EAAQt/B,KAAKmyC,QAAQxuC,OAC/CsF,EAAQm8C,EAAYR,aAAgB5kD,KAAKmyC,QAAQ7S,IAAUulB,YAAiB3iD,GAC5EmjD,EAAmBD,EAAYplD,KAAKmyC,QAAQ7S,GAAS,KAC9ChC,EAASr0B,EAAdi7C,IAER,OACI1iD,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,gBAPQ,KASnBoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,uBAAuBqC,QAASzC,KAAK0/C,gBAChDl+C,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,4BACXoB,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,oCACfoB,EAAAtB,EAAAC,cAACkjD,GAAD,CAAmB9oC,UAAW6lC,EAAc1B,MAAI,EAACj8C,QAASzC,KAAKs+B,YAC3D98B,EAAAtB,EAAAC,cAACmjD,GAAApjD,EAAD,CAAoB03B,SAAS,QAAQ5d,MAAOulC,OAIpD/9C,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,+BACXoB,EAAAtB,EAAAC,cAACmlD,GAAD,CAA2BpjD,OAAQA,EAAQ+G,MAAOA,EAAOxG,QAASzC,KAAK0/C,kBAG3El+C,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,6BACXoB,EAAAtB,EAAAC,cAACkjD,GAAD,CAAmB5gD,QAASzC,KAAKuH,aAC7B/F,EAAAtB,EAAAC,cAACyI,EAAA1I,EAAD,CAAW03B,SAAS,QAAQ5d,MAAOulC,MAEvC/9C,EAAAtB,EAAAC,cAACkjD,GAAD,CAAmB9oC,UAAW8lC,EAAkB3B,MAAI,EAACj8C,QAASzC,KAAK0/C,gBAC/Dl+C,EAAAtB,EAAAC,cAACqjD,GAAAtjD,EAAD,CAAkB03B,SAAS,QAAQ5d,MAAOulC,QAItD/9C,EAAAtB,EAAAC,cAAA,OAAKC,UAAU,uBACXoB,EAAAtB,EAAAC,cAAColD,GAAD,CAA2BrjD,OAAQA,EAAQid,KAAMqmC,aAAwBH,KACzE7jD,EAAAtB,EAAAC,cAACujD,GAAD,CACI10B,MAAOrnB,EAAE,eACToK,SAAU+tC,GAAcxgB,GAAS,EAAvB,GAAAz9B,OAA8By9B,EAAQ,EAAtC,QAAAz9B,OAA8Ci+C,GAAe,OAE3Et+C,EAAAtB,EAAAC,cAAC0jD,GAAD,CAA2B70B,MAAOrnB,EAAE,QAASq3C,OAAQ1hB,EAAKp+B,GAAIuD,QAASzC,KAAKkiD,aAC3E3uC,YAAcrR,IACXV,EAAAtB,EAAAC,cAACg/C,GAAD,CACInwB,MAAOrnB,EAAE,WACT4S,UAAW6qC,EACX3iD,QAASzC,KAAK8yB,eACdtxB,EAAAtB,EAAAC,cAAC2jD,GAAA5jD,EAAD,CAAW8Z,MAAOqlC,MAG1B79C,EAAAtB,EAAAC,cAACg/C,GAAD,CAAyBnwB,MAAOrnB,EAAE,UAAW4S,UAAQ,EAAC9X,QAASzC,KAAKoxB,cAChE5vB,EAAAtB,EAAAC,cAAC4jD,GAAA7jD,EAAD,CAAY8Z,MAAOuqC,eA/UV/jD,IAAMC,WA2VxB+O,iBAAkBg1C,ICvW3BiB,uBACF,SAAAA,EAAYhmD,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAd,KAAAylD,IACfjmD,EAAAsB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAA2kD,GAAArhD,KAAApE,KAAMP,KAyCVimD,uBAAyB,SAAA91C,GAAU,IACvB1N,EAA6B0N,EAA7B1N,OAAQ4c,EAAqBlP,EAArBkP,UAAW7G,EAAUrI,EAAVqI,MAE3BzY,EAAKmX,iBAAiBzU,EAAQ4c,EAAW7G,IA7C1BzY,EAgDnBmmD,uBAAyB,SAAA/1C,GAAU,IACvBC,EAAkBD,EAAlBC,OAAQoI,EAAUrI,EAAVqI,MAEhBzY,EAAKqd,iBAAiBhN,EAAQoI,IAnDfzY,EAsDnB6sB,oCAAsC,SAAAzc,GAClCpQ,EAAKE,SAAS,CACV4sB,qBAAsBnkB,IAAiBmkB,wBAxD5B9sB,EA4DnBs9B,iCAAmC,SAAAltB,GAC/BpQ,EAAKE,SAAS,CAAEs9B,mBAAoB70B,IAAiB60B,sBA7DtCx9B,EAgEnBomD,wCAA0C,SAAAh2C,GACtCpQ,EAAKE,SAAS,CACVmmD,0BAA2B19C,IAAiB09C,6BAlEjCrmD,EAsEnBsmD,sBAAwB,SAAAl2C,GAAU,IACtBnI,EAASmI,EAATnI,KAERjI,EAAKE,SAAS,CAAE6jC,YAAa97B,KAzEdjI,EA4EnBmX,iBAAmB,SAACzU,GAA4C,IAApC4c,EAAoC3d,UAAAwC,OAAA,QAAA8tB,IAAAtwB,UAAA,GAAAA,UAAA,GAAxB,KAAM8W,EAAkB9W,UAAAwC,OAAA,QAAA8tB,IAAAtwB,UAAA,IAAAA,UAAA,GACtDgU,EAAgBhN,IAAiBiN,YACjC2wC,EAAsB59C,IAAiB8U,aACvC4iC,EAAmB13C,IAAiB0W,eAEtC5G,EACI8tC,IAAwB7jD,GACxB/C,KAAgBqI,aAAa,CACzBnI,QAAS,2BACT6C,WAORiT,IAAkBjT,GAAU4c,GAAa+gC,IAAqB/gC,GAC9Dtf,EAAKwmD,iBAAiBv8C,QAAQirC,kBAC1B51B,GACA+2B,aAAiB3zC,EAAQ4c,IAEtB3J,IAAkBjT,GAAW4c,EAGpC3f,KAAgBkW,UAAUnT,EAAQ4c,GAFlCtf,EAAKwmD,iBAAiBv8C,QAAQqrC,iBAlGnBt1C,EAwGnBqd,iBAxGmB,eAAAC,EAAAhc,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAArE,EAAAsE,KAwGA,SAAAC,EAAOoL,EAAQoI,GAAf,IAAA5G,EAAA,OAAA9M,EAAArE,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVwK,EADU,CAAA1K,EAAAE,KAAA,eAAAF,EAAA6B,OAAA,wBAAA7B,EAAAE,KAAA,EAGIlG,KAAgBC,KAAK,CACpCC,QAAS,oBACTsG,QAASkK,EACT/J,OAAO,IANI,OAGTuL,EAHSlM,EAAAkB,KASf7G,EAAKmX,iBAAiBtF,EAAKnS,GAAI,KAAM+Y,GATtB,wBAAA9S,EAAAyB,SAAAnC,MAxGA,gBAAAsY,EAAAgmB,GAAA,OAAAjmB,EAAA5b,MAAAlB,KAAAmB,YAAA,GAGf3B,EAAKwmD,iBAAmBxlD,IAAM8M,YAE9B9N,EAAKX,MAAQ,CACTytB,qBAAsBnkB,IAAiBmkB,qBACvC0Q,mBAAoB70B,IAAiB60B,mBACrC6oB,0BAA2B19C,IAAiB09C,0BAC5CtiB,YAAa,MATF/jC,mFAoBfoG,KAAU0K,GAAG,uBAAwBtQ,KAAK2lD,wBAC1Cr0C,KAAUhB,GAAG,uBAAwBtQ,KAAK0lD,wBAE1Cv9C,IAAiBmI,GAAG,oCAAqCtQ,KAAKqsB,qCAC9DlkB,IAAiBmI,GAAG,iCAAkCtQ,KAAK88B,kCAC3D30B,IAAiBmI,GAAG,wCAAyCtQ,KAAK4lD,yCAClEz9C,IAAiBmI,GAAG,sBAAuBtQ,KAAK8lD,sEAIhDlgD,KAAU2K,eAAe,uBAAwBvQ,KAAK2lD,wBACtDr0C,KAAUf,eAAe,uBAAwBvQ,KAAK0lD,wBAEtDv9C,IAAiBoI,eAAe,oCAAqCvQ,KAAKqsB,qCAC1ElkB,IAAiBoI,eAAe,iCAAkCvQ,KAAK88B,kCACvE30B,IAAiBoI,eACb,wCACAvQ,KAAK4lD,yCAETz9C,IAAiBoI,eAAe,sBAAuBvQ,KAAK8lD,wDA6EvD,IACG7jD,EAAYjC,KAAKP,MAAjBwC,QADH4J,EAEwF7L,KAAKnB,MAA1FytB,EAFHzgB,EAEGygB,qBAAsB0Q,EAFzBnxB,EAEyBmxB,mBAAoB6oB,EAF7Ch6C,EAE6Cg6C,0BAA2BtiB,EAFxE13B,EAEwE03B,YAE7E,OACI/hC,EAAAtB,EAAAC,cAAAqB,EAAAtB,EAAA4V,SAAA,KACItU,EAAAtB,EAAAC,cAAA,OAAKC,UAAWmC,IAAWN,EAAQgkD,KAAM,OAAQ,CAAEC,oBAAqB55B,KACpE9qB,EAAAtB,EAAAC,cAACgmD,GAAD,CAASv5B,aAAc5sB,KAAK2W,mBAC5BnV,EAAAtB,EAAAC,cAACimD,GAAD,CAAej4C,IAAKnO,KAAKgmD,mBACxB15B,GAAwB9qB,EAAAtB,EAAAC,cAACwtB,GAAD,OAE7BnsB,EAAAtB,EAAAC,cAACkmD,GAAA,EAAD,MACCrpB,GAAsBx7B,EAAAtB,EAAAC,cAACmmD,GAAgBtpB,GACvC6oB,GAA6BrkD,EAAAtB,EAAAC,cAAComD,GAAuBV,GACrDtiB,GAAe/hC,EAAAtB,EAAAC,cAACqmD,GAAkBjjB,WAnI5B/iC,IAAMC,YA2IvBqO,GAAUC,YACZ03C,IACAljD,IACAT,IArJW,SAAAC,GAAK,MAAK,CACrBkjD,KAAM,CACF5iD,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAW8hB,QAAU,UAC/E1c,MAAO1F,EAAME,QAAQqG,KAAKpG,YAmJ9BxC,GAGWoO,aAAQ22C","file":"static/js/3.ce40a4bc.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {popup && !isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {!isMe && <Divider />}\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            if (text.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: text\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    const globalLatinPromise = TdLibController.send({\n                        '@type': 'searchPublicChats',\n                        query: latinText\n                    });\n                    globalPromises.push(globalLatinPromise);\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global: global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getDate,\n    getDateHint,\n    getEmojiMatches,\n    getText,\n    getMedia,\n    getUnread,\n    getWebPage,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-without-avatar': !showTitle\n        });\n\n        const meta = (\n            <div className='message-meta'>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='message-views-icon' />\n                        <span className='message-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a className='message-date' onClick={this.handleDateClick}>\n                    <span title={dateHint}>{date}</span>\n                </a>\n            </div>\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0,\n                scrollDownVisible: props.chatId === state.prevChatId,\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        const newState = {\n            scrollBehavior,\n            scrollDownVisible: false\n        };\n        this.insertAfter(this.filterMessages(history), newState);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), { scrollBehavior: ScrollBehaviorEnum.NONE });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, newState, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        console.log('MessagesLList.handleScroll scrollDown',\n            this.suppressHandleScroll,\n            this.suppressHandleScrollOnSelectChat,\n            this.prevScrollTop,\n        );\n        this.updateItemsInView();\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.suppressHandleScroll) {\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false,\n                        scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n                    });\n                }\n            }\n\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n                  //prevShowDate = showDate;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(message);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row message-meta'>\n                            <span className='message-date'>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row message-meta'>\n                                <span className='message-date'>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}