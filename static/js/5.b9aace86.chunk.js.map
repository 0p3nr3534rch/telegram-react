{"version":3,"sources":["Components/ColumnMiddle/StickerSet.js","Utils/Animatior.js","Components/ColumnMiddle/StickersPickerHeader.js","Components/ColumnMiddle/StickersPicker.js","Components/ColumnMiddle/EmojiPickerButton.js"],"names":["StickerSet","nextProps","nextState","nextContext","this","props","info","_this$props","classes","onSelect","onMouseDown","onMouseOver","title","items","stickers","map","x","i","react_default","a","createElement","className","classNames","stickerSetItem","key","sticker","id","data-sticker-id","onClick","Sticker","displaySize","STICKER_SMALL_DISPLAY_SIZE","blur","React","Component","withStyles","theme","backgroundColor","palette","background","paper","color","text","primary","width","height","padding","boxSizing","&:hover","type","borderRadius","Animator","duration","_this","options","arguments","length","undefined","Object","classCallCheck","start","stopped","requestAnimationFrame","startAnim","timeStamp","end","draw","now","p","val","outSine","forEach","from","to","func","stop","cancelAnimationFrame","n","Math","sin","PI","StickersPickerHeader","possibleConstructorReturn","getPrototypeOf","call","scrollToPosition","position","_assertThisInitialize","assertThisInitialized","animator","anchorRef","scroll","scrollRef","current","anchor","anchorNode","ReactDOM","ANIMATION_DURATION_500MS","scrollLeft","left","Number","style","replace","handleWheel","event","deltaX","deltaY","handleSelect","indexOf","createRef","prevProps","prevState","snapshot","_this2","_this$props2","openMedia","borderColor","ref","onWheel","accentBackgroundDark","objectSpread","borderStyle","accentStyles","StickersPicker","scrollTop","loadContent","_ref","asyncToGenerator","regenerator_default","mark","_callee","stickerSets","sets","result","promises","slicedSets","headerStickers","wrap","_context","prev","next","state","abrupt","TdLibController","send","@type","is_masks","sent","push","set_id","Promise","all","slice","reduce","preview","set","setState","setsLength","_x","_x2","apply","loadInViewContentOnScroll","loadInViewContent","loadInViewContentOnScrollEnd","inViewItems","item","itemsMap","get","node","topBorder","bottomBorder","offsetHeight","nodeTop","offsetTop","nodeBottom","clientHeight","store","FileStore","getStore","loadedSets","has","loadStickerSetContent","updatePosition","minDiff","scrollHeight","firstOffsetTop","pos","element","diff","abs","handleScroll","_callee2","loadChunk","_this$state","concatSets","_context2","loadingChunk","finally","concat","loadPreviewContent","stickerId","getStickers","find","loadStickerContent","getNeighborStickersFromSets","handleMouseOver","target","dataset","mouseDown","mouseDownStickerId","previewStickerId","onPreview","handleMouseDown","Date","timestamp","showPreview","cancelSend","setTimeout","document","addEventListener","handleMouseUp","preventDefault","stopPropagation","removeEventListener","handleStickerSelect","handleSelectSet","_ref3","_callee3","_this$state2","_context3","_x3","Map","debounce","throttle","_this$state3","_this$state4","clear","Components_ColumnMiddle_StickerSet","el","Components_ColumnMiddle_StickersPickerHeader","onScroll","EmojiPickerButton","onClientUpdateChange","update","picker","handleButtonMouseEnter","buttonEnter","updatePicker","loadStickerSets","EMOJI_PICKER_TIMEOUT_MS","stickersPickerRef","reverse","loadStickerThumbnailContent","handleButtonMouseLeave","tryClosePicker","paperEnter","handlePaperMouseEnter","handlePaperMouseLeave","open","switchPicker","handleEmojiClick","tab","handleStickersClick","stickersPicker","handleStickerSend","clientUpdate","handleStickerPreview","emojiPickerRef","ApplicationStore","on","LocalizationStore","removeListener","t","i18n","search","notfound","skintext","categories","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","dist_es","showSkinTones","dark","overflowX","Components_ColumnMiddle_StickersPicker","Fragment","rel","href","IconButton_default","iconButton","aria-label","onMouseEnter","onMouseLeave","InsertEmoticon_default","pickerRoot","defineProperty","pickerRootOpened","Button_default","headerButton","emoji-picker-content-stickers","StickerPreview","enhance","compose","margin","flex","shape","boxShadow","shadows","bottom","display","withTheme","withTranslation"],"mappings":"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","file":"static/js/5.b9aace86.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport { loadStickerContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './StickerSet.css';\n\nconst styles = theme => ({\n    title: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary\n    },\n    stickerSetItem: {\n        width: STICKER_SMALL_DISPLAY_SIZE,\n        height: STICKER_SMALL_DISPLAY_SIZE,\n        padding: 3,\n        boxSizing: 'border-box',\n        '&:hover': {\n            background: theme.palette.type === 'dark' ? '#303030' : '#f4f4f4',\n            borderRadius: 6\n        }\n    }\n});\n\nclass StickerSet extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { info } = this.props;\n\n        if (info !== nextProps.info) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { classes, info, onSelect, onMouseDown, onMouseOver } = this.props;\n        if (!info) return null;\n\n        const { title, stickers } = info;\n\n        const items = stickers.map((x, i) => (\n            <div\n                className={classNames('sticker-set-item', classes.stickerSetItem)}\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onClick={() => onSelect(x)}\n                onMouseDown={onMouseDown}\n                onMouseOver={onMouseOver}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-item-sticker'\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE - 6}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        return (\n            <div className='sticker-set'>\n                <div className={classNames('sticker-set-title', classes.title)}>\n                    <span>{title}</span>\n                </div>\n                <div className='sticker-set-content'>{items}</div>\n            </div>\n        );\n    }\n}\n\nStickerSet.propTypes = {\n    info: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onMouseDown: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(StickerSet);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin(n * Math.PI / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startAnim);\n    };\n\n    startAnim = timeStamp => {\n        const { start, duration } = this;\n\n        this.start = timeStamp;\n        this.end = start + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const {\n            stopped,\n            duration,\n            start,\n            options,\n        } = this;\n\n        if (stopped) return;\n        if (now - start >= duration) this.stopped = true;\n\n        const p = (now - start) / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            func(from + (to - from) * val);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animator from '../../Utils/Animatior';\nimport Sticker from './../Message/Media/Sticker';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { ANIMATION_DURATION_500MS } from '../../Constants';\nimport './StickersPickerHeader.css'\n\nconst styles = theme => ({\n    ...borderStyle(theme),\n    ...accentStyles(theme)\n});\n\nclass StickersPickerHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.anchorRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.position !== this.props.position) {\n            this.scrollToPosition();\n        }\n    }\n\n    scrollToPosition = () => {\n        const { position } = this.props;\n        const { animator, anchorRef, scrollRef } = this;\n\n        const scroll = scrollRef.current;\n        const anchor = anchorRef.current;\n        const anchorNode = ReactDOM.findDOMNode(anchor);\n\n        if (animator) {\n            animator.stop();\n        }\n        this.animator = new Animator(ANIMATION_DURATION_500MS, [\n            {\n                from: scroll.scrollLeft,\n                to: position * 44 - 147,\n                func: left => scroll.scrollLeft = left\n            },\n            {\n                from: Number(anchorNode.style.left.replace('px', '')),\n                to: position * 44,\n                func: left => anchorNode.style.left = left + 'px'\n            }\n        ]);\n        this.animator.start();\n    };\n\n    handleWheel = event => {\n        const { scrollRef } = this;\n\n        if (event.deltaX === 0) {\n            const scroll = scrollRef.current;\n\n            scroll.scrollLeft -= event.deltaY;\n        }\n    };\n\n    handleSelect = sticker => {\n        const { stickers, onSelect } = this.props;\n\n        onSelect(stickers.indexOf(sticker));\n    };\n\n    render() {\n        const { classes, stickers } = this.props;\n\n        const items = stickers.map(x => (\n            <Sticker\n                key={x.sticker.id}\n                className='stickers-picker-header-sticker'\n                sticker={x}\n                displaySize={32}\n                blur={false}\n                openMedia={() => this.handleSelect(x)}\n            />\n        ));\n\n        return (\n            <div className={classNames('stickers-picker-header', classes.borderColor)}>\n                <div ref={this.scrollRef} className='stickers-picker-header-scroll' onWheel={this.handleWheel}>\n                    <div className='stickers-picker-header-items'>\n                        {items}\n                    </div>\n                    <div ref={this.anchorRef} className={classNames('stickers-picker-header-anchor', classes.accentBackgroundDark)}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPickerHeader.propTypes = {\n    stickers: PropTypes.array.isRequired,\n    position: PropTypes.number.isRequired,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(StickersPickerHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport StickerSet from './StickerSet';\nimport StickersPickerHeader from './StickersPickerHeader';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { getNeighborStickersFromSets, getStickers } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersPicker.css';\n\nclass StickersPicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.itemsMap = new Map();\n        this.loadedSets = new Map();\n\n        this.state = {\n            stickerSets: null,\n            sets: [],\n            headerStickers: [],\n            position: 0\n        };\n\n        this.loadInViewContentOnScrollEnd = debounce(this.loadInViewContentOnScrollEnd, 100);\n        this.loadInViewContentOnScroll = throttle(this.loadInViewContentOnScroll, 2000);\n        this.updatePosition = throttle(this.updatePosition, 250);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { position, stickerSets, sets, showPreview } = this.state;\n\n        if (nextState.stickerSets !== stickerSets) {\n            return true;\n        }\n\n        if (nextState.sets !== sets) {\n            return true;\n        }\n\n        if (nextState.showPreview !== showPreview) {\n            return true;\n        }\n\n        if (nextState.position !== position) {\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop = () => {\n        this.scrollRef.current.scrollTop = 0;\n    };\n\n    loadContent = async (stickerSets, sets) => {\n        if (this.state.stickerSets) return;\n\n        if (!sets) {\n            const result = await TdLibController.send({\n                '@type': 'getInstalledStickerSets',\n                is_masks: false\n            });\n\n            const promises = [];\n            result.sets.forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            sets = await Promise.all(promises);\n        }\n\n        const slicedSets = sets.slice(0, 5);\n        const headerStickers = sets.reduce((preview, set) => {\n            if (set.stickers.length > 0) {\n                preview.push(set.stickers[0]);\n            }\n            return preview;\n        },[]);\n        this.setState({\n            stickerSets,\n            sets: slicedSets,\n            headerStickers\n        });\n        this.setsLength = slicedSets.length;\n    };\n\n    loadInViewContentOnScroll = () => {\n        this.loadInViewContent();\n    };\n\n    loadInViewContentOnScrollEnd = () => {\n        this.loadInViewContent(400);\n    };\n\n    loadInViewContent = (padding = 0) => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n\n        const inViewItems = [];\n        sets.forEach(x => {\n            const item = this.itemsMap.get(x.id);\n            const node = ReactDOM.findDOMNode(item);\n            if (node) {\n                const topBorder = scroll.scrollTop - padding;\n                const bottomBorder = scroll.scrollTop + scroll.offsetHeight + padding;\n\n                const nodeTop = node.offsetTop;\n                const nodeBottom = node.offsetTop + node.clientHeight;\n\n                if (nodeTop >= topBorder && node.offsetTop <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeBottom >= topBorder && nodeBottom <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeTop <= topBorder && nodeBottom >= bottomBorder) {\n                    inViewItems.push(x);\n                }\n            }\n        });\n\n        inViewItems.forEach(x => {\n            const store = FileStore.getStore();\n            if (!this.loadedSets.has(x.id)) {\n                this.loadedSets.set(x.id, x.id);\n                loadStickerSetContent(store, x);\n            }\n        });\n    };\n\n    updatePosition = () => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n        let minDiff = scroll.scrollHeight;\n        let position = 0;\n        let firstOffsetTop = 0;\n        sets.forEach((x, pos) => {\n            const element = this.itemsMap.get(x.id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node) {\n                    firstOffsetTop = pos === 0 ? node.offsetTop : firstOffsetTop;\n\n                    const offsetTop = node.offsetTop - firstOffsetTop;\n                    if (node && offsetTop <= scroll.scrollTop) {\n                        const diff = Math.abs(scroll.scrollTop - offsetTop);\n                        if (diff <= minDiff) {\n                            minDiff = diff;\n                            position = pos;\n                        }\n                    }\n                }\n            }\n        });\n\n        this.setState({ position });\n    };\n\n    handleScroll = async () => {\n        this.loadInViewContentOnScroll();\n        this.loadInViewContentOnScrollEnd();\n        this.updatePosition();\n\n        const scroll = this.scrollRef.current;\n\n        if (this.loadingChunk) return;\n\n        let loadChunk = false;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight - 400) {\n            loadChunk = true;\n        }\n\n        if (!loadChunk) {\n            return false;\n        }\n\n        const { sets, stickerSets } = this.state;\n        if (stickerSets.sets.length === sets.length) return;\n\n        this.loadingChunk = true;\n        const promises = [];\n        stickerSets.sets.slice(this.setsLength, this.setsLength + 5).forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        const result = await Promise.all(promises).finally(() => (this.loadingChunk = false));\n\n        this.setsLength += result.length;\n        let concatSets = sets.concat(result);\n        this.setState({ sets: concatSets });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { sets } = this.state;\n\n        const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const stickersPerRow = 5;\n        const preloadStickers = getNeighborStickersFromSets(sticker, sets, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n\n        const { onPreview } = this.props;\n        const { sets } = this.state;\n\n        const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n        onPreview(sticker);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true }, () => {\n                    const { onPreview } = this.props;\n                    const { sets } = this.state;\n\n                    const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n                    onPreview(sticker);\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n\n        const { onPreview } = this.props;\n\n        onPreview(null);\n\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleStickerSelect = sticker => {\n        const { onSelect } = this.props;\n        const { cancelSend } = this.state;\n\n        if (cancelSend) return;\n\n        onSelect(sticker);\n    };\n\n    handleSelectSet = async position => {\n        const { sets, stickerSets } = this.state;\n        const { scrollRef } = this;\n\n        if (position < sets.length) {\n            const element = this.itemsMap.get(sets[position].id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node) {\n                    const scroll = scrollRef.current;\n                    scroll.scrollTop = node.offsetTop;\n                }\n            }\n        } else if (position < stickerSets.sets.length) {\n            if (this.loadingChunk) return;\n            if (stickerSets.sets.length === sets.length) return;\n\n            this.loadingChunk = true;\n            const promises = [];\n            stickerSets.sets.slice(this.setsLength, position + 1).forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            const result = await Promise.all(promises).finally(() => (this.loadingChunk = false));\n\n            this.setsLength += result.length;\n            let concatSets = sets.concat(result);\n            this.setState({ sets: concatSets }, () => {\n                if (position < concatSets.length) {\n                    this.handleSelectSet(position);\n                }\n            });\n        }\n    };\n\n    render() {\n        const { position, stickerSets, sets, headerStickers } = this.state;\n        if (!stickerSets) return null;\n\n        if (!sets) return null;\n        if (!sets.length) return null;\n\n        this.itemsMap.clear();\n        const items = sets.map(x => (\n            <StickerSet\n                key={x.id}\n                ref={el => this.itemsMap.set(x.id, el)}\n                info={x}\n                onSelect={this.handleStickerSelect}\n                onMouseDown={this.handleMouseDown}\n                onMouseOver={this.handleMouseOver}\n            />\n        ));\n\n        return (\n            <div className='stickers-picker'>\n                <StickersPickerHeader\n                    onSelect={this.handleSelectSet}\n                    position={position}\n                    stickers={headerStickers}\n                />\n                <div ref={this.scrollRef} className='stickers-picker-scroll' onScroll={this.handleScroll}>\n                    {items}\n                </div>\n                {/*<div>{position}</div>*/}\n            </div>\n        );\n    }\n}\n\nStickersPicker.propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    onPreview: PropTypes.func.isRequired\n};\n\nexport default StickersPicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { Picker as EmojiPicker } from 'emoji-mart';\nimport StickerPreview from './StickerPreview';\nimport StickersPicker from './StickersPicker';\nimport { loadStickerThumbnailContent, loadStickerSetContent } from '../../Utils/File';\nimport { EMOJI_PICKER_TIMEOUT_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EmojiPickerButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0px'\n    },\n    headerButton: {\n        borderRadius: 0,\n        flex: '50%'\n    },\n    pickerRoot: {\n        width: 338,\n        overflowX: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary,\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[8],\n        position: 'absolute',\n        bottom: 80,\n        display: 'none'\n    },\n    pickerRootOpened: {\n        display: 'block'\n    }\n});\n\nclass EmojiPickerButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            tab: 0\n        };\n\n        this.emojiPickerRef = React.createRef();\n        this.stickersPickerRef = React.createRef();\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    onClientUpdateChange = update => {\n        this.picker = null;\n    };\n\n    handleButtonMouseEnter = event => {\n        this.buttonEnter = true;\n        setTimeout(() => {\n            if (!this.buttonEnter) return;\n\n            this.updatePicker(true);\n            this.loadStickerSets();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    loadStickerSets = async () => {\n        if (this.sets) return;\n\n        this.stickerSets = await TdLibController.send({\n            '@type': 'getInstalledStickerSets',\n            is_masks: false\n        });\n\n        const promises = [];\n        this.stickerSets.sets.forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        this.sets = await Promise.all(promises);\n\n        const node = this.stickersPickerRef.current;\n\n        const store = FileStore.getStore();\n        const previewSets = this.sets.slice(0, 5).reverse();\n        previewSets.forEach(x => {\n            loadStickerSetContent(store, x);\n            node.loadedSets.set(x.id, x.id);\n        });\n\n        const previewStickers = this.sets.reduce((stickers, set) => {\n            if (set.stickers.length > 0) {\n                stickers.push(set.stickers[0]);\n            }\n            return stickers;\n        }, []);\n        previewStickers.forEach(x => {\n            loadStickerThumbnailContent(store, x);\n        });\n    };\n\n    handleButtonMouseLeave = () => {\n        this.buttonEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    tryClosePicker = () => {\n        const { sticker } = this.state;\n        if (this.paperEnter || this.buttonEnter || sticker) return;\n\n        this.updatePicker(false);\n    };\n\n    handlePaperMouseEnter = () => {\n        this.paperEnter = true;\n    };\n\n    handlePaperMouseLeave = () => {\n        this.paperEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    updatePicker = open => {\n        this.setState({ open });\n    };\n\n    switchPicker = () => {\n        this.updatePicker(!this.state.open);\n    };\n\n    handleEmojiClick = () => {\n        this.setState({ tab: 0 });\n    };\n\n    handleStickersClick = () => {\n        const stickersPicker = this.stickersPickerRef.current;\n        const { tab } = this.state;\n\n        stickersPicker.loadContent(this.stickerSets, this.sets);\n\n        this.setState({ tab: 1 });\n        if (tab === 1) {\n            stickersPicker.scrollTop();\n        }\n    };\n\n    handleStickerSend = sticker => {\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n\n        this.updatePicker(false);\n    };\n\n    handleStickerPreview = sticker => {\n        this.setState({ sticker });\n\n        if (!sticker) {\n            this.tryClosePicker();\n        }\n    };\n\n    render() {\n        const { classes, theme, t } = this.props;\n        const { open, tab, sticker } = this.state;\n\n        if (open && !this.picker) {\n            const i18n = {\n                search: t('Search'),\n                notfound: t('NotEmojiFound'),\n                skintext: t('ChooseDefaultSkinTone'),\n                categories: {\n                    search: t('SearchResults'),\n                    recent: t('Recent'),\n                    people: t('SmileysPeople'),\n                    nature: t('AnimalsNature'),\n                    foods: t('FoodDrink'),\n                    activity: t('Activity'),\n                    places: t('TravelPlaces'),\n                    objects: t('Objects'),\n                    symbols: t('Symbols'),\n                    flags: t('Flags'),\n                    custom: t('Custom')\n                }\n            };\n\n            this.picker = (\n                <EmojiPicker\n                    ref={this.emojiPickerRef}\n                    set='apple'\n                    showPreview={false}\n                    showSkinTones={false}\n                    onSelect={this.props.onSelect}\n                    color={theme.palette.primary.dark}\n                    i18n={i18n}\n                    style={{ width: 338, overflowX: 'hidden' }}\n                />\n            );\n\n            this.stickersPicker = (\n                <StickersPicker\n                    ref={this.stickersPickerRef}\n                    onSelect={this.handleStickerSend}\n                    onPreview={this.handleStickerPreview}\n                />\n            );\n        }\n\n        return (\n            <>\n                <link\n                    rel='stylesheet'\n                    type='text/css'\n                    href={theme.palette.type === 'dark' ? 'emoji-mart.dark.css' : 'emoji-mart.light.css'}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Emoticon'\n                    onClick={this.switchPicker}\n                    onMouseEnter={this.handleButtonMouseEnter}\n                    onMouseLeave={this.handleButtonMouseLeave}\n                >\n                    <InsertEmoticonIcon />\n                </IconButton>\n                <div\n                    className={classNames(classes.pickerRoot, { [classes.pickerRootOpened]: open })}\n                    onMouseEnter={this.handlePaperMouseEnter}\n                    onMouseLeave={this.handlePaperMouseLeave}\n                >\n                    <div className='emoji-picker-header'>\n                        <Button\n                            color={tab === 0 ? 'primary' : 'default'}\n                            className={classes.headerButton}\n                            onClick={this.handleEmojiClick}>\n                            {t('Emoji')}\n                        </Button>\n                        <Button\n                            color={tab === 1 ? 'primary' : 'default'}\n                            className={classes.headerButton}\n                            onClick={this.handleStickersClick}>\n                            {t('Stickers')}\n                        </Button>\n                    </div>\n                    <div className={classNames('emoji-picker-content', { 'emoji-picker-content-stickers': tab === 1 })}>\n                        {this.picker}\n                        {this.stickersPicker}\n                    </div>\n                    <StickerPreview sticker={sticker} />\n                </div>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(EmojiPickerButton);\n"],"sourceRoot":""}