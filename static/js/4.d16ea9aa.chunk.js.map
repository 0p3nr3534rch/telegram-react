{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Channel.js","Utils/Supergroup.js","Components/Additional/MentionLink.js","Utils/Message.js","Components/Message/Media/Call.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Venue.js","Utils/Media.js","Assets/Icons/Close.js","Stores/PlayerStore.js","Utils/User.js","Workers/BlobInflator.js","Workers/Helpers.js","Components/Message/Media/Sticker.js","Components/Viewer/FileProgress.js","Stores/StickerStore.js","Stores/BasicGroupStore.js","Components/Tile/UserTile.js","Components/Message/Media/Photo.js","Utils/Date.js","Components/Additional/SafeLink.js","Stores/InstantViewStore.js","Assets/Icons/Download.js","Components/Message/MessageAuthor.js","Components/Message/Media/Animation.js","Assets/Icons/PlayArrow.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/User.js","Utils/Url.js","Components/Message/Media/Audio.js","Assets/Icons/Pause.js","Components/Tile/DocumentTile.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Location.js","Components/Message/Media/Video.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/StickerPreview.js","Actions/Poll.js","Components/Tile/UserStatus.js","Stores/PollStore.js","Utils/Poll.js","Utils/Punycode.js","Components/Message/Media/VideoNote.js","Components/Tile/VoiceNoteTile.js","Assets/Icons/Smile.js","Components/Message/Media/FireworksControl.js","Assets/Icons/Check.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Tile/UserPlaceholder.js","Components/Popup/PollOptionResult.js","Components/Popup/PollOptionResults.js","Components/Popup/PollResultsDialog.js","Components/Message/Media/Poll.js","Assets/Icons/Document.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Workers/pako.worker.js","Notifications.js","Assets/Icons/Saved.js","Assets/Icons/DeletedAccount.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Actions/Chat.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/Archive.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/Main.js","Components/ColumnLeft/Settings/EditProfile.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Assets/Icons/Share.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","reset","callbacks","db","urls","WeakMap","dataUrls","Map","items","blobItems","locationItems","downloads","uploads","onUpdate","update","a","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","TdLibController","on","removeTdLibListener","off","authorization_state","initDB","handleDownloads","handleUploads","arr","id","idb_key","local","has","is_downloading_completed","get","delete","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","THUMBNAIL_PRIORITY","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","pageBlockMap","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getDataUrl","setDataUrl","dataUrl","deleteDataUrl","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callback","this","initiatingDB","push","openDB","catch","log","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","send","file_id","response","data","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","FileStore","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","PRELOAD_AUDIO_SIZE","loadAnimationContent","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","PRELOAD_DOCUMENT_SIZE","loadGameContent","width","height","zoom","LOCATION_ZOOM","scale","LOCATION_SCALE","loadLocationContent","LOCATION_WIDTH","LOCATION_HEIGHT","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","displaySize","PHOTO_SIZE","getPhotoSize","loadPhotoThumbnailContent","thumbSize","getPhotoThumbnailSize","loadStickerContent","PRELOAD_STICKER_SIZE","loadVideoContent","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","keys","saveMedia","media","file_name","saveOrDownload","saveAnimation","saveDocument","savePhoto","saveVideo","fileName","mime","type","saveData","can_be_downloaded","getViewerThumbnail","getViewerFile","getMediaPreviewFile","getMediaFile","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","small","big","getChatUserId","getProfilePhoto","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatPhotoContent","loadChatsContent","loadDraftContent","draft_message","loadRecentStickersContent","recent","loadStickersContent","stickers","loadStickerSetContent","stickerSet","is_animated","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","loadInstantViewContent","instantView","page_blocks","pageBlock","loadPageBlockContent","b","caption","author","loadRichTextContent","text","credit","cover","header","poster_photo","author_photo","footer","kicker","loadPageBlockMapContent","IV_PHOTO_SIZE","articles","subheader","subtitle","cells","row","title","t","texts","getAnimationData","fileReader","FileReader","onload","JSON","parse","onabort","readAsText","canUnpinMessage","pinned_message_id","isChatArchived","chat_list","canSetChatChatList","is_sponsored","isMeChat","SERVICE_NOTIFICATIONS_USER_ID","draftEquals","draft1","draft2","inputMessageText1","input_message_text","replyToMessageId1","inputMessageText2","formattedText1","formattedText2","text1","entities1","entities","text2","entities2","offset","every","entitiesEquals","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","next","value","action","getPrivateChatTypingString","firstUser","secondUser","first_name","second_name","getGroupChatTypingString","getMessageSenderFullName","k","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","key","getContent","showChatUnreadMentionCount","unread_mention_count","showChatUnreadCount","is_marked_as_unread","unread_count","isChatUnread","isChatMuted","notification_settings","use_default_mute_for","mute_for","settings","NotificationStore","isChannelChat","getScopeNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","is_member","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getChannelStatus","getSupergroupStatus","getChatSubtitle","showSavedMessages","chatTypingString","getChatLetters","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","formatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChatMember","getChatTitle","isDeletedPrivateChat","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendMediaMessages","globalPermissions","permissions","can_send_media_messages","getChatShortTitle","canClearHistory","Boolean","canDeleteChat","canSendPolls","can_send_polls","canSendMessages","can_send_messages","getChatDraft","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","isChatSecret","MentionLink","props","handleClick","stopPropagation","preventDefault","popup","openUser","setState","openChat","handleClose","handleDialogClick","state","children","onClick","Dialog","transitionDuration","onClose","aria-labelledby","DialogTitle","DialogContent","classes","root","DialogContentText","DialogActions","Button","prevUserId","prevUsername","React","Component","defaultProps","withTranslation","isMetaBubble","isMessageUnread","last_read_inbox_message_id","last_read_outbox_message_id","is_outgoing","isMe","getTitle","substring","start","end","searchCurrentChat","AppStore","searchChat","getFormattedText","formattedText","deleteLineBreakAfterPre","entity","textBefore","textBeforeLength","substr","entityKey","entityText","command","rel","SafeLink","textAfter","getText","meta","concat","getWebPage","d","getDateHint","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getSenderUserId","filterDuplicateMessages","reduce","accumulator","current","filterMessages","ttl","getServiceMessageContent","poll","question","emoji","isMediaContent","longitude","latitude","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","is_listened","is_viewed","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","message_id","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","openVideo","openVideoNote","openVoiceNote","openMedia","openChatPhoto","openContact","openGame","isDeletedMessage","getReplyMinithumbnail","minithumbnail","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","messageComparatorDesc","left","right","checkInclusion","checkIntersection","startIndex","endIndex","checkEntity","removeOffsetAfter","countToRemove","e","addOffsetAfter","countToAdd","removeEntities","entityStart","entityEnd","splice","addTextNode","nodes","node","createTextNode","getNodes","sort","prevEntity","innerText","dataset","getDecodedUrl","getEntities","join","isPre","DOMParser","parseFromString","finalText","childNodes","nodeName","indexOf","language","lastChar","firstChar","c","checkString","checkChar","prevChar","canMessageBeEdited","can_be_edited","showMessageForward","isTextMessage","isMessagePinned","canMessageBeUnvoted","is_closed","options","is_chosen","is_being_chosen","canMessageBeClosed","Call","duration","callTitle","getCallTitle","durationString","getDurationString","Math","floor","className","classNames","IconButton","color","aria-label","fontSize","Contact","last_name","fullName","number","UserTile","firstName","lastName","Game","Animation","fitPhotoSize","getFitSize","Photo","PHOTO_DISPLAY_SIZE","Venue","venueTitle","address","Location","discard_reason","isEditedMedia","isValidAnimatedSticker","sending_state","isBlurredThumbnail","blurredSize","THUMBNAIL_BLURRED_SIZE_90","max","performer","trimmedTitle","trim","trimmedPerformer","getAudioShortTitle","getAudioSubtitle","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","setIndex","findIndex","stickerIndex","prevRows","ceil","toRowColumn","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","getInputMediaThumbnail","getInputMediaCaption","getInputMediaContent","live_period","added_sticker_file_ids","supports_streaming","waveform","getMedia","hasTitle","hasCaption","inlineMeta","Audio","duraton","discardReason","Document","Poll","Sticker","StickerSourceEnum","MESSAGE","Video","VideoNote","VoiceNote","createSvgIcon","RepeatEnum","Object","freeze","NONE","REPEAT","REPEAT_ONE","playlist","time","videoStream","close","getPlaylist","volume","savePlayerSettings","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","currentTime","timestamp","stream","useRepeatShuffle","nextIndex","getRandomInt","currentPlaylist","totalCount","query","from_message_id","limit","total_count","loadPlayerSettings","player","localStorage","getItem","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","setItem","stringify","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","isUserBlocked","is_blocked","getUserLetters","getUserStatusOrder","expires","PROFILE_PHOTO_SMALL_SIZE","PROFILE_PHOTO_BIG_SIZE","getProfilePhotoDateHint","userProfilePhoto","added_date","worker","PakoWorker","handlers","inflateBlob","random","toString","slice","postMessage","onmessage","msg","Lottie","lazy","HINTS","PICKER_HEADER","PICKER","PREVIEW","STICKER_SET","UNKNOWN","onClientUpdateInstantViewContent","openIV","InstantViewStore","getCurrent","startStopAnimation","onClientUpdateDialogChatId","dialogChatId","ApplicationStore","onClientUpdateMediaViewerContent","openMediaViewer","mediaViewerContent","onClientUpdateProfileMediaViewerContent","openProfileMediaViewer","profileMediaViewerContent","onClientUpdateStickerPreview","stickerPreview","onClientUpdateMessagesInView","inView","onClientUpdateStickerSet","openedStickerSet","onClientUpdateFocusWindow","focused","windowFocused","onClientUpdateStickerBlob","loadContent","forceUpdate","onClientUpdateStickerThumbnailBlob","autoplay","play","isAnimated","animationData","handleMouseEnter","handleAnimationMouseEnter","entered","lottieRef","loopCount","handleAnimationLoopComplete","handleAnimationMouseOut","createRef","hasFocus","StickerStore","animationDate","hasError","errorInfo","nextProps","nextState","nextContext","blur","prevProps","prevState","snapshot","pause","paused","preview","thumbnailSrc","src","isBlurred","draggable","alt","fitSize","Suspense","fallback","ref","loop","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","eventListeners","eventName","onMouseOut","stickerStyle","onMouseEnter","STICKER_DISPLAY_SIZE","FileProgress","currentFile","nextFile","fileEquals","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","icon","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","file1","file2","local1","remote1","local2","remote2","can_be_deleted","download_offset","downloaded_prefix_size","path","cancelButton","zIndex","completeIcon","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","background","circle","variant","thickness","hint","sticker_set_ids","is_installed","assign","foundStickers","fullInfoItems","basic_group","setFullInfo","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","loaded","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","handleLoad","fistName","dialog","tileLoaded","tileColor","abs","pointer","onLoad","onClientUpdatePhotoBlob","showProgress","miniSrc","thumbSrc","photoStyle","hasSrc","thumbnailSize","prevPhoto","PHOTO_THUMBNAIL_SIZE","token","timezone","timezoneClip","mask","utc","gmt","arguments","kindOf","test","undefined","isNaN","TypeError","maskSlice","String","masks","_","D","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","replace","S","val","len","targetThursday","getFullYear","getMonth","firstThursday","ds","getHours","weekDiff","dow","Array","isArray","call","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","confirm","handleDone","newWindow","opener","handleSafeClick","isTelegramLink","messageLinkInfo","lowerCaseUrl","startsWith","decodedUrl","safe","displayText","mail","prevUrl","prevDisplayText","isUrlSafe","getHref","viewerContent","prevInstantView","MessageAuthor","openUserCommand","openChatCommand","startStopPlayer","videoRef","ivInView","openIVMedia","onClientUpdateInstantViewViewerContent","onClientUpdateBlocksInView","blocks","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","setPlayerParams","mime_type","animationStyle","isGif","poster","muted","autoPlay","playsInline","iv","transform","currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","Currency","getString","total_amount","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","User","showStatus","regExpRTLO","hasRTLOSymbol","decodedHref","decodeURI","domain","punycode","ToUnicode","regExpDomainExplicit","RegExp","regExpDomain","regExpProtocol","validateUrl","trimmed","domainMatch","protocolMatch","isGoodProtocol","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","PlayerStore","audioTitle","audioSubtitle","DocumentTile","onClientUpdateDocumentThumbnailBlob","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","playerDuration","Infinity","currentTimeString","audioDuration","theme","isDownloadingActive","isUploadingActive","sizeString","onClientUpdateLocationBlob","locationStyle","onClientUpdateVideoThumbnailBlob","videoStyle","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","setPollAnswer","optionIds","option_ids","cancelPollAnswer","stopPoll","reply_markup","UserStatus","onUpdateUserStatus","isAccent","allow_multiple_answers","is_anonymous","isAnonymous","newType","correct_option_id","option","source1","source2","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","POLL_OPTION_LENGTH","hasPollData","utf16","decode","input","extra","output","charCodeAt","RangeError","encode","fromCharCode","base","damp","tmin","tmax","skew","maxint","encode_digit","flag","adapt","delta","numpoints","firsttime","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","toUpperCase","q","ijv","bcp","Error","ToASCII","domain_array","circleStyle","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","stop","onCanPlay","VoiceNoteTile","Particle","fireworks","colorType","side","typeSize","xFinished","finishedStart","rotation","moveX","moveY","ctx","fillStyle","beginPath","arc","PI","fill","save","translate","rotate","radius","stroke","tl","tr","br","bl","defaultRadius","moveTo","lineTo","quadraticCurveTo","closePath","roundRect","restore","dt","moveCoef","wasNegative","speedCoef","fallingDownCount","getMeasuredHeight","min","Fireworks","context","particlesCount","fallParticlesCount","particles","canvas","clientHeight","clientWidth","fall","particle","colors","getMeasuredWidth","xOffset","yOffset","started","startedFall","lastUpdateTime","createParticle","draw","newTime","clearRect","p","startFall","requestAnimationFrame","FireworksComponent","onResize","canvasRef","parentNode","attachToParent","detachFromParent","addEventListener","removeEventListener","getContext","position","top","pointerEvents","PollRadio","chosen","beingChosen","hidden","onChange","Radio","colorPrimary","disabled","TouchRippleProps","child","checked","checkedIcon","CircularProgress","PollPercentage","updateAnimation","stopAnimation","handle","onAnimationFrame","cancelAnimationFrame","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","animated","prevPropsValue","closed","PollOption","getTitleString","canBeSelected","onVote","maxVoterCount","isCorrect","voter_count","vote_percentage","isMultiChoosen","Close","Check","LinearProgress","bar","UserPlaceholder","titleWidth","sin","contentWidth","cos","marginLeft","PollOptionResult","ListItem","button","PollOptionResults","handleShowMore","newOffset","newCount","POLL_RESULTS_SLICE_LENGTH","updateVoters","handleCollapse","POLL_RESULTS_FIRST_SLICE_LENGTH","POLL_RESULTS_LEAVE_LENGTH","voters","loadMore","optionId","option_id","user_ids","offset2","isQuiz","results","voterCount","showMoreButton","showMoreCount","showMore","fullWidth","showCollapse","PollResultsDialog","onClientUpdateClosePollResults","handleContextMenu","PollStore","container","paper","onContextMenu","getTotalVoterCountString","handleSubmit","viewResults","handleVote","handleOpenResults","viewResultsPoll","handleCloseResults","fireworksRef","total_voter_count","recent_voter_user_ids","isSelected","showViewResults","showButton","buttonEnabled","recentVoters","marginRight","getOptionType","getOptionIsCorrect","textPrimary","fillRule","mixBlendMode","opacity","DocumentAction","Download","thumb","viewBox","data-name","data-ext","VoiceNoteSlider","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider","module","exports","Worker","__webpack_public_path__","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","strokeWidth","strokeLinejoin","cx","cy","r","OnlineStatus","online","borderSize","padding","ChatTile","onFastUpdatingComplete","showOnline","DeletedAccount","ForwardTargetChat","selected","shortTitle","copy","element","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","select","execCommand","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","currentPackId","OptionStore","suggestedPackId","latinInput","getLatinInput","ForwardDialog","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","savedMessagesPromise","force","chats","savedMessages","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","input_message_content","disable_web_page_preview","clear_draft","from_chat_id","as_album","handleChangeSelection","innerHTML","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","hasSearchText","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","focus","searchResultsMap","filteredResults","foundChats","aria-describedby","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","autoFocus","enhance","compose","withSnackbar","isVerified","DialogStatus","updateSubtitle","find","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","onUpdateSupergroup","prevChatId","externalSubtitle","Chat","onTileSelect","showTitle","isSavedMessages","ChatDetailsHeader","backButton","setChatChatList","chatList","toggleChatIsPinned","isPinned","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","toggleChatNotificationSettings","isMuted","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","getChatCounters","photoCounter","return_local","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Notifications","onUpdateChatNotificationSettings","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItemIcon","ListItemText","primary","Typography","noWrap","ListItemSecondaryAction","Switch","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isGroup","isBlocked","isMember","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","handleUsernameHint","telegramUrlOption","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","scrollHeight","offsetHeight","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","member","wordWrap","Divider","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","SharedDocument","handleOpenMessage","handleCloseContextMenu","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","contextMenu","clientX","clientY","handleRevokeChange","handleCloseDelete","handleDeleteContinue","showOpenMessage","can_be_deleted_only_for_self","Popover","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","FormControlLabel","control","Checkbox","label","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","SpeedDialIcon","openIcon","SharedMediaBase","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","isValidContent","insertByOrder","onUpdateNewMessage","isValidMessage","onUpdateDeleteMessages","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","finally","incompleteResults","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","func","bool","SharedDocuments","SharedLink","hostname","webPage","display_url","getTitleFromUrl","isValidEntityType","typeUrl","SharedLinks","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhoto","backgroundImage","SharedPhotos","SharedVideo","SharedVideos","SharedVoiceNote","dateString","toLocaleDateString","month","year","hour","minute","hour12","SharedVoiceNotes","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","setCounters","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","Archive","openArchive","onClientUpdateClearHistory","clearHistory","contentControl","draft","senderName","x1","y1","x2","y2","strokeLinecap","DialogBadge","showUnreadMentionCount","showUnreadCount","Pin","Status","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","unread","Pending","Sent","Succeeded","prevMessageId","DialogMeta","previousChatId","canPinChats","canTogglePin","canToggleArchive","handleMute","pinnedSumMaxOption","isSecret","pinnedSum","handlePin","handleArchive","getViewInfoTitle","handleViewInfo","handleRead","forceRead","force_read","viewMessages","isLastPinned","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","authorizationState","loadFirstSlice","isAuthorizationReady","saveCache","onSaveCache","onUpdateChatOrder","order","newChatIds","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","handleCloseArchive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderFullName","tile","SectionHeader","Search","concatSearchResults","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","recentlyFound","trimmedText","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewGroup","handleContacts","handleArchived","handleSaved","handleSettings","handleHelp","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Saved","Help","aria-owns","aria-haspopup","SearchInput","handleInput","inputRef","onFocus","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","ANIMATION_DURATION_100MS","SidebarPage","Slide","direction","mountOnEnter","SettingsMenuButton","handleLogOut","logOut","More","LogOut","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","RadioGroup","name","withTheme","Main","handleAppearance","themePickerRef","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","firstNameRef","lastNameRef","bioRef","userFullInfo","setName","setBio","setUsername","newFirstName","newLastName","newBio","usernameLabel","TextField","defaultValue","General","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","PrivacySecurity","openActiveSessions","handleBlockedUsers","opened","closeActiveSessions","sessionsCount","usersCount","role","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","manager","removeItem","clear","cache","contacts","CacheManager","remove","saveChatsInternal","load","files","parseCache","archiveChats","basicGroups","supergroups","OutputTypingManager","updateChatChatList","archiveChatIds","fileMap","userMap","basicGroupMap","supergroupMap","entries","getCache","readAsDataURL","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","throttle","CacheStore","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","getArchiveTitle","archive","chatsOrder","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateOpenContacts","openContacts","onClientUpdateCloseContacts","onClientUpdateOpenSettings","openSettings","meChatId","onClientUpdateCloseSettings","onClientUpdateOpenArchive","onClientUpdateCloseArchive","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsHeaderRef","setInitQuery","scrollToTop","visible","handleSaveCache","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","focusNode","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","optionTextRef","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","data-length","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","allowMultipleAnswers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","urlError","onDone","handleCancel","onCancel","textRef","urlRef","flexDirection","margin","autoComplete","prevOpen","ReplyTile","isVideoNote","Reply","onGetMessageResult","handleOpen","InputBoxHeader","editMessageId","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","readImageSize","photoWidth","photoHeight","altKey","ctrlKey","metaKey","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaFromFile","setFormattedText","getRangeAt","has_stickers","accept","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","setEditMessage","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","setInputFocus","beforeEditText","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","getDraftMessage","inputContent","editedMessage","editMessageText","editMessageCaption","attachPhotoRef","handleAttachPhotoComplete","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","handleDoneEditMedia","editMessageMedia","performance","isMediaEditing","multiple","Done","Send","FooterCommand","onCommand","NotificationsCommand","Footer","handleJoin","handleDeleteAndExit","remove_from_chat_list","NotificationTimer","handleTimer","expire","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","getLeaveChatTitle","handleUnpin","deleteChat","leaveChatTitle","unpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","isAccentSubtitle","HeaderChat","HeaderCommand","selectedItems","deleteMessages","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","code","deletedMessage","getClientData","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","onMouseLeave","visibility","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHintStr","dateStr","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onSendInternal","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","openInstantView","force_full","setInstantViewContent","WebPage","displaySmallSize","displayExtraSmallSize","site_name","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","copyLink","tagName","handleReply","replyMessage","disableNotification","disable_notification","pinMessage","handleEdit","editMessage","handleUnvote","handleConfirmStopPoll","confirmStopPoll","handleStopPoll","handleCloseConfirm","showUnreadSeparator","showTail","edit_date","showForward","showReply","suppressTitle","getMessageStyle","canBeUnvoted","canBeClosed","canBeReplied","canBePinned","hasSelectedMessage","canBeEdited","withBubble","onMouseOver","onAnimationEnd","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","getSticker","mouseDownStickerId","handleMouseUp","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","scrollDownButtonRef","historyEquals","previousChat","MAX_VALUE","highlightMessage","viewAction","getMessagePhoto","getMessageSticker","oldMessageId","prevMessage","isFirst","MESSAGE_SPLIT_MAX_TIME_S","prevDate","nextMessage","showMessageDate","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","IVContext","createContext","withIV","IVComponent","Consumer","RichText","richText","email_address","emailAddress","getRichText","object","Anchor","Caption","hasText","isEmptyText","hastCredit","block","need_autoplay","IV_PHOTO_DISPLAY_SIZE","AuthorDate","publishDate","hasAuthor","hasDate","dateTime","toISOString","Blockquote","pageBlocks","getPageBlock","Cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevHtml","authorPhoto","ErrorHandler","componentStack","Kicker","data-before","Paragraph","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","publish_date","Subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","onClientUpdateDocumentBlob","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","ChatLink","needAutoplay","isLooped","openInstantViewMedia","setInstantViewViewerContent","is_open","posterPhoto","is_full_width","allow_scrolling","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailBlob","videoWidth","videoHeight","handleContentClick","onVolumeChange","prevMedia","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","hasPreviousMedia","hasNextMedia","handlePrevious","handleSave","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewUrl","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","scrollIntoView","Provider","alignItems","transition","MediaInfo","dateHint","tileControl","MediaViewerContent","updateAnimationData","changeSpeed","isVideo","isAnimation","isLottie","MediaViewer","deleteConfirmationOpened","currentMessageId","firstSliceLoaded","inserted","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","MEDIA_SLICE_LIMIT","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","ProfileMediaViewerContent","ProfileMediaInfo","ProfileMediaViewer","currentIndex","inputFile","chatPhoto","getReadWriteStore","prevFileId","currentFileId","inHistory","MainPage","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.d16ea9aa.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.dataUrls = new Map();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n\n        const { authorization_state } = update;\n        if (!authorization_state) return;\n\n        switch (authorization_state['@type']) {\n            case 'authorizationStateWaitTdlibParameters': {\n                await this.initDB();\n                break;\n            }\n            case 'authorizationStateClosed': {\n                this.reset();\n                break;\n            }\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'animation': {\n                    this.handleAnimation(store, item, file, arr, null);\n                    break;\n                }\n                case 'audio': {\n                    this.handleAudio(store, item, file, arr, null);\n                    break;\n                }\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'document': {\n                    this.handleDocument(store, item, file, arr, null);\n                    break;\n                }\n                case 'game': {\n                    this.handleGame(store, item, file, arr, null);\n                    break;\n                }\n                case 'location': {\n                    this.handleLocation(store, item, file, arr, null);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'pageBlockMap': {\n                    this.handlePageBlockMap(store, item, file, arr, null);\n                    break;\n                }\n                case 'photo': {\n                    this.handlePhoto(store, item, file, arr, null);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'video': {\n                    this.handleVideo(store, item, file, arr, null);\n                    break;\n                }\n                case 'videoNote': {\n                    this.handleVideoNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'voiceNote': {\n                    this.handleVoiceNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\n                );\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\n                );\n            }\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\n                );\n            }\n        }\n    };\n\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const { location } = pageBlockMap;\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\n                );\n            }\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            // console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            // console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        // console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        // console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                // console.log('[fs] readFile file_id=' + file.id);\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getDataUrl = id => {\n        if (!id) {\n            return null;\n        }\n\n        if (this.dataUrls.has(id)) {\n            return this.dataUrls.get(id);\n        }\n\n        return null;\n    };\n\n    setDataUrl = (id, dataUrl) => {\n        this.dataUrls.set(id, dataUrl);\n    };\n\n    deleteDataUrl = id => {\n        this.dataUrls.delete(id);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    IV_LOCATION_HEIGHT,\n    IV_LOCATION_WIDTH,\n    IV_PHOTO_SIZE,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return '';\n\n    let size = file.size;\n    if (!size) return '';\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\n    if (!pageBlockMap) return;\n\n    const { location } = pageBlockMap;\n    const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: IV_LOCATION_WIDTH,\n            height: IV_LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap)\n    );\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes, displaySize);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const thumbSize = getPhotoThumbnailSize(photo.sizes);\n    if (!thumbSize) return false;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (photoSize === thumbSize) return;\n\n    let { photo: file } = thumbSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nexport function saveMedia(media, message) {\n    if (!media) return;\n\n    switch (media['@type']) {\n        case 'animation': {\n            saveAnimation(media, message);\n            break;\n        }\n        case 'document': {\n            saveDocument(media, message);\n            break;\n        }\n        case 'photo': {\n            savePhoto(media, message);\n            break;\n        }\n        case 'video': {\n            saveVideo(media, message);\n            break;\n        }\n    }\n}\n\nfunction saveAnimation(animation, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!animation) return;\n\n    const { animation: file, file_name } = animation;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || animation, () =>\n        FileStore.updateAnimationBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveDocument(document, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!document) return;\n\n    const { document: file, file_name } = document;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || document, () =>\n        FileStore.updateDocumentBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveVideo(video, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!video) return;\n\n    const { video: file, file_name } = video;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || video, () =>\n        FileStore.updateVideoBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction savePhoto(photo, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!photo) return;\n\n    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    const { photo: file } = photoSize;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getViewerThumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'document': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'photo': {\n            return getViewerFile(media, PHOTO_SIZE);\n        }\n        case 'video': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerFile(media, size) {\n    if (!size) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            return [media.width, media.height, media.animation];\n        }\n        case 'photo': {\n            const photoSize = getSize(media.sizes, size);\n            if (photoSize) {\n                return [photoSize.width, photoSize.height, photoSize.photo];\n            }\n            break;\n        }\n        case 'document': {\n            return [50, 50, document.document];\n        }\n        case 'video': {\n            return [media.width, media.height, media.video];\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const dataUrl = FileStore.getDataUrl(id);\n    if (dataUrl) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    loadChatPhotoContent(store, photo, chat.id);\n}\n\nfunction loadChatPhotoContent(store, photo, chatId) {\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nexport function loadRecentStickersContent(store, recent) {\n    if (!recent) return;\n\n    const { stickers } = recent;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n        if (sticker.is_animated) {\n            loadStickerContent(store, sticker, null);\n        }\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const dataUrl = file && FileStore.getDataUrl(file.id);\n    if (dataUrl) return dataUrl;\n\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nfunction loadInstantViewContent(instantView) {\n    if (!instantView) return;\n\n    const { page_blocks } = instantView;\n    if (!page_blocks) return;\n\n    const store = FileStore.getStore();\n\n    page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\n}\n\nfunction loadPageBlockContent(store, b) {\n    if (!b) return;\n\n    switch (b['@type']) {\n        case 'pageBlockAnchor': {\n            break;\n        }\n        case 'pageBlockAnimation': {\n            const { animation, caption } = b;\n\n            loadAnimationThumbnailContent(store, animation, null);\n            loadAnimationContent(store, animation, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAudio': {\n            const { audio, caption } = b;\n\n            loadAudioThumbnailContent(store, audio, null);\n            loadAudioContent(store, audio, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            const { author } = b;\n\n            loadRichTextContent(store, author);\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockCaption': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockChatLink': {\n            const { photo } = b;\n\n            loadChatPhotoContent(store, photo, 0);\n            break;\n        }\n        case 'pageBlockCollage': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockCover': {\n            const { cover } = b;\n\n            loadPageBlockContent(store, cover);\n            break;\n        }\n        case 'pageBlockDetails': {\n            const { header, page_blocks } = b;\n\n            loadPageBlockContent(store, header);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockDivider': {\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            const { poster_photo, caption } = b;\n\n            loadPhotoContent(store, poster_photo, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            const { author_photo, page_blocks, caption } = b;\n\n            loadPhotoContent(store, author_photo, null);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockFooter': {\n            const { footer } = b;\n\n            loadRichTextContent(store, footer);\n            break;\n        }\n        case 'pageBlockHeader': {\n            const { header } = b;\n\n            loadRichTextContent(store, header);\n            break;\n        }\n        case 'pageBlockKicker': {\n            const { kicker } = b;\n\n            loadRichTextContent(store, kicker);\n            break;\n        }\n        case 'pageBlockList': {\n            const { items } = b;\n\n            items.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockListItem': {\n            const { page_blocks } = b;\n\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockMap': {\n            const { caption } = b;\n\n            loadPageBlockMapContent(store, b, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockParagraph': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPhoto': {\n            const { photo, caption } = b;\n\n            loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            const { header, articles } = b;\n\n            loadRichTextContent(store, header);\n            articles.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockRelatedArticle': {\n            const { photo } = b;\n\n            loadPhotoContent(store, photo, null);\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockSubheader': {\n            const { subheader } = b;\n\n            loadRichTextContent(store, subheader);\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            const { subtitle } = b;\n\n            loadRichTextContent(store, subtitle);\n            break;\n        }\n        case 'pageBlockTable': {\n            const { caption, cells } = b;\n\n            loadRichTextContent(store, caption);\n            cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockTableCell': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockTitle': {\n            const { title } = b;\n\n            loadRichTextContent(store, title);\n            break;\n        }\n        case 'pageBlockVideo': {\n            const { video, caption } = b;\n\n            loadVideoThumbnailContent(store, video, null);\n            loadVideoContent(store, video, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n    }\n}\n\nfunction loadRichTextContent(store, t) {\n    if (!t) return;\n\n    switch (t['@type']) {\n        case 'richTextAnchor': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextBold': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextEmailAddress': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextFixed': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextIcon': {\n            const { document } = t;\n\n            loadDocumentThumbnailContent(store, document, null);\n            loadDocumentContent(store, document, null, false);\n            break;\n        }\n        case 'richTextItalic': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextMarked': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPlain': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTexts': {\n            const { texts } = t;\n\n            texts.forEach(x => loadRichTextContent(store, x));\n            break;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSubscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSuperscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUnderline': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUrl': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n    }\n}\n\nfunction getAnimationData(file) {\n    return new Promise(resolve => {\n        if (!file) {\n            resolve(null);\n            return;\n        }\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) {\n            resolve(null);\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = event => resolve(JSON.parse(event.target.result));\n        fileReader.onerror = () => resolve(null);\n        fileReader.onabort = () => resolve(null);\n        fileReader.readAsText(blob);\n    });\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadChatContent,\n    loadChatsContent,\n    loadDraftContent,\n    loadInstantViewContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    loadStickerThumbnailContent,\n    loadUserContent,\n    loadUsersContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension,\n    getViewerFile,\n    getViewerThumbnail,\n    getAnimationData\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from '../Utils/Date';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport { formatPhoneNumber } from './Phone';\nimport { getChannelStatus } from './Channel';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport NotificationStore from '../Stores/NotificationStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function canUnpinMessage(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { pinned_message_id } = chat;\n\n    return pinned_message_id > 0;\n}\n\nexport function isChatArchived(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { chat_list } = chat;\n    if (!chat_list) return false;\n\n    return chat_list['@type'] === 'chatListArchive';\n}\n\nexport function canSetChatChatList(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_sponsored, chat_list } = chat;\n    if (is_sponsored) return false;\n    if (!chat_list) return false;\n\n    if (chat_list['@type'] === 'chatListMain') {\n        if (isMeChat(chatId) || chatId === SERVICE_NOTIFICATIONS_USER_ID) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function draftEquals(draft1, draft2) {\n    if (!draft1 && !draft2) return true;\n    if (draft1 && !draft2) return false;\n    if (draft2 && !draft1) return false;\n\n    const { input_message_text: inputMessageText1, reply_to_message_id: replyToMessageId1 } = draft1;\n    const { input_message_text: inputMessageText2, reply_to_message_id: replyToMessageId2 } = draft2;\n\n    if (replyToMessageId1 !== replyToMessageId2) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== inputMessageText2['@type']) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== 'inputMessageText') {\n        return true;\n    }\n\n    const { text: formattedText1 } = inputMessageText1;\n    const { text: formattedText2 } = inputMessageText2;\n\n    if (!formattedText1 && !formattedText2) return true;\n    if (formattedText1 && !formattedText2) return false;\n    if (formattedText2 && !formattedText1) return false;\n\n    const { text: text1, entities: entities1 } = formattedText1;\n    const { text: text2, entities: entities2 } = formattedText2;\n\n    if (text1 !== text2) {\n        return false;\n    }\n\n    return entitiesEquals(entities1, entities2);\n}\n\nfunction entitiesEquals(entities1, entities2) {\n    if (!entities1 && !entities2) return true;\n    if (entities1 && !entities2) return false;\n    if (entities2 && !entities1) return false;\n\n    if (entities1.length !== entities2.length) {\n        return false;\n    }\n\n    const map = new Map();\n    entities1.forEach(x => {\n        map.set(`${x.type['@type']}_${x.offset}_${x.length}`, x);\n    });\n\n    return entities2.every(x => map.has(`${x.type['@type']}_${x.offset}_${x.length}`));\n}\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    return getUserFullName(message.sender_user_id, null, t);\n}\n\nfunction getMessageSenderName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id, t);\n}\n\nfunction getLastMessageSenderName(chat, t = k => k) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message, t);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction showChatUnreadMessageIcon(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, last_message, last_read_outbox_message_id } = chat;\n    if (!last_message) return false;\n\n    const { is_outgoing } = last_message;\n\n    return (\n        is_outgoing && last_message.id > last_read_outbox_message_id && !is_marked_as_unread && !showChatDraft(chatId)\n    );\n}\n\nfunction showChatUnreadMentionCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { unread_mention_count } = chat;\n\n    return unread_mention_count > 0;\n}\n\nfunction showChatUnreadCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return (\n        unread_count > 1 ||\n        (unread_count === 1 && unread_mention_count === 0) ||\n        (is_marked_as_unread && unread_count === 0 && unread_mention_count === 0)\n    );\n}\n\nfunction isChatUnread(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return is_marked_as_unread || unread_count > 0;\n}\n\nfunction isChatMuted(chatId) {\n    return getChatMuteFor(chatId) > 0;\n}\n\nfunction getChatMuteFor(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return 0;\n\n    const { use_default_mute_for, mute_for } = notification_settings;\n\n    if (use_default_mute_for) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.mute_for : false;\n    }\n\n    return mute_for;\n}\n\nexport function getScopeNotificationSettings(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            let settings = null;\n            if (isChannelChat(chatId)) {\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\n            } else {\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\n            }\n            return settings;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return supergroup.is_channel\n                    ? getChannelStatus(supergroup, chatId)\n                    : getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat, t) {\n    if (!chat) return null;\n\n    let title = chat.title || t('HiddenName');\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return formatPhoneNumber(user.phone_number);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return supergroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return basicGroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nexport function isDeletedPrivateChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            const user = UserStore.get(chat.type.user_id);\n\n            return user && user.type['@type'] === 'userTypeDeleted';\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nasync function getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypePrivate': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeSecret': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeBasicGroup': {\n            return await TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: type.basic_group_id\n            });\n        }\n        case 'chatTypeSupergroup': {\n            return await TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: type.supergroup_id\n            });\n        }\n    }\n\n    return null;\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendMediaMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_media_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_media_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_media_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_media_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_media_messages && is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false, t = k => k) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id, t);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPolls(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_polls } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_polls;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_polls;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_polls && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_polls && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_polls && is_member && permissions && permissions.can_send_polls;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_messages && is_member && permissions && permissions.can_send_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_pin_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return false;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_pin_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return can_pin_messages || status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_pin_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_pin_messages && is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatSecret(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    showChatUnreadMessageIcon,\n    showChatUnreadMentionCount,\n    showChatUnreadCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatUnread,\n    isChatMember,\n    isChatVerified,\n    isChatSecret,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendMediaMessages,\n    canSendMessages,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (\n        status &&\n        (status['@type'] === 'chatMemberStatusBanned' ||\n            status['@type'] === 'chatMemberStatusLeft' ||\n            (status['@type'] === 'chatMemberStatusCreator' && !status.is_member))\n    ) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getChannelStatus(supergroup, chatId) {\n    if (!supergroup) return '';\n\n    let { status, is_channel, member_count: count } = supergroup;\n    if (!is_channel) return '';\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return 'channel is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 subscribers';\n    if (count === 1) return '1 subscriber';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} subscribers, ${onlineCount} online`;\n    }\n\n    return `${count} subscribers`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { openChat, openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MentionLink.css';\nimport { isGroupChat } from '../../Utils/Chat';\n\nclass MentionLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, username } = props;\n\n        if (state.prevUserId !== userId || state.prevUsername !== username) {\n            return {\n                prevUserId: userId,\n                prevUsername: username,\n                error: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = async event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { userId, username, popup } = this.props;\n        if (userId) {\n            openUser(userId, popup);\n        } else if (username) {\n            const chat = await TdLibController.send({\n                '@type': 'searchPublicChat',\n                username\n            }).catch(() => {\n                this.setState({ error: true });\n            });\n\n            if (chat) {\n                if (isGroupChat(chat.id)) {\n                    openChat(chat.id, null, false);\n                } else {\n                    openChat(chat.id, null, popup);\n                }\n            }\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ error: false });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { children, t, title, username } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <a title={title} onClick={this.handleClick}>\n                    {children}\n                </a>\n                {error && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleClose}\n                        onClick={this.handleDialogClick}\n                        aria-labelledby='confirm-dialog-title'>\n                        <DialogTitle id='confirm-dialog-title'>{t('Error')}</DialogTitle>\n                        <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                            <DialogContentText>{`Can't find username ${username}.`}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose}>{t('Ok')}</Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nMentionLink.propTypes = {\n    userId: PropTypes.number,\n    username: PropTypes.string,\n    title: PropTypes.string,\n    popup: PropTypes.bool\n};\n\nMentionLink.defaultProps = {\n    popup: true\n};\n\nexport default withTranslation()(MentionLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport emojiRegex from 'emoji-regex';\nimport MentionLink from '../Components/Additional/MentionLink';\nimport Poll from '../Components/Message/Media/Poll';\nimport SafeLink from '../Components/Additional/SafeLink';\nimport dateFormat from '../Utils/Date';\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\nimport {\n    getChatTitle,\n    isMeChat\n} from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getDecodedUrl } from './Url';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function isMetaBubble(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { content } = message;\n    if (!content) {\n        return false;\n    }\n\n    const { caption } = content;\n    if (caption && caption.text && caption.text.length > 0) {\n        return false;\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageLocation': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageSticker': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageVideoNote': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isMessageUnread(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) {\n        return false;\n    }\n\n    const { last_read_inbox_message_id, last_read_outbox_message_id } = chat;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { id, is_outgoing } = message;\n    const isMe = isMeChat(chatId);\n    if (is_outgoing && isMe) {\n        return false;\n    }\n\n    return is_outgoing ? id > last_read_outbox_message_id : id > last_read_inbox_message_id;\n}\n\nfunction getAuthor(message, t = k => k) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(forward_info.sender_user_id, null, t);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message, t);\n}\n\nfunction getTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(sender_user_id, null, t);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction searchCurrentChat(event, text) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const { chatId } = AppStore;\n\n    searchChat(chatId, text);\n}\n\nfunction getFormattedText(formattedText, t = k => k) {\n    if (formattedText['@type'] !== 'formattedText') return null;\n\n    const { text, entities } = formattedText;\n    if (!text) return null;\n    if (!entities) return text;\n\n    let deleteLineBreakAfterPre = false;\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const { offset, length, type } = entity;\n\n        // skip nested entities\n        if (index > offset) {\n            continue;\n        }\n\n        let textBefore = substring(text, index, offset);\n        const textBeforeLength = textBefore.length;\n        if (textBefore) {\n            if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n                textBefore = textBefore.substr(1);\n                deleteLineBreakAfterPre = false;\n            }\n            if (textBefore) {\n                result.push(textBefore);\n            }\n        }\n\n        const entityKey = offset;\n        let entityText = substring(text, offset, offset + length);\n        if (deleteLineBreakAfterPre && entityText.length > 0 && entityText[0] === '\\n') {\n            entityText = entityText.substr(1);\n            deleteLineBreakAfterPre = false;\n        }\n\n        switch (type['@type']) {\n            case 'textEntityTypeBold': {\n                result.push(<strong key={entityKey}>{entityText}</strong>);\n                break;\n            }\n            case 'textEntityTypeBotCommand': {\n                const command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a key={entityKey} onClick={stopPropagation} href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCode': {\n                result.push(<code key={entityKey}>{entityText}</code>);\n                break;\n            }\n            case 'textEntityTypeEmailAddress': {\n                result.push(\n                    <a\n                        key={entityKey}\n                        href={`mailto:${entityText}`}\n                        onClick={stopPropagation}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeHashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeItalic': {\n                result.push(<em key={entityKey}>{entityText}</em>);\n                break;\n            }\n            case 'textEntityTypeMentionName': {\n                result.push(\n                    <MentionLink key={entityKey} userId={type.user_id} title={getUserFullName(type.user_id, null, t)}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypeMention': {\n                result.push(\n                    <MentionLink key={entityKey} username={entityText}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypePhoneNumber': {\n                result.push(\n                    <a key={entityKey} href={`tel:${entityText}`} onClick={stopPropagation}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypePre': {\n                result.push(<pre key={entityKey}>{entityText}</pre>);\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypePreCode': {\n                result.push(\n                    <pre key={entityKey}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                const url = type.url ? type.url : entityText;\n\n                result.push(\n                    <SafeLink key={entityKey} url={url}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            case 'textEntityTypeUrl': {\n                result.push(\n                    <SafeLink key={entityKey} url={entityText}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += textBeforeLength + entity.length;\n    }\n\n    if (index < text.length) {\n        let textAfter = text.substring(index);\n        if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n            textAfter = textAfter.substr(1);\n        }\n        if (textAfter) {\n            result.push(textAfter);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message, meta, t = k => k) {\n    if (!message) return null;\n\n    let result = [];\n\n    const { content } = message;\n    if (!content) return [...result, meta];\n\n    const { text, caption } = content;\n\n    if (text && text['@type'] === 'formattedText' && text.text) {\n        result = getFormattedText(text, t);\n    } else if (caption && caption['@type'] === 'formattedText' && caption.text) {\n        const formattedText = getFormattedText(caption, t);\n        if (formattedText) {\n            result = result.concat(formattedText);\n        }\n    }\n\n    return result && result.length > 0 ? [...result, meta] : [];\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n\n    return dateFormat(d, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n    return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            return getUserFullName(sender_user_id, null, t);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterDuplicateMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction filterMessages(messages) {\n    return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(\n    location,\n    width = LOCATION_WIDTH,\n    height = LOCATION_HEIGHT,\n    zoom = LOCATION_ZOOM,\n    scale = LOCATION_SCALE\n) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${width},${height}&scale=${scale}&zoom=${zoom}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message, t);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        // download file at loadMediaViewerContent instead\n        // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.user_id, true);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nexport function getReplyMinithumbnail(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { minithumbnail } = animation;\n            return minithumbnail || null;\n        }\n        case 'messageAudio': {\n            return null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { minithumbnail } = document;\n            return minithumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { minithumbnail } = animation;\n                if (minithumbnail) {\n                    return minithumbnail;\n                }\n            }\n\n            if (photo) {\n                return photo.minithumbnail || null;\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageSticker': {\n            return null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return photo.minithumbnail || null;\n                }\n                if (animation) {\n                    const { minithumbnail } = animation;\n                    return minithumbnail || null;\n                }\n                if (audio) {\n                    return null;\n                }\n                if (document) {\n                    const { minithumbnail } = document;\n                    return minithumbnail || null;\n                }\n                if (sticker) {\n                    return null;\n                }\n                if (video) {\n                    const { minithumbnail } = video;\n                    return minithumbnail || null;\n                }\n                if (video_note) {\n                    const { minithumbnail } = video_note;\n                    return minithumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { minithumbnail } = video;\n            return minithumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { minithumbnail } = video_note;\n            return minithumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nfunction messageComparatorDesc(left, right) {\n    return left.id - right.id;\n}\n\nfunction checkInclusion(index, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (index >= entities[i].offset && index < entities[i].offset + entities[i].length) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkIntersection(startIndex, endIndex, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (startIndex <= entities[i].offset && entities[i].offset + entities[i].length - 1 <= endIndex) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkEntity(startIndex, endIndex, entities) {\n    return (\n        !checkInclusion(startIndex, entities) &&\n        !checkInclusion(endIndex, entities) &&\n        !checkIntersection(startIndex, endIndex, entities)\n    );\n}\n\nfunction removeOffsetAfter(start, countToRemove, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset -= countToRemove;\n        }\n    });\n}\n\nfunction addOffsetAfter(start, countToAdd, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset += countToAdd;\n        }\n    });\n}\n\nfunction removeEntities(startIndex, endIndex, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const entityStart = entity.offset;\n        const entityEnd = entity.offset + entity.length - 1;\n        if (\n            (startIndex <= entityStart && entityStart <= endIndex) ||\n            (startIndex <= entityEnd && entityEnd <= endIndex) ||\n            (entityStart < startIndex && endIndex > entityEnd)\n        ) {\n            entities.splice(i--, 1);\n        }\n    }\n}\n\nfunction addTextNode(offset, length, text, nodes) {\n    const node = document.createTextNode(text.substr(offset, length));\n    nodes.push(node);\n}\n\nexport function getNodes(text, entities, t = k => k) {\n    if (!text) return [];\n\n    entities = (entities || []).sort((a, b) => {\n        if (a.offset - b.offset !== 0) {\n            return a.offset - b.offset;\n        }\n\n        return b.length - a.length;\n    });\n\n    let nodes = [];\n    let offset = 0;\n    let prevEntity = null;\n    entities.forEach(x => {\n        if (x.offset - offset > 0) {\n            addTextNode(offset, x.offset - offset, text, nodes);\n            offset = x.offset;\n        }\n\n        if (!(prevEntity && checkInclusion(x.offset, [prevEntity]))) {\n            switch (x.type['@type']) {\n                case 'textEntityTypeBold': {\n                    const node = document.createElement('b');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeBotCommand': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCode': {\n                    const node = document.createTextNode('`' + text.substr(x.offset, x.length) + '`');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeEmailAddress': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeHashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeItalic': {\n                    const node = document.createElement('i');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeMention': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeMentionName': {\n                    try {\n                        const { user_id } = x.type;\n                        const user = UserStore.get(user_id);\n                        if (user) {\n                            const node = document.createElement('a');\n                            // node.href = getDecodedUrl(url, false);\n                            node.title = getUserFullName(user_id, null, t);\n                            // node.target = '_blank';\n                            // node.rel = 'noopener noreferrer';\n                            node.dataset.userId = user_id;\n                            node.innerText = text.substr(x.offset, x.length);\n                            nodes.push(node);\n                        } else {\n                            addTextNode(x.offset, x.length, text, nodes);\n                        }\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypePhoneNumber': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypePre': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypePreCode': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeTextUrl': {\n                    try {\n                        const { url } = x.type;\n\n                        const node = document.createElement('a');\n                        node.href = getDecodedUrl(url, false);\n                        node.title = getDecodedUrl(url, false);\n                        node.target = '_blank';\n                        node.rel = 'noopener noreferrer';\n                        node.innerText = text.substr(x.offset, x.length);\n                        nodes.push(node);\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypeUrl': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                default: {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n            }\n\n            prevEntity = x;\n            offset += x.length;\n        }\n    });\n\n    if (offset < text.length) {\n        addTextNode(offset, text.length - offset, text, nodes);\n    }\n\n    return nodes;\n}\n\n// based on code from official Android Telegram client\n// https://github.com/DrKLO/Telegram/blob/28eb8dfd0ef959fd5ad7d5d22f1d32879707c0a0/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L3782\nexport function getEntities(text) {\n    const entities = [];\n    if (!text) return { text, entities };\n\n    text = text.split('<br>').join('\\n');\n\n    // console.log(`[ge] start text=${text}`);\n\n    let index = -1; // first index of end tag\n    let lastIndex = 0; // first index after end tag\n    let start = -1; // first index of start tag\n    let isPre = false;\n    const mono = '`';\n    const pre = '```';\n    const bold = '**';\n    const italic = '__';\n\n    // 0 looking for html entities\n    const result = new DOMParser().parseFromString(text, 'text/html');\n    let offset = 0;\n    let length = 0;\n    let finalText = '';\n    result.body.childNodes.forEach(node => {\n        const { textContent, nodeName } = node;\n\n        length = textContent.length;\n        finalText += textContent;\n\n        if (!checkEntity(offset, offset + length - 1, entities)) {\n            return;\n        }\n\n        switch (nodeName) {\n            case '#text': {\n                offset += length;\n                break;\n            }\n            case 'A': {\n                if (node.dataset.userId) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeMentionName', user_id: node.dataset.userId },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                } else if (node.href) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeTextUrl', url: node.href },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                }\n                offset += length;\n                break;\n            }\n            case 'B':\n            case 'STRONG': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeBold' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'BR': {\n                break;\n            }\n            case 'CODE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeCode' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'I':\n            case 'EM': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeItalic' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'PRE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypePre' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            default: {\n                offset += length;\n                break;\n            }\n        }\n    });\n    text = finalText;\n    // console.log(`[ge] HTML nodes text=${text}`, entities);\n\n    // 1 looking for ``` and ` in order to find mono and pre entities\n    while ((index = text.indexOf(isPre ? pre : mono, lastIndex)) !== -1) {\n        if (start === -1) {\n            // find start tag\n            isPre = text.length - index > 2 && text[index + 1] === mono && text[index + 2] === mono;\n            start = index;\n            lastIndex = index + (isPre ? 3 : 1);\n        } else {\n            // find end tag\n            for (let i = index + (isPre ? 3 : 1); i < text.length; i++) {\n                if (text[i] === mono) {\n                    index++;\n                } else {\n                    break;\n                }\n            }\n\n            lastIndex = index + (isPre ? 3 : 1);\n            if (isPre) {\n                // add pre tag\n\n                let textBefore = text.substring(0, start);\n                let textContent = text.substring(start + 3, index);\n                let textAfter = text.substring(index + 3, text.length);\n\n                if (textContent.length > 0) {\n                    offset = start;\n                    length = index - start - 3;\n\n                    text = textBefore + textContent + textAfter;\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': 'textEntityTypePre' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 6);\n                    removeOffsetAfter(offset + length, 6, entities);\n                    entities.push(entity);\n                    lastIndex -= 6;\n\n                    // clean text before\n                    if (textBefore.length > 0) {\n                        const lastChar = textBefore[textBefore.length - 1];\n                        if (lastChar !== '\\n') {\n                            if (lastChar === ' ' || lastChar === '\\xA0') {\n                                textBefore = textBefore.substr(0, textBefore.length - 1) + '\\n';\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textBefore += '\\n';\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text after\n                    if (textAfter.length > 0) {\n                        const firstChar = textAfter[0];\n                        if (firstChar !== '\\n') {\n                            if (firstChar === ' ' || firstChar === '\\xA0') {\n                                textAfter = '\\n' + textAfter.substr(1);\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textAfter = '\\n' + textAfter;\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset + length - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text content\n                    if (textContent.length > 2) {\n                        if (textContent[0] === '\\n') {\n                            textContent = textContent.substring(1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n\n                    if (textContent.length > 2) {\n                        if (textContent[textContent.length - 1] === '\\n') {\n                            textContent = textContent.substring(0, textContent.length - 1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n                }\n            } else {\n                // add code tag\n                if (start + 1 !== index) {\n                    offset = start;\n                    length = index - start - 1;\n\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 1, index) +\n                        text.substring(index + 1, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeCode' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 2);\n                    removeOffsetAfter(offset + length, 2, entities);\n                    entities.push(entity);\n                    lastIndex -= 2;\n                }\n            }\n\n            start = -1;\n            isPre = false;\n        }\n    }\n\n    // 1.1 case when ``` is one ` mono symbol\n    if (start !== -1 && isPre) {\n        offset = start;\n        length = 1;\n\n        if (checkEntity(offset, offset + length + 2 - 1, entities)) {\n            text = text.substring(0, start) + text.substring(start + 2, text.length);\n\n            const entity = {\n                '@type': 'textEntity',\n                offset,\n                length,\n                type: { '@type': 'textEntityTypeCode' },\n                textContent: text.substring(offset, offset + length)\n            };\n            removeEntities(offset, offset + length - 1 + 2);\n            removeOffsetAfter(offset + length, 2, entities);\n            entities.push(entity);\n        }\n    }\n\n    // console.log(`[ge] pre and code text=${text}`, entities);\n    // 2 looking for bold, italic entities\n    for (let c = 0; c < 2; c++) {\n        lastIndex = 0;\n        start = -1;\n        const checkString = c === 0 ? bold : italic;\n        const checkChar = c === 0 ? '*' : '_';\n        while ((index = text.indexOf(checkString, lastIndex)) !== -1) {\n            if (start === -1) {\n                const prevChar = index === 0 ? ' ' : text[index - 1];\n                if (\n                    !checkInclusion(index, entities) &&\n                    (prevChar === ' ' || prevChar === '\\xA0' || prevChar === '\\n')\n                ) {\n                    start = index;\n                }\n                lastIndex = index + 2;\n            } else {\n                for (let a = index + 2; a < text.length; a++) {\n                    if (text[a] === checkChar) {\n                        index++;\n                    } else {\n                        break;\n                    }\n                }\n                lastIndex = index + 2;\n                if (checkInclusion(index, entities) || checkIntersection(start, index, entities)) {\n                    start = -1;\n                    continue;\n                }\n                if (start + 2 !== index) {\n                    offset = start;\n                    length = index - start - 2;\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 2, index) +\n                        text.substring(index + 2, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': c === 0 ? 'textEntityTypeBold' : 'textEntityTypeItalic' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeOffsetAfter(offset + length, 4, entities);\n                    entities.push(entity);\n                    lastIndex -= 4;\n                }\n                start = -1;\n            }\n        }\n    }\n    // console.log(`[ge] result text=${text}`, entities);\n\n    return { text, entities };\n}\n\nexport function canMessageBeEdited(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { can_be_edited } = message;\n\n    return can_be_edited;\n}\n\nexport function showMessageForward(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { forward_info, content } = message;\n\n    return forward_info && content && content['@type'] !== 'messageSticker' && content['@type'] !== 'messageAudio';\n}\n\nexport function isTextMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n\n    return content && content['@type'] === 'messageText';\n}\n\nexport function isMessagePinned(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    return chat.pinned_message_id === messageId;\n}\n\nexport function canMessageBeUnvoted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    const { poll } = content;\n    if (!poll) return false;\n\n    const { type, is_closed, options } = poll;\n    if (!type) return false;\n    if (type['@type'] !== 'pollTypeRegular') return false;\n    if (is_closed) return false;\n\n    return options.some(x => x.is_chosen || x.is_being_chosen);\n}\n\nexport function canMessageBeClosed(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content, can_be_edited } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    return can_be_edited;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterDuplicateMessages,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches,\n    messageComparatorDesc,\n    substring,\n    stopPropagation\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallIcon from '@material-ui/icons/Call';\nimport { getCallTitle } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport './Call.css';\n\nclass Call extends React.Component {\n    render() {\n        const { chatId, messageId, duration, openMedia, title, meta } = this.props;\n\n        const callTitle = getCallTitle(chatId, messageId);\n        const durationString = getDurationString(Math.floor(duration || 0));\n\n        return (\n            <div className={classNames('document', { 'media-title': title })}>\n                <IconButton color='primary' aria-label='Call'>\n                    <CallIcon fontSize='large' />\n                </IconButton>\n                <div className='document-content'>\n                    <div className='document-title'>{callTitle}</div>\n                    <div className='document-action'>\n                        {durationString}\n                        {meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCall.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nexport default Call;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Phone';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, title, openMedia, meta, caption, t } = this.props;\n        if (!contact) return null;\n\n        const { user_id: id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id,\n            first_name,\n            last_name\n        };\n\n        const fullName = getUserFullName(id, user, t);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className={classNames('contact', { 'media-title': title })}>\n                <div className='contact-tile'>\n                    <UserTile userId={id} firstName={first_name} lastName={last_name} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>\n                        {number}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Contact);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport './Game.css';\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { game, t } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text, t);\n\n        return (\n            <div className='game'>\n                <div className='border' />\n                <div className='game-wrapper'>\n                    {title && <div className='game-title'>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia, meta, title, caption } = this.props;\n        if (!venue) return null;\n\n        const { title: venueTitle, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location\n                    type='venue'\n                    chatId={chatId}\n                    messageId={messageId}\n                    location={location}\n                    openMedia={openMedia}\n                    title={title}\n                    caption={caption}\n                />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{venueTitle}</div>\n                    </a>\n                    <div className='venue-subtitle'>\n                        {address}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../Constants';\nimport MessageStore from '../Stores/MessageStore';\nimport Animation from '../Components/Message/Media/Animation';\nimport Audio from '../Components/Message/Media/Audio';\nimport Call from '../Components/Message/Media/Call';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport React from 'react';\n\nexport function getCallTitle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content, is_outgoing } = message;\n    if (content['@type'] !== 'messageCall') return null;\n\n    const { discard_reason, duration } = content;\n    if (is_outgoing) {\n        return discard_reason['@type'] === 'callDiscardReasonMissed' ? 'Cancelled Call' : 'Outgoing Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonMissed') {\n        return 'Missed Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonDeclined') {\n        return 'Declined Call';\n    }\n\n    return 'Incoming Call';\n}\n\nexport function isEditedMedia(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageAudio': {\n            return true;\n        }\n        case 'messageDocument': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\n    if (!sticker) return false;\n    if (!sticker.is_animated) return false;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (message) {\n        const { sending_state } = message;\n        if (sending_state && !sticker.set_id) return false;\n    }\n\n    return true;\n}\n\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE_90) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < blurredSize;\n}\n\nexport function getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport function getAudioShortTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer ? `${trimmedPerformer || 'Unknown Artist'}` : file_name;\n}\n\nexport function getAudioSubtitle(audio) {\n    if (!audio) return null;\n\n    const { title } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n\n    return trimmedTitle || 'Unknown Track';\n}\n\nexport function getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nfunction getInputMediaThumbnail(thumbnail) {\n    if (!thumbnail) return null;\n\n    const { photo, width, height } = thumbnail;\n    if (!photo) return null;\n\n    return {\n        '@type': 'inputThumbnail',\n        thumbnail: {\n            '@type': 'inputFileId',\n            id: photo.id\n        },\n        width,\n        height\n    };\n}\n\nfunction getInputMediaCaption(text) {\n    if (!text) return null;\n\n    return {\n        '@type': 'formattedText',\n        text: text,\n        entities: null\n    };\n}\n\nexport function getInputMediaContent(media, text) {\n    if (!media) return null;\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { animation: file, thumbnail, width, height, duration } = media;\n\n            return {\n                '@type': 'inputMessageAnimation',\n                animation: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'audio': {\n            const { audio: file, album_cover_thumbnail: thumbnail, title, performer, duration } = media;\n\n            return {\n                '@type': 'inputMessageAudio',\n                audio: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                title,\n                performer,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'contact': {\n            return {\n                '@type': 'inputMessageContact',\n                contact: media\n            };\n        }\n        case 'document': {\n            const { document: file, thumbnail } = media;\n\n            return {\n                '@type': 'inputMessageDocument',\n                document: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'game': {\n            return null;\n        }\n        case 'invoice': {\n            return null;\n        }\n        case 'location': {\n            return {\n                '@type': 'inputMessageLocation',\n                location: media,\n                live_period: 0\n            };\n        }\n        case 'photo': {\n            const { sizes } = media;\n            if (!sizes.length) return null;\n\n            const thumbnail = sizes[0];\n            const photo = sizes[sizes.length - 1];\n            if (!photo) return null;\n\n            const { photo: file, width, height } = photo;\n\n            return {\n                '@type': 'inputMessagePhoto',\n                photo: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                width,\n                height,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'poll': {\n            return null;\n        }\n        case 'sticker': {\n            const { sticker: file, thumbnail, width, height } = media;\n\n            return {\n                '@type': 'inputMessageSticker',\n                sticker: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'venue': {\n            return {\n                '@type': 'inputMessageVenue',\n                venue: media\n            };\n        }\n        case 'video': {\n            const { video: file, thumbnail, width, height, duration, supports_streaming } = media;\n\n            return {\n                '@type': 'inputMessageVideo',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                duration,\n                width,\n                height,\n                supports_streaming,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'videoNote': {\n            const { video: file, thumbnail, duration, length } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                length,\n                ttl: 0\n            };\n        }\n        case 'voiceNote': {\n            const { voice: file, duration, waveform } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                voice_note: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                duration,\n                waveform\n            };\n        }\n    }\n\n    return null;\n}\n\nexport function getMedia(message, openMedia, hasTitle = false, hasCaption = false, inlineMeta = null) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return (\n                <Animation\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    animation={content.animation}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageAudio':\n            return (\n                <Audio\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    audio={content.audio}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageCall':\n            return (\n                <Call\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    duraton={content.duration}\n                    discardReason={content.discard_reason}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageContact':\n            return (\n                <Contact\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    contact={content.contact}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageDocument':\n            return (\n                <Document\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    document={content.document}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return (\n                <Location\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    location={content.location}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePhoto':\n            return (\n                <Photo\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    photo={content.photo}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} meta={inlineMeta} />;\n        case 'messageSticker':\n            return (\n                <Sticker\n                    chatId={chat_id}\n                    messageId={id}\n                    sticker={content.sticker}\n                    source={StickerSourceEnum.MESSAGE}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return (\n                <Venue\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    venue={content.venue}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageVideo':\n            return (\n                <Video\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    video={content.video}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVideoNote':\n            return (\n                <VideoNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    videoNote={content.video_note}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVoiceNote':\n            return (\n                <VoiceNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    voiceNote={content.voice_note}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        default:\n            return [`[${content['@type']}]`, inlineMeta];\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5.29289322,5.29289322 C5.68341751,4.90236893 6.31658249,4.90236893 6.70710678,5.29289322 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3165825,19.0976311 17.6834175,19.0976311 17.2928932,18.7071068 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 Z' />,\n    'Close'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const { playbackRate, volume } = this.loadPlayerSettings();\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n        this.instantView = null;\n        this.pageBlock = null;\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    loadPlayerSettings() {\n        const player = localStorage.getItem('player') || {};\n\n        let { playbackRate, volume } = player;\n\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        return { playbackRate, volume };\n    }\n\n    savePlayerSettings() {\n        const { volume, playbackRate } = this;\n\n        localStorage.setItem('player', JSON.stringify({ volume, playbackRate }));\n    }\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.reset();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId, instantView, pageBlock } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (message) {\n                    this.message = message;\n                    this.emit(update['@type'], update);\n                    this.getPlaylist(chatId, messageId);\n\n                    return;\n                } else if (instantView && pageBlock) {\n                    this.instantView = instantView;\n                    this.pageBlock = pageBlock;\n                    this.emit(update['@type'], update);\n                }\n\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from '../Utils/Date';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(userId, user, t = k => k) {\n    user = UserStore.get(userId) || user;\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name && last_name) return `${first_name} ${last_name}`;\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId, t = k => k) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName, t) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(userId, null, t) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n    }\n\n    return firstName ? firstName.charAt(0) : lastName ? lastName.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(photo) {\n    if (!photo) return null;\n\n    const { id, sizes } = photo;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const { photo: small } = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const { photo: big } = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id,\n        small,\n        big\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { randomString } from './Helpers';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PakoWorker from './pako.worker';\n\nconst worker = new PakoWorker();\nconst handlers = new Map();\n\nworker.onmessage = event => {\n    const { data } = event;\n    if (!data) return;\n\n    const { key, error, result, msg } = data;\n\n    const { resolve, reject } = handlers.get(key);\n    handlers.delete(key);\n\n    if (!error) {\n        resolve(result);\n    } else {\n        reject(msg);\n    }\n};\n\nexport async function inflateBlob(blob) {\n    const key = randomString();\n    return new Promise((resolve, reject) => {\n        handlers.set(key, { resolve, reject });\n        worker.postMessage({ key, blob });\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function randomString() {\n    return (\n        '$' +\n        Math.random()\n            .toString(36)\n            .slice(2, 10)\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// import Lottie from '../../Viewer/Lottie';\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getBlob, getSrc } from '../../../Utils/File';\nimport { inflateBlob } from '../../../Workers/BlobInflator';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport StickerStore from '../../../Stores/StickerStore';\nimport './Sticker.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nexport const StickerSourceEnum = Object.freeze({\n    HINTS: 'HINTS',\n    MESSAGE: 'MESSAGE',\n    PICKER_HEADER: 'PICKER_HEADER',\n    PICKER: 'PICKER',\n    PREVIEW: 'PREVIEW',\n    STICKER_SET: 'STICKER_SET',\n    UNKNOWN: 'UNKNOWN'\n});\n\nclass Sticker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.stickerPreview = StickerStore.stickerPreview;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.state = {\n            animationDate: null,\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('[Sticker] render error', error, errorInfo);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n        const { animationData } = this.state;\n\n        if (animationData !== nextState.animationData) {\n            return true;\n        }\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.sticker !== this.props.sticker) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateDialogChatId = update => {\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerPreview = update => {\n        this.stickerPreview = update.sticker;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.openedStickerSet = stickerSet;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        const { chatId, messageId, sticker } = this.props;\n\n        const isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\n        if (!isAnimated) return;\n\n        this.windowFocused = focused;\n        this.startStopAnimation();\n    };\n\n    startStopAnimation() {\n        const { autoplay } = this.props;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            !this.stickerPreview &&\n            !this.openMediaViewer &&\n            !this.openProfileMediaViewer &&\n            !this.openIV &&\n            !this.dialogChatId\n        ) {\n            if (this.entered) {\n                // console.log('[Sticker] play 1');\n                player.play();\n                this.pause = false;\n                return;\n            }\n\n            // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\n            if (!this.openedStickerSet) {\n                if (this.paused) {\n                    // console.log('[Sticker] play 2');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n\n                if (autoplay && this.inView) {\n                    // console.log('[Sticker] play 3');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n            }\n        }\n\n        // console.log('[Sticker] pause');\n        this.paused = player.pause();\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker, is_animated } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            if (is_animated) {\n                this.loadContent();\n            } else {\n                this.forceUpdate();\n            }\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = async () => {\n        const { chatId, messageId, sticker: source, autoplay, play } = this.props;\n        const { is_animated, sticker } = source;\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        if (!is_animated) return;\n        if (!isAnimated) return;\n        if (!play) return;\n\n        const blob = getBlob(sticker);\n        if (!blob) return;\n\n        let animationData = null;\n        try {\n            // animationData = StickerStore.getAnimationData(blob);\n            // if (animationData) {\n            //     this.setState({ animationData });\n            //     return;\n            // }\n            const result = await inflateBlob(blob);\n            if (!result) return;\n\n            animationData = JSON.parse(result);\n            // StickerStore.setAnimationData(blob, animationData);\n        } catch (err) {\n            console.log('[Sticker] loadContent error', err);\n        }\n        if (!animationData) return;\n\n        if (autoplay) {\n            this.setState({ animationData });\n        } else {\n            this.animationData = animationData;\n        }\n    };\n\n    handleMouseEnter = event => {\n        const { animationData } = this;\n        // console.log('[Sticker] handleMouseEnter', animationData);\n        if (animationData) {\n            this.setState({ animationData }, () => {\n                this.handleAnimationMouseEnter();\n            });\n        }\n    };\n\n    handleAnimationMouseEnter = () => {\n        // console.log('[Sticker] handleAnimationMouseEnter 1');\n        if (this.props.autoplay) return;\n\n        this.entered = true;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        // console.log('[Sticker] handleAnimationMouseEnter 2');\n        this.loopCount = 0;\n        this.startStopAnimation();\n    };\n\n    handleAnimationLoopComplete = () => {\n        if (this.props.autoplay) return;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (!this.entered) this.loopCount += 1;\n        if (this.loopCount > 2) {\n            const { animationData } = this.state;\n            if (animationData) {\n                this.setState({ animationData: null });\n            }\n        }\n    };\n\n    handleAnimationMouseOut = () => {\n        this.entered = false;\n    };\n\n    render() {\n        const {\n            chatId,\n            messageId,\n            autoplay,\n            className,\n            displaySize,\n            blur,\n            sticker: source,\n            style,\n            openMedia,\n            preview\n        } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n        const { animationData, hasError } = this.state;\n\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        if (hasError) {\n            const style = {\n                width: displaySize,\n                height: displaySize\n            };\n\n            if (process.env.NODE_ENV !== 'production') {\n                style.background = '#ff000066';\n            }\n\n            return (\n                <div className={classNames('sticker', className)} style={style} onClick={openMedia}>\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                </div>\n            );\n        }\n\n        let content = null;\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (fitSize) {\n            content = isAnimated ? (\n                <>\n                    {animationData ? (\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: autoplay,\n                                    loop: true,\n                                    animationData,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        className: 'lottie-svg'\n                                    }\n                                }}\n                                eventListeners={[\n                                    {\n                                        eventName: 'loopComplete',\n                                        callback: this.handleAnimationLoopComplete\n                                    }\n                                ]}\n                                onMouseOut={this.handleAnimationMouseOut}\n                            />\n                        </React.Suspense>\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            ) : (\n                <>\n                    {src && !preview ? (\n                        <img className='sticker-image' draggable={false} src={src} alt='' />\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            );\n        }\n\n        const stickerStyle = {\n            width: fitSize ? fitSize.width : 0,\n            height: fitSize ? fitSize.height : 0,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('sticker', className)}\n                style={stickerStyle}\n                onClick={openMedia}\n                onMouseEnter={this.handleMouseEnter}>\n                {content}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    autoplay: PropTypes.bool,\n    play: PropTypes.bool,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number,\n    preview: PropTypes.bool,\n    source: PropTypes.string\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n\n    autoplay: true,\n    play: true,\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE,\n    preview: false,\n    source: StickerSourceEnum.UNKNOWN\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    fileEquals(file1, file2) {\n        if (file1 === file2 && file1 === null) return true;\n        if (file1 !== null && file2 === null) return false;\n        if (file1 === null && file2 !== null) return false;\n\n        const { local: local1, remote: remote1 } = file1;\n        const { local: local2, remote: remote2 } = file2;\n\n        if (local1.can_be_deleted !== local2.can_be_deleted) return false;\n        if (local1.can_be_downloaded !== local2.can_be_downloaded) return false;\n        if (local1.download_offset !== local2.download_offset) return false;\n        if (local1.downloaded_prefix_size !== local2.downloaded_prefix_size) return false;\n        if (local1.downloaded_size !== local2.downloaded_size) return false;\n        if (local1.is_downloading_active !== local2.is_downloading_active) return false;\n        if (local1.is_downloading_completed !== local2.is_downloading_completed) return false;\n        if (local1.path !== local2.path) return false;\n\n        if (remote1.id !== remote2.id) return false;\n        if (remote1.is_uploading_active !== remote2.is_uploading_active) return false;\n        if (remote1.is_uploading_completed !== remote2.is_uploading_completed) return false;\n        if (remote1.uploaded_size !== remote2.uploaded_size) return false;\n\n        return true;\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            if (this.fileEquals(nextFile, currentFile)) {\n                // console.log('[fp] update equals', nextFile, currentFile);\n            } else {\n                // console.log('[fp] update', nextFile, currentFile);\n                this.setState({ file: nextFile, prevFile: currentFile });\n            }\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `[fp]] render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className={classNames('file-progress', 'file-progress-complete')} style={style}>\n                        {completeIcon}\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <CircularProgress\n                        className='file-progress-indicator'\n                        classes={{ circle: 'file-progress-circle' }}\n                        variant='static'\n                        value={progress}\n                        size={48}\n                        thickness={2}\n                    />\n                    {cancelButton && <CloseIcon />}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    {icon}\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n        this.animationData = new WeakMap();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            case 'updateRecentStickers': {\n                this.emit('updateRecentStickers', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            case 'clientUpdateStickerPreview': {\n                this.emit('clientUpdateStickerPreview', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    getAnimationData(key) {\n        return this.animationData.get(key);\n    }\n\n    setAnimationData(key, data) {\n        this.animationData.set(key, data);\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo': {\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getUserLetters } from '../../Utils/User';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTile.css';\n\nclass UserTile extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                user: UserStore.get(this.props.userId),\n                loaded: false\n            };\n        } else {\n            this.state = {\n                loaded: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId !== update.userId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n        const { chatId } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n        const { chat_id, photo } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n\n                if (photo) {\n                    const store = FileStore.getStore();\n                    loadChatContent(store, chat);\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId && !chat.photo) return;\n\n                this.forceUpdate();\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { className, userId, fistName, lastName, onSelect, small, dialog, poll, t } = this.props;\n        const { loaded } = this.state;\n\n        const user = UserStore.get(userId);\n        if (!user && !(fistName || lastName)) return null;\n\n        const letters = getUserLetters(userId, fistName, lastName, t);\n        const src = getSrc(user && user.profile_photo ? user.profile_photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    className,\n                    'user-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-poll': poll }\n                )}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nUserTile.propTypes = {\n    userId: PropTypes.number.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    onSelect: PropTypes.func,\n    small: PropTypes.bool\n};\n\nexport default withTranslation()(UserTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        if (photo !== state.prevPhoto) {\n            return {\n                prevPhoto: photo,\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo ? photo.minithumbnail : null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, openMedia, showProgress, title, caption, type, style } = this.props;\n        const { thumbSize, photoSize, minithumbnail } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = (!thumbSrc && miniSrc) || isBlurredThumbnail(thumbSize);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const hasSrc = Boolean(src || thumbSrc || miniSrc);\n\n        return (\n            <div\n                className={classNames(className, 'photo', {\n                    'photo-big': type === 'message',\n                    'photo-title': title,\n                    'photo-caption': caption,\n                    pointer: openMedia\n                })}\n                style={photoStyle}\n                onClick={openMedia}>\n                {hasSrc && (\n                    <img\n                        className={classNames('photo-image', {\n                            'media-blurred': !src && isBlurred,\n                            'media-mini-blurred': !src && !thumbSrc && isBlurred\n                        })}\n                        draggable={false}\n                        src={src || thumbSrc || miniSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nconst dateFormat = (function() {\n    const token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    const timezoneClip = /[^-+\\dA-Z]/g;\n\n    // Regexes and supporting functions are cached through closure\n    return function(date, mask, utc, gmt) {\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        date = date || new Date();\n\n        if (!(date instanceof Date)) {\n            date = new Date(date);\n        }\n\n        if (isNaN(date)) {\n            throw TypeError('Invalid date');\n        }\n\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n            mask = mask.slice(4);\n            utc = true;\n            if (maskSlice === 'GMT:') {\n                gmt = true;\n            }\n        }\n\n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n            d: d,\n            dd: pad(d),\n            ddd: dateFormat.i18n.dayNames[D],\n            dddd: dateFormat.i18n.dayNames[D + 7],\n            m: m + 1,\n            mm: pad(m + 1),\n            mmm: dateFormat.i18n.monthNames[m],\n            mmmm: dateFormat.i18n.monthNames[m + 12],\n            yy: String(y).slice(2),\n            yyyy: y,\n            h: H % 12 || 12,\n            hh: pad(H % 12 || 12),\n            H: H,\n            HH: pad(H),\n            M: M,\n            MM: pad(M),\n            s: s,\n            ss: pad(s),\n            l: pad(L, 3),\n            L: pad(Math.round(L / 10)),\n            t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n            tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n            T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n            TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n            Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n            o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) != 10) * d) % 10],\n            W: W,\n            N: N\n        };\n\n        return mask.replace(token, function(match) {\n            if (match in flags) {\n                return flags[match];\n            }\n            return match.slice(1, match.length - 1);\n        });\n    };\n})();\n\ndateFormat.masks = {\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n    expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    monthNames: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n};\n\nfunction pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n        val = '0' + val;\n    }\n    return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // Change date to Thursday same week\n    targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n    // Take January 4th as it is always in week 1 (see ISO 8601)\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n    // Change date to Thursday same week\n    firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n    // Check if daylight-saving-time-switch occurred and correct for it\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds);\n\n    // Number of weeks between target Thursday and first Thursday\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n    var dow = date.getDay();\n    if (dow === 0) {\n        dow = 7;\n    }\n    return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n    if (val === null) {\n        return 'null';\n    }\n\n    if (val === undefined) {\n        return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n        return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n\n    return {}.toString\n        .call(val)\n        .slice(8, -1)\n        .toLowerCase();\n}\n\nexport default dateFormat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SafeLink.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SafeLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displayText, mail, url } = props;\n\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n            return {\n                prevUrl: url,\n                prevDisplayText: displayText,\n                safe: isUrlSafe(displayText, url),\n                decodedUrl: getDecodedUrl(url, mail),\n                href: getHref(url, mail),\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ confirm: true });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleDone = event => {\n        this.handleClose();\n\n        const { url, onClick } = this.props;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    isTelegramLink(url) {\n        if (!url) return false;\n\n        const lowerCaseUrl = url\n            .toLowerCase()\n            .replace('https://', '')\n            .replace('http://', '');\n\n        return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\n    }\n\n    handleSafeClick = async event => {\n        event.stopPropagation();\n\n        const { onClick, url: href } = this.props;\n\n        if (this.isTelegramLink(href)) {\n            event.preventDefault();\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: href\n                });\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                const { chat_id, message } = messageLinkInfo;\n                if (chat_id) {\n                    openChat(chat_id, message ? message.id : null);\n                    return;\n                }\n            } catch (error) {\n                console.log('[safeLink] messageLinkInfo error', error);\n            }\n\n            if (onClick) {\n                onClick(event);\n            }\n        }\n\n        if (onClick) {\n            event.preventDefault();\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { className, children, t, url } = this.props;\n        const { confirm, decodedUrl, href, safe } = this.state;\n\n        if (!url) return null;\n        if (!decodedUrl) return null;\n\n        return (\n            <>\n                {safe ? (\n                    <a\n                        className={className}\n                        href={href}\n                        title={decodedUrl}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        onClick={this.handleSafeClick}>\n                        {children || url}\n                    </a>\n                ) : (\n                    <>\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\n                            {children || url}\n                        </a>\n                        {confirm && (\n                            <Dialog\n                                transitionDuration={0}\n                                open={confirm}\n                                onClose={this.handleClose}\n                                onClick={this.handleDialogClick}\n                                aria-labelledby='confirm-dialog-title'>\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\n                                    <Button onClick={this.handleDone} color='primary'>\n                                        {t('Open')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nSafeLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    displayText: PropTypes.string,\n    mail: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SafeLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass InstantViewStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = [];\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateBlocksInView': {\n                this.emit('clientUpdateBlocksInView', update);\n                break;\n            }\n            case 'clientUpdateInstantViewContent': {\n                const { content } = update;\n\n                if (content) {\n                    this.items.push(content.instantView);\n                } else {\n                    this.items = [];\n                }\n\n                this.emit('clientUpdateInstantViewContent', update);\n\n                break;\n            }\n            case 'clientUpdateInstantViewUrl': {\n                this.emit('clientUpdateInstantViewUrl', update);\n                break;\n            }\n            case 'clientUpdateInstantViewViewerContent': {\n                const { content } = update;\n\n                this.viewerContent = content;\n\n                this.emit('clientUpdateInstantViewViewerContent', update);\n                break;\n            }\n            case 'clientUpdatePrevInstantView': {\n                if (this.items.length <= 1) return;\n\n                this.items.pop();\n                const prevInstantView = this.items.pop();\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateInstantViewContent',\n                    content: {\n                        instantView: prevInstantView\n                    }\n                });\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    hasPrev() {\n        return this.items.length > 1;\n    }\n\n    getCurrent() {\n        return this.items.length > 0 ? this.items[this.items.length - 1] : null;\n    }\n}\n\nconst store = new InstantViewStore();\nwindow.instantView = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z' />,\n    'Download'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(userId, null, t);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.setPlayerParams();\n    }\n\n    setPlayerParams() {\n        this.windowFocused = window.hasFocus;\n\n        this.inView = false;\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.ivInView = false;\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.animation !== this.props.animation) {\n            this.setPlayerParams();\n        }\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.on('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.off('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.windowFocused &&\n                ((this.inView && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV) ||\n                    (this.ivInView && !this.openIVMedia))\n            ) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateInstantViewViewerContent = update => {\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateBlocksInView = update => {\n        const { pageBlock } = this.props;\n        if (!pageBlock) return;\n\n        this.ivInView = update.blocks.has(pageBlock);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate(() => {\n                this.startStopPlayer();\n            });\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const animationStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div\n                className={classNames('animation', {\n                    'animation-big': type === 'message',\n                    'animation-title': title,\n                    'media-title': title,\n                    'animation-caption': caption,\n                    pointer: openMedia\n                })}\n                style={animationStyle}\n                onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='animation-preview' src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-animation'\n                            src={src}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={animationStyle.width}\n                            height={animationStyle.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                            })}\n                            src={thumbnailSrc || miniSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    pageBlock: PropTypes.object,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    iv: PropTypes.bool\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    iv: false\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-12.000000, -12.000000)'\n        d='M19.3717789,13.8876217 L33.8466511,23.2537154 C34.2588127,23.5204082 34.3767385,24.0707284 34.1100457,24.48289 C34.0418356,24.5883056 33.9520666,24.6780745 33.8466511,24.7462846 L19.3717789,34.1123783 C18.9596173,34.3790711 18.4092971,34.2611454 18.1426043,33.8489838 C18.0495218,33.705129 18,33.5374371 18,33.3660938 L18,14.6339062 C18,14.1429865 18.3979691,13.7450173 18.8888889,13.7450173 C19.0602323,13.7450173 19.2279241,13.7945391 19.3717789,13.8876217 Z'\n    />,\n    'PlayArrow'\n);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from './UserTile';\nimport UserStatus from './UserStatus';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from './../../Stores/UserStore';\nimport './User.css';\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: UserStore.get(props.userId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, t, showStatus } = this.props;\n\n        const fullName = getUserFullName(userId, null, t);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='user-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='user-title'>{fullName}</div>\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <UserStatus userId={userId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showStatus: PropTypes.bool\n};\n\nUser.defaultProps = {\n    showStatus: true\n};\n\nexport default withTranslation()(User);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport punycode from './Punycode';\n\nexport function getHref(url, mail) {\n    if (!url) return null;\n\n    if (mail) return url.startsWith('mailto:') ? url : 'mailto:' + url;\n\n    // if (url.startsWith('tg://')) return url;\n\n    return url.startsWith('http') ? url : 'http://' + url;\n}\n\nexport function isUrlSafe(displayText, url) {\n    if (displayText && displayText !== url) {\n        return false;\n    }\n\n    if (hasRTLOSymbol(url)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getDecodedUrl(url, mail) {\n    if (!url) return null;\n\n    const href = getHref(url, mail);\n\n    try {\n        let decodedHref = decodeURI(href);\n\n        const domain = decodedHref.match(/^https?:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1];\n        decodedHref = decodedHref.replace(domain, punycode.ToUnicode(domain));\n\n        return decodedHref;\n    } catch (error) {\n        console.log('SafeLink.getDecodedUrl error ', url, error);\n    }\n\n    return null;\n}\n\nconst regExpRTLO = /\\u202e/;\n\nexport function hasRTLOSymbol(url) {\n    if (!url) return false;\n\n    return regExpRTLO.test(url);\n}\n\nconst regExpDomainExplicit = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){0,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpDomain = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)?((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){1,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpProtocol = new RegExp('^([a-zA-Z]+):\\\\/\\\\/');\n\n// https://github.com/telegramdesktop/tdesktop/blob/4e80d54be130eca76129f2c4995fe685d1014442/Telegram/SourceFiles/base/qthelp_url.cpp#L105\nexport function validateUrl(value) {\n    // value = punycode.ToASCII(value);\n\n    const trimmed = value.trim();\n    if (!trimmed) {\n        return null;\n    }\n\n    const match = trimmed.match(regExpDomainExplicit);\n    if (!match) {\n        const domainMatch = trimmed.match(regExpDomain);\n        if (!domainMatch || domainMatch.index !== 0) {\n            return null;\n        }\n\n        return 'http://' + trimmed;\n    } else if (match.index !== 0) {\n        return null;\n    }\n\n    const protocolMatch = trimmed.match(regExpProtocol);\n    return protocolMatch && isGoodProtocol(protocolMatch[0]) ? trimmed : null;\n}\n\nfunction isGoodProtocol(value) {\n    return ['http', 'https', 'tg'].some(x => value.toLowerCase().indexOf(x) === 0);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../../Assets/Icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia, title, meta, caption } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const audioTitle = getAudioShortTitle(audio);\n        const audioSubtitle = getAudioSubtitle(audio);\n\n        return (\n            <div className={classNames('audio', 'document', { 'media-title': title })}>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={audioTitle}>\n                            {audioTitle}\n                        </a>\n                    </div>\n                    <div className='audio-action'>{audioSubtitle}</div>\n                    <AudioAction\n                        chatId={chatId}\n                        messageId={messageId}\n                        duration={duration}\n                        file={file}\n                        meta={caption ? null : meta}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    audio: PropTypes.object,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-15.000000, -15.000000)'\n        d='M23,16 C23.5522847,16 24,16.4477153 24,17 L24,37 C24,37.5522847 23.5522847,38 23,38 L18,38 C17.4477153,38 17,37.5522847 17,37 L17,17 C17,16.4477153 17.4477153,16 18,16 L23,16 Z M36,16 C36.5522847,16 37,16.4477153 37,17 L37,37 C37,37.5522847 36.5522847,38 36,38 L31,38 C30.4477153,38 30,37.5522847 30,37 L30,17 C30,16.4477153 30.4477153,16 31,16 L36,16 Z'\n    />,\n    'Pause'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nclass DocumentTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { minithumbnail, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n        const { loaded } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbnailSrc && loaded;\n        const src = thumbnailSrc || miniSrc;\n\n        return (\n            <div\n                className={classNames('document-tile', { 'document-tile-image': !src }, { pointer: openMedia })}\n                onClick={openMedia}>\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={src}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={typeof completeIcon === 'function' ? completeIcon(src) : completeIcon}\n                    />\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {!tileLoaded && <div className='document-tile-background' />}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\n\nexport default DocumentTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                timeString: this.getTimeString(update.currentTime, playerDuration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { title, meta } = this.props;\n        const { active, file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!active && <span>{title}</span>}\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n\n    title: PropTypes.string\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location, width, height, zoom, scale } = this.props;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { location, width, height, zoom, scale, type, style, title, caption } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        const locationStyle = {\n            width,\n            height,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('location', {\n                    'location-message': type === 'message',\n                    'location-venue': type === 'venue',\n                    'location-title': title,\n                    'location-caption': caption\n                })}\n                style={locationStyle}>\n                <a href={source} target='_blank' rel='noopener noreferrer' onClick={this.handleClick}>\n                    <div className='location-wrapper'>\n                        <img className='location-image' draggable={false} alt={source} src={src} />\n                        <div className='location-icon'>\n                            <RoomIcon fontSize='large' color='primary' />\n                        </div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    width: PropTypes.number,\n    height: PropTypes.number,\n    zoom: PropTypes.number,\n    scale: PropTypes.number\n};\n\nLocation.defaultProps = {\n    width: LOCATION_WIDTH,\n    height: LOCATION_HEIGHT,\n    zoom: LOCATION_ZOOM,\n    scale: LOCATION_SCALE\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const videoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <div\n                className={classNames('video', {\n                    'video-big': type === 'message',\n                    'video-title': title,\n                    'video-caption': caption,\n                    pointer: openMedia\n                })}\n                style={videoStyle}\n                onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', {\n                        'media-blurred': isBlurred,\n                        'media-mini-blurred': !thumbnailSrc && isBlurred\n                    })}\n                    src={thumbnailSrc || miniSrc}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatus.css';\n\nclass UserStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { status, isAccent } = this.state;\n\n        return (\n            <div className={classNames('user-content', 'dialog-content', { 'user-status-accent': isAccent })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default UserStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateClosePollResults': {\n                this.emit('clientUpdateClosePollResults', update);\n                break;\n            }\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    type: {\n                        '@type': 'pollTypeRegular',\n                        allow_multiple_answers: false\n                    },\n                    id: Date.now(),\n                    question: '',\n                    options: [],\n                    is_anonymous: true\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAnonymous': {\n                const { poll } = this;\n                const isAnonymous = poll && poll.is_anonymous;\n\n                this.assign(this.poll, { is_anonymous: !isAnonymous });\n\n                this.emit('clientUpdatePollChangeAnonymous', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAllowMultipleAnswers': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const allowMultipleAnswers = poll && poll.type.allow_multiple_answers;\n\n                    const newType = { ...type, allow_multiple_answers: !allowMultipleAnswers };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeAllowMultipleAnswers', update);\n                break;\n            }\n            case 'clientUpdatePollChangeType': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const newType = { '@type': 'pollTypeQuiz', correct_option_id: -1 };\n\n                    this.assign(this.poll, { type: newType });\n                } else {\n                    const newType = { '@type': 'pollTypeRegular', allow_multiple_answers: false };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeType', update);\n                break;\n            }\n            case 'clientUpdatePollChooseOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, {\n                    options: options.map(x => (x.id === id ? { ...x, is_chosen: true } : { ...x, is_chosen: false }))\n                });\n\n                this.emit('clientUpdatePollChooseOption', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options, type, is_anonymous } = this.poll;\n\n        if (type['@type'] === 'pollTypeQuiz') {\n            type.correct_option_id = options.findIndex(x => x.is_chosen);\n\n            if (type.correct_option_id === -1) {\n                return null;\n            }\n        }\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text),\n            is_anonymous,\n            type,\n            is_closed: false\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.inView &&\n                this.windowFocused &&\n                !this.openMediaViewer &&\n                !this.openProfileMediaViewer &&\n                !this.openIV\n            ) {\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { minithumbnail, thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', {\n                                    'media-blurred': isBlurred,\n                                    'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                                })}\n                                style={style}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<DownloadIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nclass VoiceNoteTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { file, openMedia } = this.props;\n        const { playing } = this.state;\n\n        return (\n            <DocumentTile\n                thumbnail={null}\n                file={file}\n                openMedia={openMedia}\n                icon={<DownloadIcon />}\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n            />\n        );\n    }\n}\n\nVoiceNoteTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNoteTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke === 'undefined') {\n        stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n        radius = 5;\n    }\n    if (typeof radius === 'number') {\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\n    } else {\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n        for (var side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    if (stroke) {\n        ctx.stroke();\n    }\n}\n\nclass Particle {\n    constructor(fireworks) {\n        this.fireworks = fireworks;\n        this.type = 0;\n        this.colorType = 0;\n        this.side = 0;\n        this.typeSize = 4;\n        this.xFinished = false;\n        this.finishedStart = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        this.moveX = 0;\n        this.moveY = 0;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = this.colorType;\n\n        if (this.type === 0) {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\n            ctx.fill();\n        } else {\n            ctx.save();\n            ctx.translate(this.x, this.y);\n            ctx.rotate((this.rotation * Math.PI) / 180);\n            roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\n            ctx.restore();\n        }\n    }\n\n    update(dt) {\n        const moveCoef = dt / 16.0;\n        this.x += this.moveX * moveCoef;\n        this.y += this.moveY * moveCoef;\n        if (this.xFinished !== 0) {\n            const dp = 0.5;\n            if (this.xFinished === 1) {\n                this.moveX += dp * moveCoef * 0.05;\n                if (this.moveX >= dp) {\n                    this.xFinished = 2;\n                }\n            } else {\n                this.moveX -= dp * moveCoef * 0.05;\n                if (this.moveX <= -dp) {\n                    this.xFinished = 1;\n                }\n            }\n        } else {\n            if (this.side === 0) {\n                if (this.moveX > 0) {\n                    this.moveX -= moveCoef * 0.05;\n                    if (this.moveX <= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            } else {\n                if (this.moveX < 0) {\n                    this.moveX += moveCoef * 0.05;\n                    if (this.moveX >= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            }\n        }\n        let yEdge = -0.5;\n        const wasNegative = this.moveY < yEdge;\n        if (this.moveY > yEdge) {\n            this.moveY += (1.0 / 3.0) * moveCoef * this.fireworks.speedCoef;\n        } else {\n            this.moveY += (1.0 / 3.0) * moveCoef;\n        }\n        if (wasNegative && this.moveY > yEdge) {\n            this.fireworks.fallingDownCount++;\n        }\n        if (this.type === 1) {\n            this.rotation += moveCoef * 10;\n            if (this.rotation > 360) {\n                this.rotation -= 360;\n            }\n        }\n\n        return this.y >= this.fireworks.getMeasuredHeight();\n    }\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nclass Fireworks {\n    static colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n\n    constructor(context) {\n        this.context = context;\n        this.particlesCount = 60;\n        this.fallParticlesCount = 30;\n        this.particles = [];\n        this.speedCoef = 1.0;\n        this.fallingDownCount = 0;\n    }\n\n    getMeasuredHeight() {\n        return this.context.canvas.clientHeight;\n    }\n\n    getMeasuredWidth() {\n        return this.context.canvas.clientWidth;\n    }\n\n    createParticle(fall) {\n        const particle = new Particle(this);\n        particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\n        particle.type = getRandomInt(0, 2);\n        particle.side = getRandomInt(0, 2);\n        particle.finishedStart = 1 + getRandomInt(0, 2);\n        if (particle.type === 0) {\n            particle.typeSize = 4 + Math.random() * 2;\n        } else {\n            particle.typeSize = 4 + Math.random() * 4;\n        }\n        if (fall) {\n            particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\n            particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\n            particle.xFinished = particle.finishedStart;\n        } else {\n            const xOffset = 4 + getRandomInt(0, 10);\n            const yOffset = this.getMeasuredHeight() / 4;\n            if (particle.side === 0) {\n                particle.x = -xOffset;\n            } else {\n                particle.x = this.getMeasuredWidth() + xOffset;\n            }\n            particle.rotation = Math.random() * 360;\n            particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\n            particle.moveY = -(4 + Math.random() * 4);\n            particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\n        }\n        // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\n        return particle;\n    }\n\n    start() {\n        if (this.started) {\n            return;\n        }\n\n        this.particles = [];\n        this.started = true;\n        this.startedFall = false;\n        this.fallingDownCount = 0;\n        this.speedCoef = 1.0;\n        this.lastUpdateTime = 0;\n        for (let a = 0; a < this.particlesCount; a++) {\n            this.particles.push(this.createParticle(false));\n        }\n\n        this.draw();\n    }\n\n    startFall() {\n        if (this.startedFall) {\n            return;\n        }\n        this.startedFall = true;\n        for (let a = 0; a < this.fallParticlesCount; a++) {\n            this.particles.push(this.createParticle(true));\n        }\n    }\n\n    draw() {\n        const newTime = Date.now();\n        let dt = newTime - this.lastUpdateTime;\n        this.lastUpdateTime = newTime;\n        if (dt > 18) {\n            dt = 16;\n        }\n        // console.log('draw dt', dt);\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        for (let a = 0, N = this.particles.length; a < N; a++) {\n            const p = this.particles[a];\n            p.draw(this.context);\n            if (p.update(dt)) {\n                this.particles.splice(a, 1);\n                a--;\n                N--;\n            }\n        }\n        if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\n            this.startFall();\n            this.speedCoef -= (dt / 16.0) * 0.15;\n            if (this.speedCoef < 0.2) {\n                this.speedCoef = 0.2;\n            }\n        }\n        if (this.particles.length) {\n            window.requestAnimationFrame(() => this.draw());\n        } else {\n            this.started = false;\n            this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        }\n    }\n}\n\nclass FireworksComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.attachToParent();\n    }\n\n    componentWillUnmount() {\n        this.detachFromParent();\n    }\n\n    attachToParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = parentNode;\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n        window.addEventListener('resize', this.onResize);\n    }\n\n    detachFromParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = null;\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n    };\n\n    start() {\n        const ctx = this.canvasRef.current.getContext('2d');\n\n        const fireworks = new Fireworks(ctx);\n        fireworks.start();\n    }\n\n    render() {\n        return (\n            <canvas\n                ref={this.canvasRef}\n                style={{\n                    zIndex: 2,\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: 'none'\n                }}\n            />\n        );\n    }\n}\n\nFireworksComponent.propTypes = {};\n\nexport default FireworksComponent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Check'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nclass PollRadio extends React.Component {\n    render() {\n        const { chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    color='primary'\n                    classes={{\n                        root: 'poll-radio-root',\n                        colorPrimary: 'message-control',\n                        disabled: 'message-control-disabled'\n                    }}\n                    TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? 'poll-radio-icon' : null }} />}\n                />\n                {beingChosen && (\n                    <CircularProgress\n                        size={20}\n                        thickness={4.4}\n                        classes={{ root: 'poll-radio-progress-root', colorPrimary: 'message-control' }}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool,\n    beingChosen: PropTypes.bool,\n    hidden: PropTypes.bool\n};\n\nexport default PollRadio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, theme, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className='poll-percentage'>\n                {/*{!closed && chosen ? (*/}\n                {/*    <a className='poll-percentage-action' onClick={onClick}>*/}\n                {/*        {animated + '%'}*/}\n                {/*    </a>*/}\n                {/*) : (*/}\n                {/*    <>{animated + '%'}</>*/}\n                {/*)}*/}\n                <>{animated + '%'}</>\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CheckIcon from '../../../Assets/Icons/Check';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport './PollOption.css';\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    render() {\n        const { option, onChange, canBeSelected, closed, maxVoterCount, t, type, isCorrect } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, isMultiChoosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage value={vote_percentage} chosen={is_chosen} closed={closed} />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen || isMultiChoosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        {(is_chosen || isCorrect) && (\n                            <div\n                                className={classNames(\n                                    'poll-option-mark',\n                                    { 'poll-option-mark-correct': type === 'correct' },\n                                    { 'poll-option-mark-incorrect': type === 'incorrect' }\n                                )}>\n                                {type === 'incorrect' ? (\n                                    <CloseIcon className='poll-option-mark-icon' />\n                                ) : (\n                                    <CheckIcon className='poll-option-mark-icon' />\n                                )}\n                            </div>\n                        )}\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <LinearProgress\n                    classes={{\n                        root: 'poll-option-progress-root',\n                        bar: classNames(\n                            'poll-option-progress-bar',\n                            { 'poll-option-progress-bar-correct': type === 'correct' },\n                            { 'poll-option-progress-bar-incorrect': type === 'incorrect' }\n                        )\n                    }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nexport default withTranslation()(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserPlaceholder.css';\nimport UserStatus from './UserStatus';\n\nclass UserPlaceholder extends React.Component {\n    render() {\n        const { index, showStatus } = this.props;\n\n        const titleWidth = `${20 + Math.sin(index) * 10}%`;\n        const contentWidth = `${30 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='user-placeholder'>\n                <div className='user-wrapper'>\n                    <div className='user-placeholder-tile' />\n                    <div className='user-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            <div className='dialog-placeholder-title' style={{ width: contentWidth, marginLeft: 8 }} />\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showStatus: PropTypes.bool\n};\n\nUserPlaceholder.defaultProps = {\n    showStatus: true\n};\n\nexport default UserPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../Tile/User';\nimport UserPlaceholder from '../Tile/UserPlaceholder';\nimport { openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResult.css';\n\nclass PollOptionResult extends React.Component {\n    onClick = () => {\n        const { userId } = this.props;\n        if (!userId) return;\n\n        openUser(userId, true);\n\n        setTimeout(() => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateClosePollResults'\n            });\n        }, 0);\n    };\n\n    render() {\n        const { index, userId } = this.props;\n\n        const content = userId ? (\n            <User userId={userId} showStatus={false} />\n        ) : (\n            <UserPlaceholder index={index} showStatus={false} />\n        );\n\n        return (\n            <ListItem button className='user-list-item' onClick={this.onClick}>\n                {content}\n            </ListItem>\n        );\n    }\n}\n\nPollOptionResult.propTypes = {\n    index: PropTypes.number.isRequired,\n    userId: PropTypes.number\n};\n\nexport default PollOptionResult;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport PollOptionResult from './PollOptionResult';\nimport { loadUsersContent } from '../../Utils/File';\nimport { POLL_RESULTS_FIRST_SLICE_LENGTH, POLL_RESULTS_LEAVE_LENGTH, POLL_RESULTS_SLICE_LENGTH } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResults.css';\n\nclass PollOptionResults extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.state = {\n            voters: [],\n            offset: 0,\n            count\n        };\n    }\n\n    async updateVoters(offset, count, loadMore) {\n        const { chatId, messageId, optionId, option } = this.props;\n        const { voters } = this.state;\n        if (count <= 0) return;\n\n        const limit = count - offset;\n        // console.log(`[poll] getPollVoters start option_id=${optionId} offset=${offset} limit=${limit}`);\n        const result = await TdLibController.send({\n            '@type': 'getPollVoters',\n            chat_id: chatId,\n            message_id: messageId,\n            option_id: optionId,\n            offset,\n            limit\n        });\n        // console.log(`[poll] getPollVoters end option_id=${optionId} offset=${offset} limit=${limit}`, result, result.user_ids.map(x => UserStore.get(x)));\n\n        if (this.props.option !== option) {\n            return;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, result.user_ids);\n\n        this.setState(\n            {\n                voters: [...voters, ...result.user_ids]\n            },\n            async () => {\n                if (result.user_ids.length < limit && loadMore) {\n                    const offset2 = offset + result.user_ids.length;\n\n                    this.updateVoters(offset2, count, false);\n                }\n            }\n        );\n    }\n\n    componentDidMount() {\n        const { offset, count } = this.state;\n\n        this.updateVoters(offset, count, true);\n    }\n\n    handleShowMore = () => {\n        const { option } = this.props;\n        const { count } = this.state;\n\n        const newOffset = count;\n        const newCount = Math.min(option.voter_count, count + POLL_RESULTS_SLICE_LENGTH);\n\n        this.setState(\n            {\n                offset: newOffset,\n                count: newCount\n            },\n            () => {\n                this.updateVoters(newOffset, newCount, true);\n            }\n        );\n    };\n\n    handleCollapse = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.setState({\n            voters: this.state.voters.slice(0, count),\n            offset: 0,\n            count\n        });\n    };\n\n    render() {\n        const { option, isQuiz, t } = this.props;\n        const { voters, count } = this.state;\n\n        const { text, voter_count, vote_percentage } = option;\n        if (voter_count === 0) {\n            return null;\n        }\n\n        const results = [];\n        for (let i = 0; i < count; i++) {\n            const userId = i < voters.length ? voters[i] : null;\n            results.push(<PollOptionResult key={`${i}_userId=${userId}`} index={i} userId={userId} />);\n        }\n\n        const voterCount = isQuiz\n            ? voter_count !== 1\n                ? `${voter_count} answers`\n                : `${voter_count} answer`\n            : voter_count !== 1\n            ? `${voter_count} votes`\n            : `${voter_count} vote`;\n\n        let showMoreButton = null;\n        const showMoreCount = voter_count - count;\n        if (showMoreCount > 0) {\n            const showMore = isQuiz\n                ? showMoreCount !== 1\n                    ? `${showMoreCount} answers`\n                    : `${showMoreCount} answer`\n                : showMoreCount !== 1\n                ? `${showMoreCount} votes`\n                : `${showMoreCount} vote`;\n\n            showMoreButton = (\n                <Button\n                    classes={{ root: 'poll-option-results-button' }}\n                    color='primary'\n                    fullWidth\n                    onClick={this.handleShowMore}>\n                    {t('ShowVotesOT').replace('%1$d', showMore)}\n                </Button>\n            );\n        }\n        const showCollapse =\n            count > POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH &&\n            voter_count > POLL_RESULTS_FIRST_SLICE_LENGTH;\n\n        return (\n            <>\n                <div className='poll-option-results-caption'>\n                    <div className='poll-option-results-answer'>{`${text} — ${vote_percentage}%`}</div>\n                    {showCollapse ? (\n                        <a onClick={this.handleCollapse}>{t('PollCollapse')}</a>\n                    ) : (\n                        <div className='poll-option-results-count'>{voterCount}</div>\n                    )}\n                </div>\n                {results}\n                {showMoreButton}\n            </>\n        );\n    }\n}\n\nPollOptionResults.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    optionId: PropTypes.number.isRequired,\n    option: PropTypes.object.isRequired,\n    isQuiz: PropTypes.bool.isRequired\n};\n\nexport default withTranslation()(PollOptionResults);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport PollOptionResults from './PollOptionResults';\nimport PollStore from '../../Stores/PollStore';\nimport './PollResultsDialog.css';\n\nclass PollResultsDialog extends React.Component {\n    componentDidMount() {\n        PollStore.on('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    onClientUpdateClosePollResults = update => {\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClose = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleContextMenu = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        if (!poll) return;\n\n        const { options, type, question } = poll;\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n\n        return (\n            <Dialog\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                transitionDuration={0}\n                open={true}\n                onClick={this.handleClick}\n                onContextMenu={this.handleContextMenu}\n                onClose={this.handleClose}\n                aria-labelledby='poll-results-title'>\n                <DialogTitle id='poll-results-title'>{isQuiz ? t('QuizAnswers') : t('PollResults')}</DialogTitle>\n                <DialogContent classes={{ root: 'poll-results-content' }}>\n                    <div className='poll-results-question'>{question}</div>\n                    {options.map((x, i) => (\n                        <PollOptionResults\n                            key={i}\n                            isQuiz={isQuiz}\n                            chatId={chatId}\n                            messageId={messageId}\n                            optionId={i}\n                            option={x}\n                        />\n                    ))}\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nPollResultsDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(PollResultsDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FireworksComponent from './FireworksControl';\nimport PollOption from './PollOption';\nimport UserTile from '../../Tile/UserTile';\nimport { setPollAnswer } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport TdLibController from './../../../Controllers/TdLibController';\nimport './Poll.css';\nimport PollResultsDialog from '../../Popup/PollResultsDialog';\n\nclass Poll extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fireworksRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, poll } = this.props;\n\n        if (poll && poll.type['@type'] === 'pollTypeQuiz') {\n            const { poll: prevPoll } = prevProps;\n            if (prevPoll.type.correct_option_id === -1 && poll.type.correct_option_id !== -1) {\n                const fireworks = this.fireworksRef.current;\n                if (!fireworks) return;\n\n                if (poll.options[poll.type.correct_option_id].is_chosen) {\n                    fireworks.start();\n                } else {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMessageShake',\n                        chatId,\n                        messageId\n                    });\n                }\n            }\n        }\n    }\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 answer';\n\n        return count + ' answers';\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (this.viewResults(poll)) {\n            return;\n        }\n\n        if (!type.allow_multiple_answers) {\n            return;\n        }\n\n        const optionIds = [];\n        poll.options.forEach((x, index) => {\n            if (x.isMultiChoosen) {\n                optionIds.push(index);\n            }\n        });\n\n        if (!optionIds.length) {\n            return;\n        }\n\n        setPollAnswer(chatId, messageId, optionIds);\n    };\n\n    handleVote = index => {\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (type['@type'] === 'pollTypeRegular' && type.allow_multiple_answers) {\n            poll.options[index].isMultiChoosen = !poll.options[index].isMultiChoosen;\n            this.forceUpdate();\n        } else {\n            setPollAnswer(chatId, messageId, [index]);\n        }\n    };\n\n    viewResults(poll) {\n        if (!poll) return false;\n\n        const { options, is_closed, is_anonymous } = poll;\n        if (is_anonymous) {\n            return false;\n        }\n\n        return is_closed || options.some(x => x.is_chosen);\n    }\n\n    getOptionType(index, poll) {\n        const types = ['regular', 'correct', 'incorrect'];\n        const defaultTypeId = 0;\n        const correctTypeId = 1;\n        const incorrectTypeId = 2;\n        if (!poll) return types[defaultTypeId];\n\n        const option = poll.options[index];\n        if (!option) return types[defaultTypeId];\n        if (!option.is_chosen) return types[defaultTypeId];\n\n        const { type } = poll;\n        if (!type) return types[defaultTypeId];\n        if (type['@type'] !== 'pollTypeQuiz') return types[defaultTypeId];\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return types[defaultTypeId];\n\n        return correct_option_id === index ? types[correctTypeId] : types[incorrectTypeId];\n    }\n\n    getOptionIsCorrect(index, poll) {\n        if (!poll) return false;\n\n        const option = poll.options[index];\n        if (!option) return false;\n\n        const { type } = poll;\n        if (!type) return false;\n        if (type['@type'] !== 'pollTypeQuiz') return false;\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return false;\n\n        return correct_option_id === index;\n    }\n\n    handleOpenResults = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { poll } = this.props;\n\n        this.setState({\n            viewResultsPoll: poll\n        });\n    };\n\n    handleCloseResults = () => {\n        this.setState({\n            viewResultsPoll: null\n        });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t, meta } = this.props;\n        const { viewResultsPoll } = this.state;\n        const { question, options, total_voter_count, type, is_closed, is_anonymous, recent_voter_user_ids } = poll;\n\n        let subtitle = t('FinalResults');\n        if (!is_closed) {\n            switch (type['@type']) {\n                case 'pollTypeRegular': {\n                    subtitle = is_anonymous ? t('AnonymousPoll') : t('PublicPoll');\n                    break;\n                }\n                case 'pollTypeQuiz': {\n                    subtitle = is_anonymous ? t('AnonymousQuizPoll') : t('QuizPoll');\n                    break;\n                }\n            }\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const isSelected = !is_closed && options.some(x => x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n        const showViewResults = this.viewResults(poll);\n        const showButton = (type.allow_multiple_answers && !isSelected) || showViewResults;\n        const buttonEnabled = showViewResults || options.some(x => x.isMultiChoosen);\n        let recentVoters = [];\n        if (recent_voter_user_ids) {\n            recentVoters = recent_voter_user_ids.map(id => <UserTile poll userId={id} />);\n        }\n\n        return (\n            <div className='poll'>\n                {isQuiz && <FireworksComponent ref={this.fireworksRef} />}\n                <div className='poll-question'>\n                    <div className='poll-question-title'>{question}</div>\n                    <div className='poll-question-subtitle'>\n                        <span style={{ marginRight: 6 }}>{subtitle}</span>\n                        {recentVoters}\n                    </div>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            type={this.getOptionType(index, poll)}\n                            isCorrect={this.getOptionIsCorrect(index, poll)}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                        />\n                    ))}\n                </div>\n                {showButton ? (\n                    <Button\n                        fullWidth\n                        color='primary'\n                        classes={{\n                            root: 'poll-button',\n                            textPrimary: 'message-control',\n                            disabled: 'message-control-disabled'\n                        }}\n                        TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                        disabled={!buttonEnabled}\n                        onClick={showViewResults ? this.handleOpenResults : this.handleSubmit}>\n                        {showViewResults ? t('PollViewResults') : t('PollSubmitVotes')}\n                    </Button>\n                ) : (\n                    <div className='poll-total-count'>\n                        {this.getTotalVoterCountString(total_voter_count, t)}\n                        {meta}\n                    </div>\n                )}\n                {Boolean(viewResultsPoll) && (\n                    <PollResultsDialog\n                        chatId={chatId}\n                        messageId={messageId}\n                        poll={viewResultsPoll}\n                        onClose={this.handleCloseResults}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fillRule='evenodd'>\n        <path d='M6,0 L33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,48 C54,51.3137085 51.3137085,54 48,54 L6,54 C2.6862915,54 4.05812251e-16,51.3137085 0,48 L0,6 C-4.05812251e-16,2.6862915 2.6862915,6.08718376e-16 6,0 Z' />\n        <path\n            d='M33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,22 C54,19.790861 52.209139,18 50,18 L40,18 C37.790861,18 36,16.209139 36,14 L36,4 C36,1.790861 34.209139,-3.88578059e-16 32,0 L33.5147186,0 Z'\n            fill='#000000'\n            style={{ mixBlendMode: 'normal' }}\n            opacity='0.15'\n        />\n    </g>,\n    'Document'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { meta } = this.props;\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport DocumentIcon from '../../../Assets/Icons/Document';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia, width, height, meta, title, caption } = this.props;\n        if (!document) return null;\n\n        const { minithumbnail, thumbnail, file_name } = document;\n        const file = document.document;\n\n        const style = width && height ? { width, height } : null;\n        const completeIconFunc = thumb =>\n            thumb ? null : (\n                <div className='document-tile-complete-icon'>\n                    <DocumentIcon className='document-tile-icon-fill' viewBox='0 0 54 54' />\n                    <div className='document-tile-file-ext'>{getExtension(file_name)}</div>\n                </div>\n            );\n\n        return (\n            <div className={classNames('document', { 'media-title': title })} style={style}>\n                <DocumentTile\n                    minithumbnail={minithumbnail}\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={completeIconFunc}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} meta={caption ? null : meta} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const value = this.getValue(update.currentTime, playerDuration, active);\n\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                value\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const value = this.getValue(active ? currentTime : 0, playerDuration, true);\n\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className='voice-note-slider-component'\n                    classes={{\n                        track: 'voice-note-slider-track',\n                        // thumbWrapper: 'voice-note-slider-thumb-wrapper',\n                        thumb: 'voice-note-slider-thumb'\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default VoiceNoteSlider;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AudioAction from './AudioAction';\nimport VoiceNoteTile from '../../Tile/VoiceNoteTile';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, title, meta, caption } = this.props;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className={classNames('voice-note', 'document', { 'media-title': title })}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNote;\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"e33e8791554f674a437f.worker.js\");\n};","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(3.000000, 0.600000)'>\n        <path\n            d='M9,0 C13.9705627,-9.13077564e-16 18,4.02943725 18,9 L18,23 L18,23 L15,20 L12,23 L9,20 L6,23 L3,20 L0,23 L0,9 C-6.08718376e-16,4.02943725 4.02943725,9.13077564e-16 9,0 Z'\n            stroke='currentColor'\n            strokeWidth='1.5'\n            strokeLinejoin='round'\n            fill='none'\n        />\n        <circle cx='5' cy='9' r='2' />\n        <circle cx='13' cy='9' r='2' />\n    </g>,\n    'DeletedAccount'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_4', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function copy(text) {\n    let element;\n\n    try {\n        element = document.createElement('textarea');\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.select();\n\n        const successful = document.execCommand('copy');\n        if (!successful) {\n            console.error('unable to copy using execCommand');\n        }\n    } catch {\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport { isChatMuted } from '../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\n\nexport async function getChat(chatId) {\n    const chat = TdLibController.send({\n        '@type': 'getChat',\n        chat_id: chatId\n    });\n    ChatStore.set(chat);\n\n    return chat;\n}\n\nexport function setChatChatList(chatId, chatList) {\n    TdLibController.send({\n        '@type': 'setChatChatList',\n        chat_id: chatId,\n        chat_list: chatList\n    });\n}\n\nexport function toggleChatIsPinned(chatId, isPinned) {\n    TdLibController.send({\n        '@type': 'toggleChatIsPinned',\n        chat_id: chatId,\n        is_pinned: isPinned\n    });\n}\n\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\n    TdLibController.send({\n        '@type': 'toggleChatIsMarkedAsUnread',\n        chat_id: chatId,\n        is_marked_as_unread: isMarkedAsUnread\n    });\n}\n\nexport function toggleChatNotificationSettings(chatId, isMuted) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return;\n\n    const isMutedPrev = isChatMuted(chatId);\n    if (isMutedPrev === isMuted) {\n        return;\n    }\n\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n    const newNotificationSettings = {\n        ...chat.notification_settings,\n        use_default_mute_for: false,\n        mute_for: muteFor\n    };\n\n    TdLibController.send({\n        '@type': 'setChatNotificationSettings',\n        chat_id: chatId,\n        notification_settings: newNotificationSettings\n    });\n}\n\nexport async function getChatCounters(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const promises = [];\n\n    const photoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterPhoto' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(photoCounter);\n\n    const videoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVideo' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(videoCounter);\n\n    const documentCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterDocument' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(documentCounter);\n\n    const audioCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterAudio' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(audioCounter);\n\n    const urlCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterUrl' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(urlCounter);\n\n    const voiceAndVideoNoteCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(voiceAndVideoNoteCounter);\n\n    return await Promise.all(promises);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.left !== left) {\n            return true;\n        }\n\n        if (nextState.top !== top) {\n            return true;\n        }\n\n        if (nextState.openDeleteDialog !== openDeleteDialog) {\n            return true;\n        }\n\n        if (nextState.revoke !== revoke) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <div className='shared-link' onContextMenu={this.handleContextMenu}>\n                <div className={classNames('shared-link-photo', tileColor)}>\n                    {title.charAt(0)}\n                    {photo && (\n                        <Photo\n                            displaySize={90}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                            showProgress={false}\n                            style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                        />\n                    )}\n                </div>\n                <div className='shared-link-content'>\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {content}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage, t } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default withTranslation()(SharedPhoto);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { getDurationString, getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage, t } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className='shared-video-wrapper'>\n                    <div\n                        className={classNames('shared-video-content', {\n                            'media-blurred': isBlurred,\n                            'media-mini-blurred': !thumbSrc && isBlurred\n                        })}\n                        style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                    />\n                    <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default withTranslation()(SharedVideo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (!voiceNote) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className='shared-voice-note' onContextMenu={this.handleContextMenu}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                    <div className='voice-note-meta'>\n                        <AudioAction\n                            chatId={chatId}\n                            messageId={messageId}\n                            duration={duration}\n                            file={file}\n                            title={`${dateString}, `}\n                        />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        // console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        // console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Archive.css';\nimport { openArchive } from '../../Actions/Client';\n\nclass Archive extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { title, theme } = this.props;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.title !== title) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openArchive();\n        }\n    };\n\n    render() {\n        const { t, title } = this.props;\n\n        return (\n            <div\n                ref={this.dialog}\n                className='dialog'\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}>\n                <div className='dialog-wrapper'>\n                    <div className='chat-tile'>\n                        <div className='archive-tile-background tile-photo'>\n                            <div className='tile-saved-messages'>\n                                <ArchiveIcon fontSize='default' />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>\n                                <span className='dialog-title-span'>{t('ArchivedChats')}</span>\n                            </div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>{title}</div>\n                            {/*{unread_count > 0 && (*/}\n                            {/*    <div className={classNames('dialog-badge-muted', 'dialog-badge')}>*/}\n                            {/*        <span className='dialog-badge-text'>{unread_count}</span>*/}\n                            {/*    </div>*/}\n                            {/*)}*/}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nArchive.propTypes = {\n    title: PropTypes.string\n};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount,\n    showChatUnreadMessageIcon\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMessageIcon = false; //showChatUnreadMessageIcon(chatId);\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMessageIcon && <i className='dialog-badge-unread' />}\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadMessageIcon && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canSetChatChatList,\n    isChatArchived,\n    isChatMuted,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        if (hidden) return null;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(isSelected ? 'dialog-active' : 'dialog', { 'item-selected': isSelected })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Archive from '../Tile/Archive';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport { scrollTop } from '../../Utils/DOM';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat || !chat.chat_list || chat.chat_list['@type'] !== type) {\n            return;\n        }\n\n        const newChatIds = [];\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId()) {\n                TdLibController.setChatId(0);\n                AppStore.changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (chats.length > 0) {\n                const existingChat = chats.find(x => x === chat_id);\n                if (!existingChat) {\n                    // const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                    // if (orderCompare(minChatOrder, chat.order) === 1) {\n                    //     console.log('[dl] onUpdate return 3', type);\n                    //     return;\n                    // }\n                    newChatIds.push(chat_id);\n                }\n            } else {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        // console.log('[dl] onUpdate reorderChats', type, chatIds, newChatIds);\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass Archive extends React.Component {\n    handleCloseArchive = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCloseArchive'\n        });\n    };\n\n    render() {\n        const { t, innerListRef, items, cacheItems } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleCloseArchive}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './SectionHeader.css';\n\nfunction SectionHeader(props) {\n    const { command, onClick, children } = props;\n\n    return (\n        <div className='section-header'>\n            <div className='section-header-title'>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenContacts'\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenSettings',\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    render() {\n        const { t, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    <SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n\n                element.innerText = null;\n                onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                event.stopPropagation();\n                event.target.blur();\n                onClose();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus } = this.props;\n\n        return (\n            <div className='search-input'>\n                {/*<SearchIcon />*/}\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_100MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch, text } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            const searchInput = this.searchInputRef.current;\n            if (openSearch) {\n                setTimeout(() => {\n                    if (searchInput) {\n                        searchInput.focus();\n                    }\n                }, ANIMATION_DURATION_100MS);\n            } else {\n                searchInput.innerText = null;\n            }\n        }\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch } = this.props;\n\n        let content = null;\n        let showClose = false;\n        if (openSearch) {\n            showClose = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton showClose={showClose} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport './SidebarPage.css';\n\nfunction SidebarPage({ children, open }) {\n    return (\n        <Slide direction='right' in={open} mountOnEnter unmountOnExit>\n            <div className='sidebar-page'>{children}</div>\n        </Slide>\n    );\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport PhotoIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Appearance')} />\n                    </ListItem>\n                    <ThemePicker ref={this.themePickerRef} />\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport SidebarPage from '../SidebarPage';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        // console.log('[un] render', hasError, usernameLabel);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            showTitle={false}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={null}\n                        />\n                    </div>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            You can choose a username on Telegram. If you do, other people will be able to find you by\n                            this username and contact you without knowing your phone number. You can use a-z, 0-9 and\n                            underscores. Minimum length is 5 characters.\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport './General.css';\n\nclass General extends React.Component {\n    render() {\n        const { t, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content' />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    handleBlockedUsers = () => {\n        const { users } = this.state;\n        if (!users) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlockedUsersPage',\n            opened: true,\n            users\n        });\n    };\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.handleBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openActiveSessions}>\n                    <ActiveSessions sessions={sessions} onClose={this.closeActiveSessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        console.log('[perf] Settings.componentDidMount');\n        this.loadContent();\n    }\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCloseSettings'\n        });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile}>\n                    <EditProfile chatId={chatId} onClose={this.closeEditProfile} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral}>\n                    <General chatId={chatId} onClose={this.closeGeneral} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications}>\n                    <Notifications chatId={chatId} onClose={this.closeNotifications} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity}>\n                    <PrivacySecurity onClose={this.closePrivacySecurity} />\n                </SidebarPage>\n                <SidebarPage open={openLanguage}>\n                    <Language onClose={this.closeLanguage} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.cache = null;\n        this.contacts = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        CacheManager.remove('contacts');\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        const [cache, files] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n        // console.log('[cm] getChats result', this.cache);\n        if (!this.cache) return null;\n\n        this.parseCache(this.cache);\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n\n        (files || []).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).forEach(x => {\n            delete x.OutputTypingManager;\n\n            ChatStore.set(x);\n            if (x.photo) {\n                if (x.photo.small) FileStore.set(x.photo.small);\n                if (x.photo.big) FileStore.set(x.photo.big);\n            }\n            if (x.chat_list) {\n                ChatStore.updateChatChatList(x.id, x.chat_list);\n            }\n            if (x.last_message) {\n                MessageStore.set(x.last_message);\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n        chats.concat(archiveChats).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCloseContacts'\n        });\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    render() {\n        const { items, searchItems } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <SearchInput\n                        inputRef={this.searchInputRef}\n                        onChange={this.handleSearch}\n                        onClose={this.handleClose}\n                    />\n                </div>\n                <div className='contacts-content'>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        const { isChatDetailsVisible } = AppStore;\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            isChatDetailsVisible,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.isChatDetailsVisible !== isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateOpenSettings', this.onClientUpdateOpenSettings);\n        ChatStore.on('clientUpdateCloseSettings', this.onClientUpdateCloseSettings);\n        ChatStore.on('clientUpdateOpenArchive', this.onClientUpdateOpenArchive);\n        ChatStore.on('clientUpdateCloseArchive', this.onClientUpdateCloseArchive);\n        ChatStore.on('clientUpdateOpenContacts', this.onClientUpdateOpenContacts);\n        ChatStore.on('clientUpdateCloseContacts', this.onClientUpdateCloseContacts);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateOpenSettings', this.onClientUpdateOpenSettings);\n        ChatStore.off('clientUpdateCloseSettings', this.onClientUpdateCloseSettings);\n        ChatStore.off('clientUpdateOpenArchive', this.onClientUpdateOpenArchive);\n        ChatStore.off('clientUpdateCloseArchive', this.onClientUpdateCloseArchive);\n        ChatStore.off('clientUpdateOpenContacts', this.onClientUpdateOpenContacts);\n        ChatStore.off('clientUpdateCloseContacts', this.onClientUpdateCloseContacts);\n    }\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateOpenContacts = async update => {\n        this.setState({ openContacts: true });\n    };\n\n    onClientUpdateCloseContacts = update => {\n        this.setState({ openContacts: false });\n    };\n\n    onClientUpdateOpenSettings = update => {\n        this.setState({ openSettings: true, meChatId: update.chatId });\n    };\n\n    onClientUpdateCloseSettings = update => {\n        this.setState({ openSettings: false });\n    };\n\n    onClientUpdateOpenArchive = update => {\n        this.setState({ openArchive: true });\n    };\n\n    onClientUpdateCloseArchive = update => {\n        this.setState({ openArchive: false });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div\n                    className={classNames('dialogs', {\n                        'dialogs-third-column': isChatDetailsVisible\n                    })}>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={200}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleClose}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (AppStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => AppStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            const key = 'disallow_multiple_answers';\n            const message = t('PollQuizOneRightAnswer');\n            const action = null;\n\n            this.handleScheduledAction(key, message, action);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={messageId || editMessageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { readImageSize } from '../../Utils/Common';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, open } = this.props;\n        if (open && open !== prevProps.open) {\n            this.file = null;\n            this.media = null;\n\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return;\n\n            const { content } = message;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (!text && !caption) return;\n\n            setTimeout(() => {\n                const element = this.captionRef.current;\n                if (!element) return;\n\n                if (text) {\n                    this.setFormattedText(text);\n                } else if (caption) {\n                    this.setFormattedText(caption);\n                } else {\n                    element.innerText = null;\n                }\n\n                focusInput(element);\n            }, 0);\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, onDone } = this.props;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        let content = null;\n        if (this.file) {\n            readImageSize(this.file, result => {\n                content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: result.name, data: result },\n                    width: result.photoWidth,\n                    height: result.photoHeight,\n                    caption\n                };\n                onDone(null, content);\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId,\n                    messageId: 0\n                });\n            });\n            this.file = null;\n        } else {\n            onDone(caption, null);\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, onCancel } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateEditMessage',\n            chatId,\n            messageId: 0\n        });\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.file = file;\n            this.getMediaFromFile(file, result => {\n                this.media = result;\n                this.forceUpdate();\n            });\n        });\n\n        element.value = '';\n    };\n\n    getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    getMediaFromFile(file, callback) {\n        if (!file) {\n            callback(null);\n        }\n\n        if (file.type.startsWith('image')) {\n            readImageSize(file, result => {\n                const fileId = -this.getRandomInt(1, 1000000);\n                FileStore.setBlob(fileId, result);\n\n                callback({\n                    '@type': 'messagePhoto',\n                    photo: {\n                        '@type': 'photo',\n                        has_stickers: false,\n                        minithumbnail: null,\n                        sizes: [\n                            {\n                                '@type': 'photoSize',\n                                photo: { '@type': 'file', id: fileId },\n                                width: result.photoWidth,\n                                height: result.photoHeight\n                            }\n                        ]\n                    }\n                });\n            });\n        } else {\n            callback(null);\n        }\n    }\n\n    render() {\n        const { classes, chatId, messageId, open, t } = this.props;\n        if (!open) return null;\n\n        const { defaultText, defaultUrl, openEditUrl } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const media = getMedia({ content: this.media }) || getMedia(message, null);\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    <IconButton\n                        disableRipple={true}\n                        aria-label={t('Edit')}\n                        className='edit-media-dialog-edit-button'\n                        size='small'\n                        onClick={this.handleEditMedia}>\n                        <EditIcon fontSize='inherit' />\n                    </IconButton>\n                    <input\n                        ref={this.editMediaRef}\n                        className='inputbox-attach-button'\n                        type='file'\n                        accept='image/*'\n                        onChange={this.handleEditMediaComplete}\n                    />\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Edit')}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    open: PropTypes.bool\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia: messageId !== 0 && isEditedMedia(chatId, messageId)\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    this.focusInput();\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateEditMessage',\n            chatId,\n            messageId: 0\n        });\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        innerHTML = innerHTML.replace(/<div><br><\\/div>/gi, '<br>');\n        innerHTML = innerHTML.replace(/<div>/gi, '<br>');\n        innerHTML = innerHTML.replace(/<\\/div>/gi, '');\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText, result => {});\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        const files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        const files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        } else if (replyToMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.setState({ files });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    async editMessageMedia(content, callback) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        // console.log('[em] editMessageMedia send', content);\n        const result = await TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n\n        callback(result);\n    }\n\n    async editMessageCaption(caption, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        const result = await TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n\n        callback(result);\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleDoneEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content, () => {});\n            return;\n        }\n\n        this.editMessageCaption(caption, () => {});\n    };\n\n    closeEditMediaDialog() {\n        this.setState(\n            {\n                openEditMedia: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    onDone={this.handleDoneEditMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        {t('Undo')}\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport { clearSelection, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        AppStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = AppStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragParams } = this.state;\n\n        return (\n            <>\n                {dragParams && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport Button from '@material-ui/core/Button';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Popover from '@material-ui/core/Popover';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    canMessageBeEdited,\n    isMessagePinned,\n    isMetaBubble,\n    canMessageBeUnvoted,\n    canMessageBeClosed\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canPinMessages, canSendMessages, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    forwardMessages,\n    replyMessage,\n    editMessage,\n    clearSelection,\n    deleteMessages\n} from '../../Actions/Client';\nimport { copy } from '../../Utils/Text';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { getFitSize, getSize } from '../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            confirmStopPoll: false,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches, confirmStopPoll } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('Message.shouldComponentUpdate true theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.confirmStopPoll !== confirmStopPoll) {\n            // console.log('Message.shouldComponentUpdate true confirmStopPoll');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId } = this.props;\n\n        clearSelection();\n        this.handleCloseContextMenu(event);\n\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId } = this.props;\n\n        clearSelection();\n        this.handleCloseContextMenu(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId } = this.props;\n\n        this.handleCloseContextMenu(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId } = this.props;\n\n        clearSelection();\n        this.handleCloseContextMenu(event);\n\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId } = this.props;\n\n        this.handleCloseContextMenu(event);\n\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId } = this.props;\n\n        this.handleCloseContextMenu(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    getMessageStyle(chatId, messageId) {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n                if (!animation) return null;\n\n                const { width, height, thumbnail } = animation;\n\n                const size = { width, height } || thumbnail;\n                if (!size) return null;\n\n                const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n                if (!fitSize) return null;\n\n                return { width: fitSize.width };\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n                if (!photo) return null;\n\n                const size = getSize(photo.sizes, PHOTO_SIZE);\n                if (!size) return null;\n\n                const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n                if (!fitSize) return null;\n\n                return { width: fitSize.width };\n            }\n            case 'messageVideo': {\n                const { video } = content;\n                if (!video) return null;\n\n                const { thumbnail, width, height } = video;\n\n                const size = { width, height } || thumbnail;\n                if (!size) return null;\n\n                const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\n                if (!fitSize) return null;\n\n                return { width: fitSize.width };\n            }\n        }\n\n        return null;\n    }\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleCopyLink = event => {\n        const { copyLink } = this.state;\n\n        this.handleCloseContextMenu(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top,\n            confirmStopPoll\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = this.getMessageStyle(chatId, messageId);\n\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeForwarded = message.can_be_forwarded;\n        const canBeDeleted = message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': is_outgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && is_outgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {copyLink && <MenuItem onClick={this.handleCopyLink}>{t('CopyLink')}</MenuItem>}\n                            {canBeReplied && <MenuItem onClick={this.handleReply}>{t('Reply')}</MenuItem>}\n                            {canBePinned && (\n                                <MenuItem onClick={this.handlePin}>{isPinned ? t('Unpin') : t('Pin')}</MenuItem>\n                            )}\n                            {canBeSelected && <MenuItem onClick={this.handleSelect}>{t('Select')}</MenuItem>}\n                            {canBeForwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                            {canBeEdited && <MenuItem onClick={this.handleEdit}>{t('Edit')}</MenuItem>}\n                            {canBeDeleted && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>}\n                            {canBeUnvoted && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                            {canBeClosed && <MenuItem onClick={this.handleConfirmStopPoll}>{t('StopPoll')}</MenuItem>}\n                        </MenuList>\n                    </Popover>\n                    <Dialog\n                        transitionDuration={0}\n                        open={confirmStopPoll}\n                        onClose={this.handleCloseConfirm}\n                        aria-labelledby='form-dialog-title'>\n                        <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleCloseConfirm} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleStopPoll} color='primary'>\n                                {t('Stop')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        // document.addEventListener('keydown', this.onKeyDown, false);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        // document.removeEventListener('keydown', this.onKeyDown, false);\n\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateEditMessage',\n                        chatId: message.chat_id,\n                        messageId: message.id\n                    });\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId: message.chat_id,\n                    messageId: message.id\n                });\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = AppStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.object\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getViewerFile, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, thumbnailWidth, thumbnailHeight, thumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { getViewerFile, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { setInstantViewViewerContent } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    state = {\n        index: -1,\n        hasPreviousMedia: false,\n        hasNextMedia: false,\n        blocks: []\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\nimport { scrollTop } from '../../Utils/DOM';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\n// const Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n            this.setState({\n                width,\n                height,\n                file,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            file,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}