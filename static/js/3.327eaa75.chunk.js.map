{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Stores/MessageStore.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Venue.js","Utils/Message.js","Stores/PlayerStore.js","Actions/Client.js","Utils/User.js","Stores/SupergroupStore.js","Utils/Media.js","Components/Viewer/FileProgress.js","Components/Message/Media/Sticker.js","Stores/BasicGroupStore.js","Components/Tile/UserTileControl.js","Stores/StickerStore.js","Components/Message/Media/Photo.js","Components/Message/MessageAuthor.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/DocumentTile.js","Components/Message/Media/Animation.js","Components/ColumnMiddle/StickerPreview.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Video.js","Components/Message/Media/VideoNote.js","Components/Message/Media/MediaStatus.js","Components/Message/Reply.js","Components/Tile/ReplyTile.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Dialog/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Dialog/CreatePollDialog.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Notifications.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTileControl.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Dialog/ForwardDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogTitleControl.js","Components/Tile/DialogStatusControl.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/Tile/DialogContentControl.js","Components/Tile/DialogBadgeControl.js","Components/Tile/DialogMetaControl.js","Components/Tile/DialogControl.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Dialog/ChatInfoDialog.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Dialog/ShareStickerSetButton.js","Components/Dialog/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","FileStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onUpdate","_ref","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","update","wrap","_context","prev","next","t0","set","file","onUpdateFile","emit","abrupt","onUpdateAuthorizationState","stop","_x","apply","arguments","onClientUpdate","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","_ref2","_callee2","_context2","authorization_state","initDB","_x2","handleDownloads","handleUploads","arr","id","idb_key","local","downloads","has","is_downloading_completed","items","get","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","console","error","remote","uploads","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","handleAnimation","audio","handleAudio","photo","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","sizes","length","photoSize","source","updatePhotoBlob","chat_id","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","chatId","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","@type","callbacks","db","WeakMap","Map","setMaxListeners","Infinity","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","_this2","_ref3","_callee4","response","_context4","send","file_id","sent","concat","data","_x4","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","undefined","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","getPhotoSize","loadPhotoThumbnailContent","getPhotoThumbnailSize","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","keys","saveOrDownload","fileName","mime","type","saveData","can_be_downloaded","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","_photo9","small","big","getChatUserId","_photo10","getProfilePhoto","_photo11","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatsContent","loadDraftContent","draft_message","loadStickerSetContent","stickerSet","loadStickersContent","stickers","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","value","action","getPrivateChatTypingString","firstUser","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","first_name","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderFullName","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","t","key","getContent","getChatUnreadMessageIcon","is_outgoing","last_read_outbox_message_id","getChatUnreadCount","unread_count","getChatUnreadMentionCount","unread_mention_count","isChatMuted","use_default_mute_for","notification_settings","mute_for","notificationSettings","ApplicationStore","getNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getSupergroupStatus","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChannelChat","isChatMember","is_member","getChatTitle","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","getChatDraft","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","__webpack_require__","d","__webpack_exports__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selected","selectedItems","clear","deletedMessage","Contact","_this$props","props","openMedia","last_name","fullName","number","formatPhoneNumber","react_default","className","UserTileControl","onClick","React","Component","Game","displaySize","Animation","fitPhotoSize","getFitSize","Photo","_this$props2","classes","formattedText","getFormattedText","classNames","accentBackgroundLight","accentColorMain","defaultProps","PHOTO_DISPLAY_SIZE","withStyles","theme","objectSpread","accentStyles","Location","onClientUpdateLocationBlob","forceUpdate","on","src","longitude","latitude","rel","draggable","alt","Room_default","fontSize","color","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio_default","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","icon","CircularProgress_default","thickness","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","_this$state","state","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","setState","animated","Math","floor","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","poll-percentage-subtitle","Fragment","PollOption","getTitleString","canBeSelected","handleClick","onVote","stopPropagation","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","defineProperty","borderColor","LinearProgress_default","bar","progressBar","variant","max","enhance","compose","backgroundColor","margin","right","bottom","transition","borderStyle","withTheme","withTranslation","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","_this$props3","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","_this$props4","question","options","total_voter_count","canUnvote","canStopPoll","can_be_edited","every","toConsumableArray","onContextMenu","Message_Media_PollOption","Popover_default","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList_default","e","MenuItem_default","Dialog_default","transitionDuration","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","Venue","address","Message_Media_Location","getTitle","substring","start","end","entities","beforeEntityText","offset","entityText","startsWith","decodedUrl","decodeURI","hashtag","command","afterEntityText","getText","caption","getWebPage","getDateHint","getMedia","Audio","Message_Media_Contact","Document","Message_Media_Game","Message_Media_Poll","Sticker","Message_Media_Venue","Video","VideoNote","VoiceNote","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getUnread","getSenderUserId","filterMessages","reduce","accumulator","current","ttl","getServiceMessageContent","file_name","emoji","isMediaContent","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","regenerator_default","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openUser","openContact","openGame","isDeletedMessage","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","totalCount","query","from_message_id","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","openChat","highlightMessage","selectMessage","_Controllers_TdLibController__WEBPACK_IMPORTED_MODULE_0__","popup","isUserBlocked","getUserLetters","getUserStatusOrder","getProfilePhotoDateHint","dateformat__WEBPACK_IMPORTED_MODULE_0__","dateformat__WEBPACK_IMPORTED_MODULE_0___default","n","_Common__WEBPACK_IMPORTED_MODULE_1__","_Constants__WEBPACK_IMPORTED_MODULE_2__","_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__","SERVICE_NOTIFICATIONS_USER_ID","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","is_blocked","expires","userProfilePhoto","smallPhotoSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","added_date","setFullInfo","supergroup_full_info","fullInfoItems","isBlurredThumbnail","THUMBNAIL_BLURRED_SIZE","performer","trimmedTitle","trim","trimmedPerformer","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","_toRowColumn","setIndex","stickerIndex","prevRows","ceil","toRowColumn","_toRowColumn2","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","row","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","circleStyle","circle","FileProgress","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","currentFile","nextFile","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","cancelButton","zIndex","completeIcon","_this$getProgressPara","_this$getProgressPara2","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","background","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_8___default","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","blur","preview","isBlurred","fitSize","stickerStyle","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","media-blurred","STICKER_DISPLAY_SIZE","basic_group","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","tileColor","abs","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","pointer","StickerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","sticker_set_ids","_this$stickerSet","is_installed","assign","hint","foundStickers","onClientUpdatePhotoBlob","thumbnailSize","showProgress","photoStyle","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","PHOTO_THUMBNAIL_SIZE","MessageAuthor","openUserCommand","openChatCommand","react__WEBPACK_IMPORTED_MODULE_5___default","currency","Currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","author","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","DocumentTile","onClientUpdateDocumentThumbnailBlob","document-tile-background","_Components_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","palette","primary","main","borderRadius","startStopPlayer","videoRef","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","createRef","hasFocus","_this$props$animation","mime_type","isGif","ref","poster","muted","autoPlay","loop","playsInline","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","join","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","STICKER_PREVIEW_DISPLAY_SIZE","DocumentAction","isDownloadingActive","isUploadingActive","sizeString","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","_this$props5","_Tile_DocumentTile__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Pause__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_PlayArrow__WEBPACK_IMPORTED_MODULE_7___default","_AudioAction__WEBPACK_IMPORTED_MODULE_10__","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","_this$state2","_this$state3","durationString","getDurationString","currentTimeString","audioDuration","_this$state4","_this$state5","onClientUpdateVideoThumbnailBlob","_this$props$video","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9___default","_MediaStatus__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_VolumeOff__WEBPACK_IMPORTED_MODULE_7___default","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_8___default","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","Reply","onGetMessageResult","handleOpen","onMouseDown","_Tile_ReplyTile__WEBPACK_IMPORTED_MODULE_11__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","ReplyTile","isVideoNote","reply-tile-photo-round","reply-tile-photo-loading","NotificationsControl","onUpdateChatNotificationSettings","isMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","prevChatId","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","AttachButton","anchorEl","handleMenuClick","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","IconButton_default","iconButton","aria-label","AttachFile_default","Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","disabled","ListItemIcon_default","Photo_default","ListItemText_default","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","keyCode","isNavigational","CreatePollOption","optionTextRef","innerText","handleDelete","onDelete","handleInput","dataset","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","Close_default","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","innerHTML","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Dialog_CreatePollOption","el","canAddOption","dialogRoot","contentRoot","Typography_default","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider_default","dividerRoot","List_default","listRoot","ListItem_default","listItem","button","disableTypography","typographyRoot","InputBoxHeader","Reply_default","replyIcon","Message_Reply","closeIconButton","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","all","bind","InputBoxControl","onClientUpdateStickerSend","newMessageRef","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","element","draft","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","disable_web_page_preview","clear_draft","handleSubmit","attachPhotoRef","handleAttachPhotoComplete","files","Array","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","setTyping","name","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","indexOf","getAsFile","plainText","handlePasteContinue","handleClosePaste","asyncToGenerator","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","getChatId","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","onKeyUp","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Dialog_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","onUpdateBasicGroup","onUpdateSupergroup","handleJoin","handleDeleteAndExit","remove_from_chat_list","Components_ColumnMiddle_InputBoxControl","ColumnMiddle_NotificationsCommandControl","VoiceNoteSlider","reset","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider_default","slider","thumbWrapper","thumb","min","maxWidth","Pause_default","PlayArrow_default","Message_Media_VoiceNoteSlider","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","inherits","createClass","build","maxSnack","MAX_SNACK","displayName","getDisplayName","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","default","overflow","boxSizing","ChatTileControl","onFastUpdatingComplete","showOnline","BookmarkBorder_default","Components_Tile_ChatStatus","statusRoot","statusIcon","ForwardTargetChat","shortTitle","forward-target-chat-selected","Components_Tile_ChatTileControl","border","markSelected","markUnselected","boxShadow","paper","cyrillicInput","getCyrillicInput","input","output","latinInput","getLatinInput","ForwardDialog","loadContent","promises","getChatsPromise","savedMessagesPromise","chats","savedMessages","getPublicMessageLink","offset_order","offset_chat_id","force","slicedToArray","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","copy","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","div","handleSearchKeyDown","handleSearchKeyUp","searchRef","latinText","cyrillicText","searchResults","hasSearchText","searchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","Components_Tile_ForwardTargetChat","foundChats","aria-describedby","searchList","autoFocus","spacing","unit","dialogContent","withSnackbar","NotificationTimer","handleTimer","expire","timeout","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","menuAnchorOrigin","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","MainMenuButton","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","deleteChat","leaveChatTitle","aria-owns","aria-haspopup","menuIconButton","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","UserStatusControl","isAccent","prevUserId","userStatusSubtitle","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","Components_Tile_UserStatusControl","DialogTitleControl","isVerified","CheckDecagram_default","verifiedIcon","DialogStatusControl","updateSubtitle","find","subtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","Components_Tile_DialogTitleControl","Components_Tile_DialogStatusControl","ChatDetailsHeader","backButton","leftIconButton","ArrowBack_default","rightIconButton","NotificationsListItem","Notifications_default","NotificationsActive_default","noWrap","ListItemSecondaryAction_default","Switch_default","MoreListItem","handleMoreClick","openMore","handleSendMessage","setChatId","handleBlock","isGroup","isBlocked","isMember","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","unmountOnExit","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","hasGroupsInCommon","handleUsernameHint","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","getContentHeight","clientHeight","offsetHeight","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","isMe","member","sort","y","Components_Tile_UserControl","handleSelectUser","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","whiteSpace","wordWrap","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","nested","GroupsInCommonHeader","backIconButton","GroupsInCommon","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","ChatInfo","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","PureComponent","userStatusRoot","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","subscribersString","foundPublicChatActive","foundPublicChatSubtitle","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderName","senderFullName","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","splice","recentlyFound","USERNAME_LENGTH_MIN","offset_date","offset_message_id","topPromise","recentlyFoundPromise","_ref4","category","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","loading","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","RadioGroup_default","FormControlLabel_default","control","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","authorizationState","handleMenuOpen","isAuthorizationReady","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","icons_Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icons_Search_default","openIcon","DialogContentControl","onClientUpdateClearHistory","contentControl","DialogBadgeControl","unreadMessageIcon","unreadCount","unreadMentionCount","showUnreadCount","showDraftChat","dialogBadge","dialogBadgeMuted","is_pinned","DialogMetaControl","DialogControl","isSelected","dialogActive","Components_Tile_DialogMetaControl","Components_Tile_DialogContentControl","Components_Tile_DialogBadgeControl","cursor","& $statusRoot","& $iconIndicator","&:hover","& $statusIcon","DialogsList","onClientUpdateLeaveChat","hiddenChats","loadFirstSlice","onLoadNext","onUpdateConnectionState","newConnectionState","connectionState","skippedUpdates","onUpdateChatOrder","reorderChats","newChatIds","minChatOrder","offsetOrder","offsetChatId","_args2","CHAT_SLICE_LIMIT","finally","shift","replaceChats","appendChats","getConnectionState","orderedChatIds","isDifferentOrder","dialogs","Components_Tile_DialogControl","oldChatIds","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","Components_ColumnLeft_DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","HeaderCommand","canBeDeletedForAllUsers","can_be_deleted_for_all_users","openDeleteDialog","handleDeleteContinue","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","showProgressAnimation","HeaderProgress","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","paused","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHint","showDate","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","toLocaleDateString","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","newMessageId","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","mouseDown","handleDateClick","_this$props7","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","_this$props9","_this$props10","showUnreadSeparator","showTitle","_this$props11","webPage","media","messageClassName","message-selected","messageSelected","messageHighlighted","meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","getClientData","unpinned_message_id","handleUnpin","_extends","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","chatPhotoStyle","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","scrollBehavior","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","replaceMessage","viewMessages","onUpdateNewMessage","completed","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","insertBefore","basicGroupChat","upgraded_from_basic_group_id","suppressHandleScroll","suppressHandleScrollOnSelectChat","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","prevMessageId","separatorMessageId","throttle","previousChat","last_read_inbox_message_id","MAX_VALUE","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","dialogTitleRoot","disablePointerEvents","Dialog_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_Dialog_StickerSetDialog","Components_Dialog_ChatInfoDialog","MediaViewerControl","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","getAnimationData","fileReader","FileReader","onload","parse","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","thumbnailBlob","isVideo","isAnimation","isLottie","videoWidth","videoHeight","onVolumeChange","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","children","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","delegateYield","saveAnimation","saveDocument","saveVideo","savePhoto","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","prevPhoto","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","currentIndex","getReadWriteStore","prevFileId","currentFileId","inHistory","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Dialog_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.327eaa75.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n        if (!update.authorization_state) return;\n\n        if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\n            await this.initDB();\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                console.log(`readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n    if (!message) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n    if (!message) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n    if (!message) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n    if (!message) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n    if (!message) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n    if (!message) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n    if (!message) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location: location,\n            zoom: LOCATION_ZOOM,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            scale: LOCATION_SCALE,\n            chat_id: message.chat_id\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n    if (!message) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadDraftContent,\n    loadUserContent,\n    loadChatContent,\n    loadChatsContent,\n    loadUsersContent,\n    loadStickerContent,\n    loadStickerThumbnailContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport UserStore from '../Stores/UserStore';\nimport ChatStore from '../Stores/ChatStore';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction getChatUnreadMessageIcon(chat) {\n    if (!chat) return false;\n    if (!chat.last_message) return false;\n\n    return chat.last_message.is_outgoing && chat.last_message.id > chat.last_read_outbox_message_id;\n}\n\nfunction getChatUnreadCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_count) return null;\n\n    return chat.unread_count;\n}\n\nfunction getChatUnreadMentionCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_mention_count) return null;\n\n    return chat.unread_mention_count;\n}\n\nfunction isChatMuted(chat) {\n    return getChatMuteFor(chat) > 0;\n}\n\nfunction getChatMuteFor(chat) {\n    if (!chat) return 0;\n\n    if (chat.use_default_mute_for) {\n        switch (chat.type) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopePrivateChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopeGroupChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n        }\n    } else {\n        if (!chat.notification_settings) return 0;\n\n        return chat.notification_settings.mute_for;\n    }\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n    if (!chat.type) return;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeSecret': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: chat.type.basic_group_id\n            });\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: chat.type.supergroup_id\n            });\n            break;\n        }\n    }\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return basicGroup.status.can_pin_messages;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return false;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return false;\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return isMeChat(chatId);\n        }\n        case 'chatTypeSecret': {\n            return false;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return supergroup.status.can_pin_messages;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return false;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    getChatUnreadMessageIcon,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatMember,\n    isChatVerified,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendFiles,\n    canSendMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getSupergroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.selectedItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from '../../Tile/UserTileControl';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name: first_name,\n            last_name: last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTileControl userId={user_id} user={user} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Contact;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorMain)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location } = this.props;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <a href={source} target='_blank' rel='noopener noreferrer'>\n                <div className='location-wrapper'>\n                    <img className='location-image' draggable={false} alt={source} src={src} />\n                    <div className='location-icon'>\n                        <RoomIcon fontSize='large' color='primary' />\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nconst styles = {\n    progressRoot: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n        pointerEvents: 'none'\n    },\n    radioRoot: {\n        padding: 6\n    },\n    icon: {\n        color: 'transparent'\n    }\n};\n\nclass PollRadio extends React.Component {\n    render() {\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    classes={{ root: classes.radioRoot }}\n                    color='primary'\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\n                />\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool.isRequired,\n    beingChosen: PropTypes.bool.isRequired,\n    hidden: PropTypes.bool\n};\n\nexport default withStyles(styles)(PollRadio);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { 'poll-percentage-subtitle': !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                <Popover\n                    open={contextMenu && (canUnvote || canStopPoll)}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia } = this.props;\n        if (!venue) return null;\n\n        const { title, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{title}</div>\n                    </a>\n                    <div className='venue-subtitle'>{address}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport emojiRegex from 'emoji-regex';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport { getChatTitle } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction getFormattedText(text) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\n                let decodedUrl;\n                try {\n                    decodedUrl = decodeURI(entityText);\n                } catch (error) {\n                    console.error('uri: ' + entityText + '\\n' + error);\n                    decodedUrl = entityText;\n                }\n\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {decodedUrl}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = text.entities[i].type.url.startsWith('http')\n                    ? text.entities[i].type.url\n                    : 'http://' + text.entities[i].type.url;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n                result.push(\n                    <a key={text.entities[i].offset} onClick={stopPropagation} href={`#/im?p=${entityText}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeMentionName':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`#/im?p=u${text.entities[i].type.user_id}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://search_hashtag?hashtag=${hashtag}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message) {\n    if (!message) return null;\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    let date = new Date(message.date * 1000);\n\n    return dateFormat(date, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    const date = new Date(message.date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    // download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        ApplicationStore.setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.playlist = null;\n                this.message = null;\n                this.time = null;\n                this.videoStream = null;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) return;\n\n                this.message = message;\n\n                this.emit(update['@type'], update);\n\n                this.getPlaylist(chatId, messageId);\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openUser(userId, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenUser',\n        userId,\n        popup\n    });\n}\n\nexport function openChat(chatId, messageId = null, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId,\n        messageId,\n        popup\n    });\n}\n\nexport function highlightMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageHighlighted',\n        chatId,\n        messageId\n    });\n}\n\nexport function selectMessage(chatId, messageId, selected) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageSelected',\n        chatId,\n        messageId,\n        selected\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(user) {\n    if (!user) return null;\n\n    let title = getUserFullName(user);\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\n\nfunction isBlurredThumbnail(thumbnail) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\n}\n\nfunction getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nfunction getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nfunction getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nexport { getAudioTitle, getNeighborStickersFromSets, getStickers, isBlurredThumbnail };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon'>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.object,\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Sticker.css';\n\nclass Sticker extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, blur, sticker: source, style, openMedia, preview } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (!fitSize) return null;\n\n        const stickerStyle = {\n            width: fitSize.width,\n            height: fitSize.height,\n            ...style\n        };\n\n        return (\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\n                {src && !preview ? (\n                    <img className='sticker-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo':\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTileControl.css';\n\nclass UserTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId === update.userId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    //console.log('UserTileControl.onClientUpdateChatBlob user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    if (!update.photo) {\n                        //console.log('UserTileControl.onUpdateChatPhoto user_id=' + userId);\n                        this.forceUpdate();\n                    } else {\n                        const store = FileStore.getStore();\n                        loadChatContent(store, chat);\n                    }\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId && !chat.photo) {\n                    //console.log('UserTileControl.onUpdateChatTitle user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, onSelect } = this.props;\n        let { user } = this.props;\n        if (!userId && !user) return null;\n\n        user = UserStore.get(userId) || user;\n        if (!user) return null;\n\n        const { profile_photo } = user;\n\n        const letters = getUserLetters(user);\n        const blob = profile_photo && profile_photo.small ? FileStore.getBlob(profile_photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return src ? (\n            <img className={className} src={src} draggable={false} alt='' onClick={this.handleSelect} />\n        ) : (\n            <div className={className} onClick={this.handleSelect}>\n                <span className='tile-text'>{letters}</span>\n            </div>\n        );\n    }\n}\n\nUserTileControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    user: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nexport default UserTileControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.stickerSet = null;\n        this.hint = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n        const photoSize = getSize(photo.sizes, size);\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\n\n        this.state = {\n            photoSize: photoSize,\n            thumbnail: thumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize } = this.state;\n        const { fileId } = update;\n\n        if (!photoSize) return;\n\n        if (photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, showProgress, style } = this.props;\n        const { thumbnail, photoSize } = this.state;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        return (\n            <div className='photo' style={photoStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='photo-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(user);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {thumbnailSrc ? (\n                    <img className={className} src={thumbnailSrc} draggable={false} alt='' />\n                ) : (\n                    <div className={classes.background} />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={style} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-image'\n                            src={src}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            style={style}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { file, prevFile } = this.state;\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, file_name } = document;\n        const file = document.document;\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={<InsertDriveFileIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\nimport InsertDriveFileIcon from './Document';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={title}>\n                            {title}\n                        </a>\n                    </div>\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    audio: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const file = thumbnail ? thumbnail.photo : null;\n        const blob = file ? FileStore.getBlob(file.id) || file.blob : null;\n        const src = FileStore.getBlobUrl(blob);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        return (\n            <div className='video' style={style} onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\n                    style={style}\n                    src={src}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId);\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport {\n    MUTED_VALUE_MAX,\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\n    MUTED_VALUE_MIN\n} from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\n                    chat.type['@type'] === 'chatTypeSupergroup'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (\n                    chat.type['@type'] === 'chatTypePrivate' ||\n                    chat.type['@type'] === 'chatTypeSecret'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === isMuted) {\n            return;\n        }\n\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.poll = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Dialog/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Slider from '@material-ui/lab/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nconst styles = {\n    slider: {\n        maxWidth: 216\n    },\n    track: {\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\n    },\n    thumbWrapper: {\n        transition: 'transform 0ms linear 0ms'\n    },\n    thumb: {\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\n    }\n};\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                value: this.getValue(update.currentTime, update.duration || duration, active)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value: this.getValue(active ? currentTime : 0, duration, true)\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className={classes.slider}\n                    classes={{\n                        track: classes.track,\n                        thumbWrapper: classes.thumbWrapper,\n                        thumb: classes.thumb\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(VoiceNoteSlider);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport FileProgress from '../../Viewer/FileProgress';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\n        const { playing } = this.state;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        //const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={null}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './ChatStatus.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    },\n    icon: {\n        background: 'transparent',\n        width: '100%',\n        height: '100%',\n        boxSizing: 'border-box'\n    },\n    iconIndicator: {\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        background: '#80d066'\n    }\n});\n\nclass ChatStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId: userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({\n            online: isUserOnline(user)\n        });\n    };\n\n    render() {\n        const { classes, size, borderSize, className } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\n                <div className={classes.icon} style={{ padding: borderSize }}>\n                    <div className={classes.iconIndicator} />\n                </div>\n            </div>\n        );\n    }\n}\n\nChatStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nChatStatus.defaultProps = {\n    size: 12,\n    borderSize: 2\n};\n\nexport default withStyles(styles)(ChatStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, getChatUserId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTileControl.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {}\n};\n\nclass ChatTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className={className} onClick={this.handleSelect}>\n                    <div className='tile-saved-messages'>\n                        <BookmarkBorderIcon />\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const blob = photo && photo.small ? FileStore.getBlob(photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {src ? (\n                    <img className={className} src={src} draggable={false} alt='' />\n                ) : (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus\n                        classes={{\n                            root: classes.statusRoot,\n                            icon: classes.statusIcon,\n                            iconIndicator: classes.iconIndicator\n                        }}\n                        chatId={chatId}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTileControl.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTileControl.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTileControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from './UserTileControl';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n        if (!onSelect) return;\n\n        onSelect(user);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTileControl userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from 'mdi-material-ui/CheckDecagram';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitleControl.css';\n\nconst styles = theme => ({\n    icon: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass DialogTitleControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && (\n                    <CheckDecagramIcon\n                        className={classNames(classes.icon, classes.verifiedIcon, 'dialog-title-icon')}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDialogTitleControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitleControl.defaultProps = {\n    showSavedMessages: true\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(DialogTitleControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatusControl.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogStatusControl from './DialogStatusControl';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        onSelect(chat);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTileControl chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatusControl chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '../ColumnMiddle/MainMenuButton';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        console.log('chatDetailsListRef', this.chatDetailsListRef);\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        console.log(\n            `[ChatDetails] componentDidUpdate before chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        console.log(\n            `[ChatDetails] componentDidUpdate after chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        ApplicationStore.setProfileMediaViewerContent({ chatId: chatId });\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleSelectUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {!isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    <Divider />\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chat => {\n        const { popup } = this.props;\n\n        openChat(chat.id);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTileControl chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitleControl chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTileControl chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTileControl from './ChatTileControl';\nimport UserTileControl from './UserTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTileControl userId={sender_user_id} />\n            ) : (\n                <ChatTileControl chatId={chatId} />\n            );\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitleControl chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta-date', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local,\n                global: null,\n                messages: null\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            if (text.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: text\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    const globalLatinPromise = TdLibController.send({\n                        '@type': 'searchPublicChats',\n                        query: latinText\n                    });\n                    globalPromises.push(globalLatinPromise);\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global: global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContentControl.css';\n\nclass DialogContentControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContentControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatUnreadMessageIcon,\n    isChatMuted,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogBadgeControl.css';\n\nconst styles = theme => ({\n    dialogBadge: {\n        background: theme.palette.primary.main\n    },\n    dialogBadgeMuted: {\n        background: theme.palette.type === 'dark' ? theme.palette.text.disabled : '#d8d8d8'\n    }\n});\n\nclass DialogBadgeControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { classes, chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const unreadMessageIcon = getChatUnreadMessageIcon(chat);\n        const unreadCount = getChatUnreadCount(chat);\n        const unreadMentionCount = getChatUnreadMentionCount(chat);\n        const showUnreadCount = unreadCount > 1 || (unreadCount === 1 && unreadMentionCount < 1);\n        const showDraftChat = showChatDraft(chat.id);\n\n        return (\n            <>\n                {unreadMessageIcon && !showDraftChat && <i className='dialog-badge-unread' />}\n                {unreadMentionCount && (\n                    <div className={classNames('dialog-badge', classes.dialogBadge)}>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount ? (\n                    <div\n                        className={classNames(\n                            { [classes.dialogBadgeMuted]: isChatMuted(chat) },\n                            'dialog-badge',\n                            classes.dialogBadge\n                        )}>\n                        <span className='dialog-badge-text'>{unreadCount}</span>\n                    </div>\n                ) : chat.is_pinned && !unreadMessageIcon ? (\n                    <i className='dialog-badge-pinned' />\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogBadgeControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMetaControl.css';\n\nclass DialogMetaControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.removeListener('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        const date = getLastMessageDate(chat);\n\n        return <>{date && <div className='dialog-meta-date'>{date}</div>}</>;\n    }\n}\nexport default DialogMetaControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogContentControl from './DialogContentControl';\nimport DialogBadgeControl from './DialogBadgeControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogMetaControl from './DialogMetaControl';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogControl.css';\n\nconst styles = theme => ({\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    iconIndicator: {\n        background: '#80d066'\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    dialogActive: {\n        color: '#fff', //theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '& $verifiedIcon': {\n            color: '#fff'\n        },\n        '& $statusRoot': {\n            background: theme.palette.primary.main\n        },\n        '& $iconIndicator': {\n            background: '#ffffff'\n        }\n    },\n    dialog: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main + '22',\n            '& $statusRoot': {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            },\n            '& $statusIcon': {\n                background: theme.palette.primary.main + '22'\n            }\n        }\n    }\n});\n\nclass DialogControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat: chat\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.hidden !== this.props.hidden) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = () => {\n        openChat(this.props.chatId);\n    };\n\n    render() {\n        const { classes, chatId, showSavedMessages, hidden } = this.props;\n\n        if (hidden) return null;\n\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const chat = ChatStore.get(chatId);\n        const { is_verified } = chat;\n\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(\n                    isSelected ? classes.dialogActive : classes.dialog,\n                    isSelected ? 'dialog-active' : 'dialog'\n                )}\n                onMouseDown={this.handleSelect}>\n                <div className='dialog-wrapper'>\n                    <ChatTileControl\n                        chatId={chatId}\n                        showSavedMessages={showSavedMessages}\n                        showOnline\n                        classes={{\n                            statusRoot: classes.statusRoot,\n                            statusIcon: classes.statusIcon,\n                            iconIndicator: classes.iconIndicator\n                        }}\n                    />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            <DialogMetaControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContentControl chatId={chatId} />\n                            <DialogBadgeControl chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogControl.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withStyles(styles, { withTheme: true })(DialogControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport DialogControl from '../Tile/DialogControl';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport { loadChatsContent } from '../../Utils/File';\nimport { itemsInView, orderCompare, throttle } from '../../Utils/Common';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            chats: [],\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chats !== this.state.chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        const { scrollTop } = snapshot;\n\n        list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.removeListener('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        if (update.inProgress) {\n            this.hiddenChats.set(update.chatId, update.chatId);\n        } else {\n            this.hiddenChats.delete(update.chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state } = update;\n\n        this.setState({ authorizationState: authorization_state }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    onUpdateConnectionState = update => {\n        const newConnectionState = update.state;\n        const { connectionState } = this.state;\n\n        this.setState({ connectionState: newConnectionState });\n\n        const updatingCompleted =\n            connectionState &&\n            connectionState['@type'] === 'connectionStateUpdating' &&\n            newConnectionState['@type'] !== 'connectionStateUpdating';\n        if (!updatingCompleted) return;\n\n        const hasSkippedUpdates = ChatStore.skippedUpdates.length > 0;\n        if (!hasSkippedUpdates) return;\n\n        ChatStore.skippedUpdates = [];\n        this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (authorizationState && authorizationState['@type'] === 'authorizationStateReady') {\n            await FileStore.initDB(() => this.onLoadNext());\n        }\n    };\n\n    onUpdateChatOrder = update => {\n        // NOTE: updateChatOrder is primary used to delete chats with order=0\n        // In all other cases use updateChatLastMessage\n\n        if (update.order !== '0') return;\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) {\n            return;\n        }\n\n        // unselect deleted chat\n        if (update.chat_id === ApplicationStore.getChatId()) {\n            TdLibController.setChatId(0);\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n\n        let chatIds = [];\n        for (let i = 0; i < this.state.chats.length; i++) {\n            let chat = ChatStore.get(this.state.chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds);\n    };\n\n    onUpdate = update => {\n        const { chat_id, order } = update;\n        if (order === '0') return;\n        const chat = ChatStore.get(chat_id);\n        if (!chat || chat.order === '0') {\n            return;\n        }\n\n        const { chats } = this.state;\n\n        let newChatIds = [];\n        if (chats.length > 0) {\n            const existingChat = chats.find(x => x === chat_id);\n            if (!existingChat) {\n                const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                if (orderCompare(minChatOrder, chat.order) === 1) {\n                    return;\n                }\n                newChatIds.push(chat.id);\n            }\n        }\n\n        // get last chat.order values\n        let chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list && list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            this.onLoadNext();\n        }\n    };\n\n    onLoadNext = async (replace = false) => {\n        const { chats } = this.state;\n\n        if (this.loading) return;\n\n        let offsetOrder = '9223372036854775807'; // 2^63\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n        });\n\n        //TODO: replace result with one-way data flow\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        } else {\n            this.appendChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        }\n    };\n\n    loadChatContents(chats) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats);\n    }\n\n    appendChats(chats, callback) {\n        if (chats.length === 0) return;\n\n        this.setState({ chats: this.state.chats.concat(chats) }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats: chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current;\n        list.scrollTop = 0;\n    }\n\n    render() {\n        const { chats } = this.state;\n\n        const dialogs = chats.map(x => <DialogControl key={x} chatId={x} hidden={this.hiddenChats.has(x)} />);\n\n        /*<Scrollbars*/\n        /*ref={this.listRef}*/\n        /*onScroll={this.handleScroll}*/\n        /*autoHide*/\n        /*autoHideTimeout={500}*/\n        /*autoHideDuration={300}>*/\n        /*{chats}*/\n        /*</Scrollbars>*/\n\n        return (\n            <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n                {dialogs}\n            </div>\n        );\n    }\n}\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        return (\n            <div className='day-meta'>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id, true);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTileControl from '../Tile/UserTileControl';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getDate,\n    getDateHint,\n    getEmojiMatches,\n    getText,\n    getMedia,\n    getUnread,\n    getWebPage,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTileControl userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTileControl chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-without-avatar': !showTitle\n        });\n\n        const meta = (\n            <div className='message-meta'>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='message-views-icon' />\n                        <span className='message-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a className='message-date' onClick={this.handleDateClick}>\n                    <span title={dateHint}>{date}</span>\n                </a>\n            </div>\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && <Reply chatId={chatId} messageId={reply_to_message_id} />}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div className='reply-content-subtitle'>{content}</div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className='service-message-content'>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        this.insertAfter(this.filterMessages(history), scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChat.id\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.NONE);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, scrollBehavior, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), scrollBehavior: scrollBehavior }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        this.updateItemsInView();\n\n        const list = this.listRef.current;\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.suppressHandleScroll) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScroll');\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScrollOnSelectChat');\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive } = this.state;\n\n        //console.log(`MessagesList.render clearHistory=${clearHistory}`, history);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n                  //prevShowDate = showDate;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Dialog/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Dialog/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTileControl from './UserTileControl';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(message);\n\n        const tileControl = userId ? (\n            <UserTileControl userId={userId} />\n        ) : (\n            <ChatTileControl chatId={chatId} />\n        );\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row message-meta'>\n                            <span className='message-date'>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        //console.log('mediaViewer file', file);\n        //console.log('mediaViewer thumbnail', thumbnail);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            ApplicationStore.setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        ApplicationStore.setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTileControl chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row message-meta'>\n                                <span className='message-date'>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        ApplicationStore.setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Dialog/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.unread_count > 0) {\n                this.dialogDetailsRef.current.scrollToStart();\n            } else {\n                this.dialogDetailsRef.current.scrollToBottom();\n            }\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}