{"version":3,"sources":["../node_modules/copy-to-clipboard/index.js","../node_modules/toggle-selection/index.js","Utils/Language.js","Components/Tile/ForwardTargetChat.js","Components/Dialog/ForwardDialog.js"],"names":["deselectCurrent","__webpack_require__","defaultMessage","module","exports","text","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","selectNode","addRange","execCommand","Error","err","console","error","warn","window","clipboardData","setData","copyKey","test","navigator","userAgent","replace","format","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","type","forEach","focus","d","__webpack_exports__","getCyrillicInput","getLatinInput","cyrillicInput","input","length","Map","output","has","get","latinInput","ForwardTargetChat","_this$props","this","props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","react_default","a","className","classNames","forward-target-chat-selected","onClick","ChatTileControl","showSavedMessages","border","markSelected","markUnselected","React","Component","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","ForwardDialog","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loadContent","asyncToGenerator","regenerator_default","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","store","wrap","_context","prev","next","getPublicMessageLink","TdLibController","send","@type","offset_order","offset_chat_id","limit","user_id","UserStore","getMyId","force","Promise","map","x","catch","e","sent","slicedToArray","setState","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","result","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","state","link","key","concat","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","getInnerText","messageRef","current","targetChats","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","id","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","borderStyle","withTranslation","withSnackbar"],"mappings":"2FAEA,IAAAA,EAAsBC,EAAQ,KAE9BC,EAAA,mCAmFAC,EAAAC,QA5EA,SAAAC,EAAAC,GACA,IAAAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAAA,EAEAP,IACAA,EAAA,IAGAC,EAAAD,EAAAC,QAAA,EAEA,IAwBA,GAvBAE,EAAAT,IACAU,EAAAI,SAAAC,cACAJ,EAAAG,SAAAE,gBACAJ,EAAAE,SAAAG,cAAA,SACAC,YAAAb,EAEAO,EAAAO,MAAAC,IAAA,QAEAR,EAAAO,MAAAE,SAAA,QACAT,EAAAO,MAAAG,IAAA,EACAV,EAAAO,MAAAI,KAAA,mBAEAX,EAAAO,MAAAK,WAAA,MAEAZ,EAAAO,MAAAM,iBAAA,OACAb,EAAAO,MAAAO,cAAA,OACAd,EAAAO,MAAAQ,aAAA,OACAf,EAAAO,MAAAS,WAAA,OACAd,SAAAe,KAAAC,YAAAlB,GACAF,EAAAqB,WAAAnB,GACAD,EAAAqB,SAAAtB,IACAI,SAAAmB,YAAA,QAGA,UAAAC,MAAA,iCAGArB,GAAA,EACG,MAAAsB,GACH5B,GAAA6B,QAAAC,MAAA,qCAAAF,GACA5B,GAAA6B,QAAAE,KAAA,4BAEA,IACAC,OAAAC,cAAAC,QAAA,OAAApC,GACAQ,GAAA,EACK,MAAAsB,GACL5B,GAAA6B,QAAAC,MAAA,uCAAAF,GACA5B,GAAA6B,QAAAC,MAAA,0BACA7B,EA3DA,SAAAA,GACA,IAAAkC,GAAA,YAAAC,KAAAC,UAAAC,WAAA,sBACA,OAAArC,EAAAsC,QAAA,gBAAsCJ,GAyDtCK,CAAA,YAAAzC,IAAAE,QAAAN,GACAqC,OAAAS,OAAAxC,EAAAH,IAEG,QACHM,IACA,mBAAAA,EAAAsC,YACAtC,EAAAsC,YAAAvC,GAEAC,EAAAuC,mBAIAtC,GACAE,SAAAe,KAAAsB,YAAAvC,GAGAH,IAGA,OAAAI,sBCpFAV,EAAAC,QAAA,WACA,IAAAO,EAAAG,SAAAE,eAEA,IAAAL,EAAAyC,WACA,oBAMA,IAHA,IAAAC,EAAAvC,SAAAwC,cACAC,EAAA,GAEAC,EAAA,EAAiBA,EAAA7C,EAAAyC,WAA0BI,IAC3CD,EAAAE,KAAA9C,EAAA+C,WAAAF,IAGA,OAAAH,EAAAM,QAAAC,eAEA,YACA,eACAP,EAAAQ,OACA,MAEA,QACAR,EAAA,KAKA,OADA1C,EAAAuC,kBACA,WACA,UAAAvC,EAAAmD,MAAAnD,EAAAuC,kBAEAvC,EAAAyC,YACAG,EAAAQ,QAAA,SAAArD,GACAC,EAAAqB,SAAAtB,KAIA2C,KAAAW,4CCpCA/D,EAAAgE,EAAAC,EAAA,sBAAAC,IAAAlE,EAAAgE,EAAAC,EAAA,sBAAAE,IAOA,IAAIC,EAAgB,KAwCpB,SAASF,EAAiBG,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1BF,EAAgBA,GAzjB,EAAI,EAAGA,EAAIc,EAAMC,OAAQf,IAAK,CACnC,IAAIa,EAAcK,IAAIJ,EAAMd,IAGxB,OAAO,KAFPiB,GAAUJ,EAAcM,IAAIL,EAAMd,IAM1C,MAAkB,KAAXiB,EAAgB,KAAOA,EAGlC,IAAIG,EAAa,KAwCjB,SAASR,EAAcE,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1BK,EAAaA,GAzjB,EAAI,EAAGA,EAAIc,EAAMC,OAAQf,IAAK,CACnC,IAAIoB,EAAWF,IAAIJ,EAAMd,IAGrB,OAAO,KAFPiB,GAAUG,EAAWD,IAAIL,EAAMd,IAMvC,MAAkB,KAAXiB,EAAgB,KAAOA,kYC3F5BI,2LACO,IAAAC,EAC2CC,KAAKC,MAA7CC,EADHH,EACGG,QAASC,EADZJ,EACYI,OAAQC,EADpBL,EACoBK,SAAUC,EAD9BN,EAC8BM,SAE7BC,EAAaC,YAAkBJ,GAAQ,GAE7C,OACIK,EAAAC,EAAAvE,cAAA,OACIwE,UAAWC,IAAW,sBAAuB,CAAEC,+BAAgCR,IAC/ES,QAASR,GACTG,EAAAC,EAAAvE,cAAA,OAAKwE,UAAU,4BACXF,EAAAC,EAAAvE,cAAA,OAAKwE,UAAU,oCACXF,EAAAC,EAAAvE,cAAC4E,EAAA,EAAD,CAAiBX,OAAQA,EAAQY,mBAAiB,KAErDX,GAAYI,EAAAC,EAAAvE,cAAA,OAAKwE,UAAWC,IAAW,gCAAiCT,EAAQc,UACjFR,EAAAC,EAAAvE,cAAA,OACIwE,UAAWC,IACP,2BACAP,EAAWF,EAAQe,aAAef,EAAQgB,kBAGlDV,EAAAC,EAAAvE,cAAA,OAAKwE,UAAU,mCAEnBF,EAAAC,EAAAvE,cAAA,OAAKwE,UAAU,6BAA6BJ,WAvB5Ba,IAAMC,YAmCvBC,MAjDA,SAAAC,GAAK,MAAK,CACrBN,OAAQ,CACJO,YAAaD,EAAME,QAAQC,QAAQC,MAEvCT,aAAc,CACVU,UAAW,oBAAsBL,EAAME,QAAQC,QAAQC,KACvDV,OAAQ,aAAeM,EAAME,QAAQI,WAAWC,OAEpDX,eAAgB,CACZS,UAAW,iBAAmBL,EAAME,QAAQC,QAAQC,KACpDV,OAAQ,2BAuCkB,CAAEc,WAAW,GAAhCT,CAAwCvB,+ECVjDiC,sBACF,SAAAA,EAAY9B,GAAO,IAAA+B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjC,KAAA+B,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAjC,KAAAiC,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAArC,KAAMC,KAmBVqC,YApBmBL,OAAAM,EAAA,EAAAN,CAAAO,EAAA/B,EAAA5E,KAoBL,SAAA4G,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAA/B,EAAAyC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVrB,EAAKsB,uBAECZ,EAAW,GACXC,EAAkBY,IAAgBC,KAAK,CACzCC,QAAS,WACTC,aAAc,sBACdC,eAAgB,EAChBC,MAAO,MAEXlB,EAAShE,KAAKiE,GAERC,EAAuBW,IAAgBC,KAAK,CAC9CC,QAAS,oBACTI,QAASC,IAAUC,UACnBC,OAAO,IAEXtB,EAAShE,KAAKkE,GAjBJO,EAAAE,KAAA,EAmB2BY,QAAQ5H,IAAIqG,EAASwB,IAAI,SAAAC,GAAC,OAAIA,EAAEC,MAAM,SAAAC,GAAC,OAAI,UAnBtE,OAAAxB,EAAAM,EAAAmB,KAAAxB,EAAAb,OAAAsC,EAAA,EAAAtC,CAAAY,EAAA,GAmBHE,EAnBGD,EAAA,GAmBIE,EAnBJF,EAAA,GAqBVd,EAAKwC,SAAS,CACVC,QAAS1B,EAAM2B,SACf1B,cAAeA,IAGbC,EAAQ0B,IAAUC,WACxBC,YAAiB5B,EAAOF,EAAM2B,UA3BpB,yBAAAvB,EAAA2B,SAAArC,MApBKT,EAkDnBsB,qBAlDmBrB,OAAAM,EAAA,EAAAN,CAAAO,EAAA/B,EAAA5E,KAkDI,SAAAkJ,IAAA,IAAAhF,EAAAI,EAAA6E,EAAAC,EAAA,OAAAzC,EAAA/B,EAAAyC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UAAAtD,EACYiC,EAAK/B,MAA5BE,EADWJ,EACXI,OAAQ6E,EADGjF,EACHiF,WACX7E,EAFc,CAAA+E,EAAA7B,KAAA,eAAA6B,EAAAC,OAAA,oBAGdH,EAHc,CAAAE,EAAA7B,KAAA,eAAA6B,EAAAC,OAAA,sBAIfH,EAAWxF,OAAS,GAJL,CAAA0F,EAAA7B,KAAA,eAAA6B,EAAAC,OAAA,oBAKdC,YAAajF,GALC,CAAA+E,EAAA7B,KAAA,eAAA6B,EAAAC,OAAA,oBAMdE,YAAgBlF,GANF,CAAA+E,EAAA7B,KAAA,gBAAA6B,EAAAC,OAAA,yBAAAD,EAAA7B,KAAA,GAQEE,IAAgBC,KAAK,CACtCC,QAAS,uBACT6B,QAASnF,EACToF,WAAYP,EAAW,GACvBQ,WAAW,IAZI,QAQbP,EARaC,EAAAZ,KAenBtC,EAAKwC,SAAS,CACViB,kBAAmBR,IAhBJ,yBAAAC,EAAAJ,SAAAC,MAlDJ/C,EAsEnB0D,YAAc,WACVnC,IAAgBoC,aAAa,CACzBlC,QAAS,sBACTmC,KAAM,QAzEK5D,EA6EnB6D,eAAiB,WAAM,IACXC,EAAM9D,EAAK/B,MAAX6F,EACAL,EAAsBzD,EAAK+D,MAA3BN,kBAER,GAAKA,GACAA,EAAkBO,KAAvB,CAEA,IAAMC,EAAG,aAAAC,OAAgBT,EAAkBO,MACrCvK,EAAUqK,EAAE,cAGlBK,IAAKV,EAAkBO,MAEvBhE,EAAKoE,sBAAsBH,EAAKxK,EAJjB,QAtFAuG,EA6FnBoE,sBAAwB,SAACH,EAAKxK,EAAS4K,GACnC,GAAKJ,EAAL,CAD8C,IAAAK,EAGTtE,EAAK/B,MAAlCsG,EAHsCD,EAGtCC,gBAAiBrG,EAHqBoG,EAGrBpG,QACzB,GAAKqG,EAAL,CAIIC,IAAiBC,mBAAmBR,EAAKS,IAAqC,IAAsBL,IAEpGE,EAAgB9K,EAAS,CACrBkL,iBAAkBD,IAClBL,OAAQ,CACJ7F,EAAAC,EAAAvE,cAAC0K,EAAAnG,EAAD,CACIwF,IAAI,QACJY,aAAW,QACXC,MAAM,UACNpG,UAAWR,EAAQ6G,MACnBlG,QAAS,kBAAM2F,IAAiBQ,sBAAsBf,KACtDzF,EAAAC,EAAAvE,cAAC+K,EAAAxG,EAAD,aAhHDuB,EAuHnBkF,oBAAsB,SAAC/G,EAAQ6E,GAC3B,GAA0B,IAAtBA,EAAWxF,OAAc,OAAO,KAEpC,IAAM/D,EAAU0L,IAAavH,IAAIO,EAAQ6E,EAAW,IACpD,IAAKvJ,EAAS,OAAO,KAJqB,IAMlC2L,EAA8B3L,EAA9B2L,iBAAkBC,EAAY5L,EAAZ4L,QAC1B,IAAKD,GAAyC,2BAArBC,EAAQ,SAAuC,KAC5DC,EAAUD,EAAVC,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DC,EAAUD,EAAVC,MACR,GAAIA,GAASA,EAAM/H,OACf,OAAO+H,EAAMA,EAAM/H,OAAS,GAIpC,OAAO,MAxIQwC,EA2InBwF,WAAa,WACTxF,EAAK0D,cADU,IAAA+B,EAGiCzF,EAAK/B,MAA7CE,EAHOsH,EAGPtH,OAAQ6E,EAHDyC,EAGCzC,WAAY0C,EAHbD,EAGaC,UAAW1B,EAHxByB,EAGwBzB,KACvC,GAAK7F,GAAW6E,GAAeA,GAAe0C,GAAc1B,EAA5D,CAEA,IAAM1K,EAAO0G,EAAK2F,aAAa3F,EAAK4F,WAAWC,SAE/C7F,EAAK8F,YAAY9I,QAAQ,SAAA+I,GACrB,GAAI/B,EAyCA,OAxCI1K,GACAiI,IAAgBC,KAAK,CACjBC,QAAS,cACT6B,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB3E,QAAS,mBACTnI,KAAM,CACFmI,QAAS,gBACTnI,KAAMA,EACN+M,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,UAKzBhF,IAAgBC,KAAK,CACjBC,QAAS,cACT6B,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB3E,QAAS,mBACTnI,KAAM,CACFmI,QAAS,gBACTnI,KAAM0K,EACNqC,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,KAOzB,IAAMC,EAAOd,GAAa1F,EAAKkF,oBAAoB/G,EAAQ6E,GAC3D,GAAIwD,EAAJ,CAAU,IACEC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,OAAQpB,EAAUkB,EAAVlB,MAEvB/D,IAAgBC,KAAK,CACjBC,QAAS,cACT6B,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB3E,QAAS,oBACT6D,MAAO,CACH7D,QAAS,cACTkF,GAAIrB,EAAMqB,IAEdC,UAAW,KACXC,uBAAwB,GACxBJ,MAAOA,EACPC,OAAQA,EACRI,QAAS,CACLrF,QAAS,gBACTnI,KAAMA,EACN+M,SAAU,MAEdU,IAAK,UAObzN,GACAiI,IAAgBC,KAAK,CACjBC,QAAS,cACT6B,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB3E,QAAS,mBACTnI,KAAM,CACFmI,QAAS,gBACTnI,KAAMA,EACN+M,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,KAKzBhF,IAAgBC,KAAK,CACjBC,QAAS,kBACT6B,QAASyC,EACTiB,aAAc7I,EACd8I,YAAajE,EACbiD,uBAAuB,EACvBC,iBAAiB,EACjBgB,UAAU,QA7PHlH,EAkQnBmH,sBAAwB,SAAAhJ,GAChB6B,EAAK8F,YAAYnI,IAAIQ,GACrB6B,EAAK8F,YAAYsB,OAAOjJ,GAExB6B,EAAK8F,YAAYuB,IAAIlJ,EAAQA,GAGjC9C,QAAQiM,IAAItH,EAAK8F,aAEjB9F,EAAKuH,eA3QUvH,EA8QnB2F,aAAe,SAAA6B,GACX,IAAMC,EAAYD,EAAIC,UAChBC,EAAYF,EAAIE,UAMtB,OAJID,GAA2B,OAAdA,GAAsBC,IAA4B,SAAdA,GAAsC,oBAAdA,KACzEF,EAAIE,UAAY,IAGbD,GAtRQzH,EAyRnB2H,oBAAsB,SAAAC,GACI,KAAlBA,EAAMC,SACND,EAAME,kBA3RK9H,EA+RnB+H,kBAAoB,WAAM,IAAAC,EACahI,EAAK+D,MAAhCtB,EADcuF,EACdvF,QAASzB,EADKgH,EACLhH,cAEX0G,EAAY1H,EAAKiI,UAAUpC,QAAQ6B,WACrCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC1H,EAAKiI,UAAUpC,QAAQ6B,UAAY,IAGvC,IAAMD,EAAYzH,EAAK2F,aAAa3F,EAAKiI,UAAUpC,SAASqC,OAC5D,GAAKT,EAAL,CAKA,IAAMU,EAAY9K,YAAcoK,GAC1BW,EAAehL,YAAiBqK,GAMhCY,GAJcrH,EACd,CAACA,EAAc2F,IAAIzC,OAAOzB,EAAQ6F,OAAO,SAAAnG,GAAC,OAAIA,IAAMnB,EAAc2F,MAAK2B,OAAO,SAAAnG,GAAC,OAAIoG,YAAgBpG,KACnGM,GAE4B6F,OAC9B,SAAAnG,GAAC,OACGnC,EAAKwI,cAAcrG,EAAGsF,IACrBU,GAAanI,EAAKwI,cAAcrG,EAAGgG,IACnCC,GAAgBpI,EAAKwI,cAAcrG,EAAGiG,KAG/CpI,EAAKwC,SAAS,CAAEiG,WAAYhB,EAAWY,cAAeA,SAlBlDrI,EAAKwC,SAAS,CAAEiG,WAAY,KAAMJ,cAAe,MAzStCrI,EA8TnB0I,kBAAoB,SAAAd,GAChB,IAAMe,EAAYf,EAAMnM,cAAcmN,QAAQ,cAC1CD,IACAf,EAAME,iBACN/N,SAASmB,YAAY,cAAc,EAAOyN,KAlU/B3I,EAsUnB6I,mBAAqB,WACjB,IAAMnB,EAAY1H,EAAK4F,WAAWC,QAAQ6B,WACtCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC1H,EAAK4F,WAAWC,QAAQ6B,UAAY,KAzUzB1H,EA6UnB8I,mBAAqB,SAAAlB,GACjB,IAAMe,EAAYf,EAAMnM,cAAcmN,QAAQ,cAC1CD,IACAf,EAAME,iBACN/N,SAASmB,YAAY,cAAc,EAAOyN,KAjV/B3I,EAqVnBwI,cAAgB,SAACrK,EAAQsK,GAAe,IAC5B3E,EAAM9D,EAAK/B,MAAX6F,EACA9C,EAAkBhB,EAAK+D,MAAvB/C,cAER,GAAIA,GAAiB7C,IAAW6C,EAAc2F,KAE2B,KADvDoC,YAAa5K,GAAQ,EAAM2F,IAAM,IACrCkF,oBAAoBC,QAAQR,EAAWS,eAC7C,OAAO,EAKf,OAAsE,KADvDH,YAAa5K,GAAQ,EAAO2F,IAAM,IACtCkF,oBAAoBC,QAAQR,EAAWS,iBAKsB,KADvD7F,YAAgBlF,IAAW,IAC/B6K,oBAAoBC,QAAQR,EAAWS,gBAtWrClJ,EA6WnBmJ,eAAiB,WACbC,WAAW,WACHpJ,EAAKiI,UAAUpC,SACC7F,EAAKiI,UAAUpC,QAEvB5I,SAEb,MAjXH+C,EAAK+D,MAAQ,CACTtB,QAAS,GACTzB,cAAe,MAGnBhB,EAAKiI,UAAY9I,IAAMkK,YACvBrJ,EAAK4F,WAAazG,IAAMkK,YAExBrJ,EAAK8F,YAAc,IAAIrI,IAXRuC,mFAefhC,KAAKsC,cAELtC,KAAKmL,kDAsWA,IAAAG,EAAAtL,KAAAuL,EACkBvL,KAAKC,MAApBC,EADHqL,EACGrL,QAAS4F,EADZyF,EACYzF,EADZ0F,EAE4ExL,KAAK+F,MAA9EtB,EAFH+G,EAEG/G,QAASgG,EAFZe,EAEYf,WAAYJ,EAFxBmB,EAEwBnB,cAAerH,EAFvCwI,EAEuCxI,cAAeyC,EAFtD+F,EAEsD/F,kBAMrD1C,GAJcC,EACd,CAACA,EAAc2F,IAAIzC,OAAOzB,EAAQ6F,OAAO,SAAAnG,GAAC,OAAIA,IAAMnB,EAAc2F,MAAK2B,OAAO,SAAAnG,GAAC,OAAIoG,YAAgBpG,KACnGM,GAEoBP,IAAI,SAAAC,GAAC,OAC3B3D,EAAAC,EAAAvE,cAACuP,EAAD,CACIxF,IAAK9B,EACLhE,OAAQgE,EACR/D,SAAUkL,EAAKxD,YAAYnI,IAAIwE,GAC/B9D,SAAU,kBAAMiL,EAAKnC,sBAAsBhF,QAI7CuH,GAAcrB,GAAiB,IAAInG,IAAI,SAAAC,GAAC,OAC1C3D,EAAAC,EAAAvE,cAACuP,EAAD,CACIxF,IAAK9B,EACLhE,OAAQgE,EACR/D,SAAUkL,EAAKxD,YAAYnI,IAAIwE,GAC/B9D,SAAU,kBAAMiL,EAAKnC,sBAAsBhF,QAInD,OACI3D,EAAAC,EAAAvE,cAACyP,EAAAlL,EAAD,CACImL,MAAI,EACJC,QAAS7L,KAAK0F,YACdoG,kBAAgB,uBAChBC,mBAAiB,6BACjBrL,UAAWR,EAAQ8L,QACnBxL,EAAAC,EAAAvE,cAAC+P,EAAAxL,EAAD,CAAakI,GAAG,wBAAwB7C,EAAE,gBAC1CtF,EAAAC,EAAAvE,cAAA,OACIgQ,IAAKlM,KAAKiK,UACVtB,GAAG,wBACHwD,iBAAe,EACfC,gCAA8B,EAC9BC,YAAavG,EAAE,UACfwG,UAAWtM,KAAK2J,oBAChB4C,QAASvM,KAAK+J,kBACdyC,QAASxM,KAAK0K,oBAElBlK,EAAAC,EAAAvE,cAAA,OAAKwE,UAAWC,IAAWT,EAAQqB,YAAa,2BAC5Cf,EAAAC,EAAAvE,cAAA,OAAKwE,UAAU,uBAAuBqC,GACrC0H,GACGjK,EAAAC,EAAAvE,cAAA,OAAKwE,UAAWC,IAAWT,EAAQuM,WAAY,+BAAgCf,IAGtF1L,KAAK8H,YAAYU,KAAO,GACrBhI,EAAAC,EAAAvE,cAAA,OACIgQ,IAAKlM,KAAK4H,WACVe,GAAG,yBACHwD,iBAAe,EACfC,gCAA8B,EAC9BC,YAAavG,EAAE,gBACfyG,QAASvM,KAAK6K,mBACd2B,QAASxM,KAAK8K,qBAGtBtK,EAAAC,EAAAvE,cAACwQ,EAAAjM,EAAD,KACID,EAAAC,EAAAvE,cAACyQ,EAAAlM,EAAD,CAAQI,QAASb,KAAK0F,YAAaoB,MAAM,WACpChB,EAAE,WAEN9F,KAAK8H,YAAYU,KAAO,GACrBhI,EAAAC,EAAAvE,cAACyQ,EAAAlM,EAAD,CAAQI,QAASb,KAAKwH,WAAYV,MAAM,UAAU8F,WAAS,GACtD9G,EAAE,UAGT9F,KAAK8H,YAAYU,MAAQ/C,GACvBjF,EAAAC,EAAAvE,cAACyQ,EAAAlM,EAAD,CAAQI,QAASb,KAAK6F,eAAgBiB,MAAM,WACvChB,EAAE,sBAhcH3E,IAAMC,YA+c5ByL,EAAUC,YACZzL,IAleW,SAAAC,GAAK,OAAAW,OAAA8K,EAAA,EAAA9K,CAAA,CAChB8E,MAAO,CACHiG,QAAS1L,EAAM2L,QAAQC,KAAO,GAElClB,OAAQ,CACJlF,MAAOxF,EAAME,QAAQlG,KAAKmG,SAE9B0L,cAAe,CACXH,QAAS,EACTI,QAAS,OACT9Q,SAAU,YAEdmQ,WAAY,CACR7K,WAAYN,EAAME,QAAQI,WAAWC,QAEtCwL,YAAY/L,KAmdI,CAAEQ,WAAW,IAChCwL,cACAC,gBAGWV,YAAQ9K","file":"static/js/13.5a1b35ed.chunk.js","sourcesContent":["'use strict';\n\nvar deselectCurrent = require('toggle-selection');\n\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n      message,\n      reselectPrevious,\n      range,\n      selection,\n      mark,\n      success = false;\n\n  if (!options) {\n    options = {};\n  }\n\n  debug = options.debug || false;\n\n  try {\n    reselectPrevious = deselectCurrent();\n    range = document.createRange();\n    selection = document.getSelection();\n    mark = document.createElement('span');\n    mark.textContent = text; // reset user styles for span element\n\n    mark.style.all = 'unset'; // prevents scrolling to the end of the page\n\n    mark.style.position = 'fixed';\n    mark.style.top = 0;\n    mark.style.clip = 'rect(0, 0, 0, 0)'; // used to preserve spaces and line breaks\n\n    mark.style.whiteSpace = 'pre'; // do not inherit user-select (it may be `none`)\n\n    mark.style.webkitUserSelect = 'text';\n    mark.style.MozUserSelect = 'text';\n    mark.style.msUserSelect = 'text';\n    mark.style.userSelect = 'text';\n    document.body.appendChild(mark);\n    range.selectNode(mark);\n    selection.addRange(range);\n    var successful = document.execCommand('copy');\n\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n\n    try {\n      window.clipboardData.setData('text', text);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;","module.exports = function () {\n  var selection = document.getSelection();\n\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n\n  var active = document.activeElement;\n  var ranges = [];\n\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) {\n    // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' && selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function (range) {\n        selection.addRange(range);\n      });\n    }\n\n    active && active.focus();\n  };\n};","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n"],"sourceRoot":""}