{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Actions/Message.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Stores/FilterStore.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/Broom.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Assets/Icons/PlaylistEdit.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Media/WebPage.js","Components/Message/MessageContext.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/AlertDialog.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","window","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","ForwardTargetChat","chatId","selected","onSelect","t","shortTitle","getChatShortTitle","ChatTile","withTranslation","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","sprintf","args","postProcess","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","user_id","UserStore","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","store","getStore","loadChatsContent","messageIds","isSupergroup","getChatUsername","chat_id","message_id","for_album","for_comment","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","size","height","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","forceUpdate","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","ChatStore","showSavedMessages","isVerified","isChatVerified","title","defaultProps","DialogStatus","onUpdateUserStatus","chat","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","big","showTitle","isSavedMessages","isMeChat","ChatDetailsHeader","backButton","info","isPrivateChat","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","audio","url","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","nextContext","openMedia","minithumbnail","miniSrc","data","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Boolean","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","substring","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFormattedText","getFirstLetter","entity","SharedVoiceNote","sender","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","overScanCount","SharedMediaContent","items","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","params","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","sender_user_id","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","User","userId","voice_note","ChatDetails","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","getChatUserId","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","unpinMessage","unpinAllMessages","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","dialog","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","showOnline","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","reset","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","load","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","_m","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","appendChats","newChats","Array","_chats","_c","ids","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","is_blocked","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","closePinned","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","canClearHistory","hasOnePinnedMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessageBorder","drawRect","radius","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","timingFunction","currentMessageId","currentPrevMessageId","clientData","getClientData","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","unpinned","prevMessage","prevContent","PlaylistEdit","prevPropsChatId","Header","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleSearchChat","localize","str","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canPinMessages","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","prevMessageIds","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","MessageContext","createContext","withMessage","MessageComponent","Consumer","via_bot_user_id","payload","game","game_short_name","short_name","show_alert","LStore","getString","showAlert","ok","showSnackbar","showOpenGameAlert","is_verified","showOpenUrlAlert","ask","tryTelegraph","forward_text","button_id","skip_confirm","showRequestUrlAlert","buttonId","in_current_chat","setText","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","Message","onClientUpdateMessageShake","getEmojiMatches","mouseDown","mouseOut","openReply","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","scrollBehavior","isServiceMessage","newState","scrollDownVisible","history","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","hasLastMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","disableEnforceFocus","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","formatString","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","AlertDialog","ClearHistoryDialog","handleRevokeChange","canBeDeletedForAllUsers","DeleteMessagesDialog","formatPluralString","LeaveChatDialog","getDeleteDialogText","OpenGameDialog","OpenUrlDialog","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","bot_user_id","request_write_access","text1","entities1","option1","option2","text2","entities2","PinMessageDialog","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","UnpinMessageDialog","Actions","pinMessage","openUrlAlert","openGameAlert","requestUrlAlert","onClientUpdateOpenGameAlert","handleOpenGameContinue","onClientUpdateOpenUrlAlert","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","onClientUpdateAlert","onClientUpdateUnpinMessage","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","handleClearHistoryContinue","request","handleLeaveContinue","getLeaveChatNotification","isChatMember","isCreator","handleDeleteMessagesContinue","clientUpdateType","persist","disableNotification","onlyForSelf","disable_notification","only_for_self","pinMessageAction","unpinMessageAction","handleAlertContinue","sharedPreferences","existing","addHash","encodeURIComponent","chars","Uint8Array","crypto","getRandomValues","curHash","openGameInBrowser","handleRequestUrlContinue","allow_write_access","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"kJAOMA,E,WACF,WAAYC,GAAyB,IAAD,OAAdC,EAAc,uDAAJ,GAAI,yBASpCC,MAAQ,WACJ,EAAKC,SAAU,EACf,EAAKC,GAAKC,sBAAsB,EAAKC,gBAXL,KAcpCA,cAAgB,SAAAC,GAAc,IAClBC,EAAwB,EAAxBA,UAAWR,EAAa,EAAbA,SAEnB,EAAKQ,UAAYD,EACjB,EAAKE,QAAUD,EAAYR,EAC3B,EAAKU,KAAKH,IAnBsB,KAsBpCG,KAAO,SAAAC,GAAQ,IACHR,EAA0C,EAA1CA,QAASH,EAAiC,EAAjCA,SAAUQ,EAAuB,EAAvBA,UAAWP,EAAY,EAAZA,QAMtC,GAJIU,EAAMH,EAAYR,GAAYC,EAAQW,MAAM,SAAAC,GAAC,OAAIA,EAAEC,KAAOD,EAAEE,SAC5D,EAAKZ,SAAU,IAGfA,EAAJ,CAEA,IAAMa,EAAOC,KAAKC,IAAIP,EAAMH,EAAWR,GACjCmB,EAAiB,IAAbnB,EAAiB,EAAMgB,EAAOhB,EAClCoB,EAAMrB,EAASsB,QAAQF,GAE7BlB,EAAQqB,QAAQ,SAAAT,GAAM,IACVU,EAAmBV,EAAnBU,KAAMT,EAAaD,EAAbC,GAAIU,EAASX,EAATW,KAClBX,EAAEE,KAAOQ,GAAQT,EAAKS,GAAQH,EAC9BI,EAAKX,EAAEE,QAGX,EAAKX,GAAKC,sBAAsB,EAAKK,QAzCL,KA4CpCe,KAAO,WACH,EAAKtB,SAAU,EACfuB,qBAAqB,EAAKtB,KA7C1BuB,KAAK1B,QAAUA,EACf0B,KAAK3B,SAAWA,E,yDAGL4B,GACX,OAAOX,KAAKY,IAAKD,EAAIX,KAAKa,GAAM,O,KA4CzB/B,O,6GC5CTgC,G,kNACFC,MAAQ,CACJC,MAAO,KACPC,iBAAkB,M,EAiCtBC,kBAAoB,SAAAC,GAAY,IAEpBhC,EADkBgC,EAAlBA,QACAhC,GAERiC,IAAgBC,KAAK,CACjB,QAAS,mBACTF,QAAS,CAAE,QAAS,cAAehC,QACpCmC,KAAK,SAAAC,GACA,EAAKC,MAAML,UAAYA,GACvB,EAAKM,SAAS,CACVT,MAAOO,EAAOG,OAAOC,KAAK,U,kFA1BvBC,EAAWC,EAAWC,GAAW,IACxCX,EAAYT,KAAKc,MAAjBL,QAEJA,GAAWA,IAAYS,EAAUT,SACjCT,KAAKQ,kBAAkBC,K,0CAIV,IACTA,EAAYT,KAAKc,MAAjBL,QAEJA,GACAT,KAAKQ,kBAAkBC,K,+BAoBrB,IACEA,EAAYT,KAAKc,MAAjBL,QACAH,EAAUN,KAAKK,MAAfC,MAER,OAAKG,EAGD,yBAAKY,UAAU,mBACX,yBAAKA,UAAU,yBAAyBf,GACxC,kBAAC,IAAD,CACIG,QAASA,EACTa,YAAaC,KACbC,OAAQC,IAAkBC,WARjB,Q,gDAlDOZ,EAAOT,GAAQ,IACnCI,EAAYK,EAAZL,QACAF,EAAqBF,EAArBE,iBAER,OAAIE,GAAWF,EACJ,CACHA,iBAAkBE,EAClBH,MAAO,MAIR,S,GAjBcqB,IAAMC,YA2EpBxB,O,wGCzFf,4BASeyB,gBACX,0BAAMC,EAAE,2nCACR,U,szFCgBWC,MAff,SAAmCC,GAAmB,IAC5CC,EAD2C,iLAGzC,OACI,kBAAC,IAAD,CAAkBC,SAAUC,KACxB,kBAACH,EAAqBhC,KAAKc,YALM,GACda,IAAMC,WAWzC,OAFAK,EAAqBG,YAArB,oCAAgEC,YAAeL,GAA/E,KAEOC,G,sHCw3BIK,G,mBA52BX,WAAYxB,GAAQ,IAAD,8BACf,4CAAMA,KA4CVyB,4BAA8B,SAAAC,GAAW,IAC7BC,EAAUD,EAAVC,MACHA,GAEL,EAAKC,UAAUD,IAjDA,EAoDnBC,UAAY,SAAAD,GAAU,IACVE,EAAkDF,EAAlDE,IAAKC,EAA6CH,EAA7CG,KAAMC,EAAuCJ,EAAvCI,OAAQC,EAA+BL,EAA/BK,QAASC,EAAsBN,EAAtBM,QAASC,EAAaP,EAAbO,SAErCC,EAAU,EAAKnC,MAAfmC,MACR,GAAKA,EAAL,CAEA,IAAIC,GAAU,EACd,OAAQN,GACJ,IAAK,SACIC,GAAWC,GAAYC,GAAYC,IACpC,EAAKG,cACLD,GAAU,GAEd,MAEJ,IAAK,YACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKI,WAAWH,EAAMI,YAAcC,KACpCJ,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKI,WAAWH,EAAMI,YAAcE,KACpCL,GAAU,GAEd,MAEJ,IAAK,aACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKI,WAAWH,EAAMI,YAAcC,KACpCJ,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKI,WAAWH,EAAMI,YAAcE,KACpCL,GAAU,GAEd,MAEJ,IAAK,UACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKQ,aAAaP,EAAMQ,OAASC,MACjCR,GAAU,GAEd,MAEJ,IAAK,YACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKQ,aAAaP,EAAMQ,OAASC,MACjCR,GAAU,GAEd,MAEJ,IAAK,QACL,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKW,cACLT,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKY,aACLV,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKa,mBACLX,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IAEpCE,GAAU,GAEd,MAEJ,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACD,IAAKL,IAAWC,IAAYC,IAAYC,EAAU,CAC9C,IAAMc,EAAW,IAAIC,OAAOpB,EAAIqB,QAAQ,QAAS,KAAO,GACxD,EAAKC,mBAAmBH,GACxBZ,GAAU,EAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKI,WAAW,GAChBF,GAAU,GAEd,MAEJ,IAAK,MACIL,GAAWC,GAAYC,GAAYC,IACpC,EAAKI,WAAWH,EAAM5E,SAAW,GACjC6E,GAAU,GAEd,MAEJ,IAAK,QACIL,GAAWC,GAAYC,IAAWC,IACnC,EAAKkB,mBAAmBjB,EAAMkB,aAAeC,KAC7ClB,GAAU,GAEd,MAEJ,IAAK,SACIL,GAAWC,GAAYC,IAAWC,IACnC,EAAKkB,mBAAmBjB,EAAMkB,aAAeC,KAC7ClB,GAAU,GAMlBA,IACAT,EAAM4B,kBACN5B,EAAM6B,oBA3LK,EAyMnBd,aAAe,SAAAC,GAAW,IACdR,EAAU,EAAKnC,MAAfmC,MACHA,IAELQ,EAASc,YAAMd,EAAQe,KAAmBC,MAE1CxB,EAAMQ,OAASA,EACf,EAAKiB,cAAL,UAAsBpF,KAAKqF,MAAqB,IAAf1B,EAAMQ,QAAvC,QAhNe,EAmNnBS,mBAAqB,SAAAU,GAAS,IAClB3B,EAAU,EAAKnC,MAAfmC,MACHA,IAEL2B,EAAOL,YAAMK,EAAMC,IAAyBC,KAE5C7B,EAAMkB,aAAeS,EACrB,EAAKF,cAAL,UAAsBE,EAAtB,QA1Ne,EA6NnBX,mBAAqB,SAAAH,GAAa,IACtBb,EAAU,EAAKnC,MAAfmC,MACHA,GAEL,EAAKG,WAAWU,EAAWb,EAAM5E,WAjOlB,EAoOnB+E,WAAa,SAAAC,GAAgB,IACjBJ,EAAU,EAAKnC,MAAfmC,MACHA,IAELI,EAAckB,YAAMlB,EAAa,EAAGJ,EAAM5E,UAAY,GAEtD4E,EAAMI,YAAcA,EACpB,EAAKtC,SAAS,CAAEsC,kBA3OD,EA8OnB0B,mBAAqB,WACjB,IAEMC,GAFoBC,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,2BACzEH,SAASI,eAAe,sBAGjD,EAAKtE,SAAS,CACViE,gBApPW,EAwPnBM,eAAiB,WAGb,KAD0BL,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,yBAClG,CAEA,IAAMG,EAASN,SAASI,eAAe,cAEjCG,EAAUC,SAASF,EAAOG,MAAMC,KAAM,IACtCC,EAASH,SAASF,EAAOG,MAAMG,IAAK,IARvB,EAUG,EAAKC,kBAAkBN,EAASI,GAAQ,GAAtDD,EAVW,EAUXA,KAAME,EAVK,EAULA,IAEVL,IAAYG,GAAQC,IAAWC,IAGnCN,EAAOG,MAAMC,KAAOA,EAAO,KAC3BJ,EAAOG,MAAMG,IAAMA,EAAM,QAxQV,EAkUnBE,iBAAmB,SAAAtD,GACWA,EAAlBuD,QAnUO,EAuUnBC,qBAAuB,SAAAxD,GAAU,IACbQ,EAAUR,EAAlBuD,OACR,GAAK/C,EAAL,CAF4B,IAIpBI,EAAgB,EAAKhD,MAArBgD,YACAhF,EAA+B4E,EAA/B5E,SAAUoF,EAAqBR,EAArBQ,OAAQyC,EAAajD,EAAbiD,SAG1B,EAAKnF,SAAS,CACV1C,WAEAoF,SACA0C,SAAS,EACTD,YACD,WACM7C,IAELJ,EAAMI,YAAcA,OAxVT,EA4VnB+C,cAAgB,SAAA3D,GAAU,IACNQ,EAAUR,EAAlBuD,OAER,EAAKjF,SAAS,CACVoF,SAAS,GACV,WACMlD,IAEY,EAAK5C,MAAdgG,KAEJpD,EAAMoD,OAENpD,EAAMqD,YAxWC,EA6WnBC,WAAa,SAAA9D,GAAU,IACX+D,EAAW,EAAK1F,MAAhB0F,OAER,EAAKzF,SAAS,CACVsF,MAAM,EACNI,QAAQ,IAGZ/F,IAAgBgG,aAAa,CAAE,QAAS,gCACxCF,GAAUA,EAAO/D,IAtXF,EAyXnBkE,YAAc,SAAAlE,GAAU,IACZmE,EAAY,EAAK9F,MAAjB8F,QAER,EAAK7F,SAAS,CACVsF,MAAM,EACNI,QAAQ,IAGZ/F,IAAgBgG,aAAa,CAAE,QAAS,iCACxCE,GAAWA,EAAQnE,IAlYJ,EAqYnBoE,YAAc,SAAApE,GAAU,IACZqE,EAAY,EAAKhG,MAAjBgG,QAERpG,IAAgBgG,aAAa,CAAE,QAAS,iCACxCI,GAAWA,EAAQrE,GAJA,IAMXQ,EAAU,EAAKnC,MAAfmC,MACR,EAAK8D,eAAe,CAAC1D,YAAa,EAAGhF,SAAU4E,EAAM5E,YA5YtC,EA+YnB2I,iBAAmB,SAAAvE,GAAU,IACTQ,EAAUR,EAAlBuD,OACR,GAAK/C,EAAL,CAFwB,IAIhBgE,EAAW,EAAKnG,MAAhBmG,OACA5D,EAA4CJ,EAA5CI,YAAahF,EAA+B4E,EAA/B5E,SAAUoF,EAAqBR,EAArBQ,OAAQyC,EAAajD,EAAbiD,SAEvC,EAAKnF,SAAS,CACV1C,WACAgF,cACAI,SACAyC,aAGJxF,IAAgBgG,aAAa,CACzB,QAAS,oCACTO,SACA5D,cACAhF,WACAoF,SACAyC,aAGJ,EAAKa,eAAe,CAAE1D,cAAahF,eAtapB,EAyanB6I,mBAAqB,SAAAzE,GAAU,IACnB0E,EAAmB,EAAKrG,MAAxBqG,eAEQlE,EAAUR,EAAlBuD,OACR,GAAK/C,EAAL,CAJ0B,IAMlBQ,EAAWR,EAAXQ,OAER,EAAK1C,SAAS,CACV0C,WAGJ/C,IAAgBgG,aAAa,CAAE,QAAU,0BAA2BjD,WACpE0D,GAAkBA,EAAe1E,KAtblB,EAybnB2E,eAAiB,SAAA3E,GAAU,IACPQ,EAAUR,EAAlBuD,OACR,GAAK/C,EAAL,CAFsB,IAIdgE,EAAW,EAAKnG,MAAhBmG,OAEAf,EAAajD,EAAbiD,SAER,EAAKnF,SAAS,CACVmF,aAGJxF,IAAgBgG,aAAa,CACzB,QAAS,kCACTO,SACAf,eAxcW,EA4cnBmB,cAAgB,WACZ,EAAKtG,SAAS,CAAEoF,SAAS,KA7cV,EAgdnBxC,YAAc,WACV,EAAK2D,mBAjdU,EAodnBA,gBAAkB,WAAO,IACbrE,EAAU,EAAKnC,MAAfmC,MACHA,IAEe,EAAK5C,MAAjB8F,QAEJ,EAAKpF,SAAS,CACVsF,MAAO,EAAKhG,MAAMgG,KAClBI,QAAQ,IAGRxD,EAAMsE,OACNtE,EAAMoD,OAENpD,EAAMqD,UAleC,EAuenBkB,sBAAwB,SAAA/E,GACpB,IAAMgF,EAAMxC,SAASI,eAAe,sBAChCoC,GAAKA,EAAIC,QAEb,EAAKC,eAAgB,EACrBlF,EAAM6B,iBAE0B,IAA5B7B,EAAMmF,YAAYC,QAEtB,EAAKC,QAAUrF,EAAMmF,YAAYE,QACjC,EAAKC,QAAUtF,EAAMmF,YAAYG,QAEjC9C,SAAS+C,YAAc,EAAKC,gBAC5BhD,SAASiD,UAAY,EAAKC,cAE1B,EAAKpH,SAAS,CACVqH,gBAAgB,MAvfL,EA2fnBD,cAAgB,SAAA1F,GACZA,EAAM6B,iBAENW,SAAS+C,YAAc,KACvB/C,SAASiD,UAAY,KAErB,EAAKnH,SAAS,CACVqH,gBAAgB,KAlgBL,EA8iBnBH,gBAAkB,SAAAxF,GACdA,EAAM6B,iBADiB,MAGD,EAAKwB,kBAAkBrD,EAAM4F,QAAU,EAAKP,QAASrF,EAAM6F,QAAU,EAAKP,SAAS,GAAjGpC,EAHe,EAGfA,KAAME,EAHS,EAGTA,IAERN,EAASN,SAASI,eAAe,cACvCE,EAAOG,MAAMC,KAAOA,EAAO,KAC3BJ,EAAOG,MAAMG,IAAMA,EAAM,MArjBV,EAwjBnB0C,gBAAkB,SAAA9F,GACdA,EAAM4B,kBADiB,IAGfpB,EAAU,EAAKnC,MAAfmC,MACHA,GAEL,EAAKlC,SAAS,CACVyH,UAAU,EACVC,aAAcxF,EAAMI,eAhkBT,EAokBnBqF,aAAe,SAACjG,EAAOkG,GAAW,IACtB1F,EAAU,EAAKnC,MAAfmC,MACHA,GAEL,EAAKlC,SAAS,CACV0H,aAAcE,EAAQ1F,EAAM5E,YAzkBjB,EA6kBnBuK,sBAAwB,WAAO,IAAD,EACS,EAAKvI,MAAhCmI,EADkB,EAClBA,SAAUC,EADQ,EACRA,aACbD,GAEL,EAAKzH,SAAS,CACVyH,UAAU,EACVnF,YAAaoF,EACbA,aAAc,GACf,WAAO,IACExF,EAAU,EAAKnC,MAAfmC,MACHA,GAEDc,OAAO8E,SAASJ,KAChBxF,EAAMI,YAAcoF,MA1lBb,EA+lBnBK,iBAAmB,WACf,EAAKC,YAAa,GAhmBH,EAmmBnBC,iBAAmB,WACf,EAAKD,YAAa,GApmBH,EAumBnBE,gBAAkB,SAAAxG,GACd,EAAKkF,eAAgB,EACF,EAAKtH,MAAhBoG,QAGJ,EAAK1F,SAAS,CACV0F,QAAQ,IAIhByC,aAAa,EAAKC,kBAClB,EAAKA,iBAAmBC,WAAW,WAC3B,EAAKL,YACJ,EAAK1I,MAAMgG,MACX,EAAKhG,MAAMhC,UAEhB,EAAK0C,SAAS,CACV0F,QAAQ,KAEb,MA1nBY,EA6nBnBtD,YAAc,WACVzC,IAAgBgG,aAAa,CACzB,QAAS,+BACT2C,UAAW,QAhoBA,EAooBnBC,yBAA2B,SAAC7G,EAAOgB,GAC3BA,IAAW,EAAKpD,MAAMoD,QAE1B,EAAK1C,SAAS,CACV0C,UACD,WAAO,IACER,EAAU,EAAKnC,MAAfmC,MACHA,IAELA,EAAMQ,OAASA,MA7oBJ,EAipBnB8F,kCAAoC,SAAA9G,GACd,EAAK3B,MAAfmC,OAGRgC,SAASuE,cAAcC,QArpBR,EAwpBnB7F,WAAa,WAAO,IACRX,EAAU,EAAKnC,MAAfmC,MACHA,IAEgB,IAAjBA,EAAMQ,OACNR,EAAMQ,OAAS,EAAKiG,YAAc,IAElC,EAAKA,WAAazG,EAAMQ,OACxBR,EAAMQ,OAAS,KAhqBJ,EAoqBnBI,iBAAmB,SAAApB,GACfA,GAASA,EAAM4B,kBAEf,IAAMsF,EAAO1E,SAASI,eAAe,sBAChCsE,IAEqB1E,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,wBAE9F,EAAKwE,iBAIT,EAAKC,kBAAkBF,KAhrBR,EA+rBnBG,eAAiB,WAAO,IACZ7C,EAAW,EAAKnG,MAAhBmG,OAEF8C,EAAOC,IAAUC,IAAIhD,GAC3B,GAAK8C,EAAL,CAJmB,IAMXG,EAAWH,EAAXG,OACR,GAAKA,EAAL,CAPmB,IASXC,EAAcD,EAAdC,UACR,GAAKA,EAEL,OAAOC,IAAYN,eAAeK,MA3sBnB,EA8sBnBpD,eAAiB,SAAA1D,GAAgB,IACrB4D,EAAW,EAAKnG,MAAhBmG,OAEF8C,EAAOC,IAAUC,IAAIhD,GAC3B,GAAK8C,EAAL,CAJ4B,IAMpBG,EAAWH,EAAXG,OACR,GAAKA,EAAL,CAP4B,IASpBC,EAAcD,EAAdC,UACHA,IAEA9G,EAGD+G,IAAYrD,eAAeoD,EAAW9G,GAFtC+G,IAAYC,iBAAiBF,OA3tBlB,EAiuBnBG,uBAAyB,SAAA7H,GACrBA,EAAM6B,iBACN7B,EAAM4B,mBAnuBS,EAsuBnBkG,gBAAkB,SAAA9H,GACdA,EAAM4B,kBADiB,eAGfsD,eAGR,EAAKL,mBA5uBU,EA+uBnBkD,kBAAoB,SAAA/H,GAChBA,EAAM4B,kBADmB,eAGjBsD,eAGR,EAAK9D,iBAAiBpB,IArvBP,EAwvBnBgI,YAAc,WACVC,IAAgBC,IAAI,EAAKC,kBAzvBV,EA6vBnBC,WAAa,WACTH,IAAgBI,OAAO,EAAKF,kBA3vB5B,EAAKA,gBAAkB,IAAIG,IAAgB,EAAKrI,WAChD,EAAKrC,MAAQ,GAJE,E,iFA2BE,IACT4C,EAAUjD,KAAKc,MAAfmC,MACRjD,KAAKgL,cAAc/H,GACnBgI,OAAOC,iBAAiB,SAAUlL,KAAKsF,gBACvCL,SAASiG,iBAAiB,mBAAoBlL,KAAK+E,oBACnDqF,IAAYe,GAAG,4BAA6BnL,KAAKuC,+B,6CAG7B,IACZU,EAAUjD,KAAKc,MAAfmC,MACRjD,KAAKoL,iBAAiBnI,GACtBgI,OAAOI,oBAAoB,SAAUrL,KAAKsF,gBAC1CL,SAASoG,oBAAoB,mBAAoBrL,KAAK+E,oBACtDqF,IAAYkB,IAAI,4BAA6BtL,KAAKuC,6BAElDmI,IAAgBI,OAAO9K,KAAK4K,mB,oCAqJlBW,GAAO,IACTtE,EAAWjH,KAAKc,MAAhBmG,OAERvG,IAAgBgG,aAAa,CACzB,QAAS,wBACTO,SACAsE,W,yCAsEWrK,EAAWC,EAAWC,GAAW,IACxC6B,EAAUjD,KAAKc,MAAfmC,MAEJ/B,EAAU+B,QAAUA,IACpBjD,KAAKoL,iBAAiBlK,EAAU+B,OAChCjD,KAAKgL,cAAc/H,M,oCAIbA,GACV,GAAKA,EAAL,CAEA,IAAMuI,EAAYvG,SAASI,eAAe,cAHzB,EAIKrF,KAAK8F,kBAAkBsE,IAAYqB,UAAU9F,KAAMyE,IAAYqB,UAAU5F,KAAK,GAA5FF,EAJS,EAITA,KAAME,EAJG,EAIHA,IACd2F,EAAU9F,MAAMC,KAAOA,EAAO,KAC9B6F,EAAU9F,MAAMG,IAAMA,EAAM,KAEHZ,SAASI,eAAe,sBAChCqC,QAIjB,IAAMgE,EAAYzG,SAASI,eAAe,wBACrCqG,IAELzI,EAAM0I,iBAAmB3L,KAAKiG,qBAC9BhD,EAAM2I,aAAe5L,KAAK+F,iBAC1B9C,EAAM4I,UAAY7L,KAAKoG,cACvBnD,EAAM6I,OAAS9L,KAAKuG,WACpBtD,EAAM8I,QAAU/L,KAAK2G,YACrB1D,EAAM+I,QAAUhM,KAAK6G,YACrB5D,EAAMgJ,aAAejM,KAAKgH,iBAC1B/D,EAAMiJ,eAAiBlM,KAAKkH,mBAC5BjE,EAAMkJ,WAAanM,KAAKoH,eACxBnE,EAAMmJ,UAAYpM,KAAKqH,cAEvBqE,EAAUW,UAAY,GACtBX,EAAUY,YAAYrJ,O,uCAGTA,GACRA,IAELA,EAAM0I,iBAAmB,KACzB1I,EAAM2I,aAAe,KACrB3I,EAAM4I,UAAY,KAClB5I,EAAM6I,OAAS,KACf7I,EAAM8I,QAAU,KAChB9I,EAAM+I,QAAU,KAChB/I,EAAMgJ,aAAe,KACrBhJ,EAAMiJ,eAAiB,KACvBjJ,EAAMkJ,WAAa,KACnBlJ,EAAMmJ,UAAY,Q,wCAuMJzG,EAAME,GAAwB,IAAnB0G,IAAkB,yDACrChH,EAASN,SAASI,eAAe,cACjCmH,EAAcjH,EAASA,EAAOkH,YAAc,IAC5CC,EAAenH,EAASA,EAAOoH,aAAe,IAE/BC,EAAkB3H,SAAS4H,gBAAxCJ,YACcK,EAAmB7H,SAAS4H,gBAA1CF,aA+BR,OA7BIJ,GAAavM,KAAK+M,SAClBpH,EAAO,EACA4G,GAAavM,KAAKgN,UACzBrH,EAAOiH,EAAgBJ,GAKvB7G,GADAA,EAAOA,EAAOsH,IAA8B,EAAItH,GAClCiH,EAAgBJ,EAAcS,IAA8BL,EAAgBJ,EAAc7G,EACxGA,EAAOpB,YAAMoB,EAAM,EAAGiH,EAAgBJ,IAGtCD,GAAavM,KAAKkN,QAClBrH,EAAM,EACC0G,GAAavM,KAAKmN,WACzBtH,EAAMiH,EAAiBJ,GAGvB7G,GADAA,EAAMA,EAAMoH,IAA8B,EAAIpH,GAClCiH,EAAiBJ,EAAeO,IAA8BH,EAAiBJ,EAAe7G,EAC1GA,EAAMtB,YAAMsB,EAAK,EAAGiH,EAAiBJ,IAGzC1M,KAAK+M,SAAoB,IAATpH,EAChB3F,KAAKgN,UAAYrH,IAASiH,EAAgBJ,EAC1CxM,KAAKkN,QAAkB,IAARrH,EACf7F,KAAKmN,WAAatH,IAAQiH,EAAiBJ,EAE3CtC,IAAYqB,UAAY,CAAE9F,OAAME,OAEzB,CAAEF,OAAME,S,wCAwIDuH,GACd,IAAMC,EAASD,EAAQvD,mBAAqBuD,EAAQE,sBAAwBF,EAAQG,wBAEpFF,GAAUA,EAAOG,KAAKJ,K,uCAItB,IAAMC,EAASpI,SAAS2E,gBAAkB3E,SAASwI,qBAAuBxI,SAASyI,qBAEnFL,GAAUA,EAAOG,KAAKvI,Y,+BAqEhB,IACEgC,EAAWjH,KAAKc,MAAhBmG,OADH,EAE0HjH,KAAKK,MAA5H+H,EAFH,EAEGA,eAAgBI,EAFnB,EAEmBA,SAAUC,EAF7B,EAE6BA,aAAcpF,EAF3C,EAE2CA,YAAahF,EAFxD,EAEwDA,SAAUgI,EAFlE,EAEkEA,KAAMF,EAFxE,EAEwEA,QAASD,EAFjF,EAEiFA,SAAUO,EAF3F,EAE2FA,OAAQhD,EAFnG,EAEmGA,OAAQuB,EAF3G,EAE2GA,WAE1G3F,EAAOmJ,EAAWC,EAAepF,EACjCsF,EAAQtK,EAAW,EAAIgB,EAAOhB,EAAW,EACzCsP,EAAeC,IAAOC,gBAAgBxO,EAAM6G,GAC5C4H,EAAgBzP,EAAW,EAAIsP,EAAetP,EAAW,EAEzD0P,EAAaC,YAAkB1O,KAAK2O,MAAM5O,IAAS,GACnD6O,EAAiBF,YAAkB1O,KAAK2O,MAAM5P,IAAa,GAG3D8P,EAAoBlJ,SAASkJ,mBAAqBlJ,SAASmJ,sBAAwBnJ,SAASoJ,wBAElG,OACI,yBACI5P,GAAG,aACH4C,UAAWiN,IAAW,aAAc,CAAE,sBAAuBlG,EAAgB,wBAAyBpD,IACtGuJ,YAAavO,KAAKwH,sBAClBgH,YAAaxO,KAAKiJ,gBAClBwF,QAASzO,KAAKuK,gBACdmE,cAAe1O,KAAKwK,mBACpB,yBACI/L,GAAG,qBACH4C,UAAWiN,IAAW,CAAE,4BAA6B7H,IACrDkI,QAAS3O,KAAKyK,YACdmE,OAAQ5O,KAAK6K,WACbgE,SAAU,GACV,yBAAKpQ,GAAG,yBACR,kBAACqQ,EAAA,EAAD,CAAM7H,OAAQA,IAEd,4BAAQsH,YAAa,SAAAQ,GAAC,OAAIA,EAAE1K,mBAAmBhD,UAAWiN,IAAW,gBAAiB,sBAAuB,CAAE,sBAAuB7H,IAAWgI,QAASzO,KAAKmD,aAC3J,kBAAC6L,EAAA,EAAD,OAEJ,yBACI3N,UAAWiN,IAAW,eAAgB,CAAE,sBAAuB7H,IAC/DgI,QAAS,SAAAM,GAAC,OAAIA,EAAE1K,mBAChBkK,YAAa,SAAAQ,GAAC,OAAIA,EAAE1K,mBACpBqK,cAAe1O,KAAKsK,uBACpB2E,aAAcjP,KAAK8I,iBACnBoG,aAAclP,KAAKgJ,kBACnB,yBAAK3H,UAAU,iBACX,0BAAMA,UAAU,6BAA6BqE,MAAO,CAAEyJ,MAAuB,IAAhBrB,EAAsB,OACnF,kBAACsB,EAAA,EAAD,CACIzG,MAAOA,EACPpJ,IAAK,EACL8P,IAAK,EACLC,KAAM,KACNC,QAAS,CACL5F,KAAM,qBACN6F,KAAM,qBACNC,MAAO,sBACPC,MAAO,sBACPC,OAAQ,wBAEZC,SAAU5P,KAAK0I,aACfmH,kBAAmB7P,KAAK4I,sBACxB2F,YAAavO,KAAKuI,mBAG1B,yBAAKlH,UAAU,mBACX,4BAAQA,UAAU,gBAAgBoN,QAASzO,KAAK2D,aAC3C0C,EAAO,kBAACyJ,EAAA,EAAD,MAAe,kBAAC,IAAD,OAE3B,yBAAKzO,UAAU,eAAf,UACQ0M,EADR,cACwBG,IAExB,yBAAK7M,UAAU,iBACX,kBAAC+N,EAAA,EAAD,CACIzG,MAAOlF,EACPlE,IAAK,EACL8P,IAAK,EACLC,KAAM,KACNC,QAAS,CACL5F,KAAM,qBACN6F,KAAM,qBACNC,MAAO,sBACPC,MAAO,sBACPC,OAAQ,wBAEZC,SAAU5P,KAAKsJ,yBACfuG,kBAAmB7P,KAAKuJ,qCAGhC,4BAAQlI,UAAU,gBAAgBoN,QAASzO,KAAK4D,YAC3CgK,IAAOmC,cAActM,IAE1B,4BAAQpC,UAAU,gBAAgB2O,UAAW7B,EAAmBM,QAASzO,KAAK6D,kBAC1E,kBAACoM,EAAA,EAAD,SAOZ,kBAACC,EAAA,EAAD,CAAU/J,QAASA,S,gDA11BHrF,EAAOT,GAAQ,IACnC4C,EAAkEnC,EAAlEmC,MAAO5E,EAA2DyC,EAA3DzC,SAAUgF,EAAiDvC,EAAjDuC,YAAaI,EAAoC3C,EAApC2C,OAAQ4C,EAA4BvF,EAA5BuF,KAAMH,EAAsBpF,EAAtBoF,SAAUC,EAAYrF,EAAZqF,QAC9D,OAAI9F,EAAM8P,YAAclN,EACb,CACHkN,UAAWlN,EACX5E,WACAgF,cACAI,SACA4C,OACAH,WACAC,UACAqC,UAAU,EACV/B,QAAQ,EACRzB,YAAY,GAIb,S,GAzBSrD,IAAMC,Y,8ECpBxBwO,G,wLACQ,IAAD,EACqCpQ,KAAKc,MAAvCuP,EADH,EACGA,OAAQC,EADX,EACWA,SAAUC,EADrB,EACqBA,SAAUC,EAD/B,EAC+BA,EAE9BC,EAAaC,YAAkBL,GAAQ,EAAMG,GAEnD,OACI,yBACInP,UAAWiN,IAAW,sBAAuB,CAAE,+BAAgCgC,IAC/E7B,QAAS8B,GACT,yBAAKlP,UAAU,4BACX,yBAAKA,UAAU,oCACX,kBAACsP,EAAA,EAAD,CAAUN,OAAQA,KAErBC,GAAY,yBAAKjP,UAAU,kCAC5B,yBACIA,UAAWiN,IACP,2BACAgC,EAAW,oCAAsC,yCAGzD,yBAAKjP,UAAU,mCAEnB,yBAAKA,UAAU,6BAA6BoP,Q,GAvB5B9O,IAAMC,YAmCvBgP,gBAAkBR,GC3C1B,SAAeS,EAAtB,kC,2CAAO,WAAoBtF,GAApB,SAAAuF,EAAA,kEAEKC,UAAUC,UAFf,gCAGWD,UAAUC,UAAUC,UAAU1F,GAHzC,iCAIY,GAJZ,uDAOC2F,QAAQC,MAAM,sDAAd,MAPD,iCAUIC,EAAQ7F,IAVZ,wD,sBAaP,SAAS6F,EAAQ7F,GACb,IAAI6B,EACAiE,EACJ,IAqBI,IApBAjE,EAAUnI,SAASqM,cAAc,aACzBC,iBAAkB,EAC1BnE,EAAQoE,UAAW,EACnBpE,EAAQzE,MAAQ4C,EAChB6B,EAAQ1H,MAAM+L,IAAM,QACpBrE,EAAQ1H,MAAMgM,SAAW,QACzBtE,EAAQ1H,MAAMG,IAAM,EACpBuH,EAAQ1H,MAAMiM,KAAO,mBACrBvE,EAAQ1H,MAAMkM,WAAa,MAC3BxE,EAAQ1H,MAAMmM,iBAAmB,OACjCzE,EAAQ1H,MAAMoM,cAAgB,OAC9B1E,EAAQ1H,MAAMqM,aAAe,OAC7B3E,EAAQ1H,MAAMsM,WAAa,OAE3B/M,SAASgN,KAAK3F,YAAYc,GAE1BA,EAAQ1F,QACR0F,EAAQ8E,WAERb,EAAapM,SAASkN,YAAY,SAE9B,MAAM,IAAIC,MAEd,OAAO,EACT,SACElB,QAAQC,MAAM,uDAAwDE,GA1B1E,QA4BQjE,GACAnI,SAASgN,KAAKI,YAAYjF,GAIlC,OAAO,E,oBC/CJ,SAASkF,EAAQ9B,EAAG7N,GAAe,IAAD,uBAAN4P,EAAM,iCAANA,EAAM,kBACrC,OAAO/B,EAAE7N,EAAK,CAAE6P,YAAa,UAAWF,QAASC,IAGrD,IAAIE,EAAgB,KAwCpB,SAASC,EAAiBC,GACtB,IAAKA,EAAQ,OAAO,EADU,IAGtBhK,EAAUgK,EAAVhK,MACR,QAAKA,GAEkB,OAAhBA,EAAMA,MAGjB,SAASiK,GAAiBC,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1B,IAAMC,EAAgBC,IAAY/I,IAAI,oBAChCgJ,EAAkBD,IAAY/I,IAAI,8BAExC,KAD0ByI,EAAiBK,IAAkBL,EAAiBO,IACtD,OAAO,KAE/BR,EAAgBA,GAvyBV,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIP,EAAMC,OAAQM,IAAK,CACnC,IAAIX,EAAcY,IAAIR,EAAMO,IAGxB,OAAO,KAFPD,GAAUV,EAAcxI,IAAI4I,EAAMO,IAM1C,MAAkB,KAAXD,EAAgB,KAAOA,EAGlC,IAAIG,GAAa,KAwCjB,SAASC,GAAcV,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1BQ,GAAaA,IAznC,IAAIE,GAAWD,IAAIR,EAAMO,IAGrB,OAAO,KAFPD,GAAUG,GAAWrJ,IAAI4I,EAAMO,IAMvC,MAAkB,KAAXD,EAAgB,KAAOA,E,wCC5G5BK,I,mBACF,WAAY1S,GAAQ,IAAD,8BACf,4CAAMA,KAmBV2S,YApBmB,qBAoBL,0CAAA3C,EAAA,4DACV,EAAK4C,uBAECC,EAAW,GACXC,EAAkBlT,IAAgBC,KAAK,CACzC,QAAS,WACTkT,aAAc,sBACdC,eAAgB,EAChBC,MAAO,MAEXJ,EAASK,KAAKJ,GAERK,EAAuBvT,IAAgBC,KAAK,CAC9C,QAAS,oBACTuT,QAASC,KAAUC,UACnBC,OAAO,IAEXV,EAASK,KAAKC,GAjBJ,SAmB2BK,QAAQ7C,IAAIkC,EAASY,IAAI,SAAArV,GAAC,OAAIA,EAAEsV,MAAM,SAAAzF,GAAC,OAAI,UAnBtE,mCAmBH0F,EAnBG,KAmBIC,EAnBJ,KAqBV,EAAK3T,SAAS,CACV4T,QAASF,EAAMG,SACfF,cAAeA,IAGbG,EAAQ7K,IAAU8K,WACxBC,YAAiBF,EAAOJ,EAAMG,UA3BpB,0CApBK,EAkDnBlB,qBAlDmB,qBAkDI,kCAAA5C,EAAA,0DACY,EAAKhQ,MAA5BuP,EADW,EACXA,OAAQ2E,EADG,EACHA,WACX3E,EAFc,oDAGd2E,EAHc,sDAIfA,EAAWlC,OAAS,GAJL,oDAKdmC,aAAa5E,GALC,oDAMd6E,YAAgB7E,GANF,oEAQE3P,IAAgBC,KAAK,CACtC,QAAS,iBACTwU,QAAS9E,EACT+E,WAAYJ,EAAW,GACvBK,WAAW,EACXC,aAAa,IAbE,QAQbzU,EARa,OAgBnB,EAAKE,SAAS,CACVwU,kBAAmB1U,IAjBJ,0CAlDJ,EAuEnBsC,YAAc,WACVqS,aAAQ,OAxEO,EA2EnBC,eAAiB,WAAO,IACZjF,EAAM,EAAK1P,MAAX0P,EACA+E,EAAsB,EAAKlV,MAA3BkV,kBAEHA,GACAA,EAAkBG,OAEvB7E,EAAK0E,EAAkBG,MAEvB,EAAKC,sBAAsBnF,EAAE,iBApFd,EAuFnBmF,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK9U,MAAxC+U,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIzT,IAAI,QACJ0T,aAAW,QACXC,MAAM,UACNjV,UAAU,4BACVoN,QAAS,kBAAMqH,EAAcC,KAC7B,kBAAC/G,EAAA,EAAD,WApGG,EA0GnBuH,oBAAsB,SAAClG,EAAQ2E,GAC3B,GAA0B,IAAtBA,EAAWlC,OAAc,OAAO,KAEpC,IAAM8C,EAAUY,KAAavM,IAAIoG,EAAQ2E,EAAW,IACpD,IAAKY,EAAS,OAAO,KAJqB,IAMlCa,EAA8Bb,EAA9Ba,iBAAkBC,EAAYd,EAAZc,QAC1B,IAAKD,GAAyC,2BAArBC,EAAQ,SAAuC,CAAC,IAC7DC,EAAUD,EAAVC,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DC,EAAUD,EAAVC,MACR,GAAIA,GAASA,EAAM9D,OACf,OAAO8D,EAAMA,EAAM9D,OAAS,GAIpC,OAAO,MA3HQ,EA8HnB+D,WAAa,WACT,EAAK1T,cACL2T,eAFe,MAIqC,EAAKhW,MAAjDuP,EAJO,EAIPA,OAAQ2E,EAJD,EAICA,WAAY+B,EAJb,EAIaA,oBAC5B,GAAK1G,GAAW2E,GAAe+B,EAA/B,CAEA,IAAMxL,EAAO,EAAKyL,aAAa,EAAKC,WAAWC,SAE/C,EAAKC,YAAYxX,QAAQ,SAAAyX,GACrB,GAAIL,EAwCA,OAvCIxL,IACI,YAAawL,EACbA,EAAoBM,QAAU,CAC1B,QAAS,gBACT9L,OACA+L,SAAU,MAGd5W,IAAgBC,KAAK,CACjB,QAAS,cACTwU,QAASiC,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,mBACTpM,KAAM,CACF,QAAS,gBACTA,OACA+L,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,WAM7BnX,IAAgBC,KAAK,CACjB,QAAS,cACTwU,QAASiC,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuBZ,IAM/B,IAAMe,EAAO,EAAKvB,oBAAoBlG,EAAQ2E,GAC9C,GAAI8C,EAAJ,CAAW,IACC3I,EAAyB2I,EAAzB3I,MAAO4I,EAAkBD,EAAlBC,OAAQpB,EAAUmB,EAAVnB,MAEvBjW,IAAgBC,KAAK,CACjB,QAAS,cACTwU,QAASiC,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,oBACThB,MAAO,CACH,QAAS,cACTlY,GAAIkY,EAAMlY,IAEduZ,UAAW,KACXC,uBAAwB,GACxB9I,MAAOA,EACP4I,OAAQA,EACRV,QAAS,CACL,QAAS,gBACT9L,OACA+L,SAAU,MAEdY,IAAK,UAOb3M,GACA7K,IAAgBC,KAAK,CACjB,QAAS,cACTwU,QAASiC,EACTG,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,mBACTpM,KAAM,CACF,QAAS,gBACTA,OACA+L,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,KAKzBnX,IAAgBC,KAAK,CACjB,QAAS,kBACTwU,QAASiC,EACTe,aAAc9H,EACd+H,YAAapD,EACbwC,uBAAuB,EACvBC,iBAAiB,EACjBY,UAAU,QAhPH,EAqPnBC,sBAAwB,SAAAjI,GAChB,EAAK8G,YAAY9D,IAAIhD,GACrB,EAAK8G,YAAYoB,OAAOlI,GAExB,EAAK8G,YAAYqB,IAAInI,EAAQA,GAKjC,EAAKoI,eA9PU,EAiQnBzB,aAAe,SAAA5J,GAAY,IACff,EAAce,EAAdf,UAMR,MALkB,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MAEFe,EAAdsL,WAtQO,EA2QnBC,oBAAsB,SAAAlW,GACI,KAAlBA,EAAMmW,SACNnW,EAAM6B,kBA7QK,EAiRnBuU,kBAjRmB,qBAiRC,gDAAA/H,EAAA,0DACmB,EAAKzQ,MAAhCsU,EADQ,EACRA,QAASD,EADD,EACCA,cAEXtH,EAAU,EAAK0L,UAAU5B,QAHf,oDAOE,UADV7K,EAAce,EAAdf,YACkC,oBAAdA,IACxBe,EAAQf,UAAY,MAGlBqM,EAAY,EAAK1B,aAAa5J,GAAS2L,OAX7B,wBAaZ,EAAKhY,SAAS,CAAEiY,WAAY,KAAMC,cAAe,GAAIC,oBAAqB,KAb9D,kCAiBVC,EAAY5F,GAAcmF,GAC1BU,EAAexG,GAAiB8F,GAEhCW,EAAc3E,EACd,CAACA,EAAcjW,IAAI6a,OAAO3E,EAAQ4E,OAAO,SAAAra,GAAC,OAAIA,IAAMwV,EAAcjW,IAAM+a,YAAgBta,MACxFyV,EAEAsE,EAAgBI,EAAYE,OAC9B,SAAAra,GAAC,OACG,EAAKua,cAAcva,EAAGwZ,IACrBS,GAAa,EAAKM,cAAcva,EAAGia,IACnCC,GAAgB,EAAKK,cAAcva,EAAGka,KAG/C,EAAKrY,SAAS,CAAEiY,WAAYN,EAAWO,kBA/BvB,UAiCKvY,IAAgBC,KAAK,CACtC,QAAS,sBACT+Y,MAAOhB,EACP3E,MAAO,MApCK,WAiCVlT,EAjCU,OAuCZ,EAAKR,MAAM2Y,aAAeN,EAvCd,mDA2ChB,EAAK3X,SAAS,CACVmY,oBAAqBrY,EAAO+T,WA5ChB,0CAjRD,EAiUnB+E,kBAAoB,SAAAlX,GAChB,IAAMmX,EAAYnX,EAAMoX,cAAcC,QAAQ,cAC1CF,IACAnX,EAAM6B,iBACNW,SAASkN,YAAY,cAAc,EAAOyH,KArU/B,EAyUnBG,mBAAqB,WACjB,IAAM3M,EAAU,EAAK6J,WAAWC,QAChC,GAAK9J,EAAL,CAFuB,IAIff,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,QA/UT,EAmVnB2N,mBAAqB,SAAAvX,GACjB,IAAMmX,EAAYnX,EAAMoX,cAAcC,QAAQ,cAC1CF,IACAnX,EAAM6B,iBACNW,SAASkN,YAAY,cAAc,EAAOyH,KAvV/B,EA2VnBH,cAAgB,SAACpJ,EAAQ2I,GAAgB,IAC7BxI,EAAM,EAAK1P,MAAX0P,EACAkE,EAAkB,EAAKrU,MAAvBqU,cAER,GAAIA,GAAiBrE,IAAWqE,EAAcjW,KAE2B,KADvDwb,YAAa5J,GAAQ,EAAMG,IAAM,IACrC0J,oBAAoBC,QAAQnB,EAAWoB,eAC7C,OAAO,EAKf,OAAsE,KADvDH,YAAa5J,GAAQ,EAAOG,IAAM,IACtC0J,oBAAoBC,QAAQnB,EAAWoB,iBAKsB,KADvDlF,YAAgB7E,IAAW,IAC/B6J,oBAAoBC,QAAQnB,EAAWoB,gBA5WrC,EAmXnBC,eAAiB,WACbjR,WAAW,WACH,EAAK0P,UAAU5B,SACC,EAAK4B,UAAU5B,QAEvBxP,SAEb,MAvXH,EAAKrH,MAAQ,CACTsU,QAAS,GACTD,cAAe,MAGnB,EAAKoE,UAAYnX,IAAM2Y,YACvB,EAAKrD,WAAatV,IAAM2Y,YAExB,EAAKnD,YAAc,IAAIjE,IAXR,E,iFAeflT,KAAKyT,cAELzT,KAAKqa,mB,+BA4WC,IAAD,OACG7J,EAAMxQ,KAAKc,MAAX0P,EADH,EASDxQ,KAAKK,MANLsU,EAHC,EAGDA,QACAqE,EAJC,EAIDA,WACAC,EALC,EAKDA,cACAC,EANC,EAMDA,oBACAxE,EAPC,EAODA,cACAa,EARC,EAQDA,kBAOEd,GAJcC,EACd,CAACA,EAAcjW,IAAI6a,OAAO3E,EAAQ4E,OAAO,SAAAra,GAAC,OAAIA,IAAMwV,EAAcjW,IAAM+a,YAAgBta,MACxFyV,GAEoBJ,IAAI,SAAArV,GAAC,OAC3B,kBAAC,EAAD,CACIyD,IAAKzD,EACLmR,OAAQnR,EACRoR,SAAU,EAAK6G,YAAY9D,IAAInU,GAC/BqR,SAAU,kBAAM,EAAK+H,sBAAsBpZ,QAI7Cqb,EAAmB,IAAIrH,KAAK+F,GAAiB,IAAI1E,IAAI,SAAArV,GAAC,MAAI,CAACA,EAAGA,MAC9Dsb,GAAmBtB,GAAuB,IAAIK,OAChD,SAAAra,GAAC,OAAIA,IAAMwV,EAAcjW,IAAM+a,YAAgBta,KAAOqb,EAAiBlH,IAAInU,KAGzEub,GAAcxB,GAAiB,IAChCK,OAAOkB,GACPjG,IAAI,SAAArV,GAAC,OACF,kBAAC,EAAD,CACIyD,IAAKzD,EACLmR,OAAQnR,EACRoR,SAAU,EAAK6G,YAAY9D,IAAInU,GAC/BqR,SAAU,kBAAM,EAAK+H,sBAAsBpZ,QAIvD,OACI,kBAAC,IAAD,CACIwb,MAAM,EACNC,QAASC,KACTC,mBAAoB,EACpBC,QAAS9a,KAAKmD,YACd4X,kBAAgB,uBAChBC,mBAAiB,6BACjB3Z,UAAU,kBACV,kBAAC,IAAD,CAAa5C,GAAG,wBAAwB+R,EAAE,gBAC1C,yBACIyK,IAAKjb,KAAK8Y,UACVra,GAAG,wBACH4C,UAAU,oBACVkQ,iBAAe,EACf2J,gCAA8B,EAC9BC,YAAa3K,EAAE,UACf9N,UAAW1C,KAAK2Y,oBAChByC,QAASpb,KAAK6Y,kBACdwC,QAASrb,KAAK2Z,oBAElB,yBAAKtY,UAAU,0BACX,yBAAKA,UAAU,uBAAuBoT,GACrCuE,GAAc,yBAAK3X,UAAU,8BAA8BoZ,IAE/Dza,KAAKmX,YAAYW,KAAO,GACrB,yBACImD,IAAKjb,KAAKiX,WACVxY,GAAG,yBACH8S,iBAAe,EACf2J,gCAA8B,EAC9BC,YAAa3K,EAAE,gBACf4K,QAASpb,KAAK+Z,mBACdsB,QAASrb,KAAKga,qBAGtB,kBAACsB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAASzO,KAAKmD,YAAamT,MAAM,WACpC9F,EAAE,WAENxQ,KAAKmX,YAAYW,KAAO,GACrB,kBAACyD,EAAA,EAAD,CAAQ9M,QAASzO,KAAK6W,WAAYP,MAAM,UAAUkF,WAAS,GACtDhL,EAAE,UAGTxQ,KAAKmX,YAAYW,MAAQvC,GACvB,kBAACgG,EAAA,EAAD,CAAQ9M,QAASzO,KAAKyV,eAAgBa,MAAM,WACvC9F,EAAE,mB,GArdH7O,IAAMC,YAyenB6Z,GALCC,YACZ9K,cACA+K,IAGWF,CAAQjI,I,wEChgBR3R,gBACX,0BAAMC,EAAE,ulBACR,a,wCCFWD,gBACX,0BAAMC,EAAE,2zCACR,e,oBCFWD,gBACX,0BAAMC,EAAE,+PACR,Y,SCIE8Z,I,kNAyBFC,uBAAyB,SAAArZ,GACrB,EAAKiW,e,EAGTqD,kBAAoB,SAAAtZ,GAAW,IACnB6N,EAAW,EAAKvP,MAAhBuP,OAEJ7N,EAAO2S,UAAY9E,GAEvB,EAAKoI,e,qFAjCasD,EAAWC,GAAY,IAAD,EAClBhc,KAAKc,MAAnBuP,EADgC,EAChCA,OAAQG,EADwB,EACxBA,EAEhB,OAAIuL,EAAU1L,SAAWA,GAIrB0L,EAAUvL,IAAMA,I,0CAQpByL,KAAU9Q,GAAG,mCAAoCnL,KAAK6b,wBACtDI,KAAU9Q,GAAG,kBAAmBnL,KAAK8b,qB,6CAIrCG,KAAU3Q,IAAI,mCAAoCtL,KAAK6b,wBACvDI,KAAU3Q,IAAI,kBAAmBtL,KAAK8b,qB,+BAehC,IAAD,EACoC9b,KAAKc,MAAtC0P,EADH,EACGA,EAAGH,EADN,EACMA,OAAQ6L,EADd,EACcA,kBAEbC,EAAaC,YAAe/L,GAC5BgM,EAAQpC,YAAa5J,EAAQ6L,EAAmB1L,GAEtD,OACI,yBAAKnP,UAAU,gBACX,0BAAMA,UAAU,qBAAqBgb,GACpCF,GAAc,kBAAC,GAAD,CAAmB9a,UAAU,2B,GA9ClCM,IAAMC,YAyDhCga,GAAYU,aAAe,CACvBJ,mBAAmB,GAGRtL,qBAAkBgL,I,kBCqIlBW,I,mBAhMX,WAAYzb,GAAQ,IAAD,uBACf,4CAAMA,KA8DV0b,mBAAqB,SAAAha,GAAW,IACpB6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,GACAA,EAAKC,KAAV,CAEA,IAAIC,GAAiB,EACrB,OAAQF,EAAKC,KAAK,UACd,IAAK,qBACD,IAAME,EAAWC,KAAgBC,YAAYL,EAAKC,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAA/d,GAAC,OAAIA,EAAEgV,UAAY1R,EAAO0R,YAE3DyI,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACGF,EAAKC,KAAKxI,UAAY1R,EAAO0R,UAC7ByI,GAAiB,GASzBA,GACA,EAAKA,eAAetM,KAnGT,EAuGnBsM,eAAiB,SAAAtM,GACb,EAAKtP,SAAS,CACVmc,SAAUC,YAA6B9M,GACvC+M,SAAUC,YAAkChN,MA1GjC,EA8GnBiN,qBAAuB,SAAA9a,GAAW,IACtB6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,EAAL,CAH6B,IAKrBC,EAASD,EAATC,KACHA,KAGDA,GACmB,oBAAlBA,EAAK,UAAoD,mBAAlBA,EAAK,UAC7CA,EAAKxI,UAAY1R,EAAO0R,SAExB,EAAKyI,eAAetM,MA3HT,EA+HnBkN,2BAA6B,SAAA/a,GAAW,IAC5B6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,EAAL,CAHmC,IAK3BC,EAASD,EAATC,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKK,iBAAmBva,EAAOua,gBACjF,EAAKJ,eAAetM,KAxIT,EA4InBmN,2BAA6B,SAAAhb,GAAW,IAC5B6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,EAAL,CAHmC,IAK3BC,EAASD,EAATC,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKe,gBAAkBjb,EAAOib,eAChF,EAAKd,eAAetM,KArJT,EAyJnBqN,mBAAqB,SAAAlb,GAAW,IACpB6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,EAAL,CAH2B,IAKnBC,EAASD,EAATC,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKK,iBAAmBva,EAAOmb,YAAYlf,IAC7F,EAAKke,eAAetM,KAlKT,EAsKnBuN,mBAAqB,SAAApb,GAAW,IACpB6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,EAAL,CAH2B,IAKnBC,EAASD,EAATC,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKe,gBAAkBjb,EAAOqb,WAAWpf,IAC3F,EAAKke,eAAetM,KA/KT,IAGPA,EAAW,EAAKvP,MAAhBuP,OAHO,OAKf,EAAKhQ,MAAQ,CACTyd,WAAYzN,EACZ6M,SAAUC,YAA6B9M,GACvC+M,SAAUC,YAAkChN,IARjC,E,mFA0BG0L,EAAWC,GAAY,IACjC3L,EAAWrQ,KAAKc,MAAhBuP,OADgC,EAETrQ,KAAKK,MAA5B6c,EAFgC,EAEhCA,SAAUE,EAFsB,EAEtBA,SAElB,OAAIrB,EAAU1L,SAAWA,IAIrB2L,EAAUkB,WAAaA,GAIvBlB,EAAUoB,WAAaA,K,0CAQ3BjJ,KAAUhJ,GAAG,mBAAoBnL,KAAKwc,oBACtCK,KAAgB1R,GAAG,mBAAoBnL,KAAK0d,oBAC5CK,KAAgB5S,GAAG,mBAAoBnL,KAAK4d,oBAC5CzJ,KAAUhJ,GAAG,qBAAsBnL,KAAKsd,sBACxCT,KAAgB1R,GAAG,2BAA4BnL,KAAKud,4BACpDQ,KAAgB5S,GAAG,2BAA4BnL,KAAKwd,8B,6CAIpDrJ,KAAU7I,IAAI,mBAAoBtL,KAAKwc,oBACvCK,KAAgBvR,IAAI,mBAAoBtL,KAAK0d,oBAC7CK,KAAgBzS,IAAI,mBAAoBtL,KAAK4d,oBAC7CzJ,KAAU7I,IAAI,qBAAsBtL,KAAKsd,sBACzCT,KAAgBvR,IAAI,2BAA4BtL,KAAKud,4BACrDQ,KAAgBzS,IAAI,2BAA4BtL,KAAKwd,8B,+BAuH/C,IACYQ,EAAqBhe,KAAKc,MAApCoc,SADH,EAE0Bld,KAAKK,MAA5B6c,EAFH,EAEGA,SAAUE,EAFb,EAEaA,SAElB,OACI,yBAAK/b,UAAWiN,IAAW,gBAAiB,CAAE,uBAAwB8O,KACjEY,EAAmBA,EAAmB,KAAO,KAC7Cd,M,gDA9KmBpc,EAAOT,GACnC,GAAIS,EAAMuP,SAAWhQ,EAAMyd,WAAY,CAAC,IAC5BzN,EAAWvP,EAAXuP,OAER,MAAO,CACHyN,WAAYzN,EACZ6M,SAAUC,YAA6B9M,GACvC+M,SAAUC,YAAkChN,IAIpD,OAAO,S,GAxBY1O,IAAMC,YCC3Bqc,I,mBACF,WAAYnd,GAAQ,IAAD,uBACf,4CAAMA,KAYV6C,YAAc,WAAO,IAAD,EACa,EAAK7C,MAA1BuP,EADQ,EACRA,OAAQE,EADA,EACAA,SACXA,GAELA,EAASF,IAjBM,IAGPA,EAAW,EAAKvP,MAAhBuP,OAHO,OAIf,EAAKhQ,MAAQ,CACToc,KAAMR,KAAUhS,IAAIoG,IALT,E,mFASG0L,EAAWC,GAC7B,OAAOD,EAAU1L,SAAWrQ,KAAKc,MAAMuP,S,+BAUjC,IAAD,EACqFrQ,KAAKc,MAAvFuP,EADH,EACGA,OAAQ6M,EADX,EACWA,SAAUgB,EADrB,EACqBA,aAAcC,EADnC,EACmCA,WAAYjC,EAD/C,EAC+CA,kBAAmBkC,EADlE,EACkEA,IAAKC,EADvE,EACuEA,UAEtEC,EAAkBC,aAASlO,GAEjC,OACI,yBAAKhP,UAAWiN,IAAW,OAAQ,CAAE,WAAY8P,IAAQ3P,QAASzO,KAAK2D,aACnE,yBAAKtC,UAAU,gBACX,kBAACsP,EAAA,EAAD,CAAUyN,IAAKA,EAAK/N,OAAQA,EAAQE,SAAU2N,EAAchC,kBAAmBA,IAC9EmC,GACG,yBAAKhd,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAagP,OAAQA,EAAQ6L,kBAAmBA,KAEnDiC,KAAgBG,IAAoBpC,IACjC,yBAAK7a,UAAU,mBACX,kBAAC,GAAD,CAAcgP,OAAQA,EAAQ6M,SAAUA,Y,GArCzDvb,IAAMC,YA0DzBqc,GAAK3B,aAAe,CAChBJ,mBAAmB,EACnBiC,YAAY,EACZE,WAAW,GAGAJ,UCxEApc,gBACX,0BAAMC,EAAE,0tBACR,QCIE0c,I,mBACF,WAAY1d,GAAQ,qEACVA,I,sEAGA,IAAD,EAC+Cd,KAAKc,MAAjDuP,EADH,EACGA,OAAQG,EADX,EACWA,EAAGiO,EADd,EACcA,WAAYhQ,EAD1B,EAC0BA,QAASqM,EADnC,EACmCA,QAEpC4D,EAAOlO,EAAE,YAOb,OANImO,aAActO,GACdqO,EAAOlO,EAAE,QACFoO,YAAcvO,KACrBqO,EAAOlO,EAAE,gBAIT,yBAAKnP,UAAU,iBACVod,GACG,kBAACrI,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAGR,yBAAKzZ,UAAU,oCAAoCoN,QAASA,GACxD,0BAAMpN,UAAU,yBAAyBqd,KAE3CD,GACE,kBAACrI,EAAA,EAAD,CAAY/U,UAAU,sBAAsBoN,QAASqM,GACjD,kBAAC9L,EAAA,EAAD,Y,GA3BQrN,IAAMC,YAmCvBgP,iBAAkB4N,I,8BC+ClBK,G,YAjFX,WAAY/d,GAAQ,IAAD,uBACf,4CAAMA,KAqCVge,iCAAmC,SAAAtc,GAAW,IAClC2S,EAAY3S,EAAZ2S,QACA9E,EAAW,EAAKvP,MAAhBuP,OAEH8E,GACDA,IAAY9E,GAEhB,EAAKtP,SAAS,CAAEge,QAASC,YAAY3O,MA7CtB,EAgDnB4O,kCAAoC,SAAAzc,GAAW,IACnC6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GAE3B,OAAQ7N,EAAO0c,MAAM,UACjB,IAAK,sCAC0B,uBAAvBzC,EAAKC,KAAK,UAA4D,uBAAvBD,EAAKC,KAAK,UACzD,EAAK3b,SAAS,CAAEge,QAASC,YAAY3O,KAEzC,MAEJ,IAAK,wCAC0B,oBAAvBoM,EAAKC,KAAK,UAAyD,mBAAvBD,EAAKC,KAAK,UACtD,EAAK3b,SAAS,CAAEge,QAASC,YAAY3O,OA7DlC,EAoEnB8O,2BAA6B,WACzB,EAAKpe,SAAS,CAAEge,SAAU,EAAK1e,MAAM0e,UACrC,EAAKK,wCAtEU,EAyEnBC,4BAA8B,WAAO,IACzBhP,EAAW,EAAKvP,MAAhBuP,OACA0O,EAAY,EAAK1e,MAAjB0e,QAERO,aAA+BjP,EAAQ0O,IA7ExB,IAGP1O,EAAWvP,EAAXuP,OAHO,OAKf,EAAKhQ,MAAQ,CACTyd,WAAYzN,EACZ0O,QAASC,YAAY3O,IAGzB,EAAK+O,qCAAuCG,YACxC,EAAKF,4BACLG,KAZW,E,iFA6BfvD,KAAU9Q,GAAG,iCAAkCnL,KAAK8e,kCACpDW,KAAkBtU,GAAG,kCAAmCnL,KAAKif,qC,6CAI7DhD,KAAU3Q,IAAI,iCAAkCtL,KAAK8e,kCACrDW,KAAkBnU,IAAI,kCAAmCtL,KAAKif,sC,gDAnBlCne,EAAOT,GACnC,GAAIS,EAAMuP,SAAWhQ,EAAMyd,WAAY,CAAC,IAC5BzN,EAAWvP,EAAXuP,OAER,MAAO,CACHyN,WAAYzN,EACZ0O,QAASC,YAAY3O,IAG7B,OAAO,S,GA1Ba1O,IAAMC,WCE5B8d,I,wLACQ,IACElP,EAAMxQ,KAAKc,MAAX0P,EACAuO,EAAY/e,KAAKK,MAAjB0e,QAER,OACI,kBAACY,GAAA,EAAD,CAAUC,QAAM,EAACve,UAAU,oBAAoBwe,WAAW,aAAapR,QAASzO,KAAKmf,4BACjF,kBAACW,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI1e,UAAU,yBACV2e,KAAK,QACLC,SAAUlB,EACVzI,MAAM,UACNzH,UAAW,EACXqR,eAAa,EACbtQ,SAAU5P,KAAKmf,8BAGvB,kBAACgB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/B/P,EAAE,kBAGXgQ,UAA6ChQ,EAAjCuO,EAAmC,mBAAvB,0B,GAxBRF,KA+BrBjO,iBAAkB8O,I,UC/B3Be,I,mBACF,WAAY3f,GAAQ,IAAD,8BACf,4CAAMA,KAoFV4f,uBAAyB,SAAAle,GAAW,IACxB6N,EAAW,EAAKvP,MAAhBuP,OACAsQ,EAAkB,EAAKtgB,MAAvBsgB,cAER,GAAItQ,IADgB7N,EAAZ2S,QACR,CAIA,IAAMyL,EAAQpK,KAAaqK,SAASxQ,GACpC,EAAKyQ,cAAcF,EAAOD,KA9FX,EAiGnBI,uBAAyB,SAAAve,GAAW,IACxB6N,EAAW,EAAKvP,MAAhBuP,OACAsQ,EAAkB,EAAKtgB,MAAvBsgB,cAER,GAAItQ,IADgB7N,EAAZ2S,QACR,CAIA,IAAMyL,EAAQpK,KAAaqK,SAASxQ,GACpC,EAAKyQ,cAAcF,EAAOD,KA1GX,EA6GnBK,mBAAqB,SAAAxe,GAAW,IACpB6N,EAAW,EAAKvP,MAAhBuP,OACAsQ,EAAkB,EAAKtgB,MAAvBsgB,cAER,GAAItQ,IADgB7N,EAAZoT,QACeT,QAAvB,CAIA,IAAMyL,EAAQpK,KAAaqK,SAASxQ,GACpC,EAAKyQ,cAAcF,EAAOD,KAtHX,EAyHnBM,YAAc,WACV,MAAO,mBAAoBhW,QA1HZ,EAmJnB3F,eAAiB,WACb,EAAK4b,cAAa,IApJH,EAuJnBJ,cAAgB,SAACF,EAAOD,GAAmB,IAC/BtQ,EAAW,EAAKvP,MAAhBuP,OAEF2M,EAAU4D,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBnE,SAAa4D,EAAMhE,UAAYgE,EAAMhE,SAASI,UAAiB,GACrIoE,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9Cnc,EAAW2b,EAAQA,EAAM3b,SAAW,GACpCoc,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BC,EAAMV,EAAQA,EAAMU,IAAM,GAC1BC,EAAYX,EAAQA,EAAMW,UAAY,GACtCC,EAAiBZ,EAAQA,EAAMY,eAAiB,GAEhDC,EAAazE,EAAQlK,OAAS,EAC9B4O,EAAmBN,EAActO,OAAS,EAC1C6O,EAAc1c,EAAS6N,OAAS,EAChC8O,EAAWP,EAAMvO,OAAS,EAC1B+O,EAASP,EAAIxO,OAAS,EACtBgP,EAAeP,EAAUzO,OAAS,EAClCiP,EAAoBP,EAAe1O,OAAS,IAG3B,IAAnB6N,GACqB,IAAlBA,IAAwBc,GACN,IAAlBd,IAAwBe,GACN,IAAlBf,IAAwBgB,GACN,IAAlBhB,IAAwBiB,GACN,IAAlBjB,IAAwBkB,GACN,IAAlBlB,IAAwBmB,GACN,IAAlBnB,IAAwBoB,KAEvBN,EACAd,EAAgB,EACTe,EACPf,EAAgB,EACTgB,EACPhB,EAAgB,EACTiB,EACPjB,EAAgB,EACTkB,EACPlB,EAAgB,EACTmB,EACPnB,EAAgB,EACToB,IACPpB,EAAgB,GAGpBjgB,IAAgBgG,aAAa,CACzB,QAAS,uBACT2J,SACA2R,MAAOrB,KAIf,EAAK5f,SAAS,CACV4f,gBACA3D,UACAoE,gBACAnc,WACAoc,QACAC,MACAC,YACAC,kBACD,WACM,EAAKP,eAAe,EAAKC,kBArNnB,EAyNnBe,wBAA0B,SAAAzf,GAAW,IACjB0f,EAAkB,EAAKphB,MAA/BuP,OACAsQ,EAAkB,EAAKtgB,MAAvBsgB,cACAtQ,EAAkB7N,EAAlB6N,OAAQuQ,EAAUpe,EAAVoe,MACZvQ,IAAW6R,GAEf,EAAKpB,cAAcF,EAAOD,IA/NX,EAkOnBwB,uBAAyB,SAAA3f,GAAW,IACxB6N,EAAkB7N,EAAlB6N,OAAQ2R,EAAUxf,EAAVwf,MACZ3R,IAAW,EAAKvP,MAAMuP,QAE1B,EAAKtP,SAAS,CACV4f,cAAeqB,GAChB,WACM,EAAKf,eAAe,EAAKC,kBAzOnB,EA6OnBA,aAAe,WAAwB,IAAvBkB,IAAsB,2DACM,EAAK/hB,MAArCsgB,EAD0B,EAC1BA,cAD0B,EACX0B,aACvB,IAAuB,IAAnB1B,EAAJ,CAEA,IAAM2B,EAAU,EAEVC,EAAS,EAAKC,WAAWtL,QAE3BuL,EAAO,KACP9c,EAAO,EACL+c,EAAgB,EAAKC,UAAU1Y,IAAI,WACnB,IAAlB0W,GAAuB+B,IAEvB/c,GADA8c,EAAOC,EAAcE,YACTC,YAGhB,IAAMC,EAAsB,EAAKH,UAAU1Y,IAAI,iBACzB,IAAlB0W,GAAuBmC,IAEvBnd,GADA8c,EAAOK,EAAoBF,YACfC,YAGhB,IAAME,EAAiB,EAAKJ,UAAU1Y,IAAI,YACpB,IAAlB0W,GAAuBoC,IAEvBpd,GADA8c,EAAOM,EAAeH,YACVC,YAGhB,IAAMG,EAAc,EAAKL,UAAU1Y,IAAI,SACjB,IAAlB0W,GAAuBqC,IAEvBrd,GADA8c,EAAOO,EAAYJ,YACPC,YAGhB,IAAMI,EAAY,EAAKN,UAAU1Y,IAAI,OACf,IAAlB0W,GAAuBsC,IAEvBtd,GADA8c,EAAOQ,EAAUL,YACLC,YAGhB,IAAMK,EAAkB,EAAKP,UAAU1Y,IAAI,aACrB,IAAlB0W,GAAuBuC,IAEvBvd,GADA8c,EAAOS,EAAgBN,YACXC,YAGhB,IAAMM,EAAuB,EAAKR,UAAU1Y,IAAI,kBAMhD,GALsB,IAAlB0W,GAAuBwC,IAEvBxd,GADA8c,EAAOU,EAAqBP,YAChBC,YAGXJ,EAAL,CAEA,IAAMW,EAAkB,EAAKC,mBAAmBnM,QAChD,GAAIkM,EAAiB,CACjB,IAAME,EAAkBlB,EAAa,gDAAkD,KACvFgB,EAAgB1d,MAAM6d,QAAtB,gBAAyC5d,EAAO2c,EAAhD,sBAAqEG,EAAKe,YAAc,EAAIlB,EAA5F,eAA0GgB,GAG9G,GAAIb,GAAQL,EAAW,CAAC,IAAD,iBACXqB,EADW,EACXA,SAEJA,GACAA,EAAS3jB,OAGb,EAAK2jB,SAAW,IAAIrlB,KAAS,IAAK,CAC9B,CACIwB,KAAM2iB,EAAOmB,WACbvkB,GAAIoF,YAAMoB,EAAO4c,EAAOoB,YAAc,EAAIlB,EAAKkB,YAAc,EAAG,EAAGpB,EAAOiB,YAAcjB,EAAOoB,aAC/F9jB,KAAM,SAAA8F,GAAI,OAAK4c,EAAOmB,WAAa/d,MAI3CyD,WAAW,WACF,EAAKqa,UAEV,EAAKA,SAASllB,SACf,OA5TQ,EAmUnBqlB,kBAAoB,SAACnhB,EAAOhE,GACxB,IAAIgE,GAA0B,IAAjBA,EAAMmd,OAAnB,CAD+B,MAEH,EAAK9e,MAAzBuP,EAFuB,EAEvBA,OAAQ5B,EAFe,EAEfA,QAEhBA,GAAWA,EAAQhM,GAEnB/B,IAAgBgG,aAAa,CACzB,QAAS,uBACT2J,SACA2R,MAAOvjB,MAzUX,EAAKkkB,UAAY,IAAIzP,IACrB,EAAKsP,WAAa7gB,IAAM2Y,YACxB,EAAK+I,mBAAqB1hB,IAAM2Y,YAEhC,EAAKja,MAAQ,GAEb,EAAKiF,eAAiBue,YAAS,EAAKve,eAAgB,KATrC,E,iFA6DftF,KAAK8jB,gBACL9jB,KAAKkhB,eAEL1K,KAAarL,GAAG,uBAAwBnL,KAAKmiB,wBAC7C3L,KAAarL,GAAG,wBAAyBnL,KAAKiiB,yBAC9CzL,KAAarL,GAAG,mBAAoBnL,KAAKghB,oBACzCxK,KAAarL,GAAG,uBAAwBnL,KAAK+gB,wBAC7CvK,KAAarL,GAAG,uBAAwBnL,KAAK0gB,0B,yCAG9Bxf,EAAWC,EAAWC,GACrCpB,KAAK+jB,kBACL/jB,KAAK8jB,kB,6CAIL9jB,KAAK+jB,kBACLvN,KAAalL,IAAI,uBAAwBtL,KAAKmiB,wBAC9C3L,KAAalL,IAAI,wBAAyBtL,KAAKiiB,yBAC/CzL,KAAalL,IAAI,mBAAoBtL,KAAKghB,oBAC1CxK,KAAalL,IAAI,uBAAwBtL,KAAK+gB,wBAC9CvK,KAAalL,IAAI,uBAAwBtL,KAAK0gB,0B,sCA4C9C,GAAK1gB,KAAKihB,cAAV,CACA,IAAM+C,EAAUhkB,KAAKwiB,WAAWtL,QAChC,GAAK8M,EAAL,CAEA,IAAMC,EAAW,IAAIC,eAAelkB,KAAKsF,gBACzC2e,EAASE,QAAQH,GAEjBhkB,KAAKokB,eAAiB,CAAEH,WAAUD,e,wCAIlC,GAAKhkB,KAAKihB,eACLjhB,KAAKokB,eAAV,CAFc,MAIgBpkB,KAAKokB,eAA3BH,EAJM,EAINA,SAAUD,EAJJ,EAIIA,QACbC,GACAD,GAELC,EAASI,UAAUL,M,+BAgMb,IAAD,OACGxT,EAAMxQ,KAAKc,MAAX0P,EADH,EAE8FxQ,KAAKK,MAAhGsgB,EAFH,EAEGA,cAAe3D,EAFlB,EAEkBA,QAASoE,EAF3B,EAE2BA,cAAenc,EAF1C,EAE0CA,SAAUoc,EAFpD,EAEoDA,MAAOC,EAF3D,EAE2DA,IAAKC,EAFhE,EAEgEA,UAAWC,EAF3E,EAE2EA,eAE1E8C,GACDtH,EAAQlK,OAAS,EAAI,EAAI,IACzBsO,EAActO,OAAS,EAAI,EAAI,IAC/B7N,EAAS6N,OAAS,EAAI,EAAI,IAC1BuO,EAAMvO,OAAS,EAAI,EAAI,IACvBwO,EAAIxO,OAAS,EAAI,EAAI,IACrByO,EAAUzO,OAAS,EAAI,EAAI,IAC3B0O,EAAe1O,OAAS,EAAI,EAAI,GAWrC,OARIkK,EAAQlK,OAAS,GACdsO,EAActO,OAAS,GACvB7N,EAAS6N,OAAS,GAClBuO,EAAMvO,OAAS,GACfwO,EAAIxO,OAAS,GACbyO,EAAUzO,OAAS,GACnB0O,EAAe1O,OAAS,GAM/B9S,KAAK2iB,UAAY,IAAIzP,IAEjB,yBAAK7R,UAAWiN,IAAW,OAAQ,sBAC/B,yBAAKjN,UAAU,uBACf,yBAAK4Z,IAAKjb,KAAKwiB,WAAYnhB,UAAWiN,IAAW,UAAW,CAAC,8BAA+BgW,EAAY,KACnGtH,EAAQlK,OAAS,GACd,yBACImI,IAAK,SAAAsJ,GAAC,OAAI,EAAK5B,UAAUnK,IAAI,UAAW+L,IACxCljB,UAAWiN,IAAW,SAAU,CAAC,mBAAoBgW,EAAY,GAAI,CAAE,gBAAmC,IAAlB3D,IACxFpS,YAAa,SAAAQ,GAAC,OAAI,EAAK6U,kBAAkB7U,EAAG,KAC5C,8BAAOyB,EAAE,kBAGhB4Q,EAActO,OAAS,GACpB,yBACImI,IAAK,SAAAsJ,GAAC,OAAI,EAAK5B,UAAUnK,IAAI,gBAAiB+L,IAC9CljB,UAAWiN,IAAW,SAAU,CAAC,mBAAoBgW,EAAY,GAAI,CAAE,gBAAmC,IAAlB3D,IACxFpS,YAAa,SAAAQ,GAAC,OAAI,EAAK6U,kBAAkB7U,EAAG,KAC5C,8BAAOyB,EAAE,qBAGhBvL,EAAS6N,OAAS,GACf,yBACImI,IAAK,SAAAsJ,GAAC,OAAI,EAAK5B,UAAUnK,IAAI,WAAY+L,IACzCljB,UAAWiN,IAAW,SAAU,CAAC,mBAAoBgW,EAAY,GAAI,CAAE,gBAAmC,IAAlB3D,IACxFpS,YAAa,SAAAQ,GAAC,OAAI,EAAK6U,kBAAkB7U,EAAG,KAC5C,8BAAOyB,EAAE,qBAGhB6Q,EAAMvO,OAAS,GACZ,yBACImI,IAAK,SAAAsJ,GAAC,OAAI,EAAK5B,UAAUnK,IAAI,QAAS+L,IACtCljB,UAAWiN,IAAW,SAAU,CAAC,mBAAoBgW,EAAY,GAAI,CAAE,gBAAmC,IAAlB3D,IACxFpS,YAAa,SAAAQ,GAAC,OAAI,EAAK6U,kBAAkB7U,EAAG,KAC5C,8BAAOyB,EAAE,qBAGhB8Q,EAAIxO,OAAS,GACV,yBACImI,IAAK,SAAAsJ,GAAC,OAAI,EAAK5B,UAAUnK,IAAI,MAAO+L,IACpCljB,UAAWiN,IAAW,SAAU,CAAC,mBAAoBgW,EAAY,GAAI,CAAE,gBAAmC,IAAlB3D,IACxFpS,YAAa,SAAAQ,GAAC,OAAI,EAAK6U,kBAAkB7U,EAAG,KAC5C,8BAAOyB,EAAE,qBAGhB+Q,EAAUzO,OAAS,GAChB,yBACImI,IAAK,SAAAsJ,GAAC,OAAI,EAAK5B,UAAUnK,IAAI,YAAa+L,IAC1CljB,UAAWiN,IAAW,SAAU,CAAC,mBAAoBgW,EAAY,GAAI,CAAE,gBAAmC,IAAlB3D,IACxFpS,YAAa,SAAAQ,GAAC,OAAI,EAAK6U,kBAAkB7U,EAAG,KAC5C,8BAAOyB,EAAE,qBAGhBgR,EAAe1O,OAAS,GACrB,yBACImI,IAAK,SAAAsJ,GAAC,OAAI,EAAK5B,UAAUnK,IAAI,iBAAkB+L,IAC/CljB,UAAWiN,IAAW,SAAU,CAAC,mBAAoBgW,EAAY,GAAI,CAAE,gBAAmC,IAAlB3D,IACxFpS,YAAa,SAAAQ,GAAC,OAAI,EAAK6U,kBAAkB7U,EAAG,KAC5C,8BAAOyB,EAAE,sBAGjB,yBAAKyK,IAAKjb,KAAKqjB,mBAAoBhiB,UAAU,wBAhE9C,Q,gDA3ViBP,EAAOT,GAGnC,GAFmBS,EAAXuP,SAEOhQ,EAAMyd,WAAY,CAC7B,IAAM8C,EAAQpK,KAAaqK,SAAS/f,EAAMuP,QAEpC2M,EAAU4D,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBnE,SAAa4D,EAAMhE,UAAYgE,EAAMhE,SAASI,UAAiB,GACrIoE,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9Cnc,EAAW2b,EAAQA,EAAM3b,SAAW,GACpCoc,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BC,EAAMV,EAAQA,EAAMU,IAAM,GAC1BC,EAAYX,EAAQA,EAAMW,UAAY,GACtCC,EAAiBZ,EAAQA,EAAMY,eAAiB,GAElDb,GAAiB,EAiBrB,OAhBI3D,EAAQlK,OAAS,EACjB6N,EAAgB,EACTS,EAActO,OAAS,EAC9B6N,EAAgB,EACT1b,EAAS6N,OAAS,EACzB6N,EAAgB,EACTU,EAAMvO,OAAS,EACtB6N,EAAgB,EACTW,EAAIxO,OAAS,EACpB6N,EAAgB,EACTY,EAAUzO,OAAS,EAC1B6N,EAAgB,EACTa,EAAe1O,OAAS,IAC/B6N,EAAgB,GAGb,CACH7C,WAAYhd,EAAMuP,OAClBsQ,gBACA3D,UACAoE,gBACAnc,WACAoc,QACAC,MACAC,YACAC,iBACAa,cAAc,GAItB,OAAO,S,GA1De1gB,IAAMC,YAqbrBgP,iBAAkB6P,I,4DC5blB5e,gBACX,0BAAMC,EAAE,suBACR,UCHWD,gBACX,0BAAMC,EAAE,gmCACR,SCWE0iB,I,kNACFC,kBAAoB,SAAAhiB,GAAU,IAAD,EACc,EAAK3B,MAApCuP,EADiB,EACjBA,OAAQqU,EADS,EACTA,WAEhB5J,EAHyB,EACEA,SAEnBrY,GAERkiB,aAAStU,EAAQqU,I,EAGrBE,cAAgB,SAAAniB,GAAU,IAAD,EACkB,EAAK3B,MAApCuP,EADa,EACbA,OAAQqU,EADK,EACLA,WAEhB5J,EAHqB,EACMA,SAEnBrY,GAERoiB,aAAgBxU,EAAQ,CAACqU,K,EAG7BI,aAAe,SAAAriB,GAAU,IAAD,EACmB,EAAK3B,MAApCuP,EADY,EACZA,OAAQqU,EADI,EACJA,WAEhB5J,EAHoB,EACOA,SAEnBrY,GAERsiB,aAAe1U,EAAQ,CAACqU,K,wEAGlB,IAAD,EAC4E1kB,KAAKc,MAA9E0P,EADH,EACGA,EAAGH,EADN,EACMA,OAAQqU,EADd,EACcA,UAAWhK,EADzB,EACyBA,KAAMI,EAD/B,EAC+BA,QAASkK,EADxC,EACwCA,eAAgBC,EADxD,EACwDA,gBAEvDrP,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,KAJhB,IAMGa,EAAiFb,EAAjFa,iBAAkByO,EAA+DtP,EAA/DsP,6BAA8BC,EAAiCvP,EAAjCuP,6BAExD,OACI,kBAACC,GAAA,EAAD,CACI1K,KAAMA,EACNI,QAASA,EACTuK,gBAAgB,iBAChBL,eAAgBA,EAChBM,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBjX,YAAa,SAAAQ,GAAC,OAAIA,EAAE1K,mBACpBoK,QAAS,SAAAM,GAAC,OAAIA,EAAE1K,oBAChB,kBAACqhB,GAAA,EAAD,KACKT,GACG,kBAACU,GAAA,EAAD,CAAUlX,QAASzO,KAAKykB,mBACpB,kBAAC3E,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,kBAGhCiG,GACG,kBAACkP,GAAA,EAAD,CAAUlX,QAASzO,KAAK4kB,eACpB,kBAAC9E,GAAA,EAAD,KACI,kBAAC8F,GAAD,OAEJ,kBAACzF,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAG/B0U,GAAgCC,IAC9B,kBAACQ,GAAA,EAAD,CAAUrP,MAAM,YAAY7H,QAASzO,KAAK8kB,cACtC,kBAAChF,GAAA,EAAD,KACI,kBAAC+F,GAAD,OAEJ,kBAAC1F,GAAA,EAAD,CAAcC,QAAS5P,EAAE,mB,GAvE3B7O,IAAMC,YA0FjBgP,iBAAkB4T,I,SC/F3BsB,I,kNACFzlB,MAAQ,G,EAiER0lB,wBAA0B,SAAAvjB,GAAW,IAAD,EACC,EAAKnC,MAA9B2lB,EADwB,EACxBA,UAAWC,EADa,EACbA,UACXhf,EAAWzE,EAAXyE,OAEJ+e,GAAaA,EAAUrP,OAASqP,EAAUrP,MAAMlY,KAAOwI,EACvD,EAAKwR,cACEwN,GAAaA,EAAUtP,OAASsP,EAAUtP,MAAMlY,KAAOwI,GAC9D,EAAKwR,e,EAIbyN,sB,sCAAwB,WAAMzjB,GAAN,iBAAAqO,EAAA,qDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKhE,MAArB8lB,YAGJ,EAAKplB,SAAS,CAAEolB,aAAa,KAEvBxgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKvH,SAAS,CACVolB,aAAa,EACbxgB,OACAE,SAhBY,yC,wDAqBxBugB,uBAAyB,SAAA3jB,GACjBA,GACAA,EAAM4B,kBAGV,EAAKtD,SAAS,CAAEolB,aAAa,K,qFAhFXpK,EAAWC,EAAWqK,GAAc,IAAD,EACCrmB,KAAKc,MAAnDuP,EAD6C,EAC7CA,OAAQqU,EADqC,EACrCA,UAAW/N,EAD0B,EAC1BA,MAAOsO,EADmB,EACnBA,gBADmB,EAElBjlB,KAAKK,MAAhC8lB,EAF6C,EAE7CA,YAAaxgB,EAFgC,EAEhCA,KAAME,EAF0B,EAE1BA,IAE3B,OAAIwK,IAAW0L,EAAU1L,SAIrBqU,IAAc3I,EAAU2I,YAIxB/N,IAAUoF,EAAUpF,QAIpBsO,IAAoBlJ,EAAUkJ,kBAI9BkB,IAAgBnK,EAAUmK,cAI1BxgB,IAASqW,EAAUrW,MAInBE,IAAQmW,EAAUnW,W,0CAQtBmE,IAAUmB,GAAG,wBAAyBnL,KAAK+lB,2B,6CAI3C/b,IAAUsB,IAAI,wBAAyBtL,KAAK+lB,2B,+BA2CtC,IAAD,EAC4D/lB,KAAKc,MAA9DuP,EADH,EACGA,OAAQqU,EADX,EACWA,UAAW4B,EADtB,EACsBA,UAAWrB,EADjC,EACiCA,gBAAiBvf,EADlD,EACkDA,MADlD,EAEmE1F,KAAKK,MAArEkmB,EAFH,EAEGA,cAAeN,EAFlB,EAEkBA,UAAWD,EAF7B,EAE6BA,UAAWG,EAFxC,EAEwCA,YAAaxgB,EAFrD,EAEqDA,KAAME,EAF3D,EAE2DA,IAEhE,IAAKmgB,EAAW,OAAO,KAEvB,IAAMQ,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EC,EAAWC,YAAOV,EAAYA,EAAUtP,MAAQ,MAChDiQ,EAAMD,YAAOX,EAAUrP,OACX6P,GAAWK,aAAmBZ,GAEhD,OACI,oCACI,yBAAK5kB,UAAU,eAAeqE,MAAOA,EAAO+I,QAAS6X,EAAWQ,cAAe9mB,KAAKkmB,uBAChF,yBAAK7kB,UAAU,uBAAuBqE,MAAO,CAAEqhB,gBAAgB,OAAD,OAASL,GAAYF,EAArB,KAAiCQ,eAAgB,UAC1GJ,IAAQF,GACL,yBAAKrlB,UAAU,4BAA4BqE,MAAO,CAAEqhB,gBAAgB,OAAD,OAASH,EAAT,UAI/E,kBAAC,GAAD,CACIvW,OAAQA,EACRqU,UAAWA,EACXM,eAAgB,CAAEnf,MAAKF,QACvB+U,KAAMyL,EACNlB,gBAAiBA,EACjBnK,QAAS9a,KAAKomB,6B,gDAjIEtlB,EAAOT,GAAQ,IACnCsW,EAA+B7V,EAA/B6V,MAAOmB,EAAwBhX,EAAxBgX,KAAMmP,EAAkBnmB,EAAlBmmB,cAErB,OAAItQ,IADkBtW,EAAd6mB,UAEG,CACHA,UAAWvQ,EAEXwP,aAAa,EACbxgB,KAAM,EACNE,IAAK,EAELmgB,UAAWmB,YAAQxQ,EAAMC,MAAOkB,GAChCmO,UAAWkB,YAAQxQ,EAAMC,MAAOqQ,GAChCV,cAAe5P,EAAM4P,eAItB,S,GApBW5kB,IAAMC,YAuJhCkkB,GAAYxJ,aAAe,CACvBxE,KAAMsP,IACNH,cAAeI,KAGJvB,U,SC7JTwB,I,kNACFjnB,MAAQ,CACJ8lB,aAAa,EACbxgB,KAAM,EACNE,IAAK,G,EAkCTqgB,sB,sCAAwB,WAAMzjB,GAAN,iBAAAqO,EAAA,qDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKhE,MAArB8lB,YAGJ,EAAKplB,SAAS,CAAEolB,aAAa,KAEvBxgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKvH,SAAS,CACVolB,aAAa,EACbxgB,OACAE,SAhBY,yC,wDAqBxBugB,uBAAyB,SAAA3jB,GACjBA,GACAA,EAAM4B,kBAGV,EAAKtD,SAAS,CAAEolB,aAAa,K,qFAzDXpK,EAAWC,EAAWqK,GAAc,IAAD,EACNrmB,KAAKc,MAA5CuP,EAD6C,EAC7CA,OAAQqU,EADqC,EACrCA,UAAWO,EAD0B,EAC1BA,gBAD0B,EAElBjlB,KAAKK,MAAhC8lB,EAF6C,EAE7CA,YAAaxgB,EAFgC,EAEhCA,KAAME,EAF0B,EAE1BA,IAE3B,OAAIwK,IAAW0L,EAAU1L,SAIrBqU,IAAc3I,EAAU2I,YAIxBO,IAAoBlJ,EAAUkJ,kBAI9BkB,IAAgBnK,EAAUmK,cAI1BxgB,IAASqW,EAAUrW,MAInBE,IAAQmW,EAAUnW,U,+BAoChB,IAAD,EACgD7F,KAAKc,MAAlDuP,EADH,EACGA,OAAQqU,EADX,EACWA,UAAWO,EADtB,EACsBA,gBAAiBsC,EADvC,EACuCA,KADvC,EAE8BvnB,KAAKK,MAAhC8lB,EAFH,EAEGA,YAAaxgB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErB+P,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,KALhB,IAOG4R,EAAS5R,EAAT4R,KAEFC,EAAa,IAAIC,KAAY,IAAPF,GAAaG,mBAAmB,CAACJ,EAAKK,UAAW,CACzEC,IAAK,UACLC,MAAO,QACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGZ,OACI,oCACI,yBAAK7mB,UAAU,kBAAkBylB,cAAe9mB,KAAKkmB,uBAChDrF,aAASjL,EAAS,kBAAM0Q,aAAUjW,EAAQqU,GAAW,IAAO,CAAE8C,KAAMC,KAEzE,kBAAC,GAAD,CACIpX,OAAQA,EACRqU,UAAWA,EACXM,eAAgB,CAAEnf,MAAKF,QACvB+U,KAAMyL,EACNlB,gBAAiBA,EACjBnK,QAAS9a,KAAKomB,8B,GAhGLzkB,IAAMC,YA6GpBgP,iBAAkB0W,I,SClClBa,I,kNArDXpC,wBAA0B,SAAAvjB,GAAW,IACzBwV,EAAc,EAAKlX,MAAnBkX,UACR,GAAKA,EAAL,CAEA,IAAMjO,EAAOiO,EAAUjO,MAAQiO,EAAUrB,MACpC5M,GAEDvH,EAAOyE,SAAW8C,EAAKtL,IACvB,EAAKga,gB,mFA3BTzO,IAAUmB,GAAG,qCAAsCnL,KAAK+lB,yBACxD/b,IAAUmB,GAAG,iCAAkCnL,KAAK+lB,yBACpD/b,IAAUmB,GAAG,oCAAqCnL,KAAK+lB,yBACvD/b,IAAUmB,GAAG,wBAAyBnL,KAAK+lB,yBAC3C/b,IAAUmB,GAAG,mCAAoCnL,KAAK+lB,yBACtD/b,IAAUmB,GAAG,iCAAkCnL,KAAK+lB,yBACpD/b,IAAUmB,GAAG,qCAAsCnL,KAAK+lB,2B,6CAIxD/b,IAAUsB,IAAI,qCAAsCtL,KAAK+lB,yBACzD/b,IAAUsB,IAAI,iCAAkCtL,KAAK+lB,yBACrD/b,IAAUsB,IAAI,oCAAqCtL,KAAK+lB,yBACxD/b,IAAUsB,IAAI,wBAAyBtL,KAAK+lB,yBAC5C/b,IAAUsB,IAAI,mCAAoCtL,KAAK+lB,yBACvD/b,IAAUsB,IAAI,iCAAkCtL,KAAK+lB,yBACrD/b,IAAUsB,IAAI,qCAAsCtL,KAAK+lB,2B,+BAenD,IAAD,EAC0D/lB,KAAKc,MAA5DuP,EADH,EACGA,OAAQqU,EADX,EACWA,UAAW1M,EADtB,EACsBA,UAAWuO,EADjC,EACiCA,cAAelK,EADhD,EACgDA,MAE/CmK,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EG,EAAMD,YAAO3O,EAAYA,EAAUjO,MAAQiO,EAAUrB,MAAQ,MAC7DyR,GAAcxB,GAAOJ,GAAYK,aAAmB7O,EAAWqQ,MAC/DC,EAAcC,aAAalY,EAAQqU,GACnC8D,EAASC,QAAQ7B,GAAOJ,GAExBkC,EAAS,qBAAkBppB,KAAKqpB,IAAItM,EAAMuM,WAAW,IAAM,EAAK,GAEtE,OACI,yBAAKvnB,UAAWiN,IAAW,mBAAD,gBAAwBoa,GAAaF,KAC1DA,EACG,yBACInnB,UAAWiN,IACP,yBACA,CAAE,+BAAgCga,GAClC,CAAE,gBAAiB1B,GAAOwB,GAC1B,CAAE,sBAAuBxB,GAAOJ,GAAW4B,IAE/CS,WAAW,EACXjC,IAAKA,GAAOJ,EACZsC,IAAI,KAGR,8BAAOzM,Q,GA3DE1a,IAAMC,Y,UC2QpBmnB,I,kNAxQX1oB,MAAQ,CACJ8lB,aAAa,EACbxgB,KAAM,EACNE,IAAK,G,EA0CTqgB,sB,sCAAwB,WAAMzjB,GAAN,iBAAAqO,EAAA,qDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKhE,MAArB8lB,YAGJ,EAAKplB,SAAS,CAAEolB,aAAa,KAEvBxgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKvH,SAAS,CACVolB,aAAa,EACbxgB,OACAE,SAhBY,yC,wDAqBxBugB,uBAAyB,SAAA3jB,GACjBA,GACAA,EAAM4B,kBAGV,EAAKtD,SAAS,CAAEolB,aAAa,K,qFAjEXpK,EAAWC,EAAWqK,GAAc,IAAD,EACYrmB,KAAKc,MAA9DuP,EAD6C,EAC7CA,OAAQqU,EADqC,EACrCA,UAAWsE,EAD0B,EAC1BA,QAAS3R,EADiB,EACjBA,QAAS4N,EADQ,EACRA,gBADQ,EAElBjlB,KAAKK,MAAhC8lB,EAF6C,EAE7CA,YAAaxgB,EAFgC,EAEhCA,KAAME,EAF0B,EAE1BA,IAE3B,OAAIwK,IAAW0L,EAAU1L,SAIrBqU,IAAc3I,EAAU2I,YAIxBsE,IAAYjN,EAAUiN,UAItB3R,IAAY0E,EAAU1E,UAItB4N,IAAoBlJ,EAAUkJ,kBAI9BkB,IAAgBnK,EAAUmK,cAI1BxgB,IAASqW,EAAUrW,MAInBE,IAAQmW,EAAUnW,Y,sCAiDVyb,GACZ,IACIA,EAAMA,EAAI2H,WAAW,QAAU3H,EAAM,UAAYA,EACjD,IAAM4H,EAAaC,UAAU7H,GAEvB8H,EAAW,IAAIC,IAAIH,GAAYE,SAASE,MAAM,KAC9CC,EAASH,EAAStW,QAAU,EAAIsW,EAASA,EAAStW,OAAS,GAAK,IAAIuW,IAAIH,GAAYE,SAE1F,OAAOI,KAASC,UAAUF,GAC5B,MAAOpY,GACLD,QAAQC,MAAM,QAAUmQ,EAAM,KAAOnQ,GAGzC,OAAO,O,+BAGD,IAAD,SACmDnR,KAAKc,MAArDuP,EADH,EACGA,OAAQqU,EADX,EACWA,UAAWsE,EADtB,EACsBA,QAAS/D,EAD/B,EAC+BA,gBAD/B,EAE8BjlB,KAAKK,MAAhC8lB,EAFH,EAEGA,YAAaxgB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErB+P,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,KAErB,IAAIoC,EAAY,KACZuO,EAAgB,KAChB7P,EAAU,KATT,EAUoHsS,GAAW,CAChI3M,MAAO,GACPqN,YAAa,CACT,QAAS,gBACTne,KAAM,GACN+L,SAAU,IAEdX,MAAO,KACPgT,UAAW,KACXtI,MAAO,KACPpc,SAAU,KACVxE,QAAS,KACTwC,MAAO,KACP2mB,WAAY,KACZtI,IAAK,IAdUoI,GAVd,EAUCG,YAVD,EAUcH,aAAa/S,EAV3B,EAU2BA,MAAO0F,EAVlC,EAUkCA,MAAOiF,EAVzC,EAUyCA,IAAKqI,EAV9C,EAU8CA,UAAWtI,EAVzD,EAUyDA,MAAOpc,EAVhE,EAUgEA,SAAUxE,EAV1E,EAU0EA,QAASwC,EAVnF,EAUmFA,MAAmB6mB,EAVtG,EAU0FF,WAiB3FD,GACApD,EAAgBoD,EAAUpD,cAC1BvO,EAAY2R,EAAU3R,WACfqJ,GACPkF,EAAgBlF,EAAM0I,0BACtB/R,EAAYqJ,EAAM2I,uBACX/kB,GACPshB,EAAgBthB,EAASshB,cACzBvO,EAAY/S,EAAS+S,WACdvX,GACP8lB,EAAgB9lB,EAAQ8lB,cACxBvO,EAAYvX,EAAQuX,WACb/U,GACPsjB,EAAgBtjB,EAAMsjB,cACtBvO,EAAY/U,EAAM+U,WACX8R,IACPvD,EAAgBuD,EAAUvD,cAC1BvO,EAAY8R,EAAU9R,WAGrBA,GAAcuO,IAAiB5P,IAChC4P,EAAgB5P,EAAM4P,cACtBvO,EAAYiS,YAAatT,EAAMC,MAAOwQ,MAjDrC,MAoDmBxR,EAAQc,QAA1BnL,EApDD,EAoDCA,KAAM8L,EApDP,EAoDOA,QAEZ,GADA9L,EAAOA,GAAQ8L,EACL,CAAC,IACCC,EAAa/L,EAAb+L,SACR,GAAIA,GAAYA,EAASxE,OAAS,EAAG,CACjC,IACMoX,EAAc5S,EAASiC,OAAOwP,EAAWoB,eACzCC,EAAYF,EAAYpX,OAAS,GAAKvH,EAAKA,KAAKuH,OAF5B,GAGpBuX,EAAkC,IAApB/S,EAASxE,QAAuC,IAAvBwE,EAAS,GAAGgT,QAAgBhT,EAAS,GAAGxE,SAAWvH,EAAKA,KAAKuH,OAEpGyX,EAAsBL,EACvB3Q,OAAO,SAAAra,GACJ,IAAIsrB,EAAaC,aAAUlf,EAAKA,KAAMrM,EAAEorB,OAAQprB,EAAEorB,OAASprB,EAAE4T,QAAQiG,OAGrE,OAFAyR,EAAaA,EAAWxmB,QAAQ,UAAU,KAExB8O,OAAS,IAG7B4X,EAAQH,EAAoBhW,IAAI,SAACrV,EAAGkU,GAClC,IAAMoX,EAAaC,aAAUlf,EAAKA,KAAMrM,EAAEorB,OAAQprB,EAAEorB,OAASprB,EAAE4T,QAC/DwO,EAAMkJ,EACN,IAAIG,GAAO,EAEX,OAAQzrB,EAAEwd,KAAK,UACX,IAAK,wBAA0B,IACdkO,EAAY1rB,EAAEwd,KAAnB4E,IACJsJ,IACAtJ,EAAMsJ,GAEV,MAEJ,IAAK,oBACD,MAEJ,IAAK,6BACDD,GAAO,EAMf,OAFAtO,EAAQA,GAAS,EAAKwO,gBAAgBvJ,IAAQ,IAG1C,kBAACwJ,GAAA,EAAD,CAAUnoB,IAAKyQ,EAAG/R,UAAU,kBAAkBigB,IAAKA,EAAKqJ,KAAMA,GACzDH,KAKjB,GAAIJ,EAAW,CACX,IAAItoB,GAAKyoB,EAAoBzX,OAAS,GAAKyX,EAAoB,GAAGD,OAAS,EAAI/e,EAAKA,KAAKkf,UAAU,EAAGF,EAAoB,GAAGD,QAAU/e,EAAKA,OAASme,EAAYne,MAAQ,GACzKzJ,EAAIA,EAAEiX,OACNrC,EACI,oCACK5U,IAAMuoB,GAAe,yBAAKhpB,UAAU,wBAAwBS,GAC7D,6BAAM4oB,QAEX,CACH,IAAI5oB,EAAI4nB,EAAYne,MAAQ,GAC5BzJ,EAAIA,EAAEiX,OACNrC,EACI,oCACK5U,GAAK,yBAAKT,UAAU,wBAAwBS,GAC7C,yBAAKT,UAAU,oBAAoB0pB,aAAiBxf,EAAM,SAAArM,GAAC,OAAIA,GAAG,CAAEirB,cAAepB,EAAWoB,kBAItGnB,IACA3M,EAAQA,GAASrc,KAAK6qB,gBAAgBvJ,KAKlD,OACI,oCACI,yBAAKjgB,UAAU,cAAcylB,cAAe9mB,KAAKkmB,uBAC7C,kBAAC,GAAD,CACI7V,OAAQA,EACRqU,UAAWA,EACX6B,cAAeA,EACfvO,UAAWA,EACXqE,MAAO2O,YAAehrB,KAAK6qB,gBAAgBvJ,MAE/C,yBAAKjgB,UAAU,uBACVgb,GAAS,yBAAKhb,UAAU,kBAAkBgb,GAC1C3F,IAGT,kBAAC,GAAD,CACIrG,OAAQA,EACRqU,UAAWA,EACXM,eAAgB,CAAEnf,MAAKF,QACvB+U,KAAMyL,EACNlB,gBAAiBA,EACjBnK,QAAS9a,KAAKomB,6B,qCA9KT6E,GACjB,IAAKA,EAAQ,OAAO,EADK,IAGjBvO,EAASuO,EAATvO,KACR,QAAKA,IAGiB,sBAAlBA,EAAK,UACa,0BAAlBA,EAAK,UACa,+BAAlBA,EAAK,c,GApFQ/a,IAAMC,Y,uCCDzBspB,I,kNACF7qB,MAAQ,CACJ8lB,aAAa,EACbxgB,KAAM,EACNE,IAAK,G,EAsCTqgB,sB,sCAAwB,WAAMzjB,GAAN,iBAAAqO,EAAA,qDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKhE,MAArB8lB,YAGJ,EAAKplB,SAAS,CAAEolB,aAAa,KAEvBxgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKvH,SAAS,CACVolB,aAAa,EACbxgB,OACAE,SAhBY,yC,wDAqBxBugB,uBAAyB,SAAA3jB,GACjBA,GACAA,EAAM4B,kBAGV,EAAKtD,SAAS,CAAEolB,aAAa,K,qFA7DXpK,EAAWC,EAAWqK,GAAc,IAAD,EACKrmB,KAAKc,MAAvDuP,EAD6C,EAC7CA,OAAQqU,EADqC,EACrCA,UAAWnD,EAD0B,EAC1BA,UAAW0D,EADe,EACfA,gBADe,EAElBjlB,KAAKK,MAAhC8lB,EAF6C,EAE7CA,YAAaxgB,EAFgC,EAEhCA,KAAME,EAF0B,EAE1BA,IAE3B,OAAIwK,IAAW0L,EAAU1L,SAIrBqU,IAAc3I,EAAU2I,YAIxBnD,IAAcxF,EAAUwF,YAIxB0D,IAAoBlJ,EAAUkJ,kBAI9BkB,IAAgBnK,EAAUmK,cAI1BxgB,IAASqW,EAAUrW,MAInBE,IAAQmW,EAAUnW,W,+BAoChB,IAAD,EACsE7F,KAAKc,MAAxEuP,EADH,EACGA,OAAQkX,EADX,EACWA,KAAM7C,EADjB,EACiBA,UAAWnD,EAD5B,EAC4BA,UAAW+E,EADvC,EACuCA,UAAWrB,EADlD,EACkDA,gBADlD,EAE8BjlB,KAAKK,MAAhC8lB,EAFH,EAEGA,YAAaxgB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErB+P,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,KAErB,IAAK2L,EAAW,OAAO,KAPlB,IASGiG,EAAiB5R,EAAjB4R,KAAM2D,EAAWvV,EAAXuV,OACR1D,EAAa,IAAIC,KAAY,IAAPF,GAAaG,mBAAmB,CAACJ,EAAKK,UAAW,CACzEC,IAAK,UACLC,MAAO,QACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGJ7pB,EAA0BkjB,EAA1BljB,SAAiB0L,EAASwX,EAAhB6J,MAElB,OACI,oCACI,yBAAK/pB,UAAU,oBAAoBylB,cAAe9mB,KAAKkmB,uBACnD,kBAACmF,GAAA,EAAD,CAAehb,OAAQA,EAAQqU,UAAWA,EAAW3a,KAAMA,EAAMuc,UAAWA,IAC5E,yBAAKjlB,UAAU,sBACX,yBAAKA,UAAU,kBAAiB,kBAACiqB,GAAA,EAAD,CAAeH,OAAQA,EAAQzG,UAAWA,KAC1E,yBAAKrjB,UAAU,mBACX,kBAACkqB,GAAA,EAAD,CACIlb,OAAQA,EACRqU,UAAWA,EACXrmB,SAAUA,EACV0L,KAAMA,EACNyd,KAAMC,IAEV,kBAAC+D,GAAA,EAAD,CAAanb,OAAQA,EAAQqU,UAAWA,EAAW+G,KAAM,kBAIrE,kBAAC,GAAD,CACIpb,OAAQA,EACRqU,UAAWA,EACXM,eAAgB,CAAEnf,MAAKF,QACvB+U,KAAMyL,EACNlB,gBAAiBA,EACjBnK,QAAS9a,KAAKomB,8B,GApHJzkB,IAAMC,YAoIrBgP,iBAAkBsa,ICpI3BQ,I,kNACFrrB,MAAQ,CACJ8lB,aAAa,EACbxgB,KAAM,EACNE,IAAK,G,EA8CT8lB,iCAAmC,SAAAnpB,GAAW,IAClCwV,EAAc,EAAKlX,MAAMmC,MAAzB+U,UACA/Q,EAAWzE,EAAXyE,OAER,GAAK+Q,EAAL,CAJyC,IAMjCjO,EAASiO,EAATjO,KACJA,GAAQA,EAAKtL,KAAOwI,GACpB,EAAKwR,gB,EAIbyN,sB,sCAAwB,WAAMzjB,GAAN,iBAAAqO,EAAA,qDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKhE,MAArB8lB,YAGJ,EAAKplB,SAAS,CAAEolB,aAAa,KAEvBxgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKvH,SAAS,CACVolB,aAAa,EACbxgB,OACAE,SAhBY,yC,wDAqBxBugB,uBAAyB,SAAA3jB,GACjBA,GACAA,EAAM4B,kBAGV,EAAKtD,SAAS,CAAEolB,aAAa,K,mFAhF7Bnc,IAAUmB,GAAG,iCAAkCnL,KAAK2rB,oC,6CAIpD3hB,IAAUsB,IAAI,iCAAkCtL,KAAK2rB,oC,4CAGnC5P,EAAWC,EAAWqK,GAAc,IAAD,EACCrmB,KAAKc,MAAnDuP,EAD6C,EAC7CA,OAAQqU,EADqC,EACrCA,UAAWzhB,EAD0B,EAC1BA,MAAOgiB,EADmB,EACnBA,gBADmB,EAElBjlB,KAAKK,MAAhC8lB,EAF6C,EAE7CA,YAAaxgB,EAFgC,EAEhCA,KAAME,EAF0B,EAE1BA,IAE3B,OAAIwK,IAAW0L,EAAU1L,SAIrBqU,IAAc3I,EAAU2I,YAIxBzhB,IAAU8Y,EAAU9Y,QAIpBgiB,IAAoBlJ,EAAUkJ,kBAI9BkB,IAAgBnK,EAAUmK,cAI1BxgB,IAASqW,EAAUrW,MAInBE,IAAQmW,EAAUnW,W,+BAgDhB,IAAD,EAC4D7F,KAAKc,MAA9DuP,EADH,EACGA,OAAQqU,EADX,EACWA,UAAW4B,EADtB,EACsBA,UAAW5gB,EADjC,EACiCA,MAAOuf,EADxC,EACwCA,gBADxC,EAE0CjlB,KAAKc,MAAMmC,MAAlDsjB,EAFH,EAEGA,cAAevO,EAFlB,EAEkBA,UAAW3Z,EAF7B,EAE6BA,SAF7B,EAG8B2B,KAAKK,MAAhC8lB,EAHH,EAGGA,YAAaxgB,EAHhB,EAGgBA,KAAME,EAHtB,EAGsBA,IAErB2gB,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EC,EAAWC,YAAO3O,EAAYA,EAAUjO,KAAO,MAC/Cqe,EAAY1B,EAAWG,aAAmB7O,GAAayQ,QAAQjC,GAErE,OACI,oCACI,yBAAKnlB,UAAU,eAAeqE,MAAOA,EAAO+I,QAAS6X,EAAWQ,cAAe9mB,KAAKkmB,uBAChF,yBAAK7kB,UAAU,wBACX,yBACIA,UAAWiN,IAAW,uBAAwB,CAC1C,gBAAiB8Z,EACjB,sBAAuB1B,GAAY0B,IAEvC1iB,MAAO,CAAEqhB,gBAAgB,OAAD,OAASL,GAAYF,EAArB,QAE5B,yBAAKnlB,UAAU,qBAAqB2M,YAAkB3P,MAG9D,kBAAC,GAAD,CACIgS,OAAQA,EACRqU,UAAWA,EACXM,eAAgB,CAAEnf,MAAKF,QACvB+U,KAAMyL,EACNlB,gBAAiBA,EACjBnK,QAAS9a,KAAKomB,8B,GAxHRzkB,IAAMC,YA2IhC8pB,GAAYpP,aAAe,CACvBxE,KAAMsP,IACNH,cAAeI,KAGJqE,U,+jBCvIf,IAAME,GAAgB,EAEhBC,G,YACF,WAAY/qB,GAAQ,IAAD,8BACf,4CAAMA,KA0YV4f,uBAAyB,SAAAle,GAAW,IACxB2S,EAAwB3S,EAAxB2S,QAASC,EAAe5S,EAAf4S,WACT/E,EAAW,EAAKvP,MAAhBuP,OAER,GAAIA,IAAW8E,EAAf,CAJ+B,MAME,EAAK9U,MAA9ByrB,EANuB,EAMvBA,MAAOnL,EANgB,EAMhBA,cACf,GAAKmL,EAAMC,KAAK,SAAA7sB,GAAC,OAAIA,EAAET,KAAO2W,IAA9B,CAEA,IAAMwL,EAAQpK,KAAaqK,SAASxQ,GACpC,EAAKyQ,cAAcF,EAAOD,MArZX,EAwZnBrb,eAAiB,SAAA7C,GAAU,IAAD,EACO,EAAKpC,MAA1ByrB,EADc,EACdA,MAAOE,EADO,EACPA,UAEEC,EAAS,EAAKC,QAAvBhV,QACR,GAAK+U,EAAL,CAEA,IAAME,EAAYF,EAAKE,UACjBC,EAAiBH,EAAKI,aAAaC,aAEnCC,EAAY,EAAKC,aAAaV,EAAOM,EAAgBJ,EAAYG,GAEvE,EAAKprB,SAAL,MAAmBwrB,MAnaJ,EAsanBE,oBAAsB,SAAAjqB,GAAW,IACrB6N,EAAW,EAAKvP,MAAhBuP,OACAsQ,EAAkB,EAAKtgB,MAAvBsgB,cAER,GAAItQ,IADgB7N,EAAZoT,QACeT,QAAvB,CAIA,IAAMyL,EAAQpK,KAAaqK,SAASxQ,GACpC,EAAKyQ,cAAcF,EAAOD,KA/aX,EAkbnBK,mBAAqB,SAAAxe,GAAW,IACpB6N,EAAW,EAAKvP,MAAhBuP,OACAsQ,EAAkB,EAAKtgB,MAAvBsgB,cAER,GAAItQ,IADgB7N,EAAZoT,QACeT,QAAvB,CAIA,IAAMyL,EAAQpK,KAAaqK,SAASxQ,GACpC,EAAKyQ,cAAcF,EAAOD,KA3bX,EA8bnBI,uBAAyB,SAAAve,GAAW,IACxB6N,EAAW,EAAKvP,MAAhBuP,OACAsQ,EAAkB,EAAKtgB,MAAvBsgB,cAER,GAAItQ,IADgB7N,EAAZ2S,QACR,CAIA,IAAMyL,EAAQpK,KAAaqK,SAASxQ,GACpC,EAAKyQ,cAAcF,EAAOD,KAvcX,EA0cnBG,cAAgB,SAACF,EAAOD,GAAmB,IAC/BqL,EAAc,EAAK3rB,MAAnB2rB,UAEFhP,EAAU4D,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBnE,SAAY4D,EAAMhE,SAASI,UAAgB,GACjHoE,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9Cnc,EAAW2b,EAAQA,EAAM3b,SAAW,GACpCoc,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BC,EAAMV,EAAQA,EAAMU,IAAM,GAC1BC,EAAYX,EAAQA,EAAMW,UAAY,GACtCC,EAAiBZ,EAAQA,EAAMY,eAAiB,GAEhDC,EAAazE,EAAQlK,OAAS,EAC9B4O,EAAmBN,EAActO,OAAS,EAC1C6O,EAAc1c,EAAS6N,OAAS,EAChC8O,EAAWP,EAAMvO,OAAS,EAC1B+O,EAASP,EAAIxO,OAAS,EACtBgP,EAAeP,EAAUzO,OAAS,EAClCiP,EAAoBP,EAAe1O,OAAS,IAG3B,IAAnB6N,GACqB,IAAlBA,IAAwBc,GACN,IAAlBd,IAAwBe,GACN,IAAlBf,IAAwBgB,GACN,IAAlBhB,IAAwBiB,GACN,IAAlBjB,IAAwBkB,GACN,IAAlBlB,IAAwBmB,GACN,IAAlBnB,IAAwBoB,KAEvBN,EACAd,EAAgB,EACTe,EACPf,EAAgB,EACTgB,EACPhB,EAAgB,EACTiB,EACPjB,EAAgB,EACTkB,EACPlB,EAAgB,EACTmB,EACPnB,EAAgB,EACToB,IACPpB,EAAgB,IAIxB,IACMmL,EADSD,EAAmBa,UAAU/L,EAAeC,GAAOrH,OAAO,SAAAra,GAAC,OAAI2sB,EAAmBc,eAAehM,EAAezhB,EAAEwX,WAC5GkW,MAAM,EAAGC,MAEbZ,EAAS,EAAKC,QAAvBhV,QACR,GAAK+U,EAAL,CAEA,IAAME,EAAYF,EAAKE,UACjBC,EAAiBH,EAAKI,aAAaC,aAEzC,EAAKvrB,SAAS,CACV4f,gBACA4L,UAAW,EAAKC,aAAaV,EAAOM,EAAgBJ,EAAYG,GAChEW,UAAWjB,EAAmBkB,aAAapM,GAC3CmL,QACAkB,OAAQ,CACJC,SAAS,EACTC,WAAW,EACXC,kBAAkB,EAClB5T,OAAQsS,EAAmBuB,UAAUzM,IAEzC3D,UACAoE,gBACAnc,WACAoc,QACAC,MACAC,YACAC,qBAlhBW,EAmjBnBW,uBAAyB,SAAA3f,GAAW,IAChB0f,EAAkB,EAAKphB,MAA/BuP,OACAA,EAAiC7N,EAAjC6N,OAAesQ,EAAkBne,EAAzBwf,MAChB,GAAI3R,IAAW6R,EAAf,CAEA,IAAMtB,EAAQpK,KAAaqK,SAASqB,GAE9BlF,EAAU4D,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBnE,SAAY4D,EAAMhE,SAASI,UAAgB,GACjHoE,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9Cnc,EAAW2b,EAAQA,EAAM3b,SAAW,GACpCoc,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BC,EAAMV,EAAQA,EAAMU,IAAM,GAC1BC,EAAYX,EAAQA,EAAMW,UAAY,GACtCC,EAAiBZ,EAAQA,EAAMY,eAAiB,GAElDhgB,EAAS,GACS,IAAlBmf,EACAnf,EAASwb,EACgB,IAAlB2D,EACPnf,EAAS4f,EACgB,IAAlBT,EACPnf,EAASyD,EACgB,IAAlB0b,EACPnf,EAAS6f,EACgB,IAAlBV,EACPnf,EAAS8f,EACgB,IAAlBX,EACPnf,EAAS+f,EACgB,IAAlBZ,IACPnf,EAASggB,GAEbhgB,EAASA,EAAO+X,OAAO,SAAAra,GAAC,OAAI2sB,EAAmBc,eAAehM,EAAezhB,EAAEwX,WAE/E,EAAK3V,SAAS,CACV4f,gBACA4L,UAAW,IAAIrZ,IACf4Z,UAAWjB,EAAmBkB,aAAapM,GAC3CmL,MAAOtqB,EAAOorB,MAAM,EAAGC,MACvB7P,UACAoE,gBACAnc,WACAoc,QACAC,MACAC,YACAC,iBACAwL,OAAQ,CACJC,SAAS,EACTC,WAAW,EACXC,kBAAkB,EAClB5T,OAAQsS,EAAmBuB,UAAUzM,QApmB9B,EAymBnBsB,wBAA0B,SAAAzf,GAAW,IACjB0f,EAAkB,EAAKphB,MAA/BuP,OACAsQ,EAAkB,EAAKtgB,MAAvBsgB,cAEAtQ,EAAW7N,EAAX6N,OACR,GAAIA,IAAW6R,EAAf,CAEA,IAAMtB,EAAQpK,KAAaqK,SAASxQ,GACpC,EAAKyQ,cAAcF,EAAOD,KAjnBX,EAonBnB0M,aAAe,SAAC5qB,EAAOiJ,GAAe,IAC1BshB,EAAW,EAAK3sB,MAAhB2sB,OAEJA,IAAWA,EAAOE,WAClB,EAAKI,WAAWN,IAxnBL,EA8nBnBO,iBAAmB,SAAC9qB,EAAOiJ,GACG,EAAKwgB,QAAvBhV,SAGR,EAAKsW,kBAAkB9hB,EAAUsgB,YAloBlB,EAqoBnByB,cAAgB,SAACzL,EAAOoK,EAAgBJ,GAAe,IAC3Cc,EAAc,EAAKzsB,MAAnBysB,UAKR,OAHgB9K,EAAQ8K,EAIVd,EAAYJ,GAAgBkB,IAHtB9K,EAAQ,GAAK8K,EAIhBd,EAAYI,EAAiBR,GAAgBkB,GA7oB/C,EA8pBnBU,kBAAoB,SAAAxB,GAAc,IAAD,EAC0B,EAAK3rB,MAApDyrB,EADqB,EACrBA,MAAkB4B,EADG,EACd1B,UAA0Bc,EADZ,EACYA,UAExBb,EAAS,EAAKC,QAAvBhV,QACR,GAAK+U,EAAL,CAEA,IAAME,EAAYF,EAAKE,UACjBC,EAAiBH,EAAKI,aAAaC,aAEzC,GAAIhtB,KAAKqpB,IAAIqD,EAAY0B,IAAkBZ,EAAW,CAClD,IAAMP,EAAY,EAAKC,aAAaV,EAAOM,EAAgBJ,EAAYG,GAEvE,EAAKprB,SAAL,IACIirB,aACGO,OA5qBI,EAirBnBe,WAjrBmB,sCAirBN,WAAON,GAAP,uDAAAlc,EAAA,wDAAe6c,IAAf,iCACDtd,EAAW,EAAKvP,MAAhBuP,OADC,EAEwB,EAAKhQ,MAA9ByrB,EAFC,EAEDA,MAAOnL,EAFN,EAEMA,cACPuM,EAAuDF,EAAvDE,UAAW3T,EAA4CyT,EAA5CzT,OAAQ0T,EAAoCD,EAApCC,QAAmBW,EAAiBZ,EAA3Ba,SAEd,IAAlBlN,EALK,oDAMa,IAAlBA,EANK,oDAOJpH,EAPI,uDAQL0T,EARK,uDASLC,EATK,0DAWLY,EAAgBhC,EAAMhZ,OAAS,EAAIgZ,EAAMA,EAAMhZ,OAAS,GAAGrU,GAAK,EAChEmvB,IACAE,EAAgBF,EAAa9a,OAAS,EAAI8a,EAAaA,EAAa9a,OAAS,GAAGrU,GAAK,GAEzFuuB,EAAOC,SAAU,EACjBD,EAAOe,UAAY,IAAIrG,KAhBd,UAkBYhnB,IAAgBC,KAAK,CACtC,QAAS,qBACTwU,QAAS9E,EACTqJ,MAAO,GACPsU,eAAgB,EAChBC,gBAAiBH,EACjBxD,OAAQ,EACRvW,MAAO8Y,KACPtT,WACD2U,QAAQ,WACPlB,EAAOC,SAAU,IA5BZ,WAkBHpsB,EAlBG,OA+BTH,IAAgBC,KAAK,CACjB,QAAS,qBACTwU,QAAS9E,EACTqJ,MAAO,GACPsU,eAAgB,EAChBC,gBAAiBH,EACjBxD,OAAQ,EACRvW,MAAoC,EAA7B8Y,KACPtT,YAGY4U,EAAkB,EAAK9tB,MAA/B2sB,SACcmB,EAAcJ,YAAcf,EAAOe,UA3ChD,mDA+CDF,EAAahtB,EAAbgtB,SACRb,EAAOa,SAAWA,EAClBb,EAAOE,UAAgC,IAApBW,EAAS/a,QAAyC,IAAzB+a,EAASO,YACrDpB,EAAOlB,MAAQA,EAAMxS,OAAOuU,EAAStU,OAAO,SAAAra,GAAC,OAAI2sB,EAAmBwC,eAAe1N,EAAezhB,MAC5FovB,EAAoBX,GAAkBE,EAAS/a,OAAS,GAAK+a,EAAS/a,OAAS+Z,KAErFrW,KAAa+X,SAAS1tB,EAAOgtB,UACvBhZ,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAOhU,EAAOgtB,UAElC,EAAK9sB,SAAS,CAAE+qB,MAAOkB,EAAOlB,QAE1BkB,EAAOE,UACP,EAAKuB,mBAAmBzB,GAAQ,GACzBsB,GACP,EAAKhB,WAAWN,GAAQ,GA9DnB,0CAjrBM,wDAuvBnB0B,WAAa,SAAAjM,GAAS,IACVkM,EAAU,EAAK7tB,MAAf6tB,MAER,OAAQlM,EAAK,UACT,IAAK,UAAY,IACLtN,EAAgBsN,EAAhBtN,QAAS1W,EAAOgkB,EAAPhkB,GAEjB6nB,aAAUnR,EAAS1W,GAAI,GACvB,MAEJ,IAAK,OAAS,IACFA,EAAOgkB,EAAPhkB,GACRkmB,aAASlmB,GAELkwB,GACAjuB,IAAgBgG,aAAa,CACzB,QAAS,2BACT2J,OAAQ,IAGhB,MAEJ,IAAK,aAAe,IACR6D,EAAYuO,EAAZvO,QACR0a,aAAS1a,GAAS,GAEdya,GACAjuB,IAAgBgG,aAAa,CACzB,QAAS,2BACT2J,OAAQ,MAjxBxB,EAAK6b,QAAUvqB,IAAM2Y,YAErB,EAAKja,MAAQ,CACT2rB,UAAW,GANA,E,iFAoXf/gB,OAAOC,iBAAiB,SAAUlL,KAAKsF,gBAEvCkR,KAAarL,GAAG,uBAAwBnL,KAAKmiB,wBAC7C3L,KAAarL,GAAG,wBAAyBnL,KAAKiiB,yBAC9CzL,KAAarL,GAAG,mBAAoBnL,KAAKghB,oBACzCxK,KAAarL,GAAG,uBAAwBnL,KAAK+gB,wBAC7CvK,KAAarL,GAAG,uBAAwBnL,KAAK0gB,wBAC7ClK,KAAarL,GAAG,6BAA8BnL,KAAKysB,qBACnDjW,KAAarL,GAAG,0BAA2BnL,KAAKysB,uB,6CAIhDxhB,OAAOI,oBAAoB,SAAUrL,KAAKsF,gBAE1CkR,KAAalL,IAAI,uBAAwBtL,KAAKmiB,wBAC9C3L,KAAalL,IAAI,wBAAyBtL,KAAKiiB,yBAC/CzL,KAAalL,IAAI,mBAAoBtL,KAAKghB,oBAC1CxK,KAAalL,IAAI,uBAAwBtL,KAAK+gB,wBAC9CvK,KAAalL,IAAI,uBAAwBtL,KAAK0gB,wBAC9ClK,KAAalL,IAAI,6BAA8BtL,KAAKysB,qBACpDjW,KAAalL,IAAI,0BAA2BtL,KAAKysB,uB,yCA8IlCvrB,EAAWC,EAAWC,GACrC,GAAIF,EAAU4qB,QAAU9rB,KAAKc,MAAMuP,QAAUlP,EAAUwf,gBAAkB3gB,KAAKK,MAAMsgB,cAAe,CAAC,IACxFmL,EAAU9rB,KAAKK,MAAfyrB,MAEFjX,EAAQ7K,IAAU8K,WACxB,OAAQ9U,KAAKK,MAAMsgB,eACf,KAAK,EACDkO,YAAiBha,EAAOiX,EAAMvX,IAAI,SAAArV,GAAC,OAAIA,EAAEgV,WACzC,MAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACDsa,YAAoB3Z,EAAOiX,GAC3B,MAEJ,KAAK,EACD/W,YAAiBF,EAAOiX,O,mCAwG3BtqB,EAAQ4qB,EAAgBJ,GAAY,IAAD,OACtCO,EAAY,IAAIrZ,IAChB4b,EAAgB,GAQtB,OAPAttB,EAAO7B,QAAQ,SAAC8iB,EAAMT,GACd,EAAKyL,cAAczL,EAAOoK,EAAgBJ,KAC1CO,EAAU/T,IAAIwJ,EAAOA,GACrB8M,EAAc9a,KAAKgO,MAIpB,CAAEuK,YAAWuC,mB,yCAwFL9B,EAAQW,M,+BAwCjB,IAAD,SAYD3tB,KAAKK,MAVLsgB,EAFC,EAEDA,cAFC,IAGDmL,aAHC,MAGO,GAHP,EAIDS,EAJC,EAIDA,UACAvP,EALC,EAKDA,QACAoE,EANC,EAMDA,cACAnc,EAPC,EAODA,SACAoc,EARC,EAQDA,MACAC,EATC,EASDA,IACAC,EAVC,EAUDA,UACAC,EAXC,EAWDA,eAYJ,KAPiBxE,GAAWA,EAAQlK,OAAS,GACtCsO,GAAiBA,EAActO,OAAS,GACxC7N,GAAYA,EAAS6N,OAAS,GAC9BuO,GAASA,EAAMvO,OAAS,GACxBwO,GAAOA,EAAIxO,OAAS,GACpByO,GAAaA,EAAUzO,OAAS,GAChC0O,GAAkBA,EAAe1O,OAAS,GAE7C,OAAQ,yBAAKmI,IAAKjb,KAAKksB,UAG3B,GAAsB,IAAlBvL,GAAyC,IAAlBA,GAAyC,IAAlBA,EAAqB,CACnE,IAAIoO,EAAgB,EACdC,EAAWlD,EAAMvX,IAAI,SAACrV,EAAG8iB,GAAW,IAC9B7M,EAAgBjW,EAAhBiW,QAAS1W,EAAOS,EAAPT,GACXwwB,EAAapD,EAAmBqD,cAAchwB,GACpD,OAAK+vB,GAGLF,GAAiBE,IAEP1C,EAAUzU,MAAQyU,EAAUlZ,IAAI2O,KACtC,yBAAKrf,IAAG,kBAAawS,EAAb,uBAAmC1W,GAAM4C,UAAU,yBAAyBqE,MAAO,CAAEG,IAAKkpB,EAAgBE,IAC7GpD,EAAmBsD,gBAAgBxO,EAAezhB,EAAG,kBAAM,EAAKwvB,WAAWxvB,OANzE,OAWf,OACI,yBAAK+b,IAAKjb,KAAKksB,QAAS7qB,UAAU,4BAA4BqE,MAAO,CAAEqS,OAAQgX,IAC1EC,GAKb,OACI,yBAAK/T,IAAKjb,KAAKksB,QAAS7qB,UAAWiN,IAAW,uBAAwB,CAAE,qBAAwC,IAAlBqS,KACzFmL,EAAMvX,IAAI,SAAArV,GAAC,OAAI2sB,EAAmBsD,gBAAgBxO,EAAezhB,EAAG,kBAAM,EAAKwvB,WAAWxvB,W,qCAp0BlFujB,GACjB,GAAKA,EAEL,OAAQA,EAAK,UACT,IAAK,UAED,OADoBA,EAAZ/L,QACQ,UACZ,IAAK,eAGL,IAAK,eACD,OAEJ,IAAK,kBACD,OAAO,GAEX,IAAK,eACD,OAAO,GAEX,IAAK,mBACD,OAAO,GAEX,QACI,OAIZ,IAAK,OAGL,IAAK,OACD,OAAO,GAEX,QACI,U,mCAKQiK,GAChB,OAAQA,GACJ,KAAK,EACD,OAAO,GAEX,KAAK,EACD,OAEJ,KAAK,EACD,OAAO,GAEX,KAAK,EACD,OAAO,GAEX,KAAK,EACD,OAEJ,KAAK,EAGL,KAAK,EACD,OAAO,M,qCAiHGA,EAAe/K,GACjC,QAAKA,GAEEiW,EAAmBc,eAAehM,EAAe/K,EAAQc,W,qCAG9CiK,EAAejK,GACjC,OAAQiK,GACJ,KAAK,EACD,OAAO,EAEX,KAAK,EACD,OAAOkL,EAAmBuD,4BAA4B1Y,GAE1D,KAAK,EACD,OAAOmV,EAAmBwD,uBAAuB3Y,GAErD,KAAK,EACD,OAAOmV,EAAmByD,oBAAoB5Y,GAElD,KAAK,EACD,OAAOmV,EAAmB0D,kBAAkB7Y,GAEhD,KAAK,EACD,OAAOmV,EAAmB2D,wBAAwB9Y,GAEtD,KAAK,EACD,OAAO,EAIf,OAAO,I,kDAGwBA,GAC/B,OAAOA,IAAiC,iBAArBA,EAAQ,UAAoD,iBAArBA,EAAQ,Y,0CAG3CA,GACvB,OAAOA,GAAgC,iBAArBA,EAAQ,W,6CAGAA,GAC1B,OAAOA,IAAiC,oBAArBA,EAAQ,UAAuD,iBAArBA,EAAQ,Y,wCAGhDA,GACrB,IAAKA,EAAS,OAAO,EADS,IAGtB+Y,EAA4B/Y,EAA5B+Y,SAAUlkB,EAAkBmL,EAAlBnL,KAAM8L,EAAYX,EAAZW,QACxB,GAAIoY,EAAU,OAAO,EACrB,IAAKlkB,IAAS8L,EAAS,OAAO,EALA,IAOtBC,GAAa/L,GAAQ8L,GAArBC,SACR,QAAKA,GAEEA,EAAS2F,KACZ,SAAA/d,GAAC,MACuB,sBAApBA,EAAEwd,KAAK,UACa,0BAApBxd,EAAEwd,KAAK,UACa,+BAApBxd,EAAEwd,KAAK,a,8CAIYhG,GAC3B,OAAOA,GAAgC,qBAArBA,EAAQ,W,gCAGbiK,GACb,OAAQA,GACJ,KAAK,EACD,OAAO,KAEX,KAAK,EACD,MAAO,CAAE,QAAS,qCAEtB,KAAK,EACD,MAAO,CAAE,QAAS,gCAEtB,KAAK,EACD,MAAO,CAAE,QAAS,6BAEtB,KAAK,EACD,MAAO,CAAE,QAAS,2BAEtB,KAAK,EACD,MAAO,CAAE,QAAS,iCAEtB,KAAK,EACD,OAAO,KAIf,OAAO,O,gCAGMA,EAAeC,GAC5B,IAAKA,EACD,MAAO,GAGX,OAAQD,GACJ,KAAK,EACD,OAAQC,EAAMO,mBAAqBP,EAAMO,kBAAkBnE,SAAY4D,EAAMhE,SAASI,SAAW,GAErG,KAAK,EACD,OAAO4D,EAAMQ,eAAiB,GAElC,KAAK,EACD,OAAOR,EAAM3b,UAAY,GAE7B,KAAK,EACD,OAAO2b,EAAMS,OAAS,GAE1B,KAAK,EACD,OAAOT,EAAMU,KAAO,GAExB,KAAK,EACD,OAAOV,EAAMW,WAAa,GAE9B,KAAK,EACD,OAAOX,EAAMY,gBAAkB,GAIvC,MAAO,K,+CAGqB1gB,EAAOT,GAGnC,GAFmBS,EAAXuP,SAEOhQ,EAAMyd,WAAY,CAC7B,IAAM8C,EAAQpK,KAAaqK,SAAS/f,EAAMuP,QAEpC2M,EAAU4D,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBnE,SAAY4D,EAAMhE,SAASI,UAAgB,GACjHoE,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9Cnc,EAAW2b,EAAQA,EAAM3b,SAAW,GACpCoc,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BC,EAAMV,EAAQA,EAAMU,IAAM,GAC1BC,EAAYX,EAAQA,EAAMW,UAAY,GACtCC,EAAiBZ,EAAQA,EAAMY,eAAiB,GAElDb,GAAiB,EACjB3D,EAAQlK,OAAS,EACjB6N,EAAgB,EACTS,EAActO,OAAS,EAC9B6N,EAAgB,EACT1b,EAAS6N,OAAS,EACzB6N,EAAgB,EACTU,EAAMvO,OAAS,EACtB6N,EAAgB,EACTW,EAAIxO,OAAS,EACpB6N,EAAgB,EACTY,EAAUzO,OAAS,EAC1B6N,EAAgB,EACTa,EAAe1O,OAAS,IAC/B6N,EAAgB,GAEpB,IAAMnf,EAASqqB,EAAmBa,UAAU/L,EAAeC,GAAOrH,OAAO,SAAAra,GAAC,OAAI2sB,EAAmBc,eAAehM,EAAezhB,EAAEwX,WAEjI,MAAO,CACHoH,WAAYhd,EAAMuP,OAClBsQ,gBACA4L,UAAW,IAAIrZ,IACf4Z,UAAWjB,EAAmBkB,aAAapM,GAC3CmL,MAAOtqB,EAAOorB,MAAM,EAAGC,MACvB7P,UACAoE,gBACAnc,WACAoc,QACAC,MACAC,YACAC,iBACAa,cAAc,EACd2K,OAAQ,CACJC,SAAS,EACTC,WAAW,EACXC,kBAAkB,EAClB5T,OAAQsS,EAAmBuB,UAAUzM,KAKjD,OAAO,S,GAjXkBhf,IAAMC,WAAjCiqB,GAgFKsD,gBAAkB,SAACxO,EAAe8B,EAAMiN,GAG3C,OAAQ/O,GACJ,KAAK,EAAI,IACYliB,EAAOgkB,EAAhBvO,QACR,OACI,kBAACyL,GAAA,EAAD,CACIC,QAAM,EACNjd,IAAG,kBAAalE,GAChB4C,UAAU,yBACV,kBAACsuB,GAAA,EAAD,CAAMC,OAAQnxB,EAAI8R,SAAUmf,KAIxC,KAAK,EAAI,IACGva,EAAyBsN,EAAzBtN,QAAS1W,EAAgBgkB,EAAhBhkB,GAAIiY,EAAY+L,EAAZ/L,QACrB,MAAyB,iBAArBA,EAAQ,SAEJ,kBAAC,GAAD,CACI/T,IAAG,kBAAawS,EAAb,uBAAmC1W,GACtC4R,OAAQ8E,EACRuP,UAAWjmB,EACXwE,MAAOyT,EAAQzT,MACfqjB,UAAWoJ,EACXzK,iBAxBG,IAwBc9P,IAMzB,kBAAC,GAAD,CACIxS,IAAG,kBAAawS,EAAb,uBAAmC1W,GACtC4R,OAAQ8E,EACRuP,UAAWjmB,EACXkY,MAAOD,EAAQC,MACf2P,UAAWoJ,EACXzK,iBApCO,IAoCU9P,IAI7B,KAAK,EAAI,IACGA,EAAgBsN,EAAhBtN,QAAS1W,EAAOgkB,EAAPhkB,GACjB,OACI,kBAAC,GAAD,CACIkE,IAAG,kBAAawS,EAAb,uBAAmC1W,GACtC4R,OAAQ8E,EACRuP,UAAWjmB,EACXwmB,iBA/CO,IA+CU9P,IAI7B,KAAK,EAAI,IACGA,EAAyBsN,EAAzBtN,QAAS1W,EAAgBgkB,EAAhBhkB,GAAgBgkB,EAAZ/L,QACrB,OACI,kBAAC,GAAD,CACI/T,IAAG,kBAAawS,EAAb,uBAAmC1W,GACtC4R,OAAQ8E,EACRuP,UAAWjmB,EACXwmB,iBA1DO,IA0DU9P,IAI7B,KAAK,EAAI,IACGA,EAAyBsN,EAAzBtN,QAAS1W,EAAgBgkB,EAAhBhkB,GAAIiY,EAAY+L,EAAZ/L,QACrB,OACI,kBAAC,GAAD,CACI/T,IAAG,kBAAawS,EAAb,uBAAmC1W,GACtC4R,OAAQ8E,EACRuP,UAAWjmB,EACXuqB,QAAStS,EAAQ+Y,SACjBpY,QAASX,EAAQW,QACjBiP,UAAWoJ,EACXzK,iBAxEO,IAwEU9P,IAI7B,KAAK,EAAI,IACGA,EAAyBsN,EAAzBtN,QAAS1W,EAAgBgkB,EAAhBhkB,GAAIiY,EAAY+L,EAAZ/L,QACrB,OACI,kBAAC,GAAD,CACI/T,IAAG,kBAAawS,EAAb,uBAAmC1W,GACtC4R,OAAQ8E,EACRuP,UAAWjmB,EACX8iB,UAAW7K,EAAQmZ,WACnBvJ,UAAWoJ,EACXzK,iBArFO,IAqFU9P,IAI7B,KAAK,EAAI,IACG1W,EAAOgkB,EAAPhkB,GACR,OACI,kBAACkhB,GAAA,EAAD,CACIC,QAAM,EACNjd,IAAG,kBAAalE,GAChB4C,UAAU,yBACV,kBAAC,GAAD,CAAMgP,OAAQ5R,EAAI8R,SAAUmf,KAM5C,OAAO,MAoqBA7D,U,kBCtzBTiE,I,0BACF,WAAYhvB,GAAQ,IAAD,uBACf,4CAAMA,KA+FVyc,2BAA6B,SAAA/a,GACzB,IAAMia,EAAOR,KAAUhS,IAAI,EAAKnJ,MAAMuP,QACjCoM,GAGDA,EAAKC,MACkB,uBAAvBD,EAAKC,KAAK,UACVD,EAAKC,KAAKK,iBAAmBva,EAAOua,gBAEpC,EAAKtE,eAzGM,EA6GnB+E,2BAA6B,SAAAhb,GACzB,IAAMia,EAAOR,KAAUhS,IAAI,EAAKnJ,MAAMuP,QACjCoM,GAGDA,EAAKC,MACkB,uBAAvBD,EAAKC,KAAK,UACVD,EAAKC,KAAKe,gBAAkBjb,EAAOib,eAEnC,EAAKhF,eAtHM,EA0HnB6E,qBAAuB,SAAA9a,GACnB,IAAMia,EAAOR,KAAUhS,IAAI,EAAKnJ,MAAMuP,QACjCoM,KAGDA,EAAKC,MACmB,oBAAvBD,EAAKC,KAAK,UAAyD,mBAAvBD,EAAKC,KAAK,UACvDD,EAAKC,KAAKxI,UAAY1R,EAAO0R,SAE7B,EAAKuE,gBAnIM,EAuInB+D,mBAAqB,SAAAha,GACb,EAAKwa,QAAQ3J,IAAI7Q,EAAO0R,UACxB,EAAKuE,eAzIM,EA6InBhF,YAAc,WACV,EAAKsc,oBA9IU,EAiJnBA,iBAAmB,WAAO,IAAD,EACK,EAAKjvB,MAAvBuP,EADa,EACbA,OAAQse,EADK,EACLA,MAEV9Z,EAAQ7K,IAAU8K,WAExBC,YAAiBF,EAAO,CAACxE,IACzB,IAAM2M,EAAUgT,YAAoB3f,GAAQkE,IAAI,SAAArV,GAAC,OAAIA,EAAEgV,UACvD2a,YAAiBha,EAAOmI,GAEpB2R,GACAsB,YAAgB5f,IA3JL,EA+JnB6f,mBAAqB,WAAO,IAAD,EACD,EAAKpvB,MAAnB0P,EADe,EACfA,EAAGH,EADY,EACZA,OACL8f,EAAWjb,YAAgB7E,GACjC,GAAK8f,EAAL,CAEA,IAAMC,EAAoBpd,IAAY/I,IAAI,YAG1C4G,GAFqBuf,EAAoBA,EAAkBznB,MAAQ,yBAE/CwnB,GAEpB,EAAKxa,sBAAsBnF,EAAE,iBAzKd,EA4KnBmF,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK9U,MAAxC+U,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIzT,IAAI,QACJ0T,aAAW,QACXC,MAAM,UACNjV,UAAU,4BACVoN,QAAS,WACLqH,EAAcC,KAElB,kBAAC/G,EAAA,EAAD,WA3LG,EAiMnBqhB,gBAAkB,WAAO,IAAD,EACE,EAAKvvB,MAAnB0P,EADY,EACZA,EAAGH,EADS,EACTA,OACLigB,EAAcC,YAAmBlgB,GAClCigB,IAELzf,EAAK2f,aAAkBF,IAEvB,EAAK3a,sBAAsBnF,EAAE,kBAxMd,EA2MnBigB,kBAAoB,WAChB,EAAKvE,QAAQhV,QAAQ8U,UAAY,GA5MlB,EA+MnB0E,iBAAmB,WAAO,IAAD,EACK,EAAK5vB,MAAvBuP,EADa,EACbA,OAAQse,EADK,EACLA,MACVlS,EAAOR,KAAUhS,IAAIoG,GACtBoM,GACAA,EAAK9F,QAEVga,aAA6B,CAAEtgB,WAE3Bse,GACAjuB,IAAgBgG,aAAa,CACzB,QAAS,2BACT2J,OAAQ,MA1ND,EA+NnBugB,eAAiB,WAAO,IAAD,EACO,EAAK9vB,MAAvBuP,EADW,EACXA,OAAQse,EADG,EACHA,MAEhBhK,aAAStU,EAAQ,MAAM,GAEnBse,GACAjuB,IAAgBgG,aAAa,CACzB,QAAS,2BACT2J,OAAQ,KAvOD,EA4OnBwgB,eAAiB,SAAAjB,GACbhB,aAASgB,GAAQ,IA7OF,EAgPnBkB,iBAAmB,WACf,OAAK,EAAK5E,QAEH,EAAKA,QAAQhV,QAAQvK,aAFF,GAjPX,EAsPnBokB,eAAiB,SAAAtuB,GAAU,IACNwpB,EAAS,EAAKC,QAAvBhV,QACR,GAAK+U,EAAL,CAFsB,IAIL+E,EAAY,EAAKC,WAA1B/Z,QACH8Z,GACDA,EAAQ7E,YAAcF,EAAKD,YAE3BC,EAAKD,UAAYgF,EAAQ7E,UACzBF,EAAKiF,SAAS,CACVrrB,IAAKmrB,EAAQ7E,UACbgF,SAAU,YAGdlF,EAAKD,UAAYgF,EAAQ7E,UAAY,GACrC/iB,WAAW,WACP6iB,EAAKiF,SAAS,CACVrrB,IAAKmrB,EAAQ7E,UACbgF,SAAU,YAEf,OA1QQ,EAoRnB9D,aAAe,SAAA5qB,GACX,GAAK,EAAKypB,SACL,EAAKkF,SAAV,CAFoB,IAIHnF,EAAS,EAAKC,QAAvBhV,QACR,GAAK+U,EAAL,CALoB,IAOHrL,EAAU,EAAKwQ,SAAxBla,QACH0J,IAEDqL,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKoF,aAAeC,MAC1D1Q,EAAMyM,aAAa5qB,GAGvBme,EAAM2M,iBAAiB9qB,EAAOwpB,OA/R9B,EAAKC,QAAUvqB,IAAM2Y,YACrB,EAAK2W,WAAatvB,IAAM2Y,YACxB,EAAK8W,SAAWzvB,IAAM2Y,YALP,IAOPjK,EAAW,EAAKvP,MAAhBuP,OAPO,OASf,EAAK2M,QAAU,IAAI9J,IACnB,EAAK7S,MAAQ,CACTyd,WAAYzN,GAXD,E,qFAyBKnP,EAAWC,GACZnB,KAAKc,MAAhBuP,OADmC,IAG1B4b,EAASjsB,KAAKksB,QAAvBhV,QAYR,MAViB,CACb8U,UAF8CC,EAA1CD,UAGJqF,aAH8CpF,EAA/BoF,aAIf/E,aAJ8CL,EAAjBK,gB,4CAcfvQ,EAAWC,GAAY,IAAD,EACchc,KAAKc,MAAnDuP,EADgC,EAChCA,OAAQkhB,EADwB,EACxBA,MAAOC,EADiB,EACjBA,SAAUC,EADO,EACPA,iBAEjC,OAAI1V,EAAU1L,SAAWA,IAIrB0L,EAAUyV,WAAaA,IAIvBzV,EAAU0V,mBAAqBA,GAI/B1V,EAAUwV,QAAUA,M,yCAOTrwB,EAAWC,EAAWC,GAAW,IACxCiP,EAAWrQ,KAAKc,MAAhBuP,OACJnP,EAAUmP,SAAWA,GACrBrQ,KAAKyT,cAHsC,IAM9BwY,EAASjsB,KAAKksB,QAAvBhV,QACA8U,EAA0C5qB,EAA1C4qB,UAA0C5qB,EAA/BiwB,aAA+BjwB,EAAjBkrB,aAC7BprB,EAAUmP,SAAWA,EACrB4b,EAAKD,UAAYA,EAEjBC,EAAKD,UAAY,I,0CAKrBhsB,KAAKyT,cAELU,KAAUhJ,GAAG,mBAAoBnL,KAAKwc,oBACtCrI,KAAUhJ,GAAG,qBAAsBnL,KAAKsd,sBACxCT,KAAgB1R,GAAG,2BAA4BnL,KAAKud,4BACpDQ,KAAgB5S,GAAG,2BAA4BnL,KAAKwd,8B,6CAIpDrJ,KAAU7I,IAAI,mBAAoBtL,KAAKwc,oBACvCrI,KAAU7I,IAAI,qBAAsBtL,KAAKsd,sBACzCT,KAAgBvR,IAAI,2BAA4BtL,KAAKud,4BACrDQ,KAAgBzS,IAAI,2BAA4BtL,KAAKwd,8B,+BAwM/C,IAAD,SAQDxd,KAAKc,MANL2d,EAFC,EAEDA,WACApd,EAHC,EAGDA,UACAgP,EAJC,EAIDA,OACAyK,EALC,EAKDA,QACA6T,EANC,EAMDA,MACAne,EAPC,EAODA,EAPC,EAUgCxQ,KAAKc,MAApC0wB,EAVD,EAUCA,SAAUC,EAVX,EAUWA,iBAEhBA,EAAmBA,GAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAZlD,OAWLD,EAAWA,GAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAGgEjd,IACnG,SAACmd,EAAIte,GAAL,OAAWse,EAAKD,EAAiBre,KAfhC,mBAkBCqJ,GAlBD,8BAkBQR,KAAUhS,IAAIoG,IAC3B,IAAKoM,EACD,OACI,yBAAKpb,UAAU,gBACX,kBAAC,GAAD,CAAmByZ,QAASA,IAC5B,yBAAKG,IAAKjb,KAAKksB,QAAS7qB,UAAWiN,IAAW,oBAAqB,wBAK/E,IAAIqjB,EAAqB,EACzB,GAAIhT,aAActO,GAAS,CACvB,IAAMuM,EAAWzI,KAAU2I,YAAYL,EAAKC,KAAKxI,SACjDyd,EAAqB/U,EAAWA,EAASgV,sBAAwBD,EAGrE,IAAMxB,EAAWjb,YAAgB7E,GAC3BigB,EAAcC,YAAmBlgB,GACnCwhB,EAAMC,YAAWzhB,GAEf0hB,GADUC,aAAY3hB,GACfkO,aAASlO,IAEhB2M,EAAUgT,YAAoB3f,GAC9B4hB,EAAQ,GACdjyB,KAAKgd,QAAU,IAAI9J,IACnB8J,EAAQrd,QAAQ,SAAAuyB,GACZ,IAAMC,EAAOhe,KAAUlK,IAAIioB,EAAOhe,SAC9Bie,IACA,EAAKnV,QAAQxE,IAAI2Z,EAAK1zB,GAAI0zB,EAAK1zB,IAC/BwzB,EAAMje,KAAKme,MAICF,EAAMG,KAAK,SAAClzB,EAAGmzB,GAC/B,OAAOC,aAAmBD,GAAKC,aAAmBpzB,KAE5BqV,IAAI,SAAA4d,GAAI,OAC9B,kBAACxS,GAAA,EAAD,CAAUC,QAAM,EAACve,UAAU,YAAYsB,IAAKwvB,EAAK1zB,IAC7C,kBAACkxB,GAAA,EAAD,CAAMC,OAAQuC,EAAK1zB,GAAI8R,SAAU,EAAKsgB,oBAL9C,IASQla,EAAU8F,EAAV9F,MAER,GAAIqb,aAAY3hB,IAAWuO,YAAcvO,GAAS,CAAC,IAAD,EACGkiB,aAA6BV,EAAK,IAArEW,EADgC,EACtCjnB,KAAyBknB,EADa,EACvBnb,SACnBmb,EAAY3f,OAAS,IACrB+e,EAAM9G,aAAiB,CAAE,QAAS,gBAAiBxf,KAAMinB,EAASlb,SAAUmb,KAIpF,IAAIC,EAAgBliB,EAAE,eAClBoO,YAAcvO,GACdqiB,EAAgBliB,EAAE,eACXwhB,aAAY3hB,KACnBqiB,EAAgBliB,EAAE,cAGtB,IAAImiB,EAAU,GACVxC,IAEIwC,EADAhU,aAActO,GACJ8f,EAEKnd,IAAY/I,IAAI,YAC1BtB,MACAyR,cACApW,QAAQ,WAAY,IACpBA,QAAQ,UAAW,IAELmsB,GAI3B,IAAMzZ,EACF,oCACI,kBAAC,GAAD,CACIrG,OAAQA,EACRoO,WAAYA,EACZ3D,QAASA,EACTrM,QAASzO,KAAKywB,oBAElB,yBACIxV,IAAKjb,KAAKksB,QACV7qB,UAAWiN,IAAW,oBAAqB,qBAC3CskB,SAAU5yB,KAAKqtB,cACf,yBAAKhsB,UAAU,qBACX,kBAAC,GAAD,CACIgP,OAAQA,EACR+N,KAAK,EACLD,YAAY,EACZjC,mBAAoByS,EACpBzQ,aAAcvH,EAAQ3W,KAAK0wB,iBAAmB,QAEhDqB,GACE,kBAACc,GAAA,EAAD,CAAMxxB,UAAU,sBACXwwB,GACG,kBAAClS,GAAA,EAAD,CAAUte,UAAU,oBAAoBwe,WAAW,cAC/C,kBAACC,GAAA,EAAD,KACI,kBAAC,KAAD,CAAkBze,UAAU,4BAEhC,kBAAC8e,GAAA,EAAD,CACIC,QAASyR,EACTrR,UAAW7B,aAActO,GAAUG,EAAE,OAASA,EAAE,0BAChD9K,MAAO,CAAEkM,WAAY,WAAYkhB,SAAU,iBAItD3C,GACG,kBAACxQ,GAAA,EAAD,CAAUC,QAAM,EAACve,UAAU,oBAAoBwe,WAAW,aAAapR,QAASzO,KAAKkwB,oBACjF,kBAACpQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACK,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/BoS,GAGTnS,UAAW7B,aAActO,GAAUG,EAAE,YAAcA,EAAE,iBAIhE8f,GACG,oCACI,kBAAC3Q,GAAA,EAAD,CAAUC,QAAM,EAACve,UAAU,oBAAoBwe,WAAW,aAAapR,QAASzO,KAAKqwB,iBACjF,kBAACvQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACK,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/BiQ,aAAkBF,IAG3B9P,UAAWhQ,EAAE,aAK7B,kBAAC,GAAD,CAAuBH,OAAQA,IAC9Bse,GACG,kBAAChP,GAAA,EAAD,CAAUC,QAAM,EAACve,UAAU,oBAAoBwe,WAAW,aAAapR,QAASzO,KAAK4wB,gBACjF,kBAACzQ,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAY/J,MAAM,UAAUgK,QAAQ,UAAUC,QAAM,GAC/CmS,EAAcK,eAGvBrtB,MAAO,CAAEstB,YAAa,SAQ9C,yBAAK/X,IAAKjb,KAAKixB,aACf,kBAAC,GAAD,CAAiB5gB,OAAQA,EAAQ5B,QAASzO,KAAK+wB,iBAC/C,kBAAC,GAAD,CAAoB9V,IAAKjb,KAAKoxB,SAAU/gB,OAAQA,EAAQse,MAAOA,MAK3E,OAAOA,EAAQ,oCAAGjY,GAAc,yBAAKrV,UAAWiN,IAAW,eAAgBjN,IAAaqV,M,gDA3c5D5V,EAAOT,GACnC,OAAIS,EAAMuP,SAAWhQ,EAAMyd,WAChB,CACHA,WAAYhd,EAAMuP,QAInB,S,GAvBW1O,IAAMC,YAmfjB6Z,GAPCC,YACZuX,cACAriB,cACA+K,IACAuX,cAGWzX,CAAQqU,ICnhBRqD,I,wLApBD,IACErY,EAAY9a,KAAKc,MAAjBga,QAER,OACI,yBAAKzZ,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAAhB,0B,GAVeM,IAAMC,YCMnCwxB,I,mBACF,WAAYtyB,GAAQ,IAAD,8BACf,4CAAMA,KA0BVuyB,aAAe,SAAAhjB,GAAW,IACdse,EAAU,EAAK7tB,MAAf6tB,MAERhK,aAAStU,GAELse,GACAjuB,IAAgBgG,aAAa,CACzB,QAAS,2BACT2J,OAAQ,KAhChB,EAAKhQ,MAAQ,CACTsU,QAAS,IAJE,E,iFAQE,IAAD,OACRtE,EAAWrQ,KAAKc,MAAhBuP,OAEFuf,EAAS0D,YAAcjjB,GACxBuf,GAELlvB,IAAgBC,KAAK,CACjB,QAAS,oBACTuT,QAAS0b,EACT9b,eAAgB,EAChBC,MAAO,MACRnT,KAAK,SAAAC,GACJ,IAAMgU,EAAQ7K,IAAU8K,WACxBC,YAAiBF,EAAOhU,EAAO+T,UAE/B,EAAK7T,SAAS,CAAE4T,QAAS9T,EAAO+T,e,+BAiB9B,IAAD,SACiC5U,KAAKc,MAAnCyyB,EADH,EACGA,UAAWzY,EADd,EACcA,QAAS6T,EADvB,EACuBA,MAGtBla,EAFczU,KAAKK,MAAjBsU,QAEcJ,IAAI,SAAArV,GAAC,OACvB,kBAACygB,GAAA,EAAD,CAAUC,QAAM,EAACjd,IAAKzD,GAClB,kBAAC,GAAD,CAAMmR,OAAQnR,EAAGqR,SAAU,EAAK8iB,kBAIlC3c,EACF,oCACI,kBAAC,GAAD,CAAsBoE,QAASA,IAC/B,yBAAKzZ,UAAU,wBAAwBqE,MAAO,CAAE6tB,cAC3C9e,IAKb,OAAOka,EAAQ,oCAAGjY,GAAc,yBAAKrV,UAAU,oBAAoBqV,O,GA5D9C/U,IAAMC,YAuEnCwxB,GAAe9W,aAAe,CAC1BqS,OAAO,EACP4E,UAAW,GAGAH,U,6BCtFAvxB,gBACX,0BAAMC,EAAE,wjBACR,U,UCOE0xB,I,mBACF,WAAY1yB,GAAQ,IAAD,8BACf,4CAAMA,KAqBV2yB,aAAe,WACX,GAAI,EAAKC,eAAexc,SACF,EAAKwc,eAAexc,QAAQwB,UAC/B,CACX,EAAKgb,eAAexc,QAAQwB,UAAY,GAD7B,IAGHib,EAAa,EAAK7yB,MAAlB6yB,SACR,IAAKA,EAAU,OAGf,YADAA,EAAS,IATA,IAcTC,EAAkB,EAAK9yB,MAAvB8yB,cACAC,EAAe,EAAKxzB,MAApBwzB,WAER,EAAK9yB,SAAS,CAAE8yB,YAAaA,IAEzBD,GACAA,KA1CW,EA8CnBE,cAAgB,SAAArxB,GACU,KAAlBA,EAAMmW,SACNnW,EAAM6B,kBAhDK,EAoDnByvB,YAAc,WACV,IAAM3mB,EAAU,EAAKsmB,eAAexc,QACpC,GAAK9J,EAAL,CAFgB,IAIRf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MANR,IAQRqM,EAActL,EAAdsL,UAEAib,EAAa,EAAK7yB,MAAlB6yB,SACHA,GAELA,EAASjb,KAjEM,EAoEnBsb,YAAc,SAAAvxB,GACV,IAAMmX,EAAYnX,EAAMoX,cAAcC,QAAQ,cAC1CF,IACAnX,EAAM6B,iBACNW,SAASkN,YAAY,cAAc,EAAOyH,KArE9C,EAAK8Z,eAAiB/xB,IAAM2Y,YAE5B,EAAKja,MAAQ,CACTwzB,YAAY,GAND,E,gFAUA3yB,EAAWC,EAAWC,GAAW,IAAD,OACvCyyB,EAAe7zB,KAAKK,MAApBwzB,WAEJA,GAAcA,IAAe3yB,EAAU2yB,YACvCzqB,WAAW,WACH,EAAKsqB,eAAexc,SACpB,EAAKwc,eAAexc,QAAQxP,SAEjCusB,O,+BA0DD,IAAD,EAC4Cj0B,KAAKc,MAA9C0P,EADH,EACGA,EAAG6L,EADN,EACMA,MAAO5N,EADb,EACaA,QAASqM,EADtB,EACsBA,QAAS6Y,EAD/B,EAC+BA,SAC5BE,EAAe7zB,KAAKK,MAApBwzB,WAER,OACI,yBAAKxyB,UAAU,iBACTwyB,EAUE,oCACI,yBAAKxyB,UAAU,4BACX,yBACI5C,GAAG,yBACHwc,IAAKjb,KAAK0zB,eACVvY,YAAa3K,EAAE,UACfe,iBAAe,EACf2J,gCAA8B,EAC9BxY,UAAW1C,KAAK8zB,cAChB1Y,QAASpb,KAAK+zB,YACd1Y,QAASrb,KAAKg0B,gBAnB1B,oCACI,kBAAC5d,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,oCAAoCoN,QAASA,GACxD,0BAAMpN,UAAU,yBAAyBgb,KAmBpDoM,QAAQkL,IACL,kBAACvd,EAAA,EAAD,CAAY/U,UAAU,sBAAsBkN,YAAavO,KAAKyzB,cAC1D,kBAACS,GAAA,EAAD,CAAexZ,KAAMmZ,EAAYpI,KAAM,kBAAC,GAAD,MAAgB0I,SAAU,kBAACnlB,EAAA,EAAD,c,GA9GzDrN,IAAMC,YA8HvBgP,iBAAkB4iB,IC8VlBY,I,mBAjdX,WAAYtzB,GAAQ,IAAD,EACf,GADe,qBACX,6CAAeszB,EACf,MAAM,IAAIC,UAAU,uDAFT,OAOf,4CAAMvzB,KAyDV4f,uBAAyB,SAAAle,GAAW,IAAD,EACI,EAAK1B,MAAhCuP,EADuB,EACvBA,OAAQikB,EADe,EACfA,eADe,EAEE,EAAKj0B,MAA9ByrB,EAFuB,EAEvBA,MAAOyI,EAFgB,EAEhBA,cAEPpf,EAAkD3S,EAAlD2S,QAASC,EAAyC5S,EAAzC4S,WAAyBof,GAAgBhyB,EAA7BiyB,YAA6BjyB,EAAhBgyB,aAEpC5e,EAAUY,KAAavM,IAAIkL,EAASC,GAG1C,GAAID,IAAY9E,EAAQ,CACpB,IAAKyb,EAAMhZ,OAAQ,OACnB,IAAK4hB,YAAQtf,EAAY0W,EAAM,GAAGrtB,GAAIqtB,EAAMA,EAAMhZ,OAAS,GAAGrU,IAAI,GAAO,OAEzE,IAAMujB,EAAQ8J,EAAM6I,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAO2W,IACxC,EAAKuX,eAAe6H,IACL,IAAXxS,EAEA,EAAKjhB,SAAS,CAAE+qB,MAAO8I,YAAc9I,EAAOlW,EAASif,QAGrD,EAAK9zB,SAAS,CAAE+qB,MAAM,GAAD,oBAAMA,EAAMc,MAAM,EAAG5K,IAArB,CAA6BpM,GAA7B,aAAyCkW,EAAMc,MAAM5K,EAAQ,QAGvE,IAAXA,GAGA,EAAKjhB,SAAS,CAAE+qB,MAAOA,EAAMvS,OAAO,SAAAra,GAAC,OAAIA,EAAET,KAAO2W,WAGvD,GAAID,IAAYmf,EAAgB,CACnC,IAAKC,EAAczhB,OAAQ,OAC3B,IAAK4hB,YAAQtf,EAAYmf,EAAc,GAAG91B,GAAI81B,EAAcA,EAAczhB,OAAS,GAAGrU,IAAI,GAAO,OAEjG,IAAMujB,EAAQuS,EAAcI,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAO2W,IAChD,EAAKuX,eAAe6H,IACL,IAAXxS,EAEA,EAAKjhB,SAAS,CACVwzB,cAAeK,YAAcL,EAAe3e,EAASif,QAIzD,EAAK9zB,SAAS,CACVwzB,cAAc,GAAD,oBAAMA,EAAc3H,MAAM,EAAG5K,IAA7B,CAAqCpM,GAArC,aAAiD2e,EAAc3H,MAAM5K,EAAQ,QAInF,IAAXA,GAGA,EAAKjhB,SAAS,CAAEwzB,cAAeA,EAAchb,OAAO,SAAAra,GAAC,OAAIA,EAAET,KAAO2W,QAlH/D,EAwHnB4L,mBAAqB,SAAAxe,GAAW,IAAD,EACQ,EAAK1B,MAAhCuP,EADmB,EACnBA,OAAQikB,EADW,EACXA,eADW,EAEM,EAAKj0B,MAA9ByrB,EAFmB,EAEnBA,MAAOyI,EAFY,EAEZA,cAEP3e,EAAYpT,EAAZoT,QACAT,EAAYS,EAAZT,QAER,GAAIA,IAAY9E,GACX,EAAKge,eAAezY,GAAzB,CAEA,IAAMf,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAO,CAACe,IAExBT,IAAY9E,EACZ,EAAKtP,SAAS,CAAE+qB,MAAO,CAAClW,GAAS0D,OAAOwS,KACjC3W,IAAYmf,GACnB,EAAKvzB,SAAS,CAAEwzB,cAAe,CAAC3e,GAAS0D,OAAOib,OAxIrC,EA4InBxT,uBAAyB,SAAAve,GAAW,IAAD,EACI,EAAK1B,MAAhCuP,EADuB,EACvBA,OAAQikB,EADe,EACfA,eADe,EAEE,EAAKj0B,MAA9ByrB,EAFuB,EAEvBA,MAAOyI,EAFgB,EAEhBA,cAEPpf,EAAyB3S,EAAzB2S,QAASiD,EAAgB5V,EAAhB4V,YAEX7D,EAAM,IAAIrB,IAAIkF,EAAY7D,IAAI,SAAArV,GAAC,MAAI,CAACA,EAAGA,MACvC41B,EAAW,WACT,EAAKz0B,MAAMyrB,MAAMhZ,OAAS,EAAKzS,MAAMk0B,cAAczhB,OAAS+Z,MAC5D,EAAKS,WAAW,EAAKN,SAIzB7X,IAAY9E,EACZ,EAAKtP,SAAS,CAAE+qB,MAAOA,EAAMvS,OAAO,SAAAra,GAAC,OAAKqV,EAAIlB,IAAInU,EAAET,OAAQq2B,GACrD3f,IAAYmf,GACnB,EAAKvzB,SAAS,CAAEwzB,cAAeA,EAAchb,OAAO,SAAAra,GAAC,OAAKqV,EAAIlB,IAAInU,EAAET,OAAQq2B,IA5JjE,EAgKnBrhB,YAAc,WACV,EAAKuZ,OAAS,CACVC,SAAS,EACTC,WAAW,EACXC,kBAAkB,EAClBrB,MAAO,GACPyI,cAAe,GACfhb,OAAQ,EAAKwb,mBAEjB,EAAKzH,WAAW,EAAKN,SAzKN,EA4KnBM,WA5KmB,sCA4KN,WAAON,GAAP,6CAAAlc,EAAA,wDAAe6c,IAAf,iCACDtd,EAAW,EAAKvP,MAAhBuP,OACA6c,EAAsCF,EAAtCE,UAAW3T,EAA2ByT,EAA3BzT,OAAQuS,EAAmBkB,EAAnBlB,OAAmBkB,EAAZC,QAFzB,qDAOLC,EAPK,wDASHY,EAAgBhC,EAAMhZ,OAAS,EAAIgZ,EAAMA,EAAMhZ,OAAS,GAAGrU,GAAK,EACtEuuB,EAAOC,SAAU,EAVR,UAWYvsB,IAAgBC,KAAK,CACtC,QAAS,qBACTwU,QAAS9E,EACTqJ,MAAO,GACPsU,eAAgB,EAChBC,gBAAiBH,EACjBxD,OAAQ,EACRvW,MAAO8Y,KACPtT,WACD2U,QAAQ,WACPlB,EAAOC,SAAU,IArBZ,QAWHpsB,EAXG,OAwBTH,IAAgBC,KAAK,CACjB,QAAS,qBACTwU,QAAS9E,EACTqJ,MAAO,GACPsU,eAAgB,EAChBC,gBAAiBH,EACjBxD,OAAQ,EACRvW,MAAoC,EAA7B8Y,KACPtT,WAGIsU,EAAahtB,EAAbgtB,SACRb,EAAOE,UAAgC,IAApBW,EAAS/a,QAAyC,IAAzB+a,EAASO,YACrDpB,EAAOlB,MAAQA,EAAMxS,OAAOuU,EAAStU,OAAO,EAAK8U,iBAC3CC,EAAoBX,GAAkBE,EAAS/a,OAAS,GAAK+a,EAAS/a,OAAS+Z,KAErFrW,KAAa+X,SAAS1tB,EAAOgtB,UACvBhZ,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAOhU,EAAOgtB,UAElC,EAAK9sB,SAAS,CAAE+qB,MAAOkB,EAAOlB,QAE1BkB,EAAOE,UACP,EAAKuB,mBAAmBzB,GAAQ,GACzBsB,GACP,EAAKhB,WAAWN,GAAQ,GAjDnB,0CA5KM,wDAiOnByB,mBAjOmB,sCAiOE,WAAOzB,GAAP,+CAAAlc,EAAA,wDAAe6c,IAAf,iCACT2G,EAAmB,EAAKxzB,MAAxBwzB,eACA/a,EAA4DyT,EAA5DzT,OAAQ0T,EAAoDD,EAApDC,QAASE,EAA2CH,EAA3CG,iBAAiCrB,EAAUkB,EAAzBuH,cAItCD,EANY,qDAObrH,EAPa,qDAQbE,EARa,wDAUXW,EAAgBhC,EAAMhZ,OAAS,EAAIgZ,EAAMA,EAAMhZ,OAAS,GAAGrU,GAAK,EACtEuuB,EAAOC,SAAU,EAXA,UAYIvsB,IAAgBC,KAAK,CACtC,QAAS,qBACTwU,QAASmf,EACT5a,MAAO,GACPsU,eAAgB,EAChBC,gBAAiBH,EACjBxD,OAAQ,EACRvW,MAAO8Y,KACPtT,WACD2U,QAAQ,WACPlB,EAAOC,SAAU,IAtBJ,WAYXpsB,EAZW,OAyBTgtB,EAAahtB,EAAbgtB,SACRb,EAAOuH,cAAgBzI,EAAMxS,OAAOuU,EAAStU,OAAO,EAAK8U,iBACzDrB,EAAOG,iBAAuC,IAApBU,EAAS/a,QAAyC,IAAzB+a,EAASO,YACtDE,EAAoBX,GAAkBE,EAAS/a,OAAS,GAAK+a,EAAS/a,OAAS+Z,MAEjFG,EAAOG,iBA9BM,mDAgCjB3W,KAAa+X,SAASV,GAChBhZ,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAOgZ,GAE3B,EAAK9sB,SAAS,CAAEwzB,cAAevH,EAAOuH,gBAElCjG,GACA,EAAKG,mBAAmBzB,GAAQ,GAvCnB,0CAjOF,wDA4QnBK,aAAe,WACX,GAAK,EAAKnB,QAAV,CAEA,IAAMD,EAAO,EAAKC,QAAQhV,QAC1B,GAAK+U,EAAL,CAJiB,IAMTe,EANS,eAMTA,OAEJf,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKoF,aAAeC,OACtDtE,IAAWA,EAAOE,UAClB,EAAKI,WAAWN,GAEhB,EAAKyB,mBAAmBzB,OAxRjB,EA6RnByD,kBAAoB,WAChB,IAAMxE,EAAO,EAAKC,QAAQhV,QACrB+U,IAELA,EAAKD,UAAY,IAjSF,EAoSnBgJ,mBAAqB,WACjB,GAAK,EAAKC,cAAV,CAEA,IAAMhJ,EAAO,EAAKgJ,cAAc/d,QAChC,GAAK+U,EAAL,CAJuB,IAMfiJ,EANe,eAMfA,aACHA,GAEDjJ,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKoF,aAAeC,OACrD4D,EAAahI,UAGd,EAAKiI,qBAAqBD,GAF1B,EAAKE,aAAaF,OA/SX,EAsTnBE,aAtTmB,sCAsTJ,WAAOpI,GAAP,iDAAAlc,EAAA,wDAAe6c,IAAf,iCACHtd,EAAW,EAAKvP,MAAhBuP,OACA6c,EAA6CF,EAA7CE,UAAW3T,EAAkCyT,EAAlCzT,OAAQuS,EAA0BkB,EAA1BlB,MAAOmB,EAAmBD,EAAnBC,QAASvT,EAAUsT,EAAVtT,OAIvCwT,EANO,qDAOPD,EAPO,wDASLa,EAAgBhC,EAAMhZ,OAAS,EAAIgZ,EAAMA,EAAMhZ,OAAS,GAAGrU,GAAK,EACtEuuB,EAAOC,SAAU,EAVN,UAWUvsB,IAAgBC,KAAK,CACtC,QAAS,qBACTwU,QAAS9E,EACTqJ,QACAsU,eAAgB,EAChBC,gBAAiBH,EACjBxD,OAAQ,EACRvW,MAAO8Y,KACPtT,WACD2U,QAAQ,WACPlB,EAAOC,SAAU,IArBV,WAWLpsB,EAXK,OAwBHgtB,EAAahtB,EAAbgtB,SACRb,EAAOlB,MAAQA,EAAMxS,OAAOuU,EAAStU,OAAO,EAAK8U,iBACjDrB,EAAOE,UAAgC,IAApBW,EAAS/a,QAAyC,IAAzB+a,EAASO,YAC/CE,EAAoBX,GAAkBE,EAAS/a,OAAS,GAAK+a,EAAS/a,OAAS+Z,KAEjF,EAAKqI,eAAiBlI,EA7Bf,mDA+BXxW,KAAa+X,SAASV,GAChBhZ,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAOgZ,GAE3B,EAAK9sB,SAAS,CAAEs0B,YAAarI,EAAOlB,MAAOwJ,oBAAqBtI,EAAOuH,gBAEnEvH,EAAOE,UACP,EAAKiI,qBAAqBnI,GAAQ,GAC3BsB,GACP,EAAK8G,aAAapI,GAAQ,GAxCnB,0CAtTI,wDAkWnBmI,qBAlWmB,sCAkWI,WAAOnI,GAAP,iDAAAlc,EAAA,wDAAe6c,IAAf,iCACX2G,EAAmB,EAAKxzB,MAAxBwzB,eACA/a,EAAmEyT,EAAnEzT,OAAQ0T,EAA2DD,EAA3DC,QAAwBnB,EAAmCkB,EAAlDuH,cAAsBpH,EAA4BH,EAA5BG,iBAAkBzT,EAAUsT,EAAVtT,MAI5D4a,EANc,qDAOfrH,EAPe,qDAQfE,EARe,wDAUbW,EAAgBhC,EAAMhZ,OAAS,EAAIgZ,EAAMA,EAAMhZ,OAAS,GAAGrU,GAAK,EACtEuuB,EAAOC,SAAU,EAXE,UAYEvsB,IAAgBC,KAAK,CACtC,QAAS,qBACTwU,QAASmf,EACT5a,QACAsU,eAAgB,EAChBC,gBAAiBH,EACjBxD,OAAQ,EACRvW,MAAO8Y,KACPtT,WACD2U,QAAQ,WACPlB,EAAOC,SAAU,IAtBF,WAYbpsB,EAZa,OAyBXgtB,EAAahtB,EAAbgtB,SACRb,EAAOuH,cAAgBzI,EAAMxS,OAAOuU,EAAStU,OAAO,EAAK8U,iBACzDrB,EAAOG,iBAAuC,IAApBU,EAAS/a,QAAyC,IAAzB+a,EAASO,YACtDE,EAAoBX,GAAkBE,EAAS/a,OAAS,GAAK+a,EAAS/a,OAAS+Z,KAEjF,EAAKqI,eAAiBlI,EA9BP,mDAgCnBxW,KAAa+X,SAASV,GAChBhZ,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAOgZ,GAE3B,EAAK9sB,SAAS,CAAEs0B,YAAarI,EAAOlB,MAAOwJ,oBAAqBtI,EAAOuH,gBAEnEjG,GACA,EAAK6G,qBAAqBnI,GAAQ,GAvCnB,0CAlWJ,wDA6YnByG,aA7YmB,sCA6YJ,WAAMloB,GAAN,eAAAuF,EAAA,wDACL4I,EAAQnO,EAAOA,EAAKwN,OAAS,GADxB,uBAGP,EAAKwc,oBAHE,0BAOX,EAAKL,aAAe,CAChBxb,QACAwT,WAAW,EACXC,kBAAkB,EAClBrB,MAAO,GACPyI,cAAe,GACfhb,OAAQ,EAAKwb,mBAEjB,EAAKK,aAAa,EAAKF,cAAc,GAf1B,yCA7YI,wDA+ZnBK,kBAAoB,WAChB,EAAKL,aAAe,KACpB,EAAKn0B,SAAS,CAAEs0B,YAAa,GAAIC,oBAAqB,MAjavC,EAoanBjH,eAAiB,SAAAzY,GACb,QAAKA,GAEE,EAAK+W,eAAe/W,EAAQc,UA9ZnC,EAAKwV,QAAUvqB,IAAM2Y,YACrB,EAAK2a,cAAgBtzB,IAAM2Y,YAE3B,EAAKja,MAAQ,CACTyrB,MAAO,GACPyI,cAAe,GACfc,YAAa,GACbC,oBAAqB,IAhBV,E,gFAPf,OAAO,O,+CAIP,OAAO,S,iDAwBP,OAAO,I,qCAGI5e,GACX,MAAM,IAAItE,MAAM,sD,sCAGJwD,GAAU,IACd0e,EAAmBt0B,KAAKc,MAAxBwzB,eACAnf,EAAgBS,EAAhBT,QAAS1W,EAAOmX,EAAPnX,GAEjB,OACI,kBAAC,GAAD,CACIkE,IAAG,kBAAawS,EAAb,uBAAmC1W,GACtC4R,OAAQ8E,EACRuP,UAAWjmB,EACXwmB,gBAAiB9P,IAAYmf,M,wCAMrC,MAAM,IAAIliB,MAAM,uD,kCAIhB,MAAM,IAAIA,MAAM,iD,0CAIhBpS,KAAKyT,cAEL+C,KAAarL,GAAG,uBAAwBnL,KAAK+gB,wBAC7CvK,KAAarL,GAAG,uBAAwBnL,KAAK0gB,wBAC7ClK,KAAarL,GAAG,mBAAoBnL,KAAKghB,sB,6CAIzCxK,KAAalL,IAAI,uBAAwBtL,KAAK+gB,wBAC9CvK,KAAalL,IAAI,uBAAwBtL,KAAK0gB,wBAC9ClK,KAAalL,IAAI,mBAAoBtL,KAAKghB,sB,+BA6WpC,IAAD,SACiChhB,KAAKc,MAAnCyyB,EADH,EACGA,UAAWzY,EADd,EACcA,QAAS6T,EADvB,EACuBA,MADvB,EAE8D3uB,KAAKK,MAAhEyrB,EAFH,EAEGA,MAAOyI,EAFV,EAEUA,cAAec,EAFzB,EAEyBA,YAAaC,EAFtC,EAEsCA,oBACnCJ,EAAiBl1B,KAAjBk1B,aAEFrH,EAAW/B,EAAMxS,OAAOib,GAAehgB,IAAI,SAAArV,GAAC,OAAI,EAAKiwB,gBAAgBjwB,KACrEs2B,EAAiBH,EAAY/b,OAAOgc,GAAqB/gB,IAAI,SAAArV,GAAC,OAAI,EAAKiwB,gBAAgBjwB,KAE7F,OACI,oCACI,kBAAC,GAAD,CACImd,MAAOrc,KAAKy1B,YACZhnB,QAASzO,KAAKywB,kBACd3V,QAASA,EACT6Y,SAAU3zB,KAAK01B,YAAc11B,KAAKyzB,aAAe,KACjDG,cAAe5zB,KAAKu1B,oBAExB,yBACIta,IAAKjb,KAAKksB,QACV7qB,UAAWiN,IAAW,oBAAqBtO,KAAK21B,oBAChD/C,SAAU5yB,KAAKqtB,aACf3nB,MAAO,CAAE6tB,UAAW5E,EAAQ4E,EAAY,OACvC1F,GAEJpF,QAAQyM,IACL,yBACIja,IAAKjb,KAAKi1B,cACV5zB,UAAWiN,IAAW,2BAA4BtO,KAAK41B,0BACvDhD,SAAU5yB,KAAKg1B,oBACdQ,Q,GAhdK7zB,IAAMC,YCP9Bi0B,I,8LACanf,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAOlG,EAFOxQ,KAAKc,MAAX0P,GAEC,kB,GAZU4jB,KAgB3ByB,GAAaC,UAAY,CACrBzlB,OAAQ0lB,KAAUC,OAAOC,WACzB3B,eAAgByB,KAAUC,OAC1Blb,QAASib,KAAUl2B,KAAKo2B,WACxBtH,MAAOoH,KAAUG,KACjB3C,UAAWwC,KAAUC,QAGzBH,GAAavZ,aAAe,CACxBqS,OAAO,EACP4E,UAAW,GAGA3iB,qBAAkBilB,IC7B3BM,I,8LACazf,GACX,OAAOA,GAAgC,oBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,kC,kCAMlB,OAAOlG,EAFOxQ,KAAKc,MAAX0P,GAEC,sB,GAZa4jB,KAgB9B+B,GAAgBL,UAAY,CACxBzlB,OAAQ0lB,KAAUC,OAAOC,WACzB3B,eAAgByB,KAAUC,OAC1Blb,QAASib,KAAUl2B,KAAKo2B,WACxBtH,MAAOoH,KAAUG,KACjB3C,UAAWwC,KAAUC,QAGzBG,GAAgB7Z,aAAe,CAC3BqS,OAAO,EACP4E,UAAW,GAGA3iB,qBAAkBulB,IC3B3BC,I,8LACa1f,GACX,IAAKA,EAAS,OAAO,EADD,IAGZ+Y,EAAmB/Y,EAAnB+Y,SAAUlkB,EAASmL,EAATnL,KAClB,GAAIkkB,EAAU,OAAO,EACrB,IAAKlkB,EAAM,OAAO,EALE,IAOZ+L,EAAa/L,EAAb+L,SACR,QAAKA,GAEEA,EAAS2F,KACZ,SAAA/d,GAAC,MACuB,sBAApBA,EAAEwd,KAAK,UACa,0BAApBxd,EAAEwd,KAAK,UACa,+BAApBxd,EAAEwd,KAAK,a,wCAKf,MAAO,CAAE,QAAS,6B,kCAMlB,OAAOlM,EAFOxQ,KAAKc,MAAX0P,GAEC,gB,sCAGGoF,GAAU,IACd0e,EAAmBt0B,KAAKc,MAAxBwzB,eACAnf,EAAyBS,EAAzBT,QAASuB,EAAgBd,EAAhBc,QAASjY,EAAOmX,EAAPnX,GAE1B,OACI,kBAAC,GAAD,CACIkE,IAAG,kBAAawS,EAAb,uBAAmC1W,GACtC4R,OAAQ8E,EACRuP,UAAWjmB,EACXuqB,QAAStS,EAAQ+Y,SACjBnJ,UAAW,kBAAMA,aAAUnR,EAAS1W,GAAI,IACxCwmB,gBAAiB9P,IAAYmf,Q,GAxCnBF,KA8C1BgC,GAAYN,UAAY,CACpBzlB,OAAQ0lB,KAAUC,OAAOC,WACzB3B,eAAgByB,KAAUC,OAC1Blb,QAASib,KAAUl2B,KAAKo2B,WACxBtH,MAAOoH,KAAUG,KACjB3C,UAAWwC,KAAUC,QAGzBI,GAAY9Z,aAAe,CACvBqS,OAAO,EACP4E,UAAW,GAGA3iB,qBAAkBwlB,I,oBCzClB5C,I,mBApBX,WAAY1yB,GAAQ,qEACVA,I,sEAGA,IACEu1B,EAAUr2B,KAAKc,MAAfu1B,MAER,OACI,yBAAKh1B,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAAS4nB,GAChD,kBAAC,GAAD,OAEJ,yBAAKh1B,UAAU,qCACX,0BAAMA,UAAU,yBAAhB,sB,GAdYM,IAAMC,YCEhC00B,I,kNACFj2B,MAAQ,CACJsI,MAAO,G,EAGXD,aAAe,SAACjG,EAAOkG,GACnB,EAAK5H,SAAS,CAAE4H,W,wEAGV,IAAD,EACsB3I,KAAKc,MAAxBga,EADH,EACGA,QAAS6T,EADZ,EACYA,MACThmB,EAAU3I,KAAKK,MAAfsI,MAEF+N,EACF,oCACI,kBAAC,GAAD,CAAmB2f,MAAOvb,IAC1B,kBAACyb,GAAA,EAAD,CACI5tB,MAAOA,EACPiH,SAAU5P,KAAK0I,aACf8tB,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdC,WAAS,GACT,kBAACC,GAAA,EAAD,CAAKC,MAAM,QAAQpxB,MAAO,CAAEqxB,SAAU,UACtC,kBAACF,GAAA,EAAD,CAAKC,MAAM,OAAOpxB,MAAO,CAAEqxB,SAAU,UACrC,kBAACF,GAAA,EAAD,CAAKC,MAAM,QAAQpxB,MAAO,CAAEqxB,SAAU,UACtC,kBAACF,GAAA,EAAD,CAAKC,MAAM,QAAQpxB,MAAO,CAAEqxB,SAAU,YAKlD,OAAOpI,EAAQ,oCAAGjY,GAAc,yBAAKrV,UAAU,gBAAgBqV,O,GAhC7C/U,IAAMC,YA2ChC00B,GAAYha,aAAe,CACvBqS,OAAO,EACP4E,UAAW,GAGA+C,UC/CTU,I,kMAEE,MAAO,uB,+CAIP,MAAO,8B,qCAGItgB,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAOlG,EAFOxQ,KAAKc,MAAX0P,GAEC,iB,sCAGGoF,GAAU,IACd0e,EAAmBt0B,KAAKc,MAAxBwzB,eACAnf,EAAyBS,EAAzBT,QAASuB,EAAgBd,EAAhBc,QAASjY,EAAOmX,EAAPnX,GAE1B,OACI,kBAAC,GAAD,CACIkE,IAAG,kBAAawS,EAAb,uBAAmC1W,GACtC4R,OAAQ8E,EACRuP,UAAWjmB,EACXkY,MAAOD,EAAQC,MACf2P,UAAW,kBAAMA,aAAUnR,EAAS1W,GAAI,IACxCwmB,gBAAiB9P,IAAYmf,Q,GAlClBF,KAwC3B4C,GAAalB,UAAY,CACrBzlB,OAAQ0lB,KAAUC,OAAOC,WACzB3B,eAAgByB,KAAUC,OAC1Blb,QAASib,KAAUl2B,KAAKo2B,WACxBtH,MAAOoH,KAAUG,KACjB3C,UAAWwC,KAAUC,QAGzBgB,GAAa1a,aAAe,CACxBqS,OAAO,EACP4E,UAAW,GAGA3iB,qBAAkBomB,ICrD3BC,I,kMAEE,MAAO,uB,+CAIP,MAAO,8B,qCAGIvgB,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,+B,kCAMlB,OAAOlG,EAFOxQ,KAAKc,MAAX0P,GAEC,iB,sCAGGoF,GAAU,IACd0e,EAAmBt0B,KAAKc,MAAxBwzB,eACAnf,EAAyBS,EAAzBT,QAASuB,EAAgBd,EAAhBc,QAASjY,EAAOmX,EAAPnX,GAE1B,OACI,kBAAC,GAAD,CACIkE,IAAG,kBAAawS,EAAb,uBAAmC1W,GACtC4R,OAAQ8E,EACRuP,UAAWjmB,EACXwE,MAAOyT,EAAQzT,MACfqjB,UAAW,kBAAMA,aAAUnR,EAAS1W,GAAI,IACxCwmB,gBAAiB9P,IAAYmf,Q,GAlClBF,KAwC3B6C,GAAanB,UAAY,CACrBzlB,OAAQ0lB,KAAUC,OAAOC,WACzB3B,eAAgByB,KAAUC,OAC1Blb,QAASib,KAAUl2B,KAAKo2B,WACxBtH,MAAOoH,KAAUG,KACjB3C,UAAWwC,KAAUC,QAGzBiB,GAAa3a,aAAe,CACxBqS,OAAO,EACP4E,UAAW,GAGA3iB,qBAAkBqmB,ICrD3BC,I,8LACaxgB,GACX,OAAOA,GAAgC,qBAArBA,EAAQ,W,wCAI1B,MAAO,CAAE,QAAS,mC,kCAMlB,OAAOlG,EAFOxQ,KAAKc,MAAX0P,GAEC,gB,kCAIT,OAAO,I,sCAGKoF,GAAU,IACd0e,EAAmBt0B,KAAKc,MAAxBwzB,eACAnf,EAAyBS,EAAzBT,QAASuB,EAAgBd,EAAhBc,QAASjY,EAAOmX,EAAPnX,GAE1B,OACI,kBAAC,GAAD,CACIkE,IAAG,kBAAawS,EAAb,uBAAmC1W,GACtC4R,OAAQ8E,EACRuP,UAAWjmB,EACX8iB,UAAW7K,EAAQmZ,WACnBvJ,UAAW,kBAAMA,aAAUnR,EAAS1W,GAAI,IACxCwmB,gBAAiB9P,IAAYmf,Q,GA9BdF,KAoC/B8C,GAAiBpB,UAAY,CACzBzlB,OAAQ0lB,KAAUC,OAAOC,WACzB3B,eAAgByB,KAAUC,OAC1Blb,QAASib,KAAUl2B,KAAKo2B,WACxBtH,MAAOoH,KAAUG,KACjB3C,UAAWwC,KAAUC,QAGzBkB,GAAiB5a,aAAe,CAC5BqS,OAAO,EACP4E,UAAW,GAGA3iB,qBAAkBsmB,I,SCpC3BC,I,mBACF,WAAYr2B,GAAQ,IAAD,uBACf,4CAAMA,KA2CVs2B,wBAA0B,SAAA50B,GACGA,EAAjB6f,eAGU,EAAKvhB,MAAf6tB,OAGR,EAAK0I,2BAnDU,EAsDnBC,qBAAuB,SAAA90B,GAAW,IACtBmsB,EAAU,EAAK7tB,MAAf6tB,MACAte,EAAW,EAAKhQ,MAAhBgQ,OAEJse,GACAte,IAAW7N,EAAO+0B,aAEtB,EAAKC,aAAe,KACpB,EAAKC,gBAAkB,KACvB,EAAKC,YAAc,KACnB,EAAKC,aAAe,KACpB,EAAKC,aAAe,KACpB,EAAKC,iBAAmB,KAExB,EAAK92B,SAAS,CACVsP,OAAQ7N,EAAO+0B,WACfjD,eAAgB,EAChBwD,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtB9G,SAAUvV,KAAUsc,YAAY/1B,EAAO+0B,YACvC9F,iBAAkB,OAGjBjvB,EAAO+0B,YACR,EAAKF,2BArFM,EAyFnB5jB,YAAc,SAAApD,GACV,EAAKmoB,iBAAiBnoB,GACtB,EAAKooB,qBAAqBpoB,GAE1B,IAAMsG,EAAQ+hB,YAAiBroB,GAC1BsG,GACLgiB,YAA8BtoB,EAAQ,CAACsG,KA/FxB,EAkGnB6hB,iBAlGmB,sCAkGA,WAAMnoB,GAAN,eAAAS,EAAA,qEACQ8nB,aAAgBvoB,GADxB,UACTmhB,EADS,OAEfvV,KAAU4c,YAAYxoB,EAAQmhB,GAE1BnhB,IAAW,EAAKhQ,MAAMgQ,OAJX,iDAMf,EAAKtP,SAAS,CAAEywB,aAND,yCAlGA,wDA2GnBiH,qBA3GmB,sCA2GI,WAAMpoB,GAAN,qBAAAS,EAAA,wDACdmE,aAAa5E,GADC,oDAGbuM,EAAWmB,KAAgBjB,YAAYgc,YAAgBzoB,IAH1C,oDAMmB0M,EAAmBH,EAAjDmc,6BANW,kEASAr4B,IAAgBC,KAAK,CACpC,QAAS,uBACToc,iBACA1I,OAAO,IAZQ,WASboI,EATa,2EAiBImc,aAAgBnc,EAAKhe,IAjBzB,WAiBb+yB,EAjBa,OAkBnBvV,KAAU4c,YAAYpc,EAAKhe,GAAI+yB,GAE3B,EAAKnxB,MAAMgQ,SAAWA,EApBP,mDAsBnB,EAAKtP,SAAS,CAAEuzB,eAAgB7X,EAAKhe,GAAIgzB,iBAAkBxV,KAAUsc,YAAY9b,EAAKhe,MAtBnE,0CA3GJ,wDAoInBu6B,sBAAwB,WACpB,EAAKj4B,SAAS,CAAEo3B,iBAAiB,KArIlB,EAwInBc,uBAAyB,WACrB,EAAKl4B,SAAS,CAAEo3B,iBAAiB,KAzIlB,EA4InBe,wBAA0B,WACtB,EAAKn4B,SAAS,CAAEg3B,mBAAmB,KA7IpB,EAgJnBoB,0BAA4B,WACxB,EAAKp4B,SAAS,CAAEg3B,mBAAmB,KAjJpB,EAoJnBV,uBAAyB,WAAO,IACpB1I,EAAU,EAAK7tB,MAAf6tB,MACe,EAAKtuB,MAApBy3B,WAGJ,EAAK/2B,SAAS,CAAE+2B,WAAY,OACrBnJ,EACPjuB,IAAgBgG,aAAa,CACzB,QAAS,2BACT2J,OAAQ,IAGZ+oB,cAA4B,IAhKjB,EAoKnBC,0BAA4B,WACxB,EAAKt4B,SAAS,CAAEk3B,qBAAqB,KArKtB,EAwKnBqB,2BAA6B,WACzB,EAAKv4B,SAAS,CAAEk3B,qBAAqB,KAzKtB,EA4KnBsB,uBAAyB,WACrB,EAAKx4B,SAAS,CAAEi3B,kBAAkB,KA7KnB,EAgLnBwB,wBAA0B,WACtB,EAAKz4B,SAAS,CAAEi3B,kBAAkB,KAjLnB,EAoLnByB,2BAA6B,WACzB,EAAK14B,SAAS,CAAEu3B,sBAAsB,KArLvB,EAwLnBoB,4BAA8B,WAC1B,EAAK34B,SAAS,CAAEu3B,sBAAsB,KAzLvB,EA4LnBqB,sBAAwB,WACpB,EAAK54B,SAAS,CAAEm3B,iBAAiB,KA7LlB,EAgMnB0B,uBAAyB,WACrB,EAAK74B,SAAS,CAAEm3B,iBAAiB,KAjMlB,EAoMnB2B,uBAAyB,WACrB,EAAK94B,SAAS,CAAEq3B,kBAAkB,KArMnB,EAwMnB0B,wBAA0B,WACtB,EAAK/4B,SAAS,CAAEq3B,kBAAkB,KAzMnB,EA4MnB2B,uBAAyB,WACrB,EAAKh5B,SAAS,CAAEs3B,kBAAkB,KA7MnB,EAgNnB2B,wBAA0B,WACtB,EAAKj5B,SAAS,CAAEs3B,kBAAkB,KA9MlC,EAAK4B,WAAat4B,IAAM2Y,YAHT,IAKPqU,EAAU7tB,EAAV6tB,MACAte,EAAyB6pB,KAAzB7pB,OAAQ8pB,EAAiBD,KAAjBC,aAND,OAQf,EAAK95B,MAAQ,CACTgQ,OAAQse,EAAQwL,EAAe9pB,EAC/BikB,eAAgB,EAChBwD,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtB9G,SAAU,KACVC,iBAAkB,MArBP,E,iFA0BfzxB,KAAKyT,YAAYzT,KAAKK,MAAMgQ,QAE5B6pB,KAAS/uB,GAAG,qBAAsBnL,KAAKs3B,sBACvC4C,KAAS/uB,GAAG,wBAAyBnL,KAAKo3B,2B,6CAI1C8C,KAAS5uB,IAAI,qBAAsBtL,KAAKs3B,sBACxC4C,KAAS5uB,IAAI,wBAAyBtL,KAAKo3B,2B,yCAG5Bl2B,EAAWC,EAAWC,GAAW,IACxCiP,EAAWrQ,KAAKK,MAAhBgQ,OACJA,IAAWlP,EAAUkP,QACrBrQ,KAAKyT,YAAYpD,K,+BA4Kf,IAAD,EACwBrQ,KAAKc,MAA1BO,EADH,EACGA,UAAWstB,EADd,EACcA,MADd,EAgBD3uB,KAAKK,MAbLgQ,EAHC,EAGDA,OACAmhB,EAJC,EAIDA,SACA8C,EALC,EAKDA,eACA7C,EANC,EAMDA,iBACAqG,EAPC,EAODA,WACAE,EARC,EAQDA,iBACAC,EATC,EASDA,oBACAC,EAVC,EAUDA,gBACAC,EAXC,EAWDA,gBACAC,EAZC,EAYDA,iBACAC,EAbC,EAaDA,iBACAC,EAdC,EAcDA,qBACAP,EAfC,EAeDA,kBAGE7V,EAAgB7R,GAAUynB,EAC1BvE,EAAYvzB,KAAKi6B,YAAcj6B,KAAKi6B,WAAW/iB,QAAUlX,KAAKi6B,WAAW/iB,QAAQ4Z,mBAAqB,EAExGpa,EAAU,KAiHd,OAhHIyhB,EACAzhB,EACI,kBAAC,GAAD,CACIrG,OAAQ6R,EACRyM,MAAOA,EACP4E,UAAWA,EACXzY,QAAS9a,KAAKi5B,yBAGfjB,GACPh4B,KAAKw3B,aAAex3B,KAAKw3B,cACrB,kBAAC,GAAD,CACInnB,OAAQ6R,EACRoS,eAAgBA,EAChB3F,MAAOA,EACP4E,UAAWA,EACXzY,QAAS9a,KAAKw5B,0BAItB9iB,EAAU1W,KAAKw3B,cACRS,GACPj4B,KAAKy3B,gBAAkBz3B,KAAKy3B,iBACxB,kBAAC,GAAD,CACIpnB,OAAQ6R,EACRoS,eAAgBA,EAChB3F,MAAOA,EACP4E,UAAWA,EACXzY,QAAS9a,KAAKs5B,6BAItB5iB,EAAU1W,KAAKy3B,iBACRS,GACPl4B,KAAK03B,YAAc13B,KAAK03B,aACpB,kBAAC,GAAD,CACIrnB,OAAQ6R,EACRoS,eAAgBA,EAChB3F,MAAOA,EACP4E,UAAWA,EACXzY,QAAS9a,KAAK45B,yBAItBljB,EAAU1W,KAAK03B,aACRU,GACPp4B,KAAK23B,aAAe33B,KAAK23B,cACrB,kBAAC,GAAD,CACItnB,OAAQ6R,EACRoS,eAAgBA,EAChB3F,MAAOA,EACP4E,UAAWA,EACXzY,QAAS9a,KAAK85B,0BAItBpjB,EAAU1W,KAAK23B,cACRU,GACPr4B,KAAK43B,aAAe53B,KAAK43B,cACrB,kBAAC,GAAD,CACIvnB,OAAQ6R,EACRoS,eAAgBA,EAChB3F,MAAOA,EACP4E,UAAWA,EACXzY,QAAS9a,KAAKg6B,0BAItBtjB,EAAU1W,KAAK43B,cACRU,GACPt4B,KAAK63B,iBAAmB73B,KAAK63B,kBACzB,kBAAC,GAAD,CACIxnB,OAAQ6R,EACRoS,eAAgBA,EAChB3F,MAAOA,EACP4E,UAAWA,EACXzY,QAAS9a,KAAK05B,8BAItBhjB,EAAU1W,KAAK63B,kBAEfnhB,EADOqhB,EAEH,kBAAC,GAAD,CACI1nB,OAAQ6R,EACRyM,MAAOA,EACP4E,UAAWA,EACXzY,QAAS9a,KAAKm5B,4BAKlB,kBAAC,GAAD,CACIle,IAAKjb,KAAKi6B,WACV5pB,OAAQ6R,EACRyM,MAAOA,EACPlQ,WAAYqZ,IAAeznB,EAC3BmhB,SAAUA,EACVC,iBAAkBA,EAClB2I,oBAAqBp6B,KAAKk5B,wBAC1BmB,mBAAoBr6B,KAAKu5B,uBACzBe,sBAAuBt6B,KAAKq5B,0BAC5BkB,kBAAmBv6B,KAAKg5B,sBACxBwB,kBAAmBx6B,KAAK25B,sBACxBc,mBAAoBz6B,KAAK65B,uBACzBa,mBAAoB16B,KAAK+5B,uBACzBY,uBAAwB36B,KAAKy5B,2BAC7B3e,QAAS9a,KAAKq3B,yBAKnB1I,EACH,oCAAGjY,GAEH,yBAAKrV,UAAWiN,IAAW,YAAa,CAAE,gBAAiBqgB,GAASttB,IAAaqV,O,GA9VtE/U,IAAMC,YAyW7Bu1B,GAAS7a,aAAe,CACpBjb,UAAW,KACXkO,QAAS,KACTof,OAAO,GAGIwI,U,UCvXTyD,I,kNAkCFC,2BAA6B,SAAAr4B,GACN,EAAK1B,MAAhBuP,SAEO7N,EAAO6N,SAClB,EAAKyqB,aAAet4B,EAAOu4B,WAC3B,EAAKtiB,gB,EAIboD,uBAAyB,SAAArZ,GACrB,EAAKiW,e,EAGTuiB,aAAe,SAAAx4B,GAAW,IACd6N,EAAW,EAAKvP,MAAhBuP,OACA8hB,EAAS3vB,EAAT2vB,KAEF1V,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,IACDkC,aAActO,GAAlB,CANqB,IAQb4qB,EAAiBxe,EAAjBwe,aACR,GAAKA,EAEcA,EAAX9P,OACGjX,UAAYie,EAAK1zB,IAE5B,EAAKga,gB,EAGTyiB,SAAW,SAAA14B,GACY,EAAK1B,MAAhBuP,SAEO7N,EAAO2S,SAEtB,EAAKsD,e,qFApEasD,EAAWC,GAAY,IAAD,EAClBhc,KAAKc,MAAnBuP,EADgC,EAChCA,OAAQG,EADwB,EACxBA,EAEhB,OAAIuL,EAAU1L,SAAWA,GAIrB0L,EAAUvL,IAAMA,I,0CAQpByL,KAAU9Q,GAAG,mCAAoCnL,KAAK6b,wBACtDI,KAAU9Q,GAAG,2BAA4BnL,KAAK66B,4BAC9C5e,KAAU9Q,GAAG,yBAA0BnL,KAAKk7B,UAC5Cjf,KAAU9Q,GAAG,wBAAyBnL,KAAKk7B,UAC3Cjf,KAAU9Q,GAAG,sBAAuBnL,KAAKk7B,UACzCjf,KAAU9Q,GAAG,uBAAwBnL,KAAKk7B,UAC1C/mB,KAAUhJ,GAAG,aAAcnL,KAAKg7B,gB,6CAIhC/e,KAAU3Q,IAAI,mCAAoCtL,KAAK6b,wBACvDI,KAAU3Q,IAAI,2BAA4BtL,KAAK66B,4BAC/C5e,KAAU3Q,IAAI,yBAA0BtL,KAAKk7B,UAC7Cjf,KAAU3Q,IAAI,wBAAyBtL,KAAKk7B,UAC5Cjf,KAAU3Q,IAAI,sBAAuBtL,KAAKk7B,UAC1Cjf,KAAU3Q,IAAI,uBAAwBtL,KAAKk7B,Y,+BAyCrC,IAAD,EACiBl7B,KAAKc,MAAnBuP,EADH,EACGA,OAAQG,EADX,EACWA,EAEhB,GAAIxQ,KAAK86B,aAAc,OAAO,yBAAKz5B,UAAU,kBAAkB,QAE/D,IAAMob,EAAOR,KAAUhS,IAAIoG,GAC3B,IAAKoM,EAAM,OAAO,yBAAKpb,UAAU,kBAAkB,QAEnD,IAAI85B,EAAiB,KACfC,EAAeC,YAAoBhrB,GAKzC,GAJI+qB,IACAD,EAAiB,0BAAM95B,UAAU,yBAAyB+5B,KAGzDD,EAAgB,CACjB,IAAMG,EAAQC,YAAalrB,GAC3B,GAAImrB,aAAcnrB,GAAS,CACvB,IAAM9E,EAAO+vB,EAAM/vB,MAAQ,OAE3B4vB,EACI,oCACI,0BAAM95B,UAAU,wBAAwBmP,EAAE,SAAW,MACpDjF,IAMjB,IAAK4vB,EAAgB,CACjB,IAAMzkB,EAAU+kB,YAAsBhf,EAAMjM,IAAM,OAC5CkrB,EAAaC,YAAyBlf,EAAMjM,GAClD2qB,EACI,oCACKO,GAAc,0BAAMr6B,UAAU,yBAAyBq6B,EAAzC,MACdhlB,GAKb,OAAO,yBAAKrV,UAAU,kBAAkB85B,O,GA/GpBx5B,IAAMC,YAmHnBgP,iBAAkBgqB,IC9HlB/4B,gBACX,uBAAG+5B,YAAY,IAAIC,KAAK,OAAOC,SAAS,WACpC,0BAAMC,GAAG,OAAOC,GAAG,OAAOC,GAAG,IAAIC,GAAG,KAAKz9B,GAAG,UAAUm9B,YAAY,OAAOO,cAAc,UACvF,0BACIr6B,EAAE,yfACF85B,YAAY,OACZO,cAAc,QACdC,eAAe,WAGvB,OC8HWC,I,kNAhFXxB,2BAA6B,SAAAr4B,GACN,EAAK1B,MAAhBuP,SAEO7N,EAAO6N,SAClB,EAAKyqB,aAAet4B,EAAOu4B,WAC3B,EAAKtiB,gB,EAIboD,uBAAyB,SAAArZ,GACrB,EAAKiW,e,EAGTyiB,SAAW,SAAA14B,GAAW,IACV6N,EAAW,EAAKvP,MAAhBuP,OAEJ7N,EAAO2S,UAAY9E,GAEvB,EAAKoI,e,EAGTwG,kCAAoC,SAAAzc,GAAW,IACnC6N,EAAW,EAAKvP,MAAhBuP,OAEFoM,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,EAEL,OAAQja,EAAO0c,MAAM,UACjB,IAAK,sCAC0B,uBAAvBzC,EAAKC,KAAK,UAA4D,uBAAvBD,EAAKC,KAAK,UACzD,EAAKjE,cAET,MAEJ,IAAK,wCAC0B,oBAAvBgE,EAAKC,KAAK,UAAyD,mBAAvBD,EAAKC,KAAK,UACtD,EAAKjE,gB,qFAhFCsD,EAAWC,GAAY,IAAD,EACXhc,KAAKc,MAA1BuP,EADgC,EAChCA,OAAQisB,EADwB,EACxBA,SAEhB,OAAIvgB,EAAU1L,SAAWA,GAIrB0L,EAAUugB,WAAaA,I,0CAQ3BrgB,KAAU9Q,GAAG,mCAAoCnL,KAAK6b,wBACtDI,KAAU9Q,GAAG,2BAA4BnL,KAAK66B,4BAC9C5e,KAAU9Q,GAAG,yBAA0BnL,KAAKk7B,UAC5Cjf,KAAU9Q,GAAG,6BAA8BnL,KAAKk7B,UAChDjf,KAAU9Q,GAAG,qBAAsBnL,KAAKk7B,UACxCjf,KAAU9Q,GAAG,iCAAkCnL,KAAKk7B,UACpDjf,KAAU9Q,GAAG,sBAAuBnL,KAAKk7B,UACzCjf,KAAU9Q,GAAG,wBAAyBnL,KAAKk7B,UAC3Cjf,KAAU9Q,GAAG,uBAAwBnL,KAAKk7B,UAC1Cjf,KAAU9Q,GAAG,+BAAgCnL,KAAKk7B,UAClDjf,KAAU9Q,GAAG,2BAA4BnL,KAAKk7B,UAC9Czb,KAAkBtU,GAAG,kCAAmCnL,KAAKif,qC,6CAI7DhD,KAAU3Q,IAAI,mCAAoCtL,KAAK6b,wBACvDI,KAAU3Q,IAAI,2BAA4BtL,KAAK66B,4BAC/C5e,KAAU3Q,IAAI,yBAA0BtL,KAAKk7B,UAC7Cjf,KAAU3Q,IAAI,6BAA8BtL,KAAKk7B,UACjDjf,KAAU3Q,IAAI,qBAAsBtL,KAAKk7B,UACzCjf,KAAU3Q,IAAI,iCAAkCtL,KAAKk7B,UACrDjf,KAAU3Q,IAAI,sBAAuBtL,KAAKk7B,UAC1Cjf,KAAU3Q,IAAI,wBAAyBtL,KAAKk7B,UAC5Cjf,KAAU3Q,IAAI,uBAAwBtL,KAAKk7B,UAC3Cjf,KAAU3Q,IAAI,+BAAgCtL,KAAKk7B,UACnDjf,KAAU3Q,IAAI,2BAA4BtL,KAAKk7B,UAC/Czb,KAAkBnU,IAAI,kCAAmCtL,KAAKif,qC,+BA+C9D,GAAIjf,KAAK86B,aAAc,OAAO,KADzB,MAGwB96B,KAAKc,MAA1BuP,EAHH,EAGGA,OAAQisB,EAHX,EAGWA,SAEV7f,EAAOR,KAAUhS,IAAIoG,GAC3B,IAAKoM,EAAM,OAAO,KANb,IAQG8f,EAAiB9f,EAAjB8f,aACFC,EAAWC,YAAapsB,EAAQisB,GAEhCI,EAAyBC,aAA2BtsB,GACpDusB,EAAkBC,aAAoBxsB,GACtC0O,EAAUC,YAAY3O,GAE5B,OACI,oCACKqsB,GACG,yBAAKr7B,UAAU,gBACX,yBAAKA,UAAU,wBAAf,MAGPu7B,GACG,yBAAKv7B,UAAWiN,IAAW,CAAE,qBAAsByQ,GAAW,iBAC1D,0BAAM1d,UAAU,qBAAqBk7B,EAAe,EAAIA,EAAe,KAG9EC,IAAaI,IAAoBF,GAC9B,yBAAKr7B,UAAU,uBACX,kBAACy7B,GAAD,CAASz7B,UAAU,mC,GArHjBM,IAAMC,YCXjBC,gBACX,uBAAGk7B,OAAO,OAAOnB,YAAY,IAAIC,KAAK,OAAOC,SAAS,WAClD,uBAAGkB,UAAU,iCAAiCnB,KAAK,UAAUC,SAAS,WAClE,0BAAMh6B,EAAE,0iBAGhB,SCLWD,gBACX,uBAAG+5B,YAAY,IAAIC,KAAK,OAAOC,SAAS,UAAUK,cAAc,QAAQC,eAAe,SACnF,uBAAGY,UAAU,kCACT,4BAAQpB,YAAY,MAAMqB,GAAG,KAAKC,GAAG,IAAI3Y,EAAE,MAC3C,0BAAMwX,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAKC,GAAG,IAAIN,YAAY,QAClD,0BAAMG,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIN,YAAY,UAGxD,WCTW/5B,gBACX,0BACIm7B,UAAU,kCACVl7B,EAAE,8iBAEN,QCLWD,gBACX,0BACIm7B,UAAU,kCACVl7B,EAAE,ylCAEN,aCgGWq7B,I,kNA3FX98B,MAAQ,G,EAkCRosB,oBAAsB,SAAAjqB,GAAW,IAAD,EACE,EAAK1B,MAA3BuP,EADoB,EACpBA,OAAQqU,EADY,EACZA,UACR0Y,EAA4B56B,EAA5B46B,eAAgBxnB,EAAYpT,EAAZoT,QAExB,GAAI8O,IAAc0Y,GACbxnB,EAAL,CAL4B,IAOpBT,EAA+BS,EAA/BT,QAAS1W,EAAsBmX,EAAtBnX,GAAI4+B,EAAkBznB,EAAlBynB,cACjBhtB,IAAW8E,IAEf,EAAKmoB,aAAe7+B,EACpB,EAAKsC,SAAS,CAAEw8B,aAAcF,O,EAGlCG,uBAAyB,SAAAh7B,GAAW,IAAD,EACD,EAAK1B,MAA3BuP,EADuB,EACvBA,OAAQqU,EADe,EACfA,UACRvP,EAAyC3S,EAAzC2S,QAASsoB,EAAgCj7B,EAAhCi7B,4BACTH,EAHuB,eAGvBA,aAEJjtB,IAAW8E,IAEVmoB,GAAgBA,GAAgBG,GAAgC/Y,GAAa+Y,IAC9E,EAAK18B,SAAS,CAAEw8B,aAAc,KAAMG,QAAQ,K,mFAnChDzhB,KAAU9Q,GAAG,uBAAwBnL,KAAKw9B,wBAE1ChnB,KAAarL,GAAG,0BAA2BnL,KAAKysB,qBAChDjW,KAAarL,GAAG,6BAA8BnL,KAAKysB,uB,6CAInDxQ,KAAU3Q,IAAI,uBAAwBtL,KAAKw9B,wBAE3ChnB,KAAalL,IAAI,0BAA2BtL,KAAKysB,qBACjDjW,KAAalL,IAAI,6BAA8BtL,KAAKysB,uB,+BA6B9C,IAAD,EAC4BzsB,KAAKK,MAA9Bk9B,EADH,EACGA,aACR,OAFK,EACiBG,OAKlBH,EACiC,8BAA1BA,EAAa,SAChB,kBAAC,GAAD,CACIl8B,UAAU,SACVs8B,QAAQ,YACRj4B,MAAO,CAAEyJ,MAAO,GAAI4I,OAAQ,GAAIilB,UAAW,uBAG/C,kBAACY,GAAD,CACIv8B,UAAU,SACVs8B,QAAQ,YACRj4B,MAAO,CAAEyJ,MAAO,GAAI4I,OAAQ,GAAIilB,UAAW,oBAAqBD,OAAQ,kBAK7E,kBAACc,GAAD,CAAUx8B,UAAU,SAASs8B,QAAQ,YAAYj4B,MAAO,CAAEyJ,MAAO,GAAI4I,OAAQ,KAnBzE,kBAAC+lB,GAAD,CAAez8B,UAAU,SAASs8B,QAAQ,YAAYj4B,MAAO,CAAEyJ,MAAO,GAAI4I,OAAQ,Q,gDA7DjEjX,EAAOT,GAAQ,IACnCgQ,EAAsBvP,EAAtBuP,OAAQqU,EAAc5jB,EAAd4jB,UAEV9O,EAAUY,KAAavM,IAAIoG,EAAQqU,GACnC6Y,EAAe3nB,EAAUA,EAAQynB,cAAgB,KAEvD,OAAIhtB,IAAWhQ,EAAMyd,YAAc4G,IAAcrkB,EAAM09B,cAC5C,CACHjgB,WAAYzN,EACZ0tB,cAAerZ,EACf6Y,eACAG,OAAQM,aAAgB3tB,EAAQqU,IAIjC,S,GAlBM/iB,IAAMC,YCJrBq8B,I,kNAmCFpD,2BAA6B,SAAAr4B,GACN,EAAK1B,MAAhBuP,SAEO7N,EAAO6N,SAClB,EAAKyqB,aAAet4B,EAAOu4B,WAC3B,EAAKtiB,gB,EAIboD,uBAAyB,SAAArZ,GACrB,EAAKiW,e,EAGTyiB,SAAW,SAAA14B,GACY,EAAK1B,MAAhBuP,SAEO7N,EAAO2S,SAEtB,EAAKsD,e,qFApDasD,EAAWC,GAAY,IAAD,EAClBhc,KAAKc,MAAnBuP,EADgC,EAChCA,OAAQG,EADwB,EACxBA,EAEhB,OAAIuL,EAAU1L,SAAWA,GAIrB0L,EAAUvL,IAAMA,I,0CAQpByL,KAAU9Q,GAAG,mCAAoCnL,KAAK6b,wBACtDI,KAAU9Q,GAAG,2BAA4BnL,KAAK66B,4BAC9C5e,KAAU9Q,GAAG,yBAA0BnL,KAAKk7B,UAC5Cjf,KAAU9Q,GAAG,wBAAyBnL,KAAKk7B,UAC3Cjf,KAAU9Q,GAAG,sBAAuBnL,KAAKk7B,UACzCjf,KAAU9Q,GAAG,+BAAgCnL,KAAKk7B,UAClDjf,KAAU9Q,GAAG,2BAA4BnL,KAAKk7B,Y,6CAI9Cjf,KAAU3Q,IAAI,mCAAoCtL,KAAK6b,wBACvDI,KAAU3Q,IAAI,2BAA4BtL,KAAK66B,4BAC/C5e,KAAU3Q,IAAI,yBAA0BtL,KAAKk7B,UAC7Cjf,KAAU3Q,IAAI,wBAAyBtL,KAAKk7B,UAC5Cjf,KAAU3Q,IAAI,sBAAuBtL,KAAKk7B,UAC1Cjf,KAAU3Q,IAAI,+BAAgCtL,KAAKk7B,UACnDjf,KAAU3Q,IAAI,2BAA4BtL,KAAKk7B,Y,+BAyB/C,GAAIl7B,KAAK86B,aAAc,OAAO,KADzB,IAGGzqB,EAAWrQ,KAAKc,MAAhBuP,OAEFoM,EAAOR,KAAUhS,IAAIoG,GAC3B,IAAKoM,EAAM,OAAO,KAElB,IAAMsV,EAAOxT,aAASlO,GAEd4qB,EAAiBxe,EAAjBwe,aACR,IAAKA,EAAc,OAAO,KAE1B,IAAMzT,EAAO0W,YAAmBzhB,GAChC,IAAK+K,EAAM,OAAO,KAdb,IAgBG/oB,EAAoBw8B,EAApBx8B,GAAI0/B,EAAgBlD,EAAhBkD,YAEZ,OACI,yBAAK98B,UAAU,eACV88B,IAAgBpM,GACb,oCACI,kBAAC,GAAD,CAAQ1hB,OAAQA,EAAQqU,UAAWjmB,IACnC,oCAGP+oB,O,GAlFQ7lB,IAAMC,YAwFhBgP,iBAAkBqtB,IC7FlBp8B,gBACX,0BAAMC,EAAE,s7CACR,WCFWD,gBACX,0BAAMC,EAAE,i3CACR,aCFWD,gBACX,0BAAMC,EAAE,2uCACR,QCFWD,gBACX,uBAAGg6B,KAAK,OAAOkB,OAAO,eAAenB,YAAY,IAAIO,cAAc,QAAQC,eAAe,QAAQY,UAAU,iCACxG,0BAAMl7B,EAAE,usBAEZ,UCJWD,gBACX,0BAAMC,EAAE,0+CACR,QCFWD,gBACX,0BAAMC,EAAE,0pBACR,UCFWD,gBACX,0BAAMC,EAAE,27BACR,QCFWD,gBACX,0BAAMC,EAAE,k7DACR,SCFWD,gBACX,0BAAMC,EAAE,qfACR,WCFWD,gBACX,0BAAMC,EAAE,klCACR,UCiBG,SAASs8B,GAAa/tB,EAAQqU,GACjC,OAAOhkB,IAAgBC,KAAK,CACxB,QAAS,mBACTwU,QAAS9E,EACT+E,WAAYsP,IAIb,SAAS2Z,GAAiBhuB,GAC7B,OAAO3P,IAAgBC,KAAK,CACxB,QAAS,uBACTwU,QAAS9E,I,WCsBXiuB,G,YAGF,WAAYx9B,GAAQ,IAAD,uBACf,4CAAMA,KAgEVw2B,qBAAuB,SAAA90B,GAAW,IACtB6N,EAAW,EAAKvP,MAAhBuP,OAEJA,IAAW7N,EAAO+7B,gBAAkBluB,IAAW7N,EAAO+0B,YACtD,EAAK9e,eArEM,EAyEnB4a,aAAe,SAAA5wB,GACU,IAAjBA,EAAMmd,QACN+E,aAAS,EAAK7jB,MAAMuP,SA3ET,EA+EnBmuB,kBA/EmB,sCA+EC,WAAM/7B,GAAN,iCAAAqO,EAAA,wDACZrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAHM,EAKa,EAAKvD,MAA1BuP,EALQ,EAKRA,OAAQisB,EALA,EAKAA,UACQ,EAAKj8B,MAArB8lB,YANQ,gBASZ,EAAKplB,SAAS,CAAEolB,aAAa,IATjB,8BAWNsY,EAAgB,IAAI/W,KAC1B4W,EAAOG,cAAgBA,EAEjB94B,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QACZk0B,EAAWC,YAAapsB,EAAQisB,GAhB1B,UAiBgB,EAAKoC,YAAYruB,GAjBjC,kDAiB6CmsB,EAjB7C,WAiBNmC,EAjBM,KAkBNC,EAAmBC,YAAiBxuB,GACpCyuB,GAAWvgB,aAASlO,GAEtBiuB,EAAOG,gBAAkBA,EArBjB,mDAyBZ,EAAK19B,SAAS,CACVolB,aAAa,EACbwY,eACAC,mBACAE,UACAn5B,OACAE,QA/BQ,0CA/ED,wDAmHnBugB,uBAAyB,SAAA3jB,GACjBA,GACAA,EAAM4B,kBAGV,EAAKtD,SAAS,CAAEolB,aAAa,KAxHd,EA2HnBviB,WAAa,SAAAnB,GACT,EAAK2jB,uBAAuB3jB,GADV,IAGV4N,EAAW,EAAKvP,MAAhBuP,OAERiP,aAA+BjP,GAAS2O,YAAY3O,KAhIrC,EAmInBquB,YAnImB,sCAmIL,WAAMruB,GAAN,uBAAAS,EAAA,wDACFwrB,EAAa,EAAKx7B,MAAlBw7B,SAEFyC,EAAqBC,YAAe3uB,GACpC2C,IAAY/I,IAAI,kCAChB+I,IAAY/I,IAAI,yBALZ,0CAMsB,GANtB,cAQJg1B,EAAWC,YAAa7uB,GARpB,SASU3P,IAAgBC,KAAK,CACrC,QAAS,WACTw+B,UAAW7C,EACXzoB,aAAc,sBACdC,eAAgB,EAChBC,MAAOgrB,EAAmBp2B,MAAQ,KAd5B,cASJ8L,EATI,OAiBJ2qB,EAAY3qB,EAAMG,SAASyqB,OAAO,SAACngC,EAAGT,GACxC,GAAIygC,YAAazgC,KAAQwgC,EAAU,OAAO//B,EAE1C,IAAMud,EAAOR,KAAUhS,IAAIxL,GAE3B,OAAOS,GAAKud,GAAQggB,YAAahgB,EAAKhe,GAAI69B,GAAY,EAAI,IAC3D,GAvBO,kBAyBH8C,EAAYL,EAAmBp2B,OAzB5B,0CAnIK,wDA+JnB22B,UA/JmB,sCA+JP,WAAM78B,GAAN,qBAAAqO,EAAA,wDACR,EAAKsV,uBAAuB3jB,GADpB,EAGqB,EAAK3B,MAA1BuP,EAHA,EAGAA,OAAQisB,EAHR,EAGQA,UACVE,EAAWC,YAAapsB,EAAQisB,KAEpB,EAAKoC,YAAYruB,GAN3B,iDAQRkvB,aAAmBlvB,EAAQisB,GAAWE,GAR9B,yCA/JO,wDA0KnBgD,cA1KmB,sCA0KH,WAAM/8B,GAAN,eAAAqO,EAAA,wDACZ,EAAKsV,uBAAuB3jB,GAEpB4N,EAAW,EAAKvP,MAAhBuP,OACHwuB,YAAiBxuB,GAJV,iDAMZovB,aAAcpvB,EAAQ,CAAE,QAAS2uB,YAAe3uB,GAAU,eAAiB,oBAN/D,yCA1KG,wDAmLnBqvB,eAAiB,SAAAj9B,GACb,EAAK2jB,uBAAuB3jB,GADN,IAGd4N,EAAW,EAAKvP,MAAhBuP,OAERsU,aAAStU,EAAQ,MAAM,IAxLR,EA2LnBsvB,WAAa,SAAAl9B,GACT,EAAK2jB,uBAAuB3jB,GADV,IAGV4N,EAAW,EAAKvP,MAAhBuP,OAGR,GADiBuvB,YAAavvB,GAChB,CACV,IAAMoM,EAAOR,KAAUhS,IAAIoG,GAC3B,IAAKoM,EAAM,OAFD,IAIFojB,EAAoDpjB,EAApDojB,oBAAqB5E,EAA+Bxe,EAA/Bwe,aAA+Bxe,EAAjB8f,aACxB,GAAKtB,ED7P7B,SAAsB5qB,EAAQ2E,EAAY8qB,GAC7Cp/B,IAAgBC,KAAK,CACjB,QAAS,eACTwU,QAAS9E,EACT+H,YAAapD,EACb+qB,WAAYD,ICyPJE,CAAa3vB,EAAQ,CAAC4qB,EAAax8B,KAAK,GACjCohC,GACPI,aAA2B5vB,GAAQ,QAGvC4vB,aAA2B5vB,GAAQ,IA5MxB,EAgNnB6vB,iBAAmB,SAAAz9B,GACf,EAAK2jB,uBAAuB3jB,GADJ,IAGhB4N,EAAW,EAAKvP,MAAhBuP,OAER8vB,aAAU9vB,IAlNV,EAAK+vB,OAASz+B,IAAM2Y,YAEpB,IAAMmC,EAAOR,KAAUhS,IAAI,EAAKnJ,MAAMuP,QALvB,OAMf,EAAKhQ,MAAQ,CACToc,OACA0J,aAAa,EACbxgB,KAAM,EACNE,IAAK,GAVM,E,mFAcGkW,EAAWC,GAAY,IAAD,EACqBhc,KAAKc,MAA1DuP,EADgC,EAChCA,OAAQG,EADwB,EACxBA,EAAG/J,EADqB,EACrBA,OAAQ45B,EADa,EACbA,aAAc/D,EADD,EACCA,SAAU52B,EADX,EACWA,MAC3CygB,EAAgBnmB,KAAKK,MAArB8lB,YAER,OAAIpK,EAAU1L,SAAWA,IAKrB0L,EAAUvL,IAAMA,IAKhBuL,EAAUtV,SAAWA,IAKrBsV,EAAUskB,eAAiBA,IAK3BrkB,EAAUmK,cAAgBA,IAK1BnK,EAAUsgB,WAAaA,MAKvBvgB,EAAUrW,QAASA,GAASA,EAAMG,MAAQkW,EAAUrW,MAAMG,Y,0CAU9Dy6B,KAAiBn1B,GAAG,qBAAsBnL,KAAKs3B,wB,6CAI/CgJ,KAAiBh1B,IAAI,qBAAsBtL,KAAKs3B,wB,+BA0J1C,IAAD,EAC2Et3B,KAAKc,MAA7EuP,EADH,EACGA,OAAQisB,EADX,EACWA,SAAUpgB,EADrB,EACqBA,kBAAmBzV,EADxC,EACwCA,OAAQ+J,EADhD,EACgDA,EAAiB9K,GADjE,EACmD26B,aADnD,EACiE36B,OADjE,EAEuE1F,KAAKK,MAAzE8lB,EAFH,EAEGA,YAAaxgB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAAK+4B,EAF3B,EAE2BA,iBAAkBD,EAF7C,EAE6CA,aAAcG,EAF3D,EAE2DA,QAE1DyB,EAAaC,YAAcnwB,GAC3BowB,EAAkBC,YAAmBrwB,EAAQG,GAE7CgsB,EAAWC,YAAapsB,EAAQisB,GAEhCqE,EADgBL,KAAiBM,cACFvwB,EAC/B0O,EAAUC,YAAY3O,GACtBwwB,EAAWjB,YAAavvB,GACxBywB,EAAa9B,YAAe3uB,GAClC,OACI,kBAACsP,GAAA,EAAD,CACIC,QAAM,EACNve,UAAWiN,IAAW,SAAU,CAAE,gBAAiBqyB,GAAc,CAAE,gBAAiBl6B,IACpF8H,YAAavO,KAAKqzB,aAClBvM,cAAe9mB,KAAKw+B,kBACpB94B,MAAOA,GAEH,yBAAKrE,UAAU,kBACX,kBAACsP,EAAA,EAAD,CAAUN,OAAQA,EAAQ+vB,QAAM,EAAClkB,kBAAmBA,EAAmB6kB,YAAU,IACjF,yBAAK1/B,UAAU,wBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAagP,OAAQA,IACrB,kBAAC,GAAD,CAAYA,OAAQA,KAExB,yBAAKhP,UAAU,mBACX,kBAAC,GAAD,CAAegP,OAAQA,IACvB,kBAAC,GAAD,CAAaA,OAAQA,EAAQisB,SAAUA,OAInD,kBAAClX,GAAA,EAAD,CACI1K,KAAMyL,EACNrL,QAAS9a,KAAKomB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEnf,MAAKF,QACvB2f,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBjX,YAAa,SAAAQ,GAAC,OAAIA,EAAE1K,oBACpB,kBAACqhB,GAAA,EAAD,CAAUjX,QAAS,SAAAM,GAAC,OAAIA,EAAE1K,oBACrBu6B,GACG,kBAACjZ,GAAA,EAAD,CAAUlX,QAASzO,KAAKw/B,eACnBsB,EACG,oCACI,kBAAChhB,GAAA,EAAD,KACI,kBAACkhB,GAAD,OAEJ,kBAAC7gB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,gBAG7B,oCACI,kBAACsP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAKxCmuB,GACG,kBAAChZ,GAAA,EAAD,CAAUlX,QAASzO,KAAKs/B,WACnB9C,EACG,oCACI,kBAAC1c,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,mBAG7B,oCACI,kBAACsP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,gBAKzC,kBAACmV,GAAA,EAAD,CAAUlX,QAASzO,KAAK0/B,gBACpB,kBAAC5f,GAAA,EAAD,KACKnB,aAActO,GAAU,kBAAC,GAAD,MAAe,kBAAC4wB,GAAD,OAE5C,kBAAC9gB,GAAA,EAAD,CAAcC,QAAS8gB,YAAiB7wB,EAAQG,MAElDsuB,GACE,kBAACnZ,GAAA,EAAD,CAAUlX,QAASzO,KAAK4D,YACnBmb,EACG,oCACI,kBAACe,GAAA,EAAD,KACI,kBAACqhB,GAAD,OAEJ,kBAAChhB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,kBAG7B,oCACI,kBAACsP,GAAA,EAAD,KACI,kBAACshB,GAAD,OAEJ,kBAACjhB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,iBAKzC,kBAACmV,GAAA,EAAD,CAAUlX,QAASzO,KAAK2/B,YACnBkB,EACG,oCACI,kBAAC/gB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,iBAG7B,oCACI,kBAACsP,GAAA,EAAD,KACI,kBAACuhB,GAAD,OAEJ,kBAAClhB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oBAYpC+vB,GAAcE,GACX,kBAAC9a,GAAA,EAAD,CAAUlX,QAASzO,KAAKkgC,kBACpB,kBAACpgB,GAAA,EAAD,KACI,kBAAC+F,GAAD,OAEJ,kBAAC1F,GAAA,EAAD,CAAcC,QAASqgB,Y,GAzWtC7+B,aA4XrB08B,GAAOhiB,aAAe,CAClB7V,QAAQ,EACRyV,mBAAmB,GAGRtL,qBAAkB0tB,IC1YlBgD,I,wLAtCD,IAAD,EACgCthC,KAAKc,MAAlCuP,EADH,EACGA,OAAQ2R,EADX,EACWA,MAAO3D,EADlB,EACkBA,UAEnBhC,EAAQ,KACRgC,IACAhC,EAAQpC,YAAa5J,GAAQ,IAGjC,IAAMkxB,EAAU,UAAM,GAAuB,GAAlBjiC,KAAKY,IAAI8hB,GAApB,KACVwf,EAAY,UAAM,GAAuB,GAAlBliC,KAAKmiC,IAAIzf,GAApB,KAElB,OACI,yBAAK3gB,UAAU,sBACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,kBACVgd,EACGhC,EAEA,yBAAKhb,UAAU,2BAA2BqE,MAAO,CAAEyJ,MAAOoyB,MAGlE,yBAAKlgC,UAAU,mBACX,yBAAKA,UAAU,6BAA6BqE,MAAO,CAAEyJ,MAAOqyB,a,GAzBxD7/B,IAAMC,Y,+jBCFtC,IAAM8D,GACW,SAAAqS,GAAM,MAAK,CACpBA,SACArG,SAAU,aAHZhM,GAKI,SAACsc,EAAOjK,GAAR,MAAoB,CACtBA,SACApS,KAAM,EACN+7B,MAAO,EACP77B,IAAKkS,EAASiK,EACdtQ,SAAU,aAILiwB,GAAb,YACI,WAAY7gC,GAAQ,IAAD,8BACf,4CAAMA,KA+CV8gC,kBAAoB,WAAO,IACfpgC,EAAW,EAAKV,MAAhBU,OACAwqB,EAAc,EAAK3rB,MAAnB2rB,UACA9U,EAAY,EAAKgV,QAAjBhV,QACR,GAAKA,EAAL,CAEA,IAAMkV,EAAiByV,WAAW52B,OAAO62B,iBAAiB5qB,EAAS,MAAM6qB,iBAAiB,WACpFxV,EAAY,EAAKC,aAAahrB,EAAQ4qB,EAAgBJ,GAG5D,EAAKjrB,SAAL,IAAgBqrB,kBAAmBG,MA1DpB,EAwFnBiB,kBAAoB,SAAA/qB,GAAU,IAAD,EACe,EAAK3B,MAArCU,EADiB,EACjBA,OAAQsrB,EADS,EACTA,UAAW8F,EADF,EACEA,SADF,EAEa,EAAKvyB,MAAnC+rB,EAFiB,EAEjBA,eAAgBJ,EAFC,EAEDA,UAExB,GAAI1sB,KAAKqpB,IAAIlmB,EAAMuD,OAAOgmB,UAAYA,IAAcc,EAAW,CAC3D,IAAMP,EAAY,EAAKC,aAAahrB,EAAQ4qB,EAAgB3pB,EAAMuD,OAAOgmB,WAEzE,EAAKjrB,SAAL,IACIirB,UAAWvpB,EAAMuD,OAAOgmB,WACrBO,IAIPqG,GACAA,EAASnwB,IAtGE,EA8GnBgrB,cAAgB,SAACzL,EAAOoK,EAAgBJ,GAAe,IAAD,EACb,EAAKlrB,MAAlC8qB,EAD0C,EAC1CA,cAAekB,EAD2B,EAC3BA,UAKvB,OAHgB9K,EAAQ8K,EAIVd,EAAYJ,EAAgBkB,IAHtB9K,EAAQ,GAAK8K,EAIhBd,EAAYI,EAAiBR,EAAgBkB,GAnH9D,EAAKZ,QAAUvqB,IAAM2Y,YAErB,EAAKja,MAAQ,CACT2rB,UAAW,EACXO,UAAW,IAAIrZ,IACf4b,cAAe,GACf1C,eAAgB,GATL,EADvB,gFAcuBlrB,EAAWC,EAAWC,GACjCF,EAAUM,SAAWxB,KAAKc,MAAMU,QAChCxB,KAAK4hC,sBAhBjB,4CAoB0B7lB,EAAWC,EAAWqK,GACxC,OAAO,IArBf,0CAwCQpb,OAAOC,iBAAiB,SAAUlL,KAAK4hC,mBAAmB,GAD1C,IAGR1qB,EAAYlX,KAAKksB,QAAjBhV,QACHA,IACLA,EAAQhM,iBAAiB,SAAUlL,KAAKwtB,mBAAmB,GAE3DxtB,KAAK4hC,uBA9Cb,mCA8DiBpgC,EAAQ4qB,EAAgBJ,GAAY,IAAD,OACtCO,EAAY,IAAIrZ,IAChB4b,EAAgB,GAQtB,OAPAttB,EAAO7B,QAAQ,SAAC8iB,EAAMT,GACd,EAAKyL,cAAczL,EAAOoK,EAAgBJ,KAC1CO,EAAU/T,IAAIwJ,EAAOA,GACrB8M,EAAc9a,KAAKgO,MAIpB,CAAEuK,YAAWuC,mBAxE5B,6CA4EQ7jB,OAAOI,oBAAoB,SAAUrL,KAAK4hC,mBADvB,IAGX1qB,EAAYlX,KAAKksB,QAAjBhV,QACHA,GACLA,EAAQ7L,oBAAoB,SAAUrL,KAAKwtB,qBAhFnD,yCAsFQ,OAFsBxtB,KAAKK,MAAnBksB,YApFhB,mCA4GQ,OAAOvsB,KAAKksB,UA5GpB,+BA2Hc,IAAD,EACgDlsB,KAAKc,MAAlDO,EADH,EACGA,UAAWG,EADd,EACcA,OAAQwgC,EADtB,EACsBA,WAAYlV,EADlC,EACkCA,UAC/BP,EAAcvsB,KAAKK,MAAnBksB,UAEFT,GAAStqB,GAAU,IAAI+S,IAAI,SAACkO,EAAMT,GACpC,OAAOuK,EAAUlZ,IAAI2O,IAAUggB,EAAW,CAAEhgB,QAAOtc,MAAOA,GAAWsc,EAAO8K,OAKhF,OACI,yBAAK7R,IAAKjb,KAAKksB,QAAS7qB,UAAWiN,IAAW,QAASjN,IACnD,yBAAKqE,MAAOA,IAAmBlE,GAAU,IAAIsR,OAASga,IACjDhB,QAxIrB,GAAqCnqB,IAAMC,WAgJ3C+/B,GAAgBrlB,aAAe,CAC3B9a,OAAQ,GACRsrB,UAAW,GACXlB,cAAe,GAYJ+V,UCjLR,SAASM,GAAiB70B,GAC7B,GAAIA,EAAQ80B,WAAaC,KAAKC,UAC1B,OAAOh1B,EAGX,IAAK,IAAIgG,EAAIhG,EAAQi1B,WAAWvvB,OAAS,EAAGM,GAAK,EAAGA,IAAK,CACrD,IAAMkvB,EAAWL,GAAiB70B,EAAQi1B,WAAWjvB,IACrD,GAAIkvB,EACA,OAAOA,EAIf,OAAO,KAGJ,SAASC,GAAWn1B,GACvB,GAAKA,EAAL,CAEA,IAAMk1B,EAAWL,GAAiB70B,GAClC,GAAIk1B,EAAU,CACV,IAAME,EAAQv9B,SAASw9B,cACvBD,EAAME,SAASJ,EAAUA,EAASxvB,QAClC0vB,EAAMG,UAAS,GAEf,IAAMC,EAAY33B,OAAO43B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAGvBp1B,EAAQ1F,SAGL,SAASskB,GAAU5e,GAA+B,IAAtB+jB,EAAqB,uDAAV,SACrC/jB,IAELA,EAAQ4e,UAAY1sB,KAAKC,IAAI6N,EAAQ4e,UAAW,KAChD5iB,WAAW,WACPgE,EAAQ8jB,SAAS,CACbrrB,IAAK,EACLsrB,cAEL,K,8BC6BDtc,GAAQ,I,YAlEV,aAAe,IAAD,8BACV,+CAOJmuB,MAAQ,WACJ,EAAK1G,SAAW,CAAE,QAAS,gBAC3B,EAAKtY,QAAU,MAVL,EAadkX,SAAW,SAAA14B,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtBygC,EAAwBzgC,EAAxBygC,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAKD,QAKb,MAEJ,IAAK,oBAAsB,IACfE,EAAiB1gC,EAAjB0gC,aAER,EAAKlf,QAAUkf,EACf,EAAKC,KAAK,oBAAqB3gC,KAhC7B,EAwCd4gC,eAAiB,SAAA5gC,GACb,OAAQA,EAAO,UACX,IAAK,uBAAyB,IAClB85B,EAAa95B,EAAb85B,SAER,EAAKA,SAAWA,EAEhB,EAAK6G,KAAK,uBAAwB3gC,KA/ChC,EAuDd6gC,iBAAmB,WACf3iC,IAAgByK,GAAG,SAAU,EAAK+vB,UAClCx6B,IAAgByK,GAAG,eAAgB,EAAKi4B,iBAzD9B,EA4DdE,oBAAsB,WAClB5iC,IAAgB4K,IAAI,SAAU,EAAK4vB,UACnCx6B,IAAgB4K,IAAI,eAAgB,EAAK83B,iBA3DzC,EAAKJ,QAEL,EAAKK,mBALK,E,2BADQE,OAoE1Bt4B,OAAOsO,OAAS1E,GACDA,U,UCtEAhT,gBACX,0BAAMC,EAAE,2oCACR,WCFWD,gBACX,0BAAMC,EAAE,ypBACR,QCFWD,gBACX,0BAAMC,EAAE,oiDACR,Q,UCFWD,gBACX,0BAAMC,EAAE,0uIACR,YCsBW6Y,GADC,I,qIAxBDhY,G,yEACDgG,EAAQ66B,aAAaC,QAAQ9gC,G,yCAChB,M,yCAGR+gC,KAAKC,MAAMh7B,I,yDAEX,M,iLAIJhG,EAAKgG,G,gEACZ66B,aAAaI,QAAQjhC,EAAK+gC,KAAKG,UAAUl7B,I,uKAGhChG,G,gEACT6gC,aAAaM,WAAWnhC,G,sOAIxB6gC,aAAaO,Q,uGCqUflvB,GAAQ,I,YA7UV,aAAe,IAAD,8BACV,+CAWJmuB,MAAQ,WACJ,EAAKhf,QAAU,KACf,EAAKrP,QAAU,GACf,EAAKqvB,eAAiB,GACtB,EAAKC,OAAS,KACV,EAAKC,gBACL,EAAKC,SAAW,MAGpB,EAAKC,MAAQ,MArBH,EAwBdlJ,SAAW,SAAA14B,GACP,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtBygC,EAAwBzgC,EAAxBygC,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACD,EAAKD,QACL,EAAKe,QACL,MAEJ,IAAK,+BACL,IAAK,6BACL,IAAK,oCACL,IAAK,iCACL,IAAK,qCACDM,GAAav5B,OAAO,SACpBu5B,GAAav5B,OAAO,SAChB,EAAKo5B,eACLG,GAAav5B,OAAO,eA5C9B,EAyDds4B,eAAiB,SAAA5gC,GACb,OAAQA,EAAO,UACX,IAAK,2BACD,EAAK8hC,kBA5DH,EAmEdjB,iBAAmB,WACf3iC,IAAgByK,GAAG,SAAU,EAAK+vB,UAClCx6B,IAAgByK,GAAG,eAAgB,EAAKi4B,iBArE9B,EAwEdE,oBAAsB,WAClB5iC,IAAgB4K,IAAI,SAAU,EAAK4vB,UACnCx6B,IAAgB4K,IAAI,eAAgB,EAAK83B,iBAvEzC,EAAKc,eAAgB,EAErB,EAAKlB,QAEL,EAAKK,mBAEL,EAAKkB,aAAehlB,YAAS,EAAKglB,aAAc,KATtC,E,2MA+EJ5wB,EAAW,IACRK,KAAKqwB,GAAaG,KAAK,SAAShwB,MAAM,SAAArD,GAAK,OAAI,QACxDwC,EAASK,KAAKqwB,GAAaG,KAAK,SAAShwB,MAAM,SAAArD,GAAK,OAAI,QACxDwC,EAASK,KAAKqwB,GAAaG,KAAK,WAAWhwB,MAAM,SAAArD,GAAK,OAAI,QACtDnR,KAAKkkC,eACLvwB,EAASK,KAAKqwB,GAAaG,KAAK,YAAYhwB,MAAM,SAAArD,GAAK,OAAI,Q,SAEjBmD,QAAQ7C,IAAIkC,G,sCAArDywB,E,KAAOK,E,KAAOzgB,E,KAASmgB,E,KAExBO,GAAY,GACZN,IAASA,EAAM3vB,M,iBACNrB,EAAI,E,aAAGA,EAAIgxB,EAAM3vB,MAAM3B,Q,sBACpBmoB,EAAiBmJ,EAAM3vB,MAAMrB,GAA7B6nB,gBACYA,EAAajN,e,wBAC7B0W,GAAY,E,6BAHoBtxB,I,+BAQxCsxB,IACAN,EAAQ,MAGZpkC,KAAKokC,MAAQA,EACTpkC,KAAKokC,QACLpkC,KAAKokC,MAAMK,MAAQA,GAAS,IAG5BzkC,KAAKkkC,eACDC,KACCA,GAAY,IAAIxkC,QAAQ,SAAAT,GACrBiV,KAAUqE,IAAItZ,KAGlBc,KAAKmkC,SAAW,CACZ,QAAS,QACTQ,SAAUR,EAAS5vB,IAAI,SAAArV,GAAC,OAAIA,EAAET,KAC9B2vB,YAAa+V,EAASrxB,SAKlC9S,KAAKgkB,QAAUA,EAEXhkB,KAAKokC,OACLpkC,KAAK4kC,WAAW5kC,KAAKokC,O,kBAIlBpkC,KAAKokC,O,sIAGLA,GACP,GAAKA,EAAL,CADc,IAGNH,EAAiFG,EAAjFH,OAAQxvB,EAAyE2vB,EAAzE3vB,MAAOowB,EAAkET,EAAlES,aAAc5S,EAAoDmS,EAApDnS,MAAO6S,EAA6CV,EAA7CU,YAAaC,EAAgCX,EAAhCW,YAAaN,EAAmBL,EAAnBK,MAAOnmC,EAAY8lC,EAAZ9lC,SAG5EmmC,GAAS,IAAIlrB,OAAO,SAAAra,GAAC,OAAIupB,QAAQvpB,KAAIS,QAAQ,YAAkB,IAAflB,EAAc,EAAdA,GAAI6iB,EAAU,EAAVA,IACjDtX,IAAUg7B,WAAWvmC,EAAI6iB,MAG5B2Q,GAAS,IAAItyB,QAAQ,SAAAT,GAClBiV,KAAUqE,IAAItZ,MAGjB4lC,GAAe,IAAInlC,QAAQ,SAAAT,GACxB2d,KAAgBrE,IAAItZ,MAGvB6lC,GAAe,IAAIplC,QAAQ,SAAAT,GACxB6e,KAAgBvF,IAAItZ,MAGvBuV,GAAS,IAAI6E,OAAOurB,GAAgB,IAAIvrB,OAAO,CAAC2qB,IAAStkC,QAAQ,SAAAT,GAC1DA,WACOA,EAAE+lC,oBAEThpB,KAAUzD,IAAItZ,GACVA,EAAEyX,QACEzX,EAAEyX,MAAMuuB,OAAOl7B,IAAUwO,IAAItZ,EAAEyX,MAAMuuB,OACrChmC,EAAEyX,MAAMyH,KAAKpU,IAAUwO,IAAItZ,EAAEyX,MAAMyH,MAEvClf,EAAEwS,UACFuK,KAAUkpB,oBAAoBjmC,EAAET,IAEhCS,EAAE+7B,cACFzkB,KAAagC,IAAItZ,EAAE+7B,kBAK9B38B,GAAW,IAAIqB,QAAQ,YAAmB,IAAD,mBAAhBlB,EAAgB,KAAZ2mC,EAAY,KACtCpyB,IAAYwF,IAAI/Z,EAAI2mC,Q,uEAIbzwB,EAASqvB,G,2FACdqB,EAAU,IAAInyB,IACdoyB,EAAU,IAAIpyB,IACdqyB,EAAgB,IAAIryB,IACpBsyB,EAAgB,IAAItyB,IACpB+wB,EAASjkC,KAAKikC,OACdxvB,EAAQE,EAAQJ,IAAI,SAAArV,GAAC,OAAI+c,KAAUhS,IAAI/K,KACvCumC,EAAU,IAAIvyB,IAAIuB,EAAMF,IAAI,SAAArV,GAAC,MAAI,CAACA,EAAET,GAAIS,MACxC2lC,EAAeb,EAAezvB,IAAI,SAAArV,GAAC,OAAI+c,KAAUhS,IAAI/K,KAE3DuV,EAAM6E,OAAOurB,GAAcvrB,OAAO,CAAC2qB,IAAStkC,QAAQ,SAAAT,GAAM,IAC9CyX,EAA8BzX,EAA9ByX,MAAO+F,EAAuBxd,EAAvBwd,KAAMue,EAAiB/7B,EAAjB+7B,aACrB,GAAItkB,GAASA,EAAMuuB,MAAO,CAAC,IACfzmC,EAAOkY,EAAMuuB,MAAbzmC,GACR,GAAIA,EAAI,CACJ,IAAMinC,EAAO17B,IAAU27B,QAAQlnC,GAC3BinC,GACAL,EAAQ7sB,IAAI/Z,EAAIinC,IAK5B,OAAQhpB,EAAK,UACT,IAAK,qBACD,IAAMkpB,EAAa/oB,KAAgB5S,IAAIyS,EAAKK,gBACxC6oB,GACAL,EAAc/sB,IAAIotB,EAAWnnC,GAAImnC,GAGzC,IAAK,kBACL,IAAK,iBACD,IAAMzT,EAAOhe,KAAUlK,IAAIyS,EAAKxI,SAC5Bie,GACAmT,EAAQ9sB,IAAI2Z,EAAK1zB,GAAI0zB,GAG7B,IAAK,qBACD,IAAMtU,EAAaE,KAAgB9T,IAAIyS,EAAKe,eACxCI,GACA2nB,EAAchtB,IAAIqF,EAAWpf,GAAIof,GAK7C,GAAIod,EAAc,CAAC,IACP9P,EAAW8P,EAAX9P,OACR,OAAQA,EAAO,UACX,IAAK,oBACD,IAAMgH,EAAOhe,KAAUlK,IAAIkhB,EAAOjX,SAC9Bie,GACAmT,EAAQ9sB,IAAI2Z,EAAK1zB,GAAI0zB,GAEzB,MAEJ,IAAK,oBACD,IAAM1V,EAAOR,KAAUhS,IAAIkhB,EAAOhW,SAC9BsH,GACAgpB,EAAQjtB,IAAIiE,EAAKhe,GAAIge,O,kBAQlC,CACH+K,KAAM,IAAIE,KACVuc,SACAxvB,MAAM,aAAKgxB,EAAQI,UACnBhB,eACA5S,MAAM,aAAKqT,EAAQO,UACnBf,YAAY,aAAKS,EAAcM,UAC/Bd,YAAY,aAAKS,EAAcK,UAC/BpB,MAAM,aAAKY,EAAQS,WACnBxnC,QAAQ,aAAK0U,IAAY8Y,MAAMga,a,2KAI5B9hB,EAASrP,EAASqvB,G,mEACzBhkC,KAAK2U,QAAUA,EACf3U,KAAKgkC,eAAiBA,E,KACRhkC,KAAKikC,O,qCAAgBvjC,IAAgBC,KAAK,CACpD,QAAS,oBACTuT,QAASC,KAAUC,UACnBC,OAAO,I,6BAHXrU,KAAKikC,O,MAKDjkC,KAAKkkC,c,yBACWlkC,KAAKmkC,S,uCAAkBzjC,IAAgBC,KAAK,CACxD,QAAS,gB,4BADbX,KAAKmkC,S,aAITnkC,KAAKgkB,QAAUA,EAEfhkB,KAAKukC,e,qRAKevkC,KAAK+lC,SAAS/lC,KAAK2U,QAAS3U,KAAKgkC,gB,cAA/CI,E,OACAK,EAAQL,EAAMK,MACpBL,EAAMK,MAAQ,G,SAERJ,GAAa2B,KAAK,QAAS5B,G,cAE3BzwB,EAAW,GACjB8wB,EAAM9kC,QAAQ,SAAAT,GAAM,IAAD,cACIA,EADJ,GACRT,EADQ,KACJinC,EADI,KAEf/xB,EAASK,KACL,IAAIM,QAAQ,SAAC2xB,EAASC,GAClB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcX,GACzBS,EAAWG,OAAS,SAAAv3B,GAChBk3B,EAAQ,CAAExnC,KAAI6iB,IAAKvS,EAAE/I,OAAOnF,UAEhCslC,EAAWI,QAAU,SAAAx3B,GACjBk3B,EAAQ,Y,UAMF3xB,QAAQ7C,IAAIkC,G,eAA5B6yB,E,iBAEAnC,GAAa2B,KAAK,QAASQ,G,YAE7BxmC,KAAKkkC,c,wBACCC,EAAWnkC,KAAKmkC,SAASQ,SAASpwB,IAAI,SAAArV,GAAC,OAAIiV,KAAUlK,IAAI/K,K,UACzDmlC,GAAa2B,KAAK,WAAY7B,G,YAGpCnkC,KAAKgkB,Q,kCACCqgB,GAAa2B,KAAK,UAAWhmC,KAAKgkB,S,mIAK5C,IAAMrQ,EAAW,GACjBA,EAASK,KAAKqwB,GAAav5B,OAAO,SAAS0J,MAAM,SAAArD,GAAK,OAAI,QAC1DwC,EAASK,KAAKqwB,GAAav5B,OAAO,SAAS0J,MAAM,SAAArD,GAAK,OAAI,QAC1DwC,EAASK,KAAKqwB,GAAav5B,OAAO,WAAW0J,MAAM,SAAArD,GAAK,OAAI,QAC5DwC,EAASK,KAAKqwB,GAAav5B,OAAO,YAAY0J,MAAM,SAAArD,GAAK,OAAI,QAC7DwC,EAASK,KAAKqwB,GAAav5B,OAAO,YAAY0J,MAAM,SAAArD,GAAK,OAAI,QAE7DmD,QAAQ7C,IAAIkC,K,sCAIR3T,KAAKokC,OACapkC,KAAKokC,MAAfK,MAEF9kC,QAAQ,YAAkB,IAAflB,EAAc,EAAdA,GAAc,EAAV6iB,IACjBtX,IAAUy8B,cAAchoC,S,GAxUf8kC,OA+UzBt4B,OAAOm5B,MAAQvvB,GACAA,UCjUT6xB,I,mBACF,WAAY5lC,GAAQ,IAAD,8BACf,4CAAMA,KAmBVs2B,wBAA0B,SAAA50B,GAAW,IACzB6f,EAAiB7f,EAAjB6f,aAER,EAAKthB,SAAS,CAAEshB,kBAvBD,EA0BnBskB,2BAA6B,SAAAnkC,GACzB,EAAKzB,SAAS,CAAE6lC,mBAAoBpkC,EAAOygC,uBA3B5B,EA8BnB4D,eAAiB,SAAApkC,GAAU,IACfmkC,EAAuB,EAAKvmC,MAA5BumC,mBACHE,YAAqBF,IAE1B,EAAK7lC,SAAS,CAAEgmC,SAAUtkC,EAAMukC,iBAlCjB,EAqCnBC,gBAAkB,WACd,EAAKlmC,SAAS,CAAEgmC,SAAU,QAtCX,EAyCnBG,mBAzCmB,qBAyCE,sBAAAp2B,EAAA,qDACjB,EAAKm2B,kBADY,yCAzCF,EA+CnBE,iBAAmB,SAAA1kC,GACf,EAAKwkC,kBAELvmC,IAAgBgG,aAAa,CACzB,QAAS,yBACTgU,MAAM,KApDK,EAwDnB0sB,eAAiB,SAAA3kC,GACb,EAAKwkC,kBAELvmC,IAAgBgG,aAAa,CACzB,QAAS,uBACTgU,MAAM,KA7DK,EAiEnB2sB,eAAiB,SAAA5kC,GACb,EAAKwkC,kBAELvmC,IAAgBgG,aAAa,CACzB,QAAS,uBACTgU,MAAM,KAtEK,EA0EnB4sB,eAAiB,SAAA7kC,GACb,EAAKwkC,kBAELM,gBA7Ee,EAgFnBC,YAhFmB,sCAgFL,WAAM/kC,GAAN,eAAAqO,EAAA,wDACV,EAAKm2B,kBAEDxqB,EAAOgrB,GAAWrD,MAAQqD,GAAWrD,MAAMH,OAAS,KAH9C,gCAKOvjC,IAAgBC,KAAK,CAC9B,QAAS,oBACTuT,QAASC,KAAUC,UACnBC,OAAO,IARL,OAKNoI,EALM,iBAYLA,EAZK,iDAcVkI,aAASlI,EAAKhe,IAdJ,yCAhFK,wDAiGnBipC,eAjGmB,sCAiGF,WAAMjlC,GAAN,eAAAqO,EAAA,wDACb,EAAKm2B,kBAEDxqB,EAAOgrB,GAAWrD,MAAQqD,GAAWrD,MAAMH,OAAS,KAH3C,gCAKIvjC,IAAgBC,KAAK,CAC9B,QAAS,oBACTuT,QAASC,KAAUC,UACnBC,OAAO,IARF,OAKToI,EALS,iBAYRA,EAZQ,iDAcb/b,IAAgBgG,aAAa,CACzB,QAAS,uBACTgU,MAAM,EACNrK,OAAQoM,EAAKhe,KAjBJ,yCAjGE,wDAsHnBkpC,WAtHmB,sCAsHN,WAAMllC,GAAN,SAAAqO,EAAA,qDACT,EAAKm2B,kBADI,yCAtHM,wDA2HnBxT,aAAe,WACX,EAAKwT,kBAELW,aAAW,IA3HX,EAAKvnC,MAAQ,CACTumC,mBAAoB1M,KAAS2N,wBAC7Bd,SAAU,KACV1kB,aAAc6X,KAAS7X,cANZ,E,iFAWf6X,KAAS/uB,GAAG,2BAA4BnL,KAAK2mC,4BAC7CzM,KAAS/uB,GAAG,wBAAyBnL,KAAKo3B,2B,6CAI1C8C,KAAS5uB,IAAI,2BAA4BtL,KAAK2mC,4BAC9CzM,KAAS5uB,IAAI,wBAAyBtL,KAAKo3B,2B,+BAgHrC,IAAD,EAC6Cp3B,KAAKc,MAA/C0P,EADH,EACGA,EAAGs3B,EADN,EACMA,QAASnZ,EADf,EACeA,MAAOoZ,EADtB,EACsBA,UAAWjtB,EADjC,EACiCA,QADjC,EAEkD9a,KAAKK,MAApD0mC,EAFH,EAEGA,SAAUH,EAFb,EAEaA,mBAAoBvkB,EAFjC,EAEiCA,aAEhC2lB,GACDD,GAAajB,YAAqBF,GAC/B,kBAACqB,GAAA,EAAD,CACIxpC,GAAG,YACHsoC,SAAUA,EACVrsB,KAAM+N,QAAQse,GACdjsB,QAAS9a,KAAKinC,gBACdiB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB9iB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhB,kBAACG,GAAA,EAAD,CAAUlX,QAASzO,KAAKmnC,kBACpB,kBAACrnB,GAAA,EAAD,KACI,kBAACuoB,GAAD,OAEJ,kBAACloB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,iBAE7B,kBAACmV,GAAA,EAAD,CAAUlX,QAASzO,KAAKonC,gBACpB,kBAACtnB,GAAA,EAAD,KACI,kBAACmhB,GAAD,OAEJ,kBAAC9gB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAE3B6R,GACE,kBAACsD,GAAA,EAAD,CAAUlX,QAASzO,KAAKyzB,cACpB,kBAAC3T,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,aAGjC,kBAACmV,GAAA,EAAD,CAAUlX,QAASzO,KAAKqnC,gBACpB,kBAACvnB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAE7B,kBAACmV,GAAA,EAAD,CAAUlX,QAASzO,KAAKsnC,gBACpB,kBAACxnB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAE7B,kBAACmV,GAAA,EAAD,CAAUlX,QAASzO,KAAKwnC,aACpB,kBAAC1nB,GAAA,EAAD,KACI,kBAACwoB,GAAA,EAAD,OAEJ,kBAACnoB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,YAE7B,kBAACmV,GAAA,EAAD,CAAUlX,QAASzO,KAAK0nC,gBACpB,kBAAC5nB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAE7B,kBAACmV,GAAA,EAAD,CAAUlX,QAASzO,KAAK2nC,YACpB,kBAAC7nB,GAAA,EAAD,KACI,kBAACyoB,GAAD,OAEJ,kBAACpoB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oBAGjC,KAEFg4B,EAAY7Z,EACZ,kBAAC3f,EAAA,EAAD,MACA,kBAAC,GAAD,MAEN,OACI,oCACI,kBAACoH,EAAA,EAAD,CACIqyB,YAAW1B,EAAW,cAAgB,KACtC2B,gBAAc,OACdrnC,UAAU,sCACVgV,aAAW,OACX5H,QAASs5B,EAAYjtB,EAAU9a,KAAK6mC,gBAClCiB,EACK,kBAAC5T,GAAA,EAAD,CAAexZ,KAAMqtB,EAAW5T,SAAU,kBAAC,GAAD,MAAmB1I,KAAM,kBAAC,GAAD,QACnE,oCAAGsc,EAAYS,EAAY,kBAAC,GAAD,QAIrCR,O,GA3NYrmC,IAAMC,YAiOpBgP,iBAAkB81B,ICtP3BiC,I,kNACF7U,cAAgB,SAAArxB,GACZ,GAAsB,KAAlBA,EAAMmW,QACNnW,EAAM6B,sBACH,GAAsB,KAAlB7B,EAAMmW,QAAgB,CAAC,IAAD,EACC,EAAK9X,MAA3B8O,EADqB,EACrBA,SAAUkL,EADW,EACXA,QAEZ1N,EAAU3K,EAAMuD,OACtB,IAAKoH,EAAS,OAEd,GAAIA,EAAQsL,UAMR,OALAjW,EAAM4B,kBACN5B,EAAMmF,YAAYghC,2BAElBx7B,EAAQsL,UAAY,UAChB9I,GAAUA,EAASxC,EAAQsL,YAI/BoC,GACAA,EAAQrY,QAET,GAAsB,IAAlBA,EAAMmW,QAAe,CAAC,IACrBiwB,EAAgB,EAAK/nC,MAArB+nC,YAEFz7B,EAAU3K,EAAMuD,OACtB,IAAKoH,EAAS,OACd,GAAIA,EAAQsL,UAAW,OAEnBmwB,IACApmC,EAAM4B,kBACNwkC,O,EAKZ9U,YAAc,SAAAtxB,GACV,IAAM2K,EAAU3K,EAAMuD,OACtB,GAAKoH,EAAL,CAFmB,IAIXf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,Q,EAI5B2nB,YAAc,SAAAvxB,GACV,IAAMmX,EAAYnX,EAAMoX,cAAcC,QAAQ,cAC1CF,IACAnX,EAAM6B,iBACNW,SAASkN,YAAY,cAAc,EAAOyH,K,EAIlDkvB,YAAc,SAAArmC,GAAU,IACZmN,EAAa,EAAK9O,MAAlB8O,SAEFxC,EAAU3K,EAAMuD,OACjBoH,GAEDwC,GACAA,EAASxC,EAAQsL,Y,wEAIf,IAAD,EAC4C1Y,KAAKc,MAA9CioC,EADH,EACGA,SAAUv4B,EADb,EACaA,EAAG7B,EADhB,EACgBA,QAASq6B,EADzB,EACyBA,KAAMC,EAD/B,EAC+BA,SAEpC,OACI,yBAAK5nC,UAAU,gBACX,yBACI5C,GAAG,kBACHwc,IAAK8tB,EACL5tB,YAAa6tB,GAAQx4B,EAAE,UACvBe,iBAAe,EACf2J,gCAA8B,EAC9BxY,UAAW1C,KAAK8zB,cAChB1Y,QAASpb,KAAK+zB,YACd1Y,QAASrb,KAAKg0B,YACdkV,QAASlpC,KAAK8oC,YACdn6B,QAASA,IAEZs6B,GAAY,kBAAC,GAAD,CAAY5nC,UAAU,2B,GAlFzBM,IAAMC,YAkGhC+mC,GAAYrsB,aAAe,CACvB2sB,UAAU,GAGCr4B,qBAAkB+3B,ICqClBQ,I,mBAxIX,WAAYroC,GAAQ,IAAD,8BACf,4CAAMA,KAgEV6lC,2BAA6B,SAAAnkC,GACzB,EAAKzB,SAAS,CAAE6lC,mBAAoBpkC,EAAOygC,uBAlE5B,EAqEnBxP,aAAe,WAAO,IAAD,EACgB,EAAK3yB,MAA9B6yB,EADS,EACTA,SAAUE,EADD,EACCA,WACV+S,EAAuB,EAAKvmC,MAA5BumC,mBACHE,YAAqBF,IAE1BjT,GAAUE,IA1EK,EA6EnBuV,uBAAyB,WAAO,IACpBC,EAAuB,EAAKvoC,MAA5BuoC,mBAEFj8B,EAAU,EAAKsmB,eAAexc,QACpC,GAAK9J,EAAL,CAJ2B,IAMnBf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MAIxBg9B,EAFsBj8B,EAAdsL,aAvFO,EA4FnB6c,kBAAoB,WAChB,EAAK9B,gBA7FU,EAgGnBhpB,YAAc,WACV,EAAKgpB,gBA9FL,EAAKC,eAAiB/xB,IAAM2Y,YAE5B,EAAKja,MAAQ,CACTumC,mBAAoB1M,KAAS2N,wBAC7BntB,MAAM,GAPK,E,0EAWNhB,GAAQ,IACT2vB,EAAuBrpC,KAAKc,MAA5BuoC,mBAEFC,EAActpC,KAAK0zB,eAAexc,QACxC,GAAIoyB,EAAa,CAEb,GADAA,EAAY5wB,UAAYgB,EACpB4vB,EAAYjH,WAAWvvB,OAAS,EAAG,CACnC,IAAM0vB,EAAQv9B,SAASw9B,cACvBD,EAAME,SAAS4G,EAAYjH,WAAW,GAAIiH,EAAYjH,WAAW,GAAGvvB,QACpE0vB,EAAMG,UAAS,GAEf,IAAMC,EAAY33B,OAAO43B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB8G,EAAY5hC,QACZ2hC,EAAmB3vB,M,yCAIRxY,EAAWC,EAAWC,GAAW,IACxCyyB,EAAe7zB,KAAKc,MAApB+yB,WAER,GAAIA,IAAe3yB,EAAU2yB,WACzB,GAAIA,EACA7zB,KAAKuiC,iBACF,CACH,IAAM+G,EAActpC,KAAK0zB,eAAexc,QACpCoyB,IACAA,EAAY5wB,UAAY,S,mCAOpC,IAAM4wB,EAActpC,KAAK0zB,eAAexc,QACpCoyB,GACAA,EAAY5hC,U,0CAKZ1H,KAAKc,MAAM6tB,OACX3uB,KAAKuiC,aAGTrI,KAAS/uB,GAAG,2BAA4BnL,KAAK2mC,8B,6CAI7CzM,KAAS5uB,IAAI,2BAA4BtL,KAAK2mC,8B,+BAsCxC,IAAD,EACkC3mC,KAAKc,MAApC+yB,EADH,EACGA,WAAYiU,EADf,EACeA,QAASnZ,EADxB,EACwBA,MAEzBjY,EAAU,KACV6yB,GAAW,EAcf,OAbI1V,GACA0V,GAAW,EACX7yB,EACI,kBAAC,GAAD,CACIqyB,SAAU/oC,KAAK0zB,eACf9jB,SAAU5P,KAAKopC,uBACftuB,QAAS9a,KAAKu1B,qBAItB7e,EAAU,kBAAC,GAAD,CAAaqyB,SAAU/oC,KAAK0zB,eAAgB/kB,QAAS3O,KAAKyK,cAIpE,yBAAKpJ,UAAU,iBACX,kBAAC,GAAD,CAAgBymC,QAASA,EAASC,UAAWwB,EAAU5a,MAAOA,EAAO7T,QAAS9a,KAAKu1B,oBAClF7e,O,GA1HW/U,IAAMC,Y,QCK5B4nC,I,mBACF,WAAY1oC,GAAQ,IAAD,uBACf,4CAAMA,KA2CVmgB,YAAc,WACV,MAAO,mBAAoBhW,QA7CZ,EAsEnBw+B,6BAA+B,SAAAjnC,GACtB,EAAKye,eAAe,EAAKC,cAAa,IAvE5B,EA0EnBwoB,0BAA4B,SAAAlnC,GAExB,IADoB,EAAKnC,MAAjB2jB,QACR,CAFkC,IAIjB2lB,EAAkBlC,GAA3BzjB,QACH2lB,GAEL,EAAK5oC,SAAS,CACVijB,QAAS2lB,GACV,WACM,EAAK1oB,eAAe,EAAKC,cAAa,OApFhC,EAwFnB5b,eAAiB,WACb,EAAK4b,cAAa,IAzFH,EA4FnBkW,wBAA0B,SAAA50B,GAAW,IACzB6f,EAAiB6X,KAAjB7X,aACR,EAAKthB,SAAS,CACVshB,gBACD,WACM,EAAKpB,eAAe,EAAKC,cAAa,MAjGhC,EAqGnBA,aAAe,WAAwB,IAAvBkB,IAAsB,2DACU,EAAK/hB,MAAzCi8B,EAD0B,EAC1BA,SAAUtY,EADgB,EAChBA,QAEZzB,GAH4B,EACPF,aAEZ,EAAKG,WAAWtL,SACzBoL,EAAU,EAEZG,EAAO,KACP9c,EAAO,EACX,GAA0B,iBAAtB22B,EAAS,SAA6B,CACtC,IAAMsN,EAAO,EAAKjnB,UAAU1Y,IAAI,gBAC5B2/B,IAEAjkC,GADA8c,EAAOmnB,EAAKhnB,YACAC,iBAEb,GAA0B,mBAAtByZ,EAAS,SAChB,IAAK,IAAIlpB,EAAI,EAAGA,EAAI4Q,EAAQlR,OAAQM,IAAK,CACrC,IAAMmG,EAAS,EAAKoJ,UAAU1Y,IAAI,qBAAuB+Z,EAAQ5Q,GAAG3U,IACpE,GAAIulB,EAAQ5Q,GAAG3U,KAAO69B,EAASuN,eAAgB,CAE3ClkC,GADA8c,EAAOlJ,EAAOqJ,YACFC,WACZ,OAIZ,GAAKJ,EAAL,CAEA,IAAMW,EAAkB,EAAKC,mBAAmBnM,QAChD,GAAIkM,EAAiB,CACjB,IAAME,EAAkBlB,EAAa,gDAAkD,KACvFgB,EAAgB1d,MAAM6d,QAAtB,gBAAyC5d,EAAO2c,EAAhD,sBAAqEG,EAAKe,YAAc,EAAIlB,EAA5F,eAA0GgB,GAG9G,GAAIb,GAAQL,EAAW,CAAC,IAAD,iBACXqB,EADW,EACXA,SAEJA,GACAA,EAAS3jB,OAGb,EAAK2jB,SAAW,IAAIrlB,KAAS,IAAK,CAC9B,CACIwB,KAAM2iB,EAAOmB,WACbvkB,GAAIoF,YAAMoB,EAAO4c,EAAOoB,YAAc,EAAIlB,EAAKkB,YAAc,EAAG,EAAGpB,EAAOiB,YAAcjB,EAAOoB,aAC/F9jB,KAAM,SAAA8F,GAAI,OAAK4c,EAAOmB,WAAa/d,MAI3CyD,WAAW,WACF,EAAKqa,UAEV,EAAKA,SAASllB,SACf,MAxJQ,EA+JnBurC,oBAAsB,SAAAtnC,GAAW,IACrB85B,EAAa,EAAKj8B,MAAlBi8B,SACAtY,EAAY+lB,GAAZ/lB,QAER,EAAKjjB,SAAS,CACVijB,WACD,WAC2B,mBAAtBsY,EAAS,WAA+F,IAA9DtY,EAAQ2Q,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAO69B,EAASuN,iBACnF,EAAKG,kBAEA,EAAK/oB,eAAe,EAAKC,kBAzKvB,EA8KnB+oB,uBAAyB,SAAAznC,GAAW,IACxB85B,EAAayN,GAAbzN,SAER,EAAKv7B,SAAS,CACVu7B,YACD,WACM,EAAKrb,eAAe,EAAKC,kBApLnB,EAwLnB8oB,gBAAkB,SAAAvnC,GACVA,GAA0B,IAAjBA,EAAMmd,QAEnBlf,IAAgBgG,aAAa,CACzB,QAAS,uBACT41B,SAAU,CACN,QAAS,mBA9LF,EAmMnB1Y,kBAAoB,SAACnhB,EAAOhE,GACpBgE,GAA0B,IAAjBA,EAAMmd,QAEnBlf,IAAgBgG,aAAa,CACzB,QAAS,uBACT41B,SAAU,CACN,QAAS,iBACTuN,eAAgBprC,MA1MT,EA+MnByrC,YAAc,SAAAznC,GACLA,EAAM0nC,SAIX1nC,EAAMukC,cAActjB,YAAcjhB,EAAM0nC,OACxC1nC,EAAM4B,oBAlNN,EAAKse,UAAY,IAAIzP,IACrB,EAAKsP,WAAa7gB,IAAM2Y,YACxB,EAAK+I,mBAAqB1hB,IAAM2Y,YALjB,IAOP+H,EAAiB6X,KAAjB7X,aACA2B,EAAsB+lB,GAAtB/lB,QAASsY,EAAayN,GAAbzN,SARF,OAUf,EAAKj8B,MAAQ,CACTgiB,eACA2B,UACAsY,YAGJ,EAAKh3B,eAAiBue,YAAS,EAAKve,eAAgB,KAhBrC,E,iFAoBftF,KAAK8jB,gBACLoW,KAAS/uB,GAAG,0BAA2BnL,KAAK0pC,2BAC5CxP,KAAS/uB,GAAG,wBAAyBnL,KAAKo3B,yBAC1C2S,GAAY5+B,GAAG,uBAAwBnL,KAAKiqC,wBAC5CF,GAAY5+B,GAAG,oBAAqBnL,KAAK8pC,qBACzCM,KAAkBj/B,GAAG,6BAA8BnL,KAAKypC,8BAExDzpC,KAAKkhB,iB,yCAGUhgB,EAAWC,EAAWC,GACrCpB,KAAK+jB,kBACL/jB,KAAK8jB,kB,6CAIL9jB,KAAK+jB,kBACLmW,KAAS5uB,IAAI,0BAA2BtL,KAAK0pC,2BAC7CxP,KAAS5uB,IAAI,wBAAyBtL,KAAKo3B,yBAC3C2S,GAAYz+B,IAAI,uBAAwBtL,KAAKiqC,wBAC7CF,GAAYz+B,IAAI,oBAAqBtL,KAAK8pC,qBAC1CM,KAAkB9+B,IAAI,6BAA8BtL,KAAKypC,gC,sCAQzD,GAAKzpC,KAAKihB,cAAV,CACA,IAAM+C,EAAUhkB,KAAKwiB,WAAWtL,QAChC,GAAK8M,EAAL,CAEA,IAAMC,EAAW,IAAIC,eAAelkB,KAAKsF,gBACzC2e,EAASE,QAAQH,GAEjBhkB,KAAKokB,eAAiB,CAAEH,WAAUD,e,wCAIlC,GAAKhkB,KAAKihB,eACLjhB,KAAKokB,eAAV,CAFc,MAIgBpkB,KAAKokB,eAA3BH,EAJM,EAINA,SAAUD,EAJJ,EAIIA,QACbC,GACAD,GAELC,EAASI,UAAUL,M,+BAqJb,IAAD,OACGxT,EAAMxQ,KAAKc,MAAX0P,EADH,EAEuCxQ,KAAKK,MAAzC2jB,EAFH,EAEGA,QAASsY,EAFZ,EAEYA,SAAUja,EAFtB,EAEsBA,aAE3B,OAAK2B,GACAA,EAAQlR,QAEb9S,KAAK2iB,UAAY,IAAIzP,IAEjB,yBAAK7R,UAAU,QACX,yBAAKA,UAAU,uBACf,yBAAK4Z,IAAKjb,KAAKwiB,WAAYnhB,UAAU,UAAUgpC,QAASrqC,KAAKkqC,aACzD,yBACIjvB,IAAK,SAAAsJ,GAAC,OAAI,EAAK5B,UAAUnK,IAAI,eAAgB+L,IAC7CljB,UAAWiN,IAAW,SAAU,CAAE,gBAAuC,iBAAtBguB,EAAS,WAC5D/tB,YAAavO,KAAKgqC,gBAClB3tB,MAAOgG,EAAe7R,EAAE,kBAAoB,MAC5C,8BAAO6R,EAAe2I,YAAexa,EAAE,mBAAqBA,EAAE,oBAEjEwT,EAAQzP,IAAI,SAAArV,GAAC,OACV,yBACIyD,IAAKzD,EAAET,GACPwc,IAAK,SAAAsJ,GAAC,OAAI,EAAK5B,UAAUnK,IAAI,qBAAuBtZ,EAAET,GAAI8lB,IAC1DljB,UAAWiN,IAAW,SAAU,CAAE,gBAAiBguB,EAASuN,iBAAmB3qC,EAAET,KACjF8P,YAAa,SAAAQ,GAAC,OAAI,EAAK6U,kBAAkB7U,EAAG7P,EAAET,KAC9C4d,MAAOgG,EAAenjB,EAAEmd,MAAQ,MAChC,8BAAOgG,EAAe2I,YAAe9rB,EAAEmd,OAASnd,EAAEmd,UAE1D,yBAAKpB,IAAKjb,KAAKqjB,mBAAoBhiB,UAAU,wBAxBpC,S,GA7NPM,IAAMC,YAgQbgP,iBAAkB44B,ICxP3Bc,G,8LACoBvuB,EAAWC,EAAWqK,GAAc,IAAD,EACTrmB,KAAKc,MAAzCuP,EAD6C,EAC7CA,OAAQisB,EADqC,EACrCA,SAAU52B,EAD2B,EAC3BA,MAAOe,EADoB,EACpBA,OACjC,OAAIsV,EAAU1L,SAAWA,IAKrB0L,EAAUugB,WAAaA,IAKvBvgB,EAAUtV,SAAWA,GAKrBsV,EAAUrW,MAAMG,MAAQH,EAAMG,Q,+BAS5B,IAAD,EACuC7F,KAAKc,MAAzCuP,EADH,EACGA,OAAQisB,EADX,EACWA,SAAU71B,EADrB,EACqBA,OAAQf,EAD7B,EAC6BA,MAElC,OACI,yBAAKrE,UAAU,mBAAmBqE,MAAOA,GACrC,kBAAC,GAAD,CAAQ2K,OAAQA,EAAQisB,SAAUA,EAAU71B,OAAQA,S,GAhCvC9E,IAAMC,WA0fpB2oC,G,YAndX,WAAYzpC,GAAQ,IAAD,uBACf,4CAAMA,KAqGVmpC,uBAAyB,SAAAznC,GAAW,IACxB85B,EAAa95B,EAAb85B,SAER,EAAKv7B,SAAS,CACVu7B,WACAtP,OAAQ,CACJC,SAAS,EACTC,WAAW,IAEhB,WACC,EAAKsd,oBAhHM,EAoHnB5sB,mBAAqB,SAAApb,KApHF,EA8HnBioC,wBAA0B,SAAAjoC,GAAW,IACzBu4B,EAAuBv4B,EAAvBu4B,WAAY1qB,EAAW7N,EAAX6N,OAEhB0qB,EACA,EAAK2P,YAAYlyB,IAAInI,EAAQA,GAE7B,EAAKq6B,YAAYnyB,OAAOlI,GAG5B,EAAKoI,eAvIU,EA0InBkuB,2BAA6B,SAAAnkC,GAAW,IACPokC,EAAuBpkC,EAA5CygC,oBAER,EAAKliC,SAAS,CAAE6lC,sBAAsB,kBAAM,EAAK4D,oBA7IlC,EAgJnB3uB,uBAAyB,SAAArZ,GACrB,EAAK8qB,YAAW,IAjJD,EAoJnBkd,eApJmB,qBAoJF,4BAAA15B,EAAA,wDACL81B,EAAuB,EAAKvmC,MAA5BumC,mBACHE,YAAqBF,GAFb,iEAIP58B,IAAU2gC,OAAO,kBAAM,EAAKrd,YAAW,KAJhC,yCApJE,EA2JnBsd,UAAY,WAAO,IAAD,EACgB,EAAK9pC,MAA3B+pC,EADM,EACNA,YAAanuB,EADP,EACOA,KACb4f,EAAa,EAAKj8B,MAAlBi8B,SACK,iBAAT5f,GACsB,iBAAtB4f,EAAS,UAETuO,GAAaA,KAjKF,EAoKnBC,qBAAuB,SAAAtoC,GAAW,IACtB85B,EAAa,EAAKj8B,MAAlBi8B,SACA5qB,EAAalP,EAAbkP,SAEHq5B,YAAezO,EAAU5qB,EAASua,OAIvC,EAAK+e,kBAAkBxoC,IA5KR,EA+KnBwoC,kBAAoB,SAAAxoC,GAAW,IAAD,EACU,EAAKnC,MAAjCoU,EADkB,EAClBA,MAAO6nB,EADW,EACXA,SAAUtP,EADC,EACDA,OACzB,GAAKvY,EAAL,CAF0B,IAIlBwY,EAAYD,EAAZC,QACR,IAAIA,GAAYxY,EAAM3B,OAAtB,CAL0B,IAOlBqC,EAAY3S,EAAZ2S,QAEFsH,EAAOR,KAAUhS,IAAIkL,GAC3B,GAAKsH,GAIAwuB,YAAY91B,EAASmnB,GAA1B,CAIA,IAAM4O,EAAQC,YAAah2B,EAASmnB,GAC9B8O,EAAe32B,EAAMkgB,UAAU,SAAAz1B,GAAC,OAAIA,IAAMiW,IAChD,IAAsB,IAAlBi2B,GAAiC,MAAVF,EAA3B,CAKA,IADA,IAAMv2B,EAAU,GACPvB,EAAI,EAAGA,EAAIqB,EAAM3B,OAAQM,IAAK,CACnC,IAAMqJ,EAAOR,KAAUhS,IAAIwK,EAAMrB,IAC3Bi4B,EAAYF,YAAa12B,EAAMrB,GAAIkpB,GACrC7f,GAAsB,MAAd4uB,GACR12B,EAAQX,KAAKyI,EAAKhe,IAI1B,IAAM6sC,EAAa,GACL,MAAVJ,EAEI/1B,IAAY+kB,KAAS0G,aAAgBnkB,EAAKwe,eAC1Cv6B,IAAgB6qC,UAAU,GAC1BnS,cAA4B,KAGV,IAAlBgS,IACIne,GACA/b,QAAQC,MAAR,oBAA2B3O,EAAO,UAAY,CAAE/D,GAAI0W,EAASkH,MAAOJ,KAAUhS,IAAIkL,GAASkH,MAAOI,KAAMR,KAAUhS,IAAIkL,KACtHlK,OAAOugC,GAAGhzB,IAAIrD,EAASA,IAGvBm2B,EAAWt3B,KAAKmB,IAK5B,EAAKs2B,aAAa92B,EAAS22B,EAAY,WACnC,EAAKvb,iBAAiBub,GACtB,EAAKV,mBArOM,EAqQnBvd,aAAe,WAEX,IAAMpB,EAAO,EAAKC,QAAQhV,QAAQw0B,aAAax0B,QAC1C+U,IAGDA,EAAKD,WAAa2f,KAClB,EAAKC,aACE3f,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKoF,aAAepF,EAAKK,cAEtE,EAAKgB,eA/QM,EAiYnB0U,WAAa,WAAmBxgC,GAAY,IAA5BwgB,EAA2B,EAA3BA,MAAOtc,EAAoB,EAApBA,MACX42B,EAAa,EAAKj8B,MAAlBi8B,SACFp9B,EAAIsC,EAAOwgB,GAEjB,OAAO,kBAAC,GAAD,CAAgBrf,IAAKzD,EAAGmR,OAAQnR,EAAGo9B,SAAUA,EAAU71B,OAAQ,EAAKikC,YAAYr3B,IAAInU,GAAIwG,MAAOA,KAlYtGuF,OAAOugC,GAAK,IAAIt4B,IAChB,EAAKw3B,YAAc,IAAIx3B,IAEvB,EAAKgZ,QAAUvqB,IAAM2Y,YANN,IAQPssB,EAAuB1M,KAAvB0M,mBARO,OAUf,EAAKvmC,MAAQ,CACTumC,qBACAnyB,MAAO,KACPo3B,iBAAiB,EACjBvP,SAAyB,iBAAfx7B,EAAM4b,KAA0B,CAAE,QAAS,gBAAmB,CAAE,QAAS,mBACnFsQ,OAAQ,CACJC,SAAS,EACTC,WAAW,IAjBJ,E,mFAsBGnR,EAAWC,GAAY,IAAD,EAC8Bhc,KAAKc,MAAnEywB,EADgC,EAChCA,MAAO7W,EADyB,EACzBA,KAAMoxB,EADmB,EACnBA,YAAaC,EADM,EACNA,aAAcjgB,EADR,EACQA,MAAOkgB,EADf,EACeA,WADf,EAEZhsC,KAAKK,MAAzBoU,EAFgC,EAEhCA,MAFgC,EAEzB6nB,SAEf,OAAIvgB,EAAUwV,QAAUA,IAIpBxV,EAAUrB,OAASA,IAInBqB,EAAU+P,QAAUA,IAIpB/P,EAAUiwB,aAAeA,IAIzBjwB,EAAU+vB,cAAgBA,IAI1B/vB,EAAUgwB,eAAiBA,GAI3B/vB,EAAUvH,QAAUA,S,8CAWJvT,EAAWC,GAAY,IAC1B8qB,EAASjsB,KAAKksB,QAAvBhV,QACR,OAAK+U,EAEE,CAAED,UAAWC,EAAKD,WAFP,CAAEA,UAAW,K,yCAKhB9qB,EAAWC,EAAWC,M,0CAKrCpB,KAAKwqC,iBAELtQ,KAAS/uB,GAAG,2BAA4BnL,KAAK2mC,4BAE7C1qB,KAAU9Q,GAAG,mCAAoCnL,KAAK6b,wBACtDI,KAAU9Q,GAAG,wBAAyBnL,KAAKyqC,yBAC3CxuB,KAAU9Q,GAAG,yBAA0BnL,KAAKgrC,mBAC5C/uB,KAAU9Q,GAAG,wBAAyBnL,KAAKgrC,mBAC3C/uB,KAAU9Q,GAAG,qBAAsBnL,KAAK8qC,sBAExCf,GAAY5+B,GAAG,uBAAwBnL,KAAKiqC,wBAE5ClsB,KAAgB5S,GAAG,kBAAmBnL,KAAK4d,sB,6CAI3Csc,KAAS5uB,IAAI,2BAA4BtL,KAAK2mC,4BAE9C1qB,KAAU3Q,IAAI,mCAAoCtL,KAAK6b,wBACvDI,KAAU3Q,IAAI,wBAAyBtL,KAAKyqC,yBAC5CxuB,KAAU3Q,IAAI,yBAA0BtL,KAAKgrC,mBAC7C/uB,KAAU3Q,IAAI,wBAAyBtL,KAAKgrC,mBAC5C/uB,KAAU3Q,IAAI,qBAAsBtL,KAAK8qC,sBAEzCf,GAAYz+B,IAAI,uBAAwBtL,KAAKiqC,wBAE7ClsB,KAAgBzS,IAAI,kBAAmBtL,KAAK4d,sB,mCAsInCjJ,GAAqC,IAA5B22B,EAA2B,uDAAd,GAAIxW,EAAU,uCACrCwH,EAAat8B,KAAKK,MAAlBi8B,SAEF2P,EAAiBt3B,EAAQ2E,OAAOgyB,GAAYlZ,KAAK,SAACthB,EAAGo7B,GACvD,OAAOC,YAAahB,YAAae,EAAG5P,GAAW6O,YAAar6B,EAAGwrB,MAG9DiO,EAAY6B,iBAAiBpsC,KAAKK,MAAMoU,MAAOw3B,GAMpDjsC,KAAKe,SAAS,CAAE0T,MAAOw3B,GAAkBnX,GALjCA,GAAUA,M,iOAsCL9wB,E,gCAAiB+P,E,+BAAQs4B,IAC9B3vB,EAAS1c,KAAKc,MAAd4b,K,EAC4B1c,KAAKK,MAAjCoU,E,EAAAA,MAAO6nB,E,EAAAA,WAAUtP,E,EAAAA,QAGdC,Q,qDAKPD,EAAOE,U,wDAKPof,EAAc,sBACdC,EAAe,EACfC,EAAa,MACZxoC,GAAWyQ,GAASA,EAAM3B,OAAS,IACpC05B,EAAavwB,KAAUhS,IAAIwK,EAAMA,EAAM3B,OAAS,OAE5Cw5B,EAAcnB,YAAaqB,EAAW/tC,GAAI69B,GAC1CiQ,EAAeC,EAAW/tC,IAIrB,iBAATie,GAAyBxL,QAAQu7B,IAAI,sBAAuB/vB,EAAM4vB,EAAaC,EAAcC,GACjGxf,EAAOC,SAAU,E,UACIvsB,IAAgBC,KAAK,CACtC,QAAS,WACTw+B,UAAW7C,EACXxoB,eAAgBy4B,EAChB14B,aAAcy4B,EACdv4B,MAAOs4B,MACRne,QAAQ,WACPlB,EAAOC,SAAU,EACbjpB,GACAtD,IAAgBgG,aAAa,CAAE,QAAS,2BAA4BulB,KAAMqQ,M,WAT5Ez7B,E,OAYO,iBAAT6b,GAAyBxL,QAAQu7B,IAAI,qBAAsBzoC,EAAS0Y,EAAM7b,GAE1EmsB,IAAWhtB,KAAKK,MAAM2sB,O,mDAKtBnsB,EAAO+T,SAAS9B,OAAS,GAAKjS,EAAO+T,SAAS,KAAO23B,GACrD1rC,EAAO+T,SAAS83B,QAGpB1f,EAAOE,WAAarsB,EAAO+T,SAAS9B,OAEhC9O,EACAhE,KAAK2sC,aAAa9rC,EAAO+T,SAAU,WAC/B,EAAKmb,iBAAiBlvB,EAAO+T,UAC7B,EAAKg2B,YAED/pC,EAAO+T,SAAS9B,OAASu5B,KACzB,EAAK/e,YAAW,EAAO+e,IAAmBxrC,EAAO+T,SAAS9B,QAG9D,IAAMmZ,EAAO,EAAKC,QAAQhV,QAAQw0B,aAAax0B,QAC1C+U,IACLA,EAAKD,UAAY,KAIrBhsB,KAAK4sC,YAAY/rC,EAAO+T,SAAU,WAE9B,EAAKmb,iBAAiBlvB,EAAO+T,UAEzB/T,EAAO+T,SAAS9B,QAAUjS,EAAO+T,SAAS9B,OAASiB,GACnD,EAAKuZ,YAAW,EAAOvZ,EAAQlT,EAAO+T,SAAS9B,U,4IAM9C6B,GACb,IAAME,EAAQ7K,IAAU8K,WACxBC,YAAiBF,EAAOF,K,kCAGhBA,EAASmgB,GACjB,GAAuB,IAAnBngB,EAAQ7B,OAAZ,CAD2B,IAQrB+5B,GAFY7sC,KAAKK,MAAfoU,OAEmB,IAAI6E,OAAO3E,GACtC3U,KAAKe,SAAS,CAAE0T,MAAOo4B,GAAY/X,QAP3BA,GAAUA,M,mCAUTrgB,EAAOqgB,GAChB90B,KAAKe,SAAS,CAAE0T,SAASqgB,K,oCAMzB9I,GAFahsB,KAAKksB,QAAQhV,QAAQw0B,aAAax0B,W,+BAczC,IAAD,SACmDlX,KAAKc,MAArD4Z,EADH,EACGA,KAAMsxB,EADT,EACSA,WADT,KACqBF,YADrB,EACkCC,aACX/rC,KAAKK,OAAzBoU,EAFH,EAEGA,MAAO6nB,EAFV,EAEUA,SAGf,IAAK5hB,EAAM,OAAO,KAElB1a,KAAKwB,OAAS,GAEd,GAAIiT,EAAO,CAEPA,EAAM9U,QAAQ,SAAAT,GACNu9B,YAAav9B,EAAGo9B,IACDp9B,IAGvBc,KAAKwB,OAASiT,OACX,GAAIu3B,EAAY,CAEnBA,EAAWrsC,QAAQ,SAAAT,GACXu9B,YAAav9B,EAAGo9B,IACDp9B,IAGvBc,KAAKwB,OAASwqC,EAAWz3B,IAAI,SAAArV,GAAC,OAAIA,EAAET,SAUV,iBAAtB69B,EAAS,UACCwQ,MAAMltC,KAAKktC,MAAM,KAAKv4B,IAAI,SAACrV,EAAG8iB,GAAJ,OAAc,kBAAC,GAAD,CAAmBrf,IAAKqf,EAAOA,MAAOA,MAIhG/W,OAAO8hC,OAASt4B,EAChBxJ,OAAO+hC,GAAK,IAAI95B,KAAKuB,GAAS,IAAIF,IAAI,SAAAnB,GAAC,MAAI,CAACA,EAAGA,MAC/C,IAAM65B,EAAM,GAUZ,OATAhiC,OAAOugC,GAAG7rC,QAAQ,SAACgJ,EAAOhG,GACjBsI,OAAO+hC,GAAG35B,IAAI1Q,IACfsqC,EAAIj5B,KAAKrR,KAGjBuO,QAAQu7B,IAAI,eAAgBh4B,GAAS,IAAI3B,OAAQ7H,OAAO+hC,GAAGl1B,KAAM7M,OAAOugC,GAAG1zB,KAAMm1B,EAAIn6B,QAKjF,kBAAC,GAAD,CACImI,IAAKjb,KAAKksB,QACV7qB,UAAU,eACVG,OAAQxB,KAAKwB,OACbsrB,UAAW,GACXlB,cAAe,GACfoW,WAAY,SAAA9iC,GAAC,OAAI,EAAK8iC,WAAW9iC,EAAG,EAAKsC,SACzCoxB,SAAU5yB,KAAKqtB,kB,wCA5MH6f,EAAY5B,GAChC,GAAI4B,EAAWp6B,SAAWw4B,EAAWx4B,OAAQ,CACzC,IAAK,IAAIM,EAAI,EAAGA,EAAI85B,EAAWp6B,OAAQM,IACnC,GAAI85B,EAAW95B,KAAOk4B,EAAWl4B,GAAI,OAAO,EAGhD,OAAO,EAGX,OAAO,M,GAnQWzR,IAAMC,WCpD1BurC,G,iLACQ,IAAD,EACmDntC,KAAKc,MAArD0P,EADH,EACGA,EAAG48B,EADN,EACMA,aAActhB,EADpB,EACoBA,MAAOkgB,EAD3B,EAC2BA,WAAYlxB,EADvC,EACuCA,QAE5C,OACI,oCACI,yBAAKzZ,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,sCAAsCoN,QAASqM,GACjE,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,oBAGnD,yBAAKnP,UAAU,mBACX,kBAAC,GAAD,CACIqb,KAAK,kBACLzB,IAAKmyB,EACLpB,WAAYA,EACZtxB,MAAM,EACNoR,MAAOA,U,GApBTnqB,IAAMC,WA8BbgP,iBAAkBu8B,ICvB3BE,I,kNACFhtC,MAAQ,CACJ8lB,aAAa,EACbtgB,IAAK,EACLF,KAAM,G,EAGV64B,kB,sCAAoB,WAAM/7B,GAAN,iBAAAqO,EAAA,qDACZrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKhE,MAArB8lB,YAGJ,EAAKplB,SAAS,CAAEolB,aAAa,KAEvBxgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKvH,SAAS,CACVolB,aAAa,EACbxgB,OACAE,SAhBQ,yC,wDAqBpBugB,uBAAyB,SAAA3jB,GACjBA,GACAA,EAAM4B,kBAGV,EAAKtD,SAAS,CAAEolB,aAAa,K,EAGjCrB,aAAe,SAAAriB,GACX,EAAK2jB,0BAILknB,EAFqB,EAAKxsC,MAAlBwsC,a,wEAKF,IAAD,EAC8CttC,KAAKc,MAAhDuP,EADH,EACGA,OAAQE,EADX,EACWA,SAAU2L,EADrB,EACqBA,kBAAmB1L,EADxC,EACwCA,EADxC,EAE8BxQ,KAAKK,MAAhC8lB,EAFH,EAEGA,YAAatgB,EAFhB,EAEgBA,IAAKF,EAFrB,EAEqBA,KAEpB8K,EAAaC,YAAkBL,EAAQ6L,EAAmB1L,GAEhE,OACI,oCACI,kBAACmP,GAAA,EAAD,CAAUC,QAAM,EAACve,UAAU,WAAWoN,QAAS8B,EAAUuW,cAAe9mB,KAAKw+B,mBACzE,kBAAC7tB,EAAA,EAAD,CAAUyvB,QAAM,EAAC/vB,OAAQA,EAAQ6L,kBAAmBA,EAAmB6kB,YAAU,IACjF,yBAAK1/B,UAAU,kBAAkBoP,IAErC,kBAAC2U,GAAA,EAAD,CACI1K,KAAMyL,EACNrL,QAAS9a,KAAKomB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEnf,MAAKF,QACvB2f,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBjX,YAAa,SAAAQ,GAAC,OAAIA,EAAE1K,oBACpB,kBAACqhB,GAAA,EAAD,CAAUjX,QAAS,SAAAM,GAAC,OAAIA,EAAE1K,oBACtB,kBAACshB,GAAA,EAAD,CAAUlX,QAASzO,KAAK8kB,cACpB,kBAAChF,GAAA,EAAD,KACI,kBAAC+F,GAAD,OAEJ,kBAAC1F,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oB,GA3E/B7O,IAAM4rC,gBA2F5BF,GAAQ/wB,aAAe,CACnBJ,mBAAmB,GAGRtL,qBAAkBy8B,IChG3BG,I,kNACFntC,MAAQ,CACJ8lB,aAAa,EACbtgB,IAAK,EACLF,KAAM,G,EAGV64B,kB,sCAAoB,WAAM/7B,GAAN,iBAAAqO,EAAA,qDACZrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKhE,MAArB8lB,YAGJ,EAAKplB,SAAS,CAAEolB,aAAa,KAEvBxgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKvH,SAAS,CACVolB,aAAa,EACbxgB,OACAE,SAhBQ,yC,wDAqBpBugB,uBAAyB,SAAA3jB,GACjBA,GACAA,EAAM4B,kBAGV,EAAKtD,SAAS,CAAEolB,aAAa,K,EAGjCrB,aAAe,SAAAriB,GACX,EAAK2jB,0BAILknB,EAFqB,EAAKxsC,MAAlBwsC,a,wEAKF,IAAD,EAC0BttC,KAAKc,MAA5B0P,EADH,EACGA,EAAGH,EADN,EACMA,OAAQ5B,EADd,EACcA,QADd,EAE8BzO,KAAKK,MAAhC8lB,EAFH,EAEGA,YAAatgB,EAFhB,EAEgBA,IAAKF,EAFrB,EAEqBA,KAE1B,OACI,oCACI,kBAACga,GAAA,EAAD,CACIC,QAAM,EACNve,UAAU,sBACVoN,QAASA,EACTqY,cAAe9mB,KAAKw+B,mBACpB,kBAAC,GAAD,CAAMnuB,OAAQA,KAElB,kBAAC+U,GAAA,EAAD,CACI1K,KAAMyL,EACNrL,QAAS9a,KAAKomB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEnf,MAAKF,QACvB2f,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBjX,YAAa,SAAAQ,GAAC,OAAIA,EAAE1K,oBACpB,kBAACqhB,GAAA,EAAD,CAAUjX,QAAS,SAAAM,GAAC,OAAIA,EAAE1K,oBACtB,kBAACshB,GAAA,EAAD,CAAUlX,QAASzO,KAAK8kB,cACpB,kBAAChF,GAAA,EAAD,KACI,kBAAC+F,GAAD,OAEJ,kBAAC1F,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oB,GA5ErB7O,IAAM4rC,gBA2FvB38B,iBAAkB48B,IC9BlBC,I,mBAhEX,WAAY3sC,GAAQ,IAAD,8BACf,4CAAMA,KA8BVw2B,qBAAuB,SAAA90B,GAAW,IACtB+0B,EAA+B/0B,EAA/B+0B,WAAYgH,EAAmB/7B,EAAnB+7B,eAEpB,EAAKx9B,SAAS,CACVw2B,WAAYA,EACZgH,eAAgBA,KAjCpB,EAAKl+B,MAAQ,CACTk3B,WAAY2C,KAAS0G,YACrBrC,eAAgB,MALL,E,mFASGxiB,EAAWC,GAAY,IACjC3L,EAAWrQ,KAAKc,MAAhBuP,OAER,OAAI2L,EAAUub,aAAelnB,GAIzB2L,EAAUuiB,iBAAmBluB,I,0CAQjC6pB,KAAS/uB,GAAG,qBAAsBnL,KAAKs3B,wB,6CAIvC4C,KAAS5uB,IAAI,qBAAsBtL,KAAKs3B,wB,+BAYlC,IAAD,EACuBt3B,KAAKc,MAAzBuP,EADH,EACGA,OAAQ5B,EADX,EACWA,QACIi/B,EAAmB1tC,KAAKK,MAApCk3B,WAEFpH,EAAWjb,YAAgB7E,GAEjC,OACI,kBAACsP,GAAA,EAAD,CACIC,QAAM,EACNve,UAAWiN,IAAW,oBAAqB,CAAE,gBAAiB+B,IAAWq9B,IACzEj/B,QAASA,GACT,yBAAKpN,UAAU,6BACX,kBAAC,GAAD,CAAMgP,OAAQA,EAAQ6M,SAAUiT,EAAW,IAAMA,EAAW,a,GArDlDxuB,IAAMC,Y,iPCK9B+rC,G,YACF,WAAY7sC,GAAQ,IAAD,8BACf,4CAAMA,KA8BVw2B,qBAAuB,SAAA90B,GACnB,EAAKzB,S,wVAAL,IACOyB,KA9BP,EAAKnC,MAAQ,CACTk3B,WAAY2C,KAAS0G,YACrBgN,cAAe1T,KAAS2T,gBALb,E,mFASG9xB,EAAWC,GAAY,IAAD,EACVhc,KAAKc,MAA3BuP,EADgC,EAChCA,OAAQqU,EADwB,EACxBA,UAEhB,OAAI1I,EAAUub,aAAelnB,GAAU2L,EAAU4xB,gBAAkBlpB,GAI/D1I,EAAUuiB,iBAAmBluB,GAAU2L,EAAU8xB,oBAAsBppB,I,0CAQ3EwV,KAAS/uB,GAAG,qBAAsBnL,KAAKs3B,wB,6CAIvC4C,KAAS5uB,IAAI,qBAAsBtL,KAAKs3B,wB,+BASlC,IAAD,EACiDt3B,KAAKc,MAAnDuP,EADH,EACGA,OAAQqU,EADX,EACWA,UAAWqpB,EADtB,EACsBA,WAAYt/B,EADlC,EACkCA,QAAS+B,EAD3C,EAC2CA,EAC1Ck9B,EAAiB1tC,KAAKK,MAAMk3B,WAC5ByW,EAAoBhuC,KAAKK,MAAMutC,cAC/Bh4B,EAAUY,KAAavM,IAAIoG,EAAQqU,GAEjCyG,EAAWvV,EAAXuV,OAEF3D,EAAOymB,YAAer4B,GACtB8lB,EAAawS,YAAqBt4B,EAASpF,GAC3C29B,EAAiBC,YAAyBx4B,EAASpF,GACnDkG,EAAU23B,aAAWz4B,EAASpF,IAAM,OACpCF,EAAWD,IAAWq9B,GAAkBhpB,IAAcspB,EAEtDM,EACFnjB,EAAOjX,SAAW65B,EACd,kBAACQ,GAAA,EAAD,CAAU3e,OAAQzE,EAAOjX,QAASksB,QAAM,IAExC,kBAACzvB,EAAA,EAAD,CAAUN,OAAQA,EAAQ+vB,QAAM,IAGxC,OACI,kBAACzgB,GAAA,EAAD,CAAUC,QAAM,EAACve,UAAWiN,IAAW,gBAAiB,CAAE,gBAAiBgC,IAAa7B,QAASA,GAC7F,yBAAKpN,UAAU,kBACVitC,EACD,yBAAKjtC,UAAU,wBACX,yBAAKA,UAAU,kBACV0sC,GAAcI,EACX,yBAAK9sC,UAAU,gBAAgB8sC,GAE/B,kBAAC,GAAD,CAAa99B,OAAQA,IAEzB,yBAAKhP,UAAU,eAAemmB,IAElC,yBAAKnmB,UAAU,mBACX,yBAAKA,UAAU,kBAEP,qCACM0sC,GAAcrS,GACZ,0BAAMr6B,UAAU,yBAAyBq6B,EAAzC,MAEHhlB,Y,GA/Ed/U,IAAMC,WAkGlBgP,iBAAkB+8B,I,OC5FlBa,OAff,YAAmE,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,UAAWjgC,EAAqB,EAArBA,QAASkgC,EAAY,EAAZA,SAClD,OACI,yBAAKttC,UAAU,kBACX,yBAAKA,UAAWiN,IAAW,uBAAwB,CAAE,iCAAkCogC,KAAeC,GACrGlmB,QAAQgmB,IAAY,uBAAGhgC,QAASA,GAAUggC,K,mkBCiBjDG,G,YACF,WAAY9tC,GAAQ,IAAD,8BACf,4CAAMA,KAmBVgzB,cAAgB,SAAArxB,GACZ,KAAImY,KAAai0B,OAAO/7B,OAAS,KAI7BrQ,EAAMqsC,YAIV,OAAQrsC,EAAME,KACV,IAAK,SACDF,EAAM6B,iBACN7B,EAAM4B,kBACN5B,EAAMuD,OAAOyD,OAEb,EAAKtG,gBAnCE,EA4DnB4rC,oBAAsB,SAAAvI,GAId,IAHJ,IAAMwI,EAAM,GACNz6B,EAAM,IAAIrB,IAEHE,EAAI,EAAGA,EAAIozB,EAAQ1zB,OAAQM,IAAK,CACzC,IAAIvS,EAAS2lC,EAAQpzB,IAAMozB,EAAQpzB,GAAGwB,SACtC,GAAI/T,EACA,IAAK,IAAIouC,EAAI,EAAGA,EAAIpuC,EAAOiS,OAAQm8B,IAC1B16B,EAAIlB,IAAIxS,EAAOouC,MAChB16B,EAAIiE,IAAI3X,EAAOouC,GAAIpuC,EAAOouC,IAC1BD,EAAIh7B,KAAKnT,EAAOouC,KAUhC,OAJAD,EAAI5c,KAAK,SAACthB,EAAGo7B,GACT,OAAOC,YAAahB,YAAae,GAAIf,YAAar6B,MAG/Ck+B,GAhFQ,EAmFnBh2B,WAnFmB,sCAmFN,WAAMzN,GAAN,6EAAAuF,EAAA,wDACT,EAAKo+B,UAAY,IAAIxnB,KACrB,EAAKnc,KAAOA,EACN2jC,EAAY,EAAKA,UACnBr6B,EAAQ,KAIJxE,EAAW,EAAKvP,MAAhBuP,OACAqE,EAAkB,EAAKrU,MAAvBqU,cAEHrE,EAXI,wBAYCsD,EAAW,GACXw7B,EAAezuC,IAAgBC,KAAK,CACtC,QAAS,cACT+Y,MAAOnO,EACPwI,MAAO,MAEXJ,EAASK,KAAKm7B,IAERh2B,EAAY5F,GAAchI,KACf4N,IAAc5N,IACrB6jC,EAAoB1uC,IAAgBC,KAAK,CAC3C,QAAS,cACT+Y,MAAOP,EACPpF,MAAO,MAEXJ,EAASK,KAAKo7B,KAGZh2B,EAAexG,GAAiBrH,KAClB6N,IAAiB7N,IAC3B8jC,EAAuB3uC,IAAgBC,KAAK,CAC9C,QAAS,cACT+Y,MAAON,EACPrF,MAAO,MAEXJ,EAASK,KAAKq7B,IArCb,UAwCiB/6B,QAAQ7C,IAAIkC,EAASY,IAAI,SAAArV,GAAC,OAAIA,EAAEsV,MAAM,SAAAzF,GAAC,OAAI,UAxC5D,WAwCCy3B,EAxCD,OAyCC8I,EAAQ,EAAKP,oBAAoBvI,GAEnC0I,IAAc,EAAKA,UA3ClB,sDA+CDx6B,IACQlE,EAAM,EAAK1P,MAAX0P,EAEFwI,EAAazN,EAAKwnB,gBAClBwc,EAAuB,CAAC,iBAAkB/+B,EAAE,iBAAiBuiB,gBAG1ChH,KAAK,SAAA2F,GAAE,OAAIA,EAAG8d,SAASx2B,MAC3CG,GAAao2B,EAAqBxjB,KAAK,SAAA2F,GAAE,OAAIA,EAAG8d,SAASr2B,EAAU4Z,mBAEpEuc,EAAMG,OAAO,EAAG,EAAG/6B,EAAcjW,KAIzC,EAAKsC,SAAS,CACV8E,IAAK,KACL6pC,cAAe,KACfJ,MAAOA,IAGXz6B,EAAQ7K,IAAU8K,WAClBC,YAAiBF,EAAOy6B,MAGxBK,GADIA,EAAcpkC,EAAKwN,QACGkQ,WAAW,KAAO0mB,EAAYC,OAAO,GAAKD,GACpD78B,QAAU+8B,MAxErB,wBAyEKC,EAAiB,GAEjBC,EAAgBrvC,IAAgBC,KAAK,CACvC,QAAS,oBACT+Y,MAAOi2B,IAEXG,EAAe97B,KAAK+7B,GAEhB52B,IAEA62B,GADIA,EAAmB72B,EAAUJ,QACGkQ,WAAW,KAAO+mB,EAAiBJ,OAAO,GAAKI,GAC9Dl9B,QAAU+8B,MAAuBG,IAAqBL,IACjEM,EAAqBvvC,IAAgBC,KAAK,CAC5C,QAAS,oBACT+Y,MAAOs2B,IAEXF,EAAe97B,KAAKi8B,IAzF3B,UA6F2B37B,QAAQ7C,IAAIq+B,EAAev7B,IAAI,SAAArV,GAAC,OAAIA,EAAEsV,MAAM,SAAAzF,GAAC,OAAI,UA7F5E,WA6FKmhC,EA7FL,OA8FKC,EAAS,EAAKpB,oBAAoBmB,GAEpChB,IAAc,EAAKA,UAhGtB,mDAoGD,EAAKnuC,SAAS,CACVovC,WAGJt7B,EAAQ7K,IAAU8K,WAClBC,YAAiBF,EAAOs7B,GAzGvB,wBA2GD,EAAKpvC,SAAS,CACVovC,OAAQ,OA5GX,WAiHLtiB,EAAW,IACXxd,EAlHK,kCAmHY3P,IAAgBC,KAAK,CAClC,QAAS,qBACTwU,QAAS9E,EACTqJ,MAAOnO,EACPyiB,eAAgB,EAChBC,gBAAiB,EACjB3D,OAAQ,EACRvW,MAAO,GACPwF,OAAQ,OA3HP,QAmHLsU,EAnHK,gDA8HYntB,IAAgBC,KAAK,CAClC,QAAS,iBACTw+B,UAAW,CAAE,QAAS,gBACtBzlB,MAAOnO,EACP6kC,YAAa,EACbt8B,eAAgB,EAChBu8B,kBAAmB,EACnBt8B,MAAO,KArIN,QA8HL8Z,EA9HK,kBAyITrX,KAAa+X,SAASV,EAASA,UAE3ByiB,EAAc,KACbjgC,EA5II,4CA8I6B3P,IAAgBC,KAAK,CAC/C,QAAS,qBACT2gB,IAAK/V,IAhJR,QA8IKglC,EA9IL,OAoJD/5B,KAAa+X,SAAS,CAACgiB,EAAgB36B,UAEvC06B,EAAcC,EAtJb,mDAwJDr/B,QAAQu7B,IAAI,mBAAqBlhC,EAAO,yBAAxC,MAxJC,WA8JL2jC,IAAc,EAAKA,UA9Jd,mDA2KT,IAPA,EAAKnuC,SAAS,CACV8sB,WACAyiB,gBAGE77B,EAAQ,IAAIvB,IACZ+e,EAAQ,IAAI/e,IACTE,EAAI,EAAGA,EAAIya,EAASA,SAAS/a,OAAQM,IAC1CqB,EAAM+D,IAAIqV,EAASA,SAASza,GAAG+B,QAAS0Y,EAASA,SAASza,GAAG+B,SACzD0Y,EAASA,SAASza,GAAG+X,OAAOjX,SAC5B+d,EAAMzZ,IAAIqV,EAASA,SAASza,GAAG+X,OAAOjX,QAAS2Z,EAASA,SAASza,GAAG+X,OAAOjX,SAI/Eo8B,IACQn7B,GADM,EACem7B,GAArBn7B,QAASS,EADJ,EACIA,QAEjBnB,EAAM+D,IAAIrD,EAASA,GACfS,IACQuV,EAAWvV,EAAXuV,SACMA,EAAOjX,SACjB+d,EAAMzZ,IAAI2S,EAAOjX,QAASiX,EAAOjX,UAK7CW,EAAQ7K,IAAU8K,WAClBC,YAAiBF,EAAD,aAAYJ,EAAM+7B,SAClC3hB,YAAiBha,EAAD,aAAYod,EAAMue,SAhMzB,yDAnFM,wDAsRnB/8B,YAtRmB,qBAsRL,4CAAA3C,EAAA,yDACS,EAAKhQ,MAAhBuP,OADE,uBAGN,EAAKtP,SAAS,CACV8E,IAAK,KACL6pC,cAAe,KACfJ,MAAO,KACPa,OAAQ,KACRtiB,SAAU,KACVyiB,YAAa,OATX,iCAeJG,EAAa/vC,IAAgBC,KAAK,CACpC,QAAS,cACT+vC,SAAU,CAAE,QAAS,wBACrB38B,MAAO,KACRS,MAAM,WACL,MAAO,CAAE,QAAS,QAASI,SAAU,MAGnC+7B,EAAuBjwC,IAAgBC,KAAK,CAC9C,QAAS,cACT+Y,MAAO,GACP3F,MAAO,MACRS,MAAM,WACL,MAAO,CAAE,QAAS,QAASI,SAAU,MAGnCX,EAAuBvT,IAAgBC,KAAK,CAC9C,QAAS,oBACTuT,QAASC,KAAUC,UACnBC,OAAO,IACRG,MAAM,SAAArD,MAnCC,SAqCwCmD,QAAQ7C,IAAI,CAC1Dg/B,EACAE,EACA18B,IAxCM,mCAqCHpO,EArCG,KAqCE6pC,EArCF,KAqCiBh7B,EArCjB,KA2CV,EAAK3T,SAAS,CACV8E,MACA6pC,gBACAh7B,gBACA46B,MAAO,KACPa,OAAQ,KACRtiB,SAAU,KACVyiB,YAAa,OAGXz7B,EAAQ7K,IAAU8K,WACxBC,YAAiBF,EAAOhP,EAAI+O,UAC5BG,YAAiBF,EAAO66B,EAAc96B,UAvD5B,0CAtRK,EAgVnBg8B,yBAA2B,SAAAnuC,GACvBA,EAAM4B,kBAEN3D,IAAgBC,KAAK,CACjB,QAAS,4BAGb,EAAKI,SAAS,CAAE2uC,cAAe,QAvVhB,EA0VnBmB,oBAAsB,SAACxgC,EAAQqU,EAAWosB,EAAaC,GAAc,IACzDC,EAAoB,EAAKlwC,MAAzBkwC,gBAEJF,GACApwC,IAAgBC,KAAK,CACjB,QAAS,uBACTwU,QAAS9E,IAIjB2gC,EAAgB3gC,EAAQqU,EAAWqsB,IApWpB,EAuWnB1jB,aAAe,WACX,IAAMpB,EAAO,EAAKC,QAAQhV,QAEtB+U,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKoF,aAAeC,MAC1D,EAAK2f,kBA3WM,EA+WnBC,UAAY,SAAArjB,GACR,IAAM/a,EAAS+a,EAAWA,EAASA,SAAS/a,OAAS,EAMrD,MAAO,CACHs9B,YALet9B,EAAS,EAAI+a,EAASA,SAAS/a,EAAS,GAAG0U,KAAO,EAMjE1T,eALiBhB,EAAS,EAAI+a,EAASA,SAAS/a,EAAS,GAAGqC,QAAU,EAMtEk7B,kBALoBv9B,EAAS,EAAI+a,EAASA,SAAS/a,EAAS,GAAGrU,GAAK,IApXzD,EA6XnB0yC,eAAiB,SAACtjB,EAAUhtB,GACxB,OAAKA,GACAA,EAAOgtB,SAAS/a,OAEhB+a,GACAA,EAASA,SAAS/a,OAEhB,CACHsb,YAAavtB,EAAOutB,YACpBP,SAAUA,EAASA,SAASvU,OAAOzY,EAAOgtB,WALxBhtB,EAHFgtB,GA9XL,EA0YnBojB,eA1YmB,qBA0YF,4CAAAngC,EAAA,yDACT,EAAKmc,QADI,oDAGL5c,EAAW,EAAKvP,MAAhBuP,OAEF6+B,EAAY,EAAKA,UAEfrhB,EAAa,EAAKxtB,MAAlBwtB,SAEFvD,EAAS,EAAK4mB,UAAUrjB,GAE9B,EAAKZ,SAAU,EACXpsB,EAAS,IACTwP,EAbS,kCAcM3P,IAAgBC,KAAK,CAChC,QAAS,qBACTwU,QAAS9E,EACTqJ,MAAO,EAAKnO,KACZyiB,eAAgB,EAChBC,gBAAiB3D,EAAO+lB,kBACxBt8B,MAAO,GACPwF,OAAQ,OArBH,QAcT1Y,EAdS,gDAwBMH,IAAgBC,KAAhB,IACX,QAAS,iBACTw+B,UAAW,CAAE,QAAS,gBACtBzlB,MAAO,EAAKnO,MACT+e,EAJQ,CAKXvW,MAAO,MA7BF,QAwBTlT,EAxBS,kBAgCb,EAAKosB,SAAU,EAEfmkB,aAAwBvwC,EAAQgtB,EAAWA,EAASA,SAAW,IAC/DrX,KAAa+X,SAAS1tB,EAAOgtB,UAEzBqhB,IAAc,EAAKA,UArCV,mDA+Cb,IANA,EAAKnuC,SAAS,CACV8sB,SAAU,EAAKsjB,eAAetjB,EAAUhtB,KAGtC4T,EAAQ,IAAIvB,IACZ+e,EAAQ,IAAI/e,IACTE,EAAI,EAAGA,EAAIvS,EAAOgtB,SAAS/a,OAAQM,IACxCqB,EAAM+D,IAAI3X,EAAOgtB,SAASza,GAAG+B,QAAStU,EAAOgtB,SAASza,GAAG+B,SACrDtU,EAAOgtB,SAASza,GAAG+X,OAAOjX,SAC1B+d,EAAMzZ,IAAI3X,EAAOgtB,SAASza,GAAG+X,OAAOjX,QAASrT,EAAOgtB,SAASza,GAAG+X,OAAOjX,SAIzEW,EAAQ7K,IAAU8K,WACxBC,YAAiBF,EAAD,aAAYJ,EAAM+7B,SAClC3hB,YAAiBha,EAAD,aAAYod,EAAMue,SAxDrB,0CA1YE,EAqcnBa,qBAAuB,SAAA5uC,GACnBA,EAAM4B,mBAtcS,EAycnBlB,YAAc,YAGV2X,EAFoB,EAAKha,MAAjBga,YA1cO,EA+cnBw2B,8BA/cmB,sCA+ca,WAAMjhC,GAAN,eAAAS,EAAA,wDACvBT,EADuB,iEAGtB3P,IAAgBC,KAAK,CACvB,QAAS,0BACTwU,QAAS9E,IALe,UAQpBq/B,EAAkB,EAAKrvC,MAAvBqvC,cARoB,iDAW5B,EAAK3uC,SAAS,CACV2uC,cAAc,MAAMA,EAAP,CAAsB96B,SAAU86B,EAAc96B,SAAS2E,OAAO,SAAAra,GAAC,OAAIA,IAAMmR,QAZ9D,yCA/cb,wDA+dnBkhC,oBA/dmB,sCA+dG,WAAMlhC,GAAN,eAAAS,EAAA,wDACbT,EADa,iEAGZ3P,IAAgBC,KAAK,CACvB,QAAS,gBACTwU,QAAS9E,EACTqgC,SAAU,CACN,QAAS,0BAPC,UAWV7qC,EAAQ,EAAKxF,MAAbwF,IAXU,iDAclB,EAAK9E,SAAS,CACV8E,IAAI,MAAMA,EAAP,CAAY+O,SAAU/O,EAAI+O,SAAS2E,OAAO,SAAAra,GAAC,OAAIA,IAAMmR,QAf1C,yCA/dH,sDAGf,EAAKzF,gBAAkB,IAAIG,IAAgB,EAAK+oB,eAChD,EAAK5H,QAAUvqB,IAAM2Y,YACrB,EAAKja,MAAQ,GALE,E,iFAQE,IACTkL,EAASvL,KAAKc,MAAdyK,KAERvL,KAAKwxC,oBAAoBjmC,GAEzBb,IAAgBC,IAAI3K,KAAK4K,mB,6CAIzBF,IAAgBI,OAAO9K,KAAK4K,mB,yCAuBb1J,EAAWC,EAAWC,GAAW,IAAD,EACtBpB,KAAKc,MAAtBuP,EADuC,EACvCA,OAAQ9E,EAD+B,EAC/BA,KAEZrK,EAAUqK,OAASA,EACnBvL,KAAKwxC,oBAAoBjmC,GAClBrK,EAAUmP,SAAWA,GAC5BrQ,KAAKwxC,oBAAoBjmC,K,0CAIbA,GAChB,IAAMokC,EAAcpkC,EAAOA,EAAKwN,OAAS,GAEpC42B,EAGD3vC,KAAKgZ,WAAW22B,GAFhB3vC,KAAKyT,gB,+BA4bH,IAAD,SACiBzT,KAAKc,MAAnBuP,EADH,EACGA,OAAQG,EADX,EACWA,EADX,EAEgExQ,KAAKK,MAAlEwF,EAFH,EAEGA,IAAK6pC,EAFR,EAEQA,cAAeJ,EAFvB,EAEuBA,MAAOa,EAF9B,EAE8BA,OAAQtiB,EAFtC,EAEsCA,SAAUyiB,EAFhD,EAEgDA,YAE/C7zB,EAAOR,KAAUhS,IAAIoG,GAErBohC,EACF5rC,GAAOA,EAAI+O,SACL/O,EAAI+O,SAASL,IAAI,SAAArV,GAAC,OACd,kBAAC,GAAD,CACIyD,IAAKzD,EACLmR,OAAQnR,EACRqR,SAAU,kBAAM,EAAKsgC,oBAAoB3xC,EAAG,MAAM,GAAO,IACzDouC,SAAU,kBAAM,EAAKiE,oBAAoBryC,QAGjD,GAEJwyC,EACFhC,GAAiBA,EAAc96B,SACzB86B,EAAc96B,SAASL,IAAI,SAAArV,GAAC,OACxB,kBAAC,GAAD,CACIyD,IAAKzD,EACLmR,OAAQnR,EACRuP,QAAS,kBAAM,EAAKoiC,oBAAoB3xC,EAAG,MAAM,GAAM,IACvDouC,SAAU,kBAAM,EAAKgE,8BAA8BpyC,QAG3D,GAEJyyC,EAAarC,EACbA,EAAM/6B,IAAI,SAAArV,GAAC,OACP,kBAAC,GAAD,CACIyD,IAAKzD,EACLmR,OAAQnR,EACRuP,QAAS,kBAAM,EAAKoiC,oBAAoB3xC,EAAG,MAAM,GAAM,QAG/D,GAEA0yC,EAAiB,IAAI1+B,IACrB2+B,EAAc1B,EACdA,EAAO57B,IAAI,SAAArV,GAGP,OAFA0yC,EAAep5B,IAAItZ,EAAGA,GAGlB,kBAAC,GAAD,CACIyD,IAAKzD,EACLmR,OAAQnR,EACRuP,QAAS,kBAAM,EAAKoiC,oBAAoB3xC,EAAG,MAAM,GAAM,QAInE,GAEA4yC,EACFxB,GAAeA,EAAYn7B,UAAYm7B,EAAY16B,UAAYg8B,EAAev+B,IAAIi9B,EAAYn7B,SAC1F,kBAAC,GAAD,CACIxS,IAAK2tC,EAAYn7B,QACjB9E,OAAQigC,EAAYn7B,QACpB1G,QAAS,kBAAM,EAAKoiC,oBAAoBP,EAAYn7B,QAAS,MAAM,GAAM,MAE7E,KAEF48B,EAAoB,IAAI7+B,IACxB8+B,EACFnkB,GAAYA,EAASA,SACfA,EAASA,SAAStZ,IAAI,SAAArV,GAClB,IAAMyD,EAAG,UAAMzD,EAAEiW,QAAR,YAAmBjW,EAAET,IAG9B,OAFAszC,EAAkBv5B,IAAI7V,EAAKA,GAGvB,kBAAC,GAAD,CACIA,IAAKA,EACL0N,OAAQnR,EAAEiW,QACVuP,UAAWxlB,EAAET,GACbsvC,WAAYtlB,QAAQpY,GACpB5B,QAAS,kBAAM,EAAKoiC,oBAAoB3xC,EAAEiW,QAASjW,EAAET,IAAI,GAAO,QAI5E,GAEJwzC,EACF3B,GACAA,EAAY16B,UACXm8B,EAAkB1+B,IAAlB,UAAyBi9B,EAAY16B,QAAQT,QAA7C,YAAwDm7B,EAAY16B,QAAQnX,KACzE,kBAAC,GAAD,CACIkE,IAAG,UAAK2tC,EAAY16B,QAAQT,QAAzB,YAAoCm7B,EAAY16B,QAAQnX,IAC3D4R,OAAQigC,EAAY16B,QAAQT,QAC5BuP,UAAW4rB,EAAY16B,QAAQnX,GAC/BsvC,YAAY,EACZt/B,QAAS,kBACL,EAAKoiC,oBAAoBP,EAAY16B,QAAQT,QAASm7B,EAAY16B,QAAQnX,IAAI,GAAO,MAG7F,KAEJyzC,EAAQrkB,EAAWA,EAASO,YAAc,EAE1CkiB,GACAA,EAAY16B,UACXm8B,EAAkB1+B,IAAlB,UAAyBi9B,EAAY16B,QAAQT,QAA7C,YAAwDm7B,EAAY16B,QAAQnX,MAE7EyzC,IAGJ,IAAIC,EAAkB3hC,EAAE,cAKxB,OAJI0hC,IACAC,EAA4B,IAAVD,EAAc,kBAAd,gBAA2CA,EAA3C,cAIlB,yBAAKj3B,IAAKjb,KAAKksB,QAAS7qB,UAAU,SAASuxB,SAAU5yB,KAAKqtB,cACrD5Q,GACG,oCACI,yBAAKpb,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,qBAClB,yBAAKnP,UAAU,uBACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAMgP,OAAQA,EAAQ8N,YAAY,KAEtC,kBAAC/H,EAAA,EAAD,CACI/U,UAAU,sBACVgV,aAAW,SACX9H,YAAavO,KAAKmD,aAClB,kBAAC6L,EAAA,EAAD,SAIZ,yBAAK3N,UAAU,kCAGtBowC,EAAS3+B,OAAS,GACf,oCACI,yBAAKzR,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,cAClB,yBAAKnP,UAAU,wBAAwBuxB,SAAU5yB,KAAKqxC,sBAClD,yBAAKhwC,UAAU,iCACdowC,EACD,yBAAKpwC,UAAU,mCAGvB,yBAAKA,UAAU,kCAGtBqwC,EAAmB5+B,OAAS,GACzB,yBAAKzR,UAAU,wBACX,kBAAC,GAAD,CAAeotC,QAASj+B,EAAE,eAAgB/B,QAASzO,KAAK4wC,0BACnDpgC,EAAE,WAENkhC,GAGRC,EAAW7+B,OAAS,GACjB,oCACI,yBAAKzR,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,qBACjBmhC,GAEL,yBAAKtwC,UAAU,kCAGtBwwC,EAAY/+B,OAAS,GAClB,oCACI,yBAAKzR,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,iBACjBshC,EACAD,GAEL,yBAAKxwC,UAAU,mCAGrBwsB,GAAayiB,GAAeA,EAAY16B,UACtC,yBAAKvU,UAAU,wBACX,kBAAC,GAAD,KAAgB8wC,GACfF,EACAD,Q,GApqBJrwC,IAAMC,WAmrBZgP,iBAAkBg+B,I,UC3oBlBwD,I,mBA1DX,WAAYtxC,GAAQ,IAAD,8BACf,4CAAMA,KAKVgzB,cAAgB,SAAArxB,GACZ,KAAImY,KAAai0B,OAAO/7B,OAAS,KAI7BrQ,EAAMqsC,YAIV,OAAQrsC,EAAME,KACV,IAAK,SAAL,IACYmY,EAAY,EAAKha,MAAjBga,QACJA,IACArY,EAAM6B,iBACN7B,EAAM4B,kBACN5B,EAAMuD,OAAOyD,OAEbqR,OApBZ,EAAKlQ,gBAAkB,IAAIG,IAAgB,EAAK+oB,eAHjC,E,gFA6BA5yB,EAAWC,EAAWC,GAAW,IACxCsZ,EAAS1a,KAAKc,MAAd4Z,KAEJxZ,EAAUwZ,OAASA,IACfA,EACAhQ,IAAgBC,IAAI3K,KAAK4K,iBAEzBF,IAAgBI,OAAO9K,KAAK4K,oB,+BAK9B,IAAD,EACwC5K,KAAKc,MAA1C6tC,EADH,EACGA,SAAUj0B,EADb,EACaA,KAAMotB,EADnB,EACmBA,QAAShtB,EAD5B,EAC4BA,QAEjC,OACI,kBAACu3B,GAAA,EAAD,CAAOC,UAAU,QAAQC,GAAI73B,EAAMotB,QAASA,EAAS0K,cAAY,EAACC,eAAa,GAC3E,yBAAKpxC,UAAU,gBAAgByZ,EAAUnZ,IAAM+wC,aAAa/D,EAAU,CAAE7zB,YAAa6zB,Q,GA/C3EhtC,IAAMC,YCLjBC,gBACX,0BAAMC,EAAE,yrCACR,UCFWD,gBACX,0BAAMC,EAAE,kiBACR,QCFWD,gBACX,0BAAMC,EAAE,ssFACR,UCFWD,gBACX,0BAAMC,EAAE,sbACR,Q,oBCSE6wC,G,2MACFtyC,MAAQ,CACJ0mC,SAAU,KACVrsB,MAAM,G,EAGVmsB,eAAiB,SAAApkC,GACb,EAAK1B,SAAS,CAAEgmC,SAAUtkC,EAAMukC,iB,EAGpCC,gBAAkB,WACd,EAAKlmC,SAAS,CAAEgmC,SAAU,Q,EAG9B6L,aAAe,WACX,EAAK3L,kBAEL,EAAKlmC,SAAS,CAAE2Z,MAAM,K,EAG1Bm4B,WAAa,WACT,EAAK1vC,cACLzC,IAAgBoyC,U,EAGpB3vC,YAAc,WACV,EAAKpC,SAAS,CAAE2Z,MAAM,K,wEAGhB,IACElK,EAAMxQ,KAAKc,MAAX0P,EADH,EAEsBxQ,KAAKK,MAAxB0mC,EAFH,EAEGA,SAAUrsB,EAFb,EAEaA,KAElB,OACI,oCACI,kBAACtE,EAAA,EAAD,CACIqyB,YAAW1B,EAAW,cAAgB,KACtC2B,gBAAc,OACdrnC,UAAU,sBACVgV,aAAW,OACX5H,QAASzO,KAAK6mC,gBACd,kBAACkM,GAAD,OAEJ,kBAAC9K,GAAA,EAAD,CACIxpC,GAAG,YACHsoC,SAAUA,EACVrsB,KAAM+N,QAAQse,GACdjsB,QAAS9a,KAAKinC,gBACdiB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB9iB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,kBAACG,GAAA,EAAD,CAAUlX,QAASzO,KAAK4yC,cACpB,kBAAC9yB,GAAA,EAAD,KACI,kBAACkzB,GAAD,OAEJ,kBAAC7yB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,cAGjC,kBAAC,IAAD,CACImK,QAASC,KACTC,mBAAoB,EACpBH,KAAMA,EACNI,QAAS9a,KAAKmD,YACd4X,kBAAgB,qBAChB,kBAAC,IAAD,CAAatc,GAAG,qBAAqB+R,EAAE,YACvC,kBAAC,KAAD,KACI,kBAACyiC,GAAA,EAAD,CAAmBvtC,MAAO,CAAEkM,WAAY,aACnCpB,EAAE,sBAGX,kBAAC8K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAASzO,KAAKmD,YAAamT,MAAM,WACpC9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAASzO,KAAK6yC,WAAYv8B,MAAM,WACnC9F,EAAE,c,GAnFE7O,IAAMC,WA8FxBgP,iBAAkB+hC,ICzGlB9wC,gBACX,0BAAMC,EAAE,8yBACR,QCFWD,gBACX,0BAAMC,EAAE,q7DACR,Y,UCkBEoxC,I,kNAEFxiB,iBAAmB,WAAO,IACdrgB,EAAW,EAAKvP,MAAhBuP,OAEFoM,EAAOR,KAAUhS,IAAIoG,GACtBoM,GACAA,EAAK9F,OAEVga,aAA6B,CAAEtgB,Y,wEAGzB,IAAD,EAYDrQ,KAAKc,MAVLuP,EAFC,EAEDA,OACAse,EAHC,EAGDA,MACAne,EAJC,EAIDA,EACAsK,EALC,EAKDA,QACAq4B,EANC,EAMDA,cACAC,EAPC,EAODA,UACAC,EARC,EAQDA,gBACAC,EATC,EASDA,kBACAC,EAVC,EAUDA,WACAC,EAXC,EAWDA,UAEE/2B,EAAOR,KAAUhS,IAAIoG,GAC3B,IAAKoM,EAAM,OAAO,KAdb,IAgBG9F,EAAU8F,EAAV9F,MAER,OACI,oCACI,yBAAKtV,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAC9C6T,EAAQ,kBAAC3f,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAK3N,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,cAE/C,kBAAC,GAAD,OAEJ,yBAAKnP,UAAU,8CACX,yBAAKA,UAAU,qBACX,kBAAC,GAAD,CACIgP,OAAQA,EACR+N,KAAK,EACLD,YAAY,EACZjC,mBAAmB,EACnBgC,aAAcvH,EAAQ3W,KAAK0wB,iBAAmB,QAGtD,kBAAC/Q,GAAA,EAAD,CAAUte,UAAU,qBAAqBue,QAAM,EAACnR,QAAS0kC,GACrD,kBAACrzB,GAAA,EAAD,KACI,kBAAC2zB,GAAD,OAEJ,kBAACtzB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,kBAE7B,kBAACmP,GAAA,EAAD,CAAUte,UAAU,qBAAqBue,QAAM,EAACnR,QAAS2kC,GACrD,kBAACtzB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,sBAE7B,kBAACmP,GAAA,EAAD,CAAUte,UAAU,qBAAqBue,QAAM,EAACnR,QAAS4kC,GACrD,kBAACvzB,GAAA,EAAD,KACI,kBAACqhB,GAAD,OAEJ,kBAAChhB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oBAE7B,kBAACmP,GAAA,EAAD,CAAUte,UAAU,qBAAqBue,QAAM,EAACnR,QAAS6kC,GACrD,kBAACxzB,GAAA,EAAD,KACI,kBAAC4zB,GAAD,OAEJ,kBAACvzB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,sBAE7B,kBAACmP,GAAA,EAAD,CAAUnE,WAAW,EAAOna,UAAU,qBAAqBue,QAAM,EAACnR,QAAS+kC,GACvE,kBAAC1zB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,cAE7B,kBAACmP,GAAA,EAAD,CAAUnE,WAAW,EAAOna,UAAU,qBAAqBue,QAAM,EAACnR,QAAS8kC,GACvE,kBAACzzB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAE7B,yBAAKnP,UAAU,wBACVsyC,GAAYC,e,GAxFlBjyC,IAAMC,YA4GVgP,iBAAkBsiC,I,8BChIlBrxC,gBACX,0BAAMC,EAAE,u+DACR,Y,UCUE+xC,I,0BACF,WAAY/yC,GAAQ,IAAD,uBACf,4CAAMA,KAaVgzC,aAAe,WACX,EAAK/yC,SAAS,CACV2Z,MAAM,KAhBK,EAoBnBm4B,WAAa,WACT,IAAMkB,EAAU,EAAKC,WAAW98B,QAC3B68B,IAELA,EAAQE,mBAAmBC,OAAO,SAAAxO,GAC9B,IAAMyO,EAAU9qB,IAAI+qB,gBAAgB1O,GAEpC,EAAK3kC,SAAS,CACV2kC,OACAyO,YALkC,IAQ9BE,EAAa,EAAKvzC,MAAlBuzC,SACHA,GAELA,EAAS3O,EAAMyO,IAChB,cAEH,EAAKL,iBAtCU,EAyCnBQ,aAAe,WACX,EAAKC,eAAer9B,QAAQs9B,SA1Cb,EA6CnBC,qBA7CmB,qBA6CI,0CAAA3jC,EAAA,wDAEE,KADb2zB,EAAU,EAAK8P,eAAer9B,QAA9ButB,OACE3xB,OAFS,oDAIE,IAAjB2xB,EAAM3xB,OAJS,sBAKWg6B,MAAMltC,KAAK6kC,GALtB,kBAKP16B,EALO,gBAMVA,EANU,iEAQe2qC,YAAc3qC,GAR7B,mCAQRoF,EARQ,KAQD4I,EARC,KAUf,EAAKhX,SAAS,CACV2Z,MAAM,EACN3Q,OACA4qC,QAAStrB,IAAI+qB,gBAAgBrqC,GAC7BoF,QACA4I,WAfW,QAmBnB,EAAKw8B,eAAer9B,QAAQvO,MAAQ,GAnBjB,0CA1CnB,EAAK4rC,eAAiB5yC,IAAM2Y,YAC5B,EAAK05B,WAAaryC,IAAM2Y,YAJT,IAMPs6B,EAAe,EAAK9zC,MAApB8zC,WANO,OAQf,EAAKv0C,MAAQ,CACT8zC,QAASS,EACTl6B,MAAM,GAVK,E,sEAmET,IACElK,EAAMxQ,KAAKc,MAAX0P,EADH,EAE6CxQ,KAAKK,MAA/Cqa,EAFH,EAEGA,KAAMvL,EAFT,EAESA,MAAO4I,EAFhB,EAEgBA,OAAQ48B,EAFxB,EAEwBA,QAASR,EAFjC,EAEiCA,QAFjC,EAI0CU,YAAW,CAAE1lC,QAAO4I,UAAU,KAAK,GAAnE+8B,EAJV,EAIG3lC,MAAyB4lC,EAJ5B,EAIoBh9B,OAEzB,OACI,oCACI,yBAAK1W,UAAU,kBACT8yC,EACE,yBAAK9yC,UAAU,8BAA8BynB,IAAI,GAAGlC,IAAKutB,EAAS1lC,QAASzO,KAAKs0C,eAEhF,yBAAKjzC,UAAU,oDAAoDoN,QAASzO,KAAKs0C,cAC7E,kBAACU,GAAD,CAAc3zC,UAAU,0BAIpC,2BACI4Z,IAAKjb,KAAKu0C,eACVlzC,UAAU,yBACVqb,KAAK,OACLu4B,UAAU,EACVC,OAAO,UACPtlC,SAAU5P,KAAKy0C,uBAEjB/5B,GACE,kBAAC,IAAD,CACIG,mBAAoB,EACpBH,MAAM,EACNI,QAAS9a,KAAK8zC,aACd/4B,kBAAgB,gBAChB,yBAAK1Z,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASzO,KAAK8zC,cACrD,kBAAC9kC,EAAA,EAAD,OAEJ,yBAAK3N,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,uBAGnD,kBAAC,KAAD,KACI,kBAAC,KAAD,CACIyK,IAAKjb,KAAKg0C,WACVptB,IAAK+tB,EACLjvC,MAAO,CAAEqS,OAAQg9B,EAAW5lC,MAAO2lC,EAAUK,OAAQ,eAErDC,YAAa,EACbC,SAAU,EACVC,QAAQ,KAEhB,yBAAKj0C,UAAU,8BAA8BoN,QAASzO,KAAK6yC,YACvD,kBAAC0C,GAAA,EAAD,a,GAtHD5zC,IAAMC,YAqIlBgP,iBAAkBijC,ICnI3B2B,I,mBACF,WAAY10C,GAAQ,IAAD,uBACf,4CAAMA,KAuEV20C,qBAxEmB,qBAwEI,oCAAA3kC,EAAA,wDACXT,EAAW,EAAKvP,MAAhBuP,OACA8f,EAAa,EAAK9vB,MAAlB8vB,UACJulB,EAAc,EAAKC,YAAYz+B,QAAQvO,OAC3BsgB,WAAW,MAAQysB,EAAY5iC,OAAS,IACpD4iC,EAAcA,EAAY9F,OAAO,IAEjCzf,IAAaulB,GAA+B,KAAhBA,EAPb,gBAQf,EAAK30C,SAAS,CACV60C,cAAe,OATJ,wCAeMl1C,IAAgBC,KAAK,CACtC,QAAS,oBACTwU,QAAS9E,EACT8f,SAAUulB,IAlBC,QAeT70C,EAfS,QAuBXg1C,EAAe,EAAKF,YAAYz+B,QAAQvO,OAC3BsgB,WAAW,MAAQ4sB,EAAa/iC,OAAS,IACtD+iC,EAAeA,EAAajG,OAAO,IAEnCiG,IAAiBH,GACjB,EAAK30C,SAAS,CACV60C,cAAe/0C,IA7BR,0CAxEJ,EA2GnBi1C,kBA3GmB,sCA2GC,WAAMrvB,GAAN,iBAAA3V,EAAA,4DACRT,EAAW,EAAKvP,MAAhBuP,OADQ,SAGV3P,IAAgBC,KAAK,CACvB,QAAS,kBACTgW,MAAO,CAAE,QAAS,gBAAiBo/B,KAAM,oBAAqBtvB,UALlD,OAQV5R,EAAQ7K,IAAU8K,WACxBkhC,YAAgBnhC,EAAOxE,GAAQ,GATf,yCA3GD,sDAGf,EAAK4lC,aAAet0C,IAAM2Y,YAC1B,EAAK47B,YAAcv0C,IAAM2Y,YACzB,EAAK67B,OAASx0C,IAAM2Y,YACpB,EAAKq7B,YAAch0C,IAAM2Y,YAEzB,IAAM6X,EAAOhe,KAAUlK,IAAIkK,KAAUC,WAC/BgiC,EAAejiC,KAAU2I,YAAY3I,KAAUC,WATtC,OAWf,EAAK/T,MAAQ,CACTg2C,UAAWlkB,EAAOA,EAAKmkB,WAAa,GACpCC,SAAUpkB,EAAOA,EAAKqkB,UAAY,GAClC3kB,IAAKukB,EAAeA,EAAavkB,IAAM,GACvC1B,SAAUgC,EAAOA,EAAKhC,SAAW,GACjCylB,cAAe,MAhBJ,E,oFAqBf51C,KAAKy2C,UACLz2C,KAAK02C,SACL12C,KAAK22C,gB,oCAGM,IAAD,EAC0B32C,KAAKK,MAAjC8vB,EADE,EACFA,SAAUylB,EADR,EACQA,cACdF,EAAc11C,KAAK21C,YAAYz+B,QAAQvO,MACvC+sC,EAAYzsB,WAAW,MAAQysB,EAAY5iC,OAAS,IACpD4iC,EAAcA,EAAY9F,OAAO,IAGjCzf,IAAaulB,GACZE,GAC0B,8BAA3BA,EAAc,UAElBl1C,IAAgBC,KAAK,CACjB,QAAS,cACTwvB,SAAUulB,M,gCAIP,IAAD,EAC0B11C,KAAKK,MAA7Bg2C,EADF,EACEA,UAAWE,EADb,EACaA,SACbK,EAAe52C,KAAKi2C,aAAa/+B,QAAQvO,MACzCkuC,EAAc72C,KAAKk2C,YAAYh/B,QAAQvO,MAEzCiuC,IAAiBP,GAAaQ,IAAgBN,GAIlD71C,IAAgBC,KAAK,CACjB,QAAS,UACT21C,WAAYM,EACZJ,UAAWK,M,+BAIT,IACEhlB,EAAQ7xB,KAAKK,MAAbwxB,IACFilB,EAAS92C,KAAKm2C,OAAOj/B,QAAQvO,MAC/BmuC,IAAWjlB,GAIfnxB,IAAgBC,KAAK,CACjB,QAAS,SACTkxB,IAAKilB,M,+BAmDH,IAAD,EACwB92C,KAAKc,MAA5BuP,EADD,EACCA,OAAQG,EADT,EACSA,EAAGsK,EADZ,EACYA,QADZ,EAEyD9a,KAAKK,MAA3Dg2C,EAFH,EAEGA,UAAWE,EAFd,EAEcA,SAAU1kB,EAFxB,EAEwBA,IAAK1B,EAF7B,EAE6BA,SAAUylB,EAFvC,EAEuCA,cAExCmB,GAAW,EACXC,EAAgBxmC,EAAE,YACtB,GAAIolC,EACA,OAAQA,EAAc,UAClB,IAAK,4BACDmB,GAAW,EACXC,EAAgB,wBAChB,MAEJ,IAAK,4CACL,IAAK,iDACL,IAAK,yCACDD,GAAW,EACXC,EAAgB,mBAChB,MAEJ,IAAK,0CACDD,GAAW,EACXC,EAAgB,4BAM5B,IAAMv6B,EAAOR,KAAUhS,IAAIoG,GAC3B,IAAKoM,EAAM,OAAO,KA7Bb,IA+BG9F,EAAU8F,EAAV9F,MAEFiQ,EAAMD,YAAOhQ,EAAQA,EAAMuuB,MAAQ,MACnC5tB,EAAW,GACX/L,EAAO0rC,aAAwBzmC,EAAE,gBAAiB8G,GAClD4/B,EAAgBnsB,aAAiB,CAAE,QAAS,gBAAiBxf,OAAM+L,aAEzE,OACI,oCACI,yBAAKjW,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,kBAGnD,yBAAKnP,UAAU,wBACX,kBAAC,GAAD,CAAcuzC,WAAYhuB,EAAKytB,SAAUr0C,KAAK81C,oBAC9C,yBAAKz0C,UAAU,qBACX,kBAAC81C,GAAA,EAAD,CACIpO,SAAU/oC,KAAKi2C,aACf50C,UAAU,qBACVif,QAAQ,WACRsW,WAAS,EACTE,MAAOtmB,EAAE,aACT4mC,aAAcf,IAElB,kBAACc,GAAA,EAAD,CACIpO,SAAU/oC,KAAKk2C,YACf70C,UAAU,qBACVif,QAAQ,WACRsW,WAAS,EACTE,MAAOtmB,EAAE,YACT4mC,aAAcb,IAElB,kBAACY,GAAA,EAAD,CACIpO,SAAU/oC,KAAKm2C,OACf90C,UAAU,qBACVif,QAAQ,WACRsW,WAAS,EACTE,MAAOtmB,EAAE,OACT4mC,aAAcvlB,IAElB,yBAAKxwB,UAAU,qBAAqBmP,EAAE,cAE1C,yBAAKnP,UAAU,iCACf,yBAAKA,UAAU,yBACX,kBAAC81C,GAAA,EAAD,CACIpO,SAAU/oC,KAAK21C,YACfxkC,MAAO4lC,EACP11C,UAAU,qBACVif,QAAQ,WACRsW,WAAS,EACTE,MAAOkgB,EACPI,aAAcjnB,EACdvgB,SAAU5P,KAAKy1C,uBAEnB,yBAAKp0C,UAAU,qBACV61C,U,GAlNHv1C,IAAMC,YAqOjB6Z,GANCC,YACZuX,cACAriB,cACAsiB,cAGWzX,CAAQ+5B,ICnPR3zC,gBACX,0BAAMg6B,KAAK,eAAeC,SAAS,UAAUh6B,EAAE,0nBAC/C,OCFWD,gBACX,0BAAMi6B,SAAS,UAAUh6B,EAAE,qgCAC3B,cCFWD,gBACX,0BAAMi6B,SAAS,UAAUh6B,EAAE,otDAC3B,eCFWD,gBACX,0BAAMi6B,SAAS,UAAUh6B,EAAE,wmEAC3B,YCFWD,gBACX,0BAAMi6B,SAAS,UAAUh6B,EAAE,0zCAC3B,cCFWD,gBACX,0BAAMi6B,SAAS,UAAUh6B,EAAE,q0CAC3B,aCFWD,gBACX,0BAAMi6B,SAAS,UAAUh6B,EAAE,kgEAC3B,Q,qBCDWD,gBACX,0BAAMC,EAAE,+bACR,Q,UCUEu1C,I,kNAEFh3C,MAAQ,CACJ8lB,aAAa,EACbxgB,KAAM,EACNE,IAAK,EACLoa,SAAS,G,EAGbiG,sBAAwB,SAAAzjB,GACC,EAAK3B,MAAlBwsC,WAGJ7qC,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAGV,EAAKtD,SAAS,CACVolB,aAAa,EACbxgB,KAAMlD,EAAM4F,QACZxC,IAAKpD,EAAM6F,Y,EAInB8d,uBAAyB,WACrB,EAAKrlB,SAAS,CACVolB,aAAa,EACbxgB,KAAM,EACNE,IAAK,K,EAIbif,aAAe,WACX,EAAKsB,yBADY,MAGY,EAAKtlB,MAA1BuP,EAHS,EAGTA,OAAQi9B,EAHC,EAGDA,SAEhBA,GAAYA,EAASj9B,I,wEAGf,IAAD,EACyCrQ,KAAKc,MAA3CuP,EADH,EACGA,OAAQG,EADX,EACWA,EAAGkM,EADd,EACcA,KAAMuD,EADpB,EACoBA,QAASxR,EAD7B,EAC6BA,QAD7B,EAE8BzO,KAAKK,MAAhC8lB,EAFH,EAEGA,YAAaxgB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErBwW,EAAQpC,YAAa5J,GAAQ,EAAMG,GAEzC,OACI,oCACI,kBAACmP,GAAA,EAAD,CAAUte,UAAU,sBAAsBi2C,UAAMC,EAAW33B,QAAM,EAACnR,QAASA,EAASqY,cAAe9mB,KAAKkmB,uBACpG,yBAAK7kB,UAAU,oBACX,kBAACsP,EAAA,EAAD,CAAUN,OAAQA,EAAQ60B,OAAO,EAAMhpB,mBAAmB,KAE9D,yBAAK7a,UAAU,uBACX,yBAAKA,UAAU,qBACVgb,GAEHK,GACE,yBAAKrb,UAAU,wBACVm2C,YAAYnnC,EAAQG,UAInB+mC,IAAZt3B,GACE,kBAACw3B,GAAA,EAAD,CAAOp2C,UAAU,uBAAuBiV,MAAM,UAAU2J,QAASA,KAGzE,kBAACmF,GAAA,EAAD,CACI1K,KAAMyL,EACNrL,QAAS9a,KAAKomB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEnf,MAAKF,QACvB2f,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBjX,YAAa,SAAAQ,GAAC,OAAIA,EAAE1K,oBACpB,kBAACqhB,GAAA,EAAD,CAAUjX,QAAS,SAAAM,GAAC,OAAIA,EAAE1K,oBACtB,kBAACshB,GAAA,EAAD,CAAUlX,QAASzO,KAAK8kB,cACpB,kBAAChF,GAAA,EAAD,KACI,kBAAC+F,GAAD,OAEJ,kBAAC1F,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oB,GAtF5B7O,IAAMC,YAuGhBgP,iBAAkBymC,ICvG3BK,I,kNAEFr3C,MAAQ,CACJ8lB,aAAa,EACbxgB,KAAM,EACNE,IAAK,G,EAGTqgB,sBAAwB,SAAAzjB,GACC,EAAK3B,MAAlBwsC,WAGJ7qC,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAGV,EAAKtD,SAAS,CACVolB,aAAa,EACbxgB,KAAMlD,EAAM4F,QACZxC,IAAKpD,EAAM6F,Y,EAInB8d,uBAAyB,WACrB,EAAKrlB,SAAS,CACVolB,aAAa,EACbxgB,KAAM,EACNE,IAAK,K,EAIbif,aAAe,WACX,EAAKsB,yBADY,IAGTknB,EAAa,EAAKxsC,MAAlBwsC,SAERA,GAAYA,K,wEAGN,IAAD,EACkDttC,KAAKc,MAApD0P,EADH,EACGA,EAAGnP,EADN,EACMA,UAAWoqB,EADjB,EACiBA,KAAMlgB,EADvB,EACuBA,KAAM0U,EAD7B,EAC6BA,QAASxR,EADtC,EACsCA,QADtC,EAE8BzO,KAAKK,MAAhC8lB,EAFH,EAEGA,YAAaxgB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAE3B,OACI,oCACI,kBAAC8Z,GAAA,EAAD,CAAUte,UAAWiN,IAAWjN,EAAW,sBAAuB,oBAAqBi2C,UAAMC,EAAW33B,QAAM,EAACrR,YAAaE,EAASqY,cAAe9mB,KAAKkmB,uBACrJ,yBAAK7kB,UAAU,oBACVoqB,GAEL,yBAAKpqB,UAAU,uBACVkK,QAESgsC,IAAZt3B,GACE,kBAACw3B,GAAA,EAAD,CAAOp2C,UAAU,uBAAuBiV,MAAM,UAAU2J,QAASA,KAGzE,kBAACmF,GAAA,EAAD,CACI1K,KAAMyL,EACNrL,QAAS9a,KAAKomB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEnf,MAAKF,QACvB2f,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBjX,YAAa,SAAAQ,GAAC,OAAIA,EAAE1K,oBACpB,kBAACqhB,GAAA,EAAD,CAAUjX,QAAS,SAAAM,GAAC,OAAIA,EAAE1K,oBACtB,kBAACshB,GAAA,EAAD,CAAUlX,QAASzO,KAAK8kB,cACpB,kBAAChF,GAAA,EAAD,KACI,kBAAC+F,GAAD,OAEJ,kBAAC1F,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oB,GA5E5B7O,IAAMC,YA8FhBgP,iBAAkB8mC,ICtDlBC,I,mBAhDX,WAAY72C,GAAQ,IAAD,8BACf,4CAAMA,KAED82C,OAASj2C,IAAM2Y,YAHL,E,yEAMN,IAAD,EAMJta,KAAK43C,OAAO1gC,QAEhB,MAAO,CAAEvR,KARD,EAEJkd,WAMWhd,IARP,EAGJsmB,UAKgBhd,MARZ,EAIJwU,YAIuB5L,OARnB,EAKJuU,gB,sCAMQ/gB,GACZ,IAAMssC,EAAM73C,KAAK43C,OAAO1gC,QACnB2gC,IAELA,EAAInyC,MAAM6d,QAAUhY,K,+BAGd,IAAD,EACqCvL,KAAKc,MAAvC2qB,EADH,EACGA,KAAMlgB,EADT,EACSA,KAAM+E,EADf,EACeA,SAAU7B,EADzB,EACyBA,QAE9B,OACI,yBAAKwM,IAAKjb,KAAK43C,OAAQv2C,UAAWiN,IAAW,OAAQ,CAAE,gBAAiBgC,IAAa7B,QAASA,GAC1F,yBAAKpN,UAAU,aACVoqB,GAEL,yBAAKpqB,UAAU,eACX,kBAAC2N,EAAA,EAAD,CAAW3N,UAAU,sBAEzB,yBAAKA,UAAU,aAAakK,Q,GApCzB5J,IAAMC,YCgDVk2C,I,mBA7CX,WAAYh3C,GAAQ,IAAD,8BACf,4CAAMA,KAED82C,OAASj2C,IAAM2Y,YAHL,E,yEAMN,IAAD,EAMJta,KAAK43C,OAAO1gC,QAEhB,MAAO,CAAEvR,KARD,EAEJkd,WAMWhd,IARP,EAGJsmB,UAKgBhd,MARZ,EAIJwU,YAIuB5L,OARnB,EAKJuU,gB,sCAMQ/gB,GACZ,IAAMssC,EAAM73C,KAAK43C,OAAO1gC,QACnB2gC,IAELA,EAAInyC,MAAM6d,QAAUhY,K,+BAGd,IAAD,EACiCvL,KAAKc,MAAnCuP,EADH,EACGA,OAAQC,EADX,EACWA,SAAU7B,EADrB,EACqBA,QAE1B,OACI,yBAAKwM,IAAKjb,KAAK43C,OAAQv2C,UAAWiN,IAAW,OAAQ,CAAE,gBAAiBgC,IAAa7B,QAASA,GAC1F,kBAACkC,EAAA,EAAD,CAAUN,OAAQA,EAAQ60B,OAAO,IACjC,yBAAK7jC,UAAU,eACX,kBAAC2N,EAAA,EAAD,CAAW3N,UAAU,sBAEzB,yBAAKA,UAAU,aAAaqP,YAAkBL,S,GAlCvC1O,IAAMC,YCgBvBm2C,I,mBAEF,WAAYj3C,GAAQ,IAAD,8BACf,4CAAMA,KAaVk3C,iBAAmB,SAAC3nC,EAAQ4nC,GAAY,IAC5BC,EAAS,EAAKp3C,MAAdo3C,KAER,GAAID,EAAQ,CACR,IAAMplC,EAAQ,EAAK6gB,eAAexc,QAClCrE,EAAMnL,QACNmL,EAAM6F,UAAY,GAClB,EAAK+a,aAAa,IAGtB,EAAK/qB,aAAsB,YAATwvC,EAAqB,oBAAsB,oBAAqB7nC,IAxBnE,EA0LnB8nC,gBAAkB,WAAO,IAAD,EACK,EAAKr3C,MAAtByY,EADY,EACZA,OAAQ2+B,EADI,EACJA,KACRE,EAAgB,EAAK/3C,MAArB+3C,YACR,GAAK7+B,EAEL,GAAI6+B,EACA,OAAQA,GACJ,IAAK,mBACL,IAAK,uBACL,IAAK,eACL,IAAK,iBACL,IAAK,mBACL,IAAK,gBACL,IAAK,eACL,IAAK,mBACD,EAAK1vC,aAAa0vC,GAElB,EAAKr3C,SAAS,CACVq3C,YAAa,OAEjB,MAEJ,QACI,EAAKJ,iBAAiBI,GAEtB,EAAKr3C,SAAS,CACVq3C,YAAa,YAS7B,GADyB,YAATF,EACH,CAAC,IAENG,EAMA9+B,EANA8+B,iBACAC,EAKA/+B,EALA++B,qBACAC,EAIAh/B,EAJAg/B,aACAC,EAGAj/B,EAHAi/B,eACAC,EAEAl/B,EAFAk/B,iBACAC,EACAn/B,EADAm/B,kBAGJ,GAAIA,EAAkB5lC,OAAS,EAAG,CAC9B,IAAM6lC,EAAWD,EAAkBA,EAAkB5lC,OAAS,GAC9D,IAAK6lC,EAAU,OAEf,EAAK53C,SAAS,CACVq3C,YAAaO,SAEVJ,EACP,EAAKx3C,SAAS,CACVq3C,YAAa,iBAEVK,EACP,EAAK13C,SAAS,CACVq3C,YAAa,qBAEVI,EACP,EAAKz3C,SAAS,CACVq3C,YAAa,mBAEVE,EACP,EAAKv3C,SAAS,CACVq3C,YAAa,yBAEVC,GACP,EAAKt3C,SAAS,CACVq3C,YAAa,yBAGlB,CAAC,IAEAQ,EAIAr/B,EAJAq/B,cACAC,EAGAt/B,EAHAs/B,aACAC,EAEAv/B,EAFAu/B,iBACAC,EACAx/B,EADAw/B,kBAGJ,GAAIA,EAAkBjmC,OAAS,EAAG,CAC9B,IAAM6lC,EAAWI,EAAkBA,EAAkBjmC,OAAS,GAC9D,IAAK6lC,EAAU,OAEf,EAAK53C,SAAS,CACVq3C,YAAaO,SAEVG,EACP,EAAK/3C,SAAS,CACVq3C,YAAa,qBAEVS,EACP,EAAK93C,SAAS,CACVq3C,YAAa,iBAEVQ,GACP,EAAK73C,SAAS,CACVq3C,YAAa,oBA5RV,EAkSnB1vC,aAAe,SAACgU,EAAM/T,IAGlBiH,EAFqB,EAAK9O,MAAlB8O,UAEC8M,EAAM/T,GAEf,EAAK5H,SAAS,CACVq3C,YAAa,QAxSF,EA4SnB3kB,aA5SmB,sCA4SJ,WAAMloB,GAAN,yBAAAuF,EAAA,wDACL4I,EAAQnO,EAAKwN,OADR,uBAGP,EAAKhY,SAAS,CACVs0B,YAAa,KACb+iB,YAAa,OALV,iCAULzkC,EAAW,IACRK,KACLtT,IAAgBC,KAAK,CACjB,QAAS,cACT+Y,QACA3F,MAAO,OAfJ,SAkBiBO,QAAQ7C,IAAIkC,GAlB7B,mCAkBJ0hB,EAlBI,KAoBLxgB,EAAQ7K,IAAU8K,WACxBC,YAAiBF,EAAOwgB,EAAYzgB,UAEpC,EAAK7T,SAAS,CAAEs0B,cAAa+iB,YAAa,OAvB/B,0CA5SI,sDAGf,EAAK1kB,eAAiB/xB,IAAM2Y,YAC5B,EAAK0+B,aAAer3C,IAAM2Y,YAC1B,EAAK2+B,SAAW,IAAI/lC,IAEpB,EAAK7S,MAAQ,CACT+3C,YAAa,KACb/iB,YAAa,KACblkB,OAAO,GAVI,E,qFA2BKjQ,EAAWC,GAAY,IAAD,EACjBnB,KAAKc,MAAtByY,EADkC,EAClCA,OAAQ2+B,EAD0B,EAC1BA,KACCgB,EAAeh4C,EAAxBqY,OAER,GAAIrY,EAAUqY,SAAWA,EACrB,OAAO,KAGX,IAAM4/B,EAAmB,YAATjB,EACVkB,EAAYD,EAAUj4C,EAAUqY,OAAOm/B,kBAAoBx3C,EAAUqY,OAAOw/B,kBAC5EjtB,EAAQqtB,EAAU5/B,EAAOm/B,kBAAoBn/B,EAAOw/B,kBAEpDM,EACFD,EAAUtmC,OAASgZ,EAAMhZ,QACtBomC,EAAWb,mBAAqB9+B,EAAO8+B,kBACvCa,EAAWZ,uBAAyB/+B,EAAO++B,sBAC3CY,EAAWV,iBAAmBj/B,EAAOi/B,gBACrCU,EAAWT,mBAAqBl/B,EAAOk/B,kBACvCS,EAAWX,eAAiBh/B,EAAOg/B,cACnCW,EAAWL,eAAiBt/B,EAAOs/B,cACnCK,EAAWN,gBAAkBr/B,EAAOq/B,eACpCM,EAAWJ,mBAAqBv/B,EAAOu/B,iBAExCQ,EAAYt5C,KAAKg5C,aAAa9hC,QAC9BqiC,EAAaD,EAAUjoB,aACvBmoB,EAAmBF,EAAUhtB,aAE7BmtB,EAAcH,EAAU5zC,MAAM6d,QAC9BmK,EAAgB4rB,EAAUttB,UAC5BqtB,IACAC,EAAU5zC,MAAM6d,QAAU,MAG9B,IAAMm2B,EAAU,IAAIxmC,IAjCsB,uBAkC1C,YAAgBlT,KAAKi5C,SAASzI,OAA9B,+CAAsC,CAAC,IAA9B7tC,EAA6B,QAC5B+uB,EAAK1xB,KAAKi5C,SAAShvC,IAAItH,GAC7B,GAAI+uB,EAAI,CACJ,IAAMpH,EAASoH,EAAGwf,YAClBwI,EAAQlhC,IAAI7V,EAAK2nB,KAtCiB,kFA0C1C,MAAO,CAAEwB,MAAO4tB,EAASC,MAAO,CAAEN,aAAYE,aAAYC,mBAAkB9rB,gBAAe+rB,kB,yCAG5Ev4C,EAAWC,EAAWC,GACjCF,EAAUqY,SAAWvZ,KAAKc,MAAMyY,QAIpCvZ,KAAK45C,aAAax4C,EAASu4C,S,mCAIlBv4C,GAAW,IAAD,OACnB,GAAKA,EAAL,CADmB,IAGXi4C,EAAyEj4C,EAAzEi4C,WAAYE,EAA6Dn4C,EAA7Dm4C,WAAYC,EAAiDp4C,EAAjDo4C,iBAAkB9rB,EAA+BtsB,EAA/BssB,cAAe+rB,EAAgBr4C,EAAhBq4C,YAE3DH,EAAYt5C,KAAKg5C,aAAa9hC,QAE9B2iC,EAAgBP,EAAUjoB,aAI1ByoB,GAHsBR,EAAUhtB,aAGpButB,EAAgBN,GADjBM,EAAgBN,EAKzBA,EAFU,KAGVD,EAAU5zC,MAAM6d,QAAhB,sBAAyCjkB,KAAKC,IAAIg6C,EAHxC,KAGV,OACA76C,sBAAsB,WAClB46C,EAAU5zC,MAAM6d,QAAhB,sBAAyCjkB,KAAKC,IAAIs6C,EAL5C,KAKN,OACAzwC,WAAW,WACP,EAAKsqB,eAAexc,QAAQ6iC,eAAe,CAAE5oB,SAAU,UACxD,SAGPmoB,EAAU5zC,MAAM6d,QAAhB,sBAXU,IAWV,OACAvjB,KAAK0zB,eAAexc,QAAQ6iC,eAAe,CAAE5oB,SAAU,YAEpD2oB,EACHD,EAfU,KAgBVP,EAAU5zC,MAAM6d,QAAhB,sBAAyCjkB,KAAKC,IAAIi6C,EAhBxC,KAgBV,OACA96C,sBAAsB,WAClB46C,EAAU5zC,MAAM6d,QAAhB,sBAAyCjkB,KAAKC,IAAIs6C,EAlB5C,KAkBN,WAGJP,EAAU5zC,MAAM6d,QAAhB,sBArBU,IAqBV,OACA+1B,EAAUttB,UAAY0B,GAGtB2rB,GACAC,EAAU5zC,MAAM6d,QAAUk2B,EAC1BH,EAAUttB,UAAY0B,GAEtB1tB,KAAK0zB,eAAexc,QAAQ6iC,eAAe,CAAE5oB,SAAU,c,mCAKtD6oB,GAAc,IAAD,OACtB,GAAKA,EAAL,CAEA,IAAMC,EAAkB,IAAI/mC,IAHN,uBAItB,YAAgBlT,KAAKi5C,SAASzI,OAA9B,+CAAsC,CAAC,IAA9B7tC,EAA6B,QAC5B+uB,EAAK1xB,KAAKi5C,SAAShvC,IAAItH,GAC7B,GAAI+uB,EAAI,CACJ,IAAMwoB,EAAgBxoB,EAAGwf,YACnBiJ,EAAaH,EAAY3mC,IAAI1Q,GAAOq3C,EAAY/vC,IAAItH,GAAO,KACjE,GAAIw3C,EAAY,CACRA,EAAWx0C,KAAOu0C,EAAcv0C,MAChCs0C,EAAgBzhC,IAAIkZ,EAAI,CAAEyoB,aAAYD,kBAG1C,IAAMld,EAAS,+BAA2Bmd,EAAWx0C,KAAOu0C,EAAcv0C,KAA3D,eAAsEw0C,EAAWt0C,IAAMq0C,EAAcr0C,IAArG,OACf6rB,EAAG0oB,gBAAgBpd,MAfT,kFAoBtBt+B,sBAAsB,WAAO,IAAD,uBACxB,YAAgB,EAAKu6C,SAASzI,OAA9B,+CAAsC,CAAC,IAA9B7tC,EAA6B,QAC5B+uB,EAAK,EAAKunB,SAAShvC,IAAItH,GAC7B,GAAI+uB,EAAI,CACJ,IAAItP,EAAU,mCACd,GAAI63B,EAAgB5mC,IAAIqe,GAAK,CAAC,IAAD,EACauoB,EAAgBhwC,IAAIynB,GAAlDyoB,EADiB,EACjBA,WAAYD,EADK,EACLA,cACpB93B,EAAa,+BAAwB+3B,EAAWx0C,KAAOu0C,EAAcv0C,KAAOw0C,EAAWhrC,MAA1E,eAAsFgrC,EAAWt0C,IAAMq0C,EAAcr0C,IAArH,QACP,mCAGV6rB,EAAG0oB,gBAAgBh4B,KAXH,kFAenB63B,EAAgBniC,MAErB1O,WAAW,WAAO,IAAD,uBACb,YAAe6wC,EAAgBzJ,OAA/B,+CAAuC,CAAC,IAA/B9e,EAA8B,QAC3BwoB,EAAkBD,EAAgBhwC,IAAIynB,GAAtCwoB,cACF93B,EAAa,+BAAwB83B,EAAc/qC,MAAtC,WACb,iCAENuiB,EAAG0oB,gBAAgBh4B,IANV,kFASb1jB,sBAAsB,WAAO,IAAD,uBACxB,YAAeu7C,EAAgBzJ,OAA/B,+CAAuC,CAAC,IAA/B9e,EAA8B,QAGnCA,EAAG0oB,gBAFgB,qCAFC,sFAQ7B,U,+BAgJD,IAAD,SACkEp6C,KAAKc,MAApE0P,EADH,EACGA,EAAG+I,EADN,EACMA,OAAQ9E,EADd,EACcA,MAAOV,EADrB,EACqBA,MAAOmkC,EAD5B,EAC4BA,KAAMp9B,EADlC,EACkCA,QAAmB8X,GADrD,EAC2ChjB,SAD3C,EACqDgjB,UADrD,EAEgC5yB,KAAKK,MAAlC+3C,EAFH,EAEGA,YAAa/iB,EAFhB,EAEgBA,YAGjBgjB,EAMA9+B,EANA8+B,iBACAC,EAKA/+B,EALA++B,qBACAC,EAIAh/B,EAJAg/B,aACAC,EAGAj/B,EAHAi/B,eACAC,EAEAl/B,EAFAk/B,iBACAC,EACAn/B,EADAm/B,kBAIAE,EAIAr/B,EAJAq/B,cACAC,EAGAt/B,EAHAs/B,aACAC,EAEAv/B,EAFAu/B,iBACAC,EACAx/B,EADAw/B,kBAGEI,EAAmB,YAATjB,EACVpsB,EAAQqtB,EAAUT,EAAoBK,EAE5C,OACI,oCACI,yBAAK13C,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAA8CmP,EAAZ,YAAT0nC,EAAuB,gBAAqB,oBAG7F,yBAAKj9B,IAAKjb,KAAKg5C,aAAc33C,UAAU,uBACjC83C,GACE,oCACKd,GAAoB,kBAAC,GAAD,CAAM5pC,QAAS,kBAAM,EAAK/F,aAAa,qBAAqBuS,IAAK,SAAAyW,GAAQ,EAAKunB,SAASzgC,IAAI,mBAAoBkZ,IAAQphB,SAA0B,qBAAhB8nC,EAAoC3sB,KAAM,kBAAC,GAAD,CAAckS,QAAQ,cAAepyB,KAAMiF,EAAE,oBAC5O8nC,GAAwB,kBAAC,GAAD,CAAM7pC,QAAS,kBAAM,EAAK/F,aAAa,yBAAyBuS,IAAK,SAAAyW,GAAQ,EAAKunB,SAASzgC,IAAI,uBAAwBkZ,IAAQphB,SAA0B,yBAAhB8nC,EAAwC3sB,KAAM,kBAAC4uB,GAAD,MAAqB9uC,KAAMiF,EAAE,uBAC5OgoC,GAAkB,kBAAC,GAAD,CAAM/pC,QAAS,kBAAM,EAAK/F,aAAa,mBAAmBuS,IAAK,SAAAyW,GAAQ,EAAKunB,SAASzgC,IAAI,iBAAkBkZ,IAAQphB,SAA0B,mBAAhB8nC,EAAkC3sB,KAAM,kBAAC,GAAD,CAAYkS,QAAQ,cAAepyB,KAAMiF,EAAE,kBAClOioC,GAAoB,kBAAC,GAAD,CAAMhqC,QAAS,kBAAM,EAAK/F,aAAa,qBAAqBuS,IAAK,SAAAyW,GAAQ,EAAKunB,SAASzgC,IAAI,mBAAoBkZ,IAAQphB,SAA0B,qBAAhB8nC,EAAoC3sB,KAAM,kBAAC,GAAD,CAAckS,QAAQ,cAAepyB,KAAMiF,EAAE,oBAC5O+nC,GAAgB,kBAAC,GAAD,CAAM9pC,QAAS,kBAAM,EAAK/F,aAAa,iBAAiBuS,IAAK,SAAAyW,GAAQ,EAAKunB,SAASzgC,IAAI,eAAgBkZ,IAAQphB,SAA0B,iBAAhB8nC,EAAgC3sB,KAAM,kBAAC6uB,GAAD,MAAc/uC,KAAMiF,EAAE,kBAG3M2oC,GACC,oCACKP,GAAiB,kBAAC,GAAD,CAAMnqC,QAAS,kBAAM,EAAK/F,aAAa,kBAAkBuS,IAAK,SAAAyW,GAAQ,EAAKunB,SAASzgC,IAAI,gBAAiBkZ,IAAQphB,SAA0B,kBAAhB8nC,EAAiC3sB,KAAM,kBAAC,GAAD,CAAYkS,QAAQ,cAAepyB,KAAMiF,EAAE,iBAC9NqoC,GAAgB,kBAAC,GAAD,CAAMpqC,QAAS,kBAAM,EAAK/F,aAAa,iBAAiBuS,IAAK,SAAAyW,GAAQ,EAAKunB,SAASzgC,IAAI,eAAgBkZ,IAAQphB,SAA0B,iBAAhB8nC,EAAgC3sB,KAAM,kBAAC,GAAD,CAAckS,QAAQ,cAAepyB,KAAMiF,EAAE,gBAC5NsoC,GAAoB,kBAAC,GAAD,CAAMrqC,QAAS,kBAAM,EAAK/F,aAAa,qBAAqBuS,IAAK,SAAAyW,GAAQ,EAAKunB,SAASzgC,IAAI,mBAAoBkZ,IAAQphB,SAA0B,qBAAhB8nC,EAAoC3sB,KAAM,kBAAC6uB,GAAD,MAAc/uC,KAAMiF,EAAE,qBAG7Nsb,EAAMvX,IAAI,SAAArV,GAAC,OAAI,kBAAC,GAAD,CAAUoR,SAAU8nC,IAAgBl5C,EAAG+b,IAAK,SAAAyW,GAAQ,EAAKunB,SAASzgC,IAAItZ,EAAGwyB,IAAQ/uB,IAAKzD,EAAGmR,OAAQnR,EAAGuP,QAAS,kBAAM,EAAKupC,iBAAiB94C,QACzJ,kBAAC,GAAD,CAAa6pC,SAAU/oC,KAAK0zB,eAAgBsV,KAAMx4B,EAAE,UAAWsK,QAAS9a,KAAKu6C,kBAAmB3qC,SAAU5P,KAAKyzB,aAAcoV,YAAa7oC,KAAKm4C,mBAEnJ,yBAAK92C,UAAU,2BAA2BqE,MAAO,CAAE80C,OAAQ,KAC3D,yBAAKv/B,IAAKjb,KAAKy6C,UAAWp5C,UAAU,uBAAuBqE,MAAO,CAAEg1C,WAAY,EAAGhpC,SAAU,WAAYqG,OAAQ,QAAU6a,SAAUA,GACjI,kBAAC,GAAD,KAAgBpiB,EAAE,oBACjB2oC,GACG,oCACI,kBAAC,GAAD,CAAY1qC,QAAS,kBAAM,EAAK/F,aAAa,qBAAqBuX,QAASo4B,EAAkB5sB,KAAM,kBAAC,GAAD,CAAcpqB,UAAU,0BAA0Bs8B,QAAQ,cAAepyB,KAAMiF,EAAE,oBACpL,kBAAC,GAAD,CAAY/B,QAAS,kBAAM,EAAK/F,aAAa,yBAAyBuX,QAASq4B,EAAsB7sB,KAAM,kBAAC4uB,GAAD,CAAiBh5C,UAAU,4BAA6BkK,KAAMiF,EAAE,uBAC3K,kBAAC,GAAD,CAAY/B,QAAS,kBAAM,EAAK/F,aAAa,mBAAmBuX,QAASu4B,EAAgB/sB,KAAM,kBAAC,GAAD,CAAYpqB,UAAU,0BAA0Bs8B,QAAQ,cAAepyB,KAAMiF,EAAE,kBAC9K,kBAAC,GAAD,CAAY/B,QAAS,kBAAM,EAAK/F,aAAa,qBAAqBuX,QAASw4B,EAAkBhtB,KAAM,kBAAC,GAAD,CAAcpqB,UAAU,0BAA0Bs8B,QAAQ,cAAepyB,KAAMiF,EAAE,oBACpL,kBAAC,GAAD,CAAY/B,QAAS,kBAAM,EAAK/F,aAAa,iBAAiBuX,QAASs4B,EAAc9sB,KAAM,kBAAC6uB,GAAD,CAAUj5C,UAAU,4BAA6BkK,KAAMiF,EAAE,kBAG1J2oC,GACE,oCACI,kBAAC,GAAD,CAAY1qC,QAAS,kBAAM,EAAK/F,aAAa,kBAAkBuX,QAAS24B,EAAentB,KAAM,kBAAC2V,GAAD,CAAW//B,UAAU,4BAA6BkK,KAAMiF,EAAE,iBACvJ,kBAAC,GAAD,CAAY/B,QAAS,kBAAM,EAAK/F,aAAa,iBAAiBuX,QAAS44B,EAAcptB,KAAM,kBAAC,GAAD,CAAUpqB,UAAU,4BAA6BkK,KAAMiF,EAAE,gBACpJ,kBAAC,GAAD,CAAY/B,QAAS,kBAAM,EAAK/F,aAAa,qBAAqBuX,QAAS64B,EAAkBrtB,KAAM,kBAAC,GAAD,CAAcpqB,UAAU,4BAA6BkK,KAAMiF,EAAE,qBAGtKiE,GAASA,EAAM3B,OAAS,GACtB,oCACI,yBAAKzR,UAAU,+BAA+BqE,MAAO,CAAEyvC,OAAQ,cAC/D,kBAAC,GAAD,KAAgB3kC,EAAE,iBACfiE,GAAS,IAAImY,MAAM,EAAG7Y,GAAOQ,IAAI,SAAArV,GAAC,OAAI,kBAAC,GAAD,CAAYwd,MAAM,EAAMjO,QAAS,kBAAM,EAAKupC,iBAAiB94C,IAAIyD,IAAKzD,EAAGmR,OAAQnR,EAAG+gB,QAAkB,YAATi4B,EAAqBQ,EAAkBlJ,SAAStwC,GAAK65C,EAAkBvJ,SAAStwC,QAG5Nm2B,GACE,yBAAKh0B,UAAU,4BACTg0B,EAAYzgB,SAASL,IAAI,SAAArV,GAAC,OAAI,kBAAC,GAAD,CAAYwd,MAAM,EAAMjO,QAAS,kBAAM,EAAKupC,iBAAiB94C,GAAG,IAAOyD,IAAKzD,EAAGmR,OAAQnR,EAAG+gB,QAAkB,YAATi4B,EAAqBQ,EAAkBlJ,SAAStwC,GAAK65C,EAAkBvJ,SAAStwC,c,GAzZjNyC,IAAMC,YA0arBgP,iBAAkBmnC,I,+jBCpajC,IAAM4C,GAAUh5C,IAAMi5C,KAAK,kBAAM,gCAE3BC,G,YAEF,WAAY/5C,GAAQ,IAAD,8BACf,4CAAMA,KAqCVg6C,kBAtCmB,qBAsCC,oCAAAhqC,EAAA,yDACM,EAAKzQ,MAAnB06C,UADQ,iEAKNC,EAAW,CAAEC,MAAM,wBALb,SAOU3mC,QAAQ7C,IAAIupC,GAPtB,cAONxU,EAPM,iBASSlyB,QAAQ7C,IAAI+0B,EAAQjyB,IAAI,SAAArV,GAAC,OAAIA,EAAEqM,UATxC,oCASLkb,EATK,KAWZ,EAAK1lB,SAAS,CAAE0lB,SAXJ,kDAaZvV,QAAQC,MAAR,MAbY,wDAtCD,EAuDnB0hC,WAAa,WAAO,IACRqI,EAAW,EAAKp6C,MAAhBo6C,OACAC,EAAe,EAAK96C,MAApB86C,WAEF9+B,EAAQ,EAAK++B,SAASlkC,QAAQvO,MAAMoQ,OAC1C,IAAKsD,EAKD,OAJA,EAAK++B,SAASlkC,QAAQxP,aACtB,EAAK3G,SAAS,CACVoQ,OAAO,IAIX,EAAKpQ,SAAS,CACVoQ,OAAO,IAIfgqC,EAAW9+B,MAAQA,ECxGpB,SAAuB9C,GAC1B,IAAKA,EAAQ,OAAO,EADc,IAI9B8+B,EAOA9+B,EAPA8+B,iBACAC,EAMA/+B,EANA++B,qBACAC,EAKAh/B,EALAg/B,aACAC,EAIAj/B,EAJAi/B,eACAC,EAGAl/B,EAHAk/B,iBACAC,EAEAn/B,EAFAm/B,kBAIJ,QAFIn/B,EADA8C,QAKGg8B,GAAoBC,GAAwBC,GAAgBC,GAAkBC,GAAoBC,EAAkB5lC,OAAS,GD2F3HuoC,CAAcF,GAKnBD,GAAUA,EAAOC,GAJb,EAAKxlC,sBAAsB,qDA3EhB,EAkFnB2lC,qBAAuB,WACnB,IAAMC,EAAS,EAAKC,UAAUtkC,QACzBqkC,GACAA,EAAOE,UAEZF,EAAOl1C,QAvFQ,EA0FnBq1C,4BAA8B,WAAO,IACzBlrC,EAAM,EAAK1P,MAAX0P,EACA2qC,EAAe,EAAK96C,MAApB86C,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoB9C,kBAAkB,IAEzD,EAAKt3C,SAAS,CACVo6C,WAAYQ,IAGF,EAAKP,SAASlkC,QAAQvO,QACtB6H,EAAE,mBACZ,EAAKzP,SAAS,CACVsb,MAAO,OAxGA,EA6GnBu/B,+BAAiC,WAAO,IAC5BprC,EAAM,EAAK1P,MAAX0P,EACA2qC,EAAe,EAAK96C,MAApB86C,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoB7C,sBAAsB,IAE7D,EAAKv3C,SAAS,CACVo6C,WAAYQ,IAGF,EAAKP,SAASlkC,QAAQvO,QACtB6H,EAAE,sBACZ,EAAKzP,SAAS,CACVsb,MAAO,OA3HA,EAgInBw/B,0BAA4B,WAAO,IACvBrrC,EAAM,EAAK1P,MAAX0P,EACA2qC,EAAe,EAAK96C,MAApB86C,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoB3C,gBAAgB,IAEvD,EAAKz3C,SAAS,CACVo6C,WAAYQ,IAGF,EAAKP,SAASlkC,QAAQvO,QACtB6H,EAAE,iBACZ,EAAKzP,SAAS,CACVsb,MAAO,OA9IA,EAmJnBy/B,4BAA8B,WAAO,IACzBtrC,EAAM,EAAK1P,MAAX0P,EACA2qC,EAAe,EAAK96C,MAApB86C,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoB1C,kBAAkB,IAEzD,EAAK13C,SAAS,CACVo6C,WAAYQ,IAGF,EAAKP,SAASlkC,QAAQvO,QACtB6H,EAAE,mBACZ,EAAKzP,SAAS,CACVsb,MAAO,OAjKA,EAsKnB0/B,wBAA0B,WAAO,IACrBvrC,EAAM,EAAK1P,MAAX0P,EACA2qC,EAAe,EAAK96C,MAApB86C,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoB5C,cAAc,IAErD,EAAKx3C,SAAS,CACVo6C,WAAYQ,IAGF,EAAKP,SAASlkC,QAAQvO,QACtB6H,EAAE,eACZ,EAAKzP,SAAS,CACVsb,MAAO,OApLA,EAyLnB2/B,yBAA2B,SAAA3rC,GAAW,IAC1B8qC,EAAe,EAAK96C,MAApB86C,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoBzC,kBAAmByC,EAAWzC,kBAAkBn/B,OAAO,SAAAra,GAAC,OAAIA,IAAMmR,MAEzG,EAAKtP,SAAS,CACVo6C,WAAYQ,MAhMD,EAoMnBM,yBAA2B,WAAO,IACtBd,EAAe,EAAK96C,MAApB86C,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoBvC,eAAe,IAEtD,EAAK73C,SAAS,CACVo6C,WAAYQ,MA3MD,EA+MnBO,wBAA0B,WAAO,IACrBf,EAAe,EAAK96C,MAApB86C,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoBtC,cAAc,IAErD,EAAK93C,SAAS,CACVo6C,WAAYQ,MAtND,EA0NnBQ,4BAA8B,WAAO,IACzBhB,EAAe,EAAK96C,MAApB86C,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoBrC,kBAAkB,IAEzD,EAAK/3C,SAAS,CACVo6C,WAAYQ,MAjOD,EAqOnBS,yBAA2B,SAAA/rC,GAAW,IAC1B8qC,EAAe,EAAK96C,MAApB86C,WACR,GAAKA,EAAL,CAEA,IAAMQ,EAAa,MAAQR,EAAR,CAAoBpC,kBAAmBoC,EAAWpC,kBAAkBx/B,OAAO,SAAAra,GAAC,OAAIA,IAAMmR,MAEzG,EAAKtP,SAAS,CACVo6C,WAAYQ,MA5OD,EAgPnBU,sBAhPmB,sCAgPK,WAAMnE,GAAN,eAAApnC,EAAA,qEACCpQ,IAAgBC,KAAK,CACtC,QAAS,WACTw+B,UAAW,CAAE,QAAS,gBACtBtrB,aAAc,sBACdC,eAAgB,EAChBC,MAAO,MANS,OACdlT,EADc,OASpB,EAAKE,SAAS,CACVu7C,iBAAiB,EACjBpE,OACAzjC,MAAO5T,EAAO+T,SACdb,MAAOs4B,MAbS,yCAhPL,wDAqTnBkQ,uBAAyB,WAErB,EAAKC,wBAEL,EAAKz7C,SAAS,CACVu7C,iBAAiB,EACjBpE,KAAM,QA3TK,EA+TnBxvC,aAAe,SAACgU,EAAM/T,GAAW,IACrBwyC,EAAe,EAAK96C,MAApB86C,WACR,GAAKA,EAAL,CAEA,IAAIQ,EAAgB,KACpB,OAAQj/B,GACJ,IAAK,mBACDi/B,EAAa,MAAQR,EAAR,CAAoB9C,kBAAmB8C,EAAW9C,mBAC/D,MAEJ,IAAK,uBACDsD,EAAa,MAAQR,EAAR,CAAoB7C,sBAAuB6C,EAAW7C,uBACnE,MAEJ,IAAK,eACDqD,EAAa,MAAQR,EAAR,CAAoB5C,cAAe4C,EAAW5C,eAC3D,MAEJ,IAAK,iBACDoD,EAAa,MAAQR,EAAR,CAAoB3C,gBAAiB2C,EAAW3C,iBAC7D,MAEJ,IAAK,mBACDmD,EAAa,MAAQR,EAAR,CAAoB1C,kBAAmB0C,EAAW1C,mBAC/D,MAEJ,IAAK,oBACD,IAAIgE,EAAUC,EACVvB,EAAWzC,kBAAkBlJ,SAAS7mC,IACtC8zC,EAAWtB,EAAWzC,kBAAkBn/B,OAAO,SAAAra,GAAC,OAAIA,IAAMyJ,IAC1D+zC,EAAWvB,EAAWpC,oBAEtB0D,EAAQ,uBAAQtB,EAAWzC,mBAAnB,CAAsC/vC,IAC9C+zC,EAAWvB,EAAWpC,kBAAkBx/B,OAAO,SAAAra,GAAC,OAAIA,IAAMyJ,KAG9DgzC,EAAa,MACNR,EADM,CAETzC,kBAAmB+D,EACnB1D,kBAAmB2D,IAEvB,MAEJ,IAAK,gBACDf,EAAa,MAAQR,EAAR,CAAoBvC,eAAgBuC,EAAWvC,gBAC5D,MAEJ,IAAK,eACD+C,EAAa,MAAQR,EAAR,CAAoBtC,cAAesC,EAAWtC,eAC3D,MAEJ,IAAK,mBACD8C,EAAa,MAAQR,EAAR,CAAoBrC,kBAAmBqC,EAAWrC,mBAC/D,MAEJ,IAAK,oBACD,IAAI2D,EAAUC,EACVvB,EAAWpC,kBAAkBvJ,SAAS7mC,IACtC+zC,EAAWvB,EAAWpC,kBAAkBx/B,OAAO,SAAAra,GAAC,OAAIA,IAAMyJ,IAC1D8zC,EAAWtB,EAAWzC,oBAEtBgE,EAAQ,uBAAQvB,EAAWpC,mBAAnB,CAAsCpwC,IAC9C8zC,EAAWtB,EAAWzC,kBAAkBn/B,OAAO,SAAAra,GAAC,OAAIA,IAAMyJ,KAG9DgzC,EAAa,MACNR,EADM,CAETzC,kBAAmB+D,EACnB1D,kBAAmB2D,IAQ1Bf,GAEL,EAAK56C,SAAS,CACVo6C,WAAYQ,MA9YD,EAkZnBgB,kBAAoB,WAChB,IAAMtgC,EAAQ,EAAK++B,SAASlkC,QAAQvO,MAAMinC,OAAO,EAAGgN,KAEpD,EAAK77C,SAAS,CACVsb,WAtZW,EA0ZnBgR,aAAe,SAAA5qB,GACX,IAAM8f,EAAS9f,EAAMuD,OACjBuc,EAAOyJ,UAAYzJ,EAAO+J,cAAgB/J,EAAO8O,cACjD,EAAKtwB,SAAS,CACVgT,MAAO,EAAK1T,MAAM0T,MAAQs4B,OA9ZnB,EAmanB12B,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK9U,MAAxC+U,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIzT,IAAI,QACJ0T,aAAW,QACXC,MAAM,UACNjV,UAAU,4BACVoN,QAAS,kBAAMqH,EAAcC,KAC7B,kBAAC/G,EAAA,EAAD,WA7aZ,EAAKosC,SAAWz5C,IAAM2Y,YACtB,EAAKkhC,UAAY75C,IAAM2Y,YAEvB,EAAKja,MAAQ,CACTw8C,cAAe,EACfp2B,KAAM,KACN61B,iBAAiB,EACjBpE,KAAM,KACN77B,MAAO,GACPlL,OAAO,EACP2rC,OAAO,EACProC,MAAO,GACPV,MAAO,GAfI,E,iFAmCf/T,KAAK86C,sB,8CA8NgB,IACbtqC,EAAMxQ,KAAKc,MAAX0P,EACA2qC,EAAen7C,KAAKK,MAApB86C,WAGR,IADcn7C,KAAKo7C,SAASlkC,QAAQvO,MACxB,CAAC,IAEL0vC,EAMA8C,EANA9C,iBACAC,EAKA6C,EALA7C,qBACAC,EAIA4C,EAJA5C,aACAC,EAGA2C,EAHA3C,eACAC,EAEA0C,EAFA1C,iBACAC,EACAyC,EADAzC,kBAQAyC,EAJAvC,cAIAuC,EAHAtC,aAGAsC,EAFArC,iBAEAqC,EADApC,kBAGCL,EAAkB5lC,UACfulC,GAAqBC,GAAyBC,GAAiBC,GAAmBC,EAI1EJ,IAAoBC,GAAyBC,GAAiBC,GAAmBC,GAIlFJ,IAAoBC,GAAyBC,GAAiBC,GAAmBC,EAIhFJ,GAAqBC,IAAwBC,GAAiBC,GAAmBC,EAIjFJ,GAAqBC,GAAyBC,IAAgBC,GAAmBC,EAIjFJ,GAAqBC,GAAyBC,GAAiBC,IAAkBC,GACzFz4C,KAAKe,SAAS,CACVsb,MAAO7L,EAAE,oBALbxQ,KAAKe,SAAS,CACVsb,MAAO7L,EAAE,kBALbxQ,KAAKe,SAAS,CACVsb,MAAO7L,EAAE,gBALbxQ,KAAKe,SAAS,CACVsb,MAAO7L,EAAE,eALbxQ,KAAKe,SAAS,CACVsb,MAAO7L,EAAE,uBALbxQ,KAAKe,SAAS,CACVsb,MAAO7L,EAAE,wB,+BA4JnB,IAAD,SAC8BxQ,KAAKc,MAAhC0P,EADH,EACGA,EAAG+I,EADN,EACMA,OAAQ9a,EADd,EACcA,GAAIqc,EADlB,EACkBA,QACvB,IAAKvB,EAAQ,OAAO,KAFf,MAIkFvZ,KAAKK,MAApF86C,EAJH,EAIGA,WAAY10B,EAJf,EAIeA,KAAM61B,EAJrB,EAIqBA,gBAAiBpE,EAJtC,EAIsCA,KAAMzjC,EAJ5C,EAI4CA,MAAOV,EAJnD,EAImDA,MAAOsI,EAJ1D,EAI0DA,MAAOlL,EAJjE,EAIiEA,MAGlEknC,GAPC,EAIwEyE,MASzE3B,EANA9C,kBACAC,EAKA6C,EALA7C,qBACAC,EAIA4C,EAJA5C,aACAC,EAGA2C,EAHA3C,eACAC,EAEA0C,EAFA1C,iBACAC,EACAyC,EADAzC,kBAIAE,EAIAuC,EAJAvC,cACAC,EAGAsC,EAHAtC,aACAC,EAEAqC,EAFArC,iBACAC,EACAoC,EADApC,kBAGJ,OACI,oCACI,yBAAK13C,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAAmCmP,EAAV/R,GAAM,EAAM,aAAkB,qBAE3E,kBAAC2X,EAAA,EAAD,CAAY/U,UAAU,sBAAsBiV,MAAM,UAAU7H,QAASzO,KAAK6yC,YACtE,kBAACkK,GAAD,QAGR,yBAAK17C,UAAU,wBACX,yBAAKA,UAAU,4BACTolB,GACE,kBAAC,IAAMu2B,SAAP,CAAgBC,SAAU,MACtB,kBAACtC,GAAD,CACI1/B,IAAKjb,KAAKw7C,UACVl9C,QAAS,CACL6Q,MAAO,GACP4I,OAAQ,GACRmlC,UAAU,EACVC,MAAM,EACNl2C,OAAQ,eACRm2C,WAAY32B,GAEhBhY,QAASzO,KAAKs7C,yBAO9B,yBAAKj6C,UAAU,uBACX,kBAAC81C,GAAA,EAAD,CACIpO,SAAU/oC,KAAKo7C,SACf/5C,UAAU,qBACVif,QAAQ,WACRsW,WAAS,EACTE,MAAOtmB,EAAE,kBACT7H,MAAO0T,EACPlL,MAAOA,EACPvB,SAAU5P,KAAK28C,qBAGvB,yBAAKt7C,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,kBAClB,kBAAC,GAAD,CAAYnP,UAAU,0BAA0BoqB,KAAM,kBAAC4xB,GAAD,MAAY9xC,KAAMiF,EAAE,kBAAmB/B,QAAS,kBAAM,EAAK4tC,sBAAsB,cACtIhE,GAAoB,kBAAC,GAAD,CAAY/K,SAAUttC,KAAK07C,4BAA6BjwB,KAAM,kBAAC,GAAD,CAAcpqB,UAAU,0BAA0Bs8B,QAAQ,cAAepyB,KAAMiF,EAAE,oBACnK8nC,GAAwB,kBAAC,GAAD,CAAYhL,SAAUttC,KAAK47C,+BAAgCnwB,KAAM,kBAAC4uB,GAAD,CAAiBh5C,UAAU,4BAA6BkK,KAAMiF,EAAE,uBACzJgoC,GAAkB,kBAAC,GAAD,CAAYlL,SAAUttC,KAAK67C,0BAA2BpwB,KAAM,kBAAC,GAAD,CAAYpqB,UAAU,0BAA0Bs8B,QAAQ,cAAepyB,KAAMiF,EAAE,kBAC7JioC,GAAoB,kBAAC,GAAD,CAAYnL,SAAUttC,KAAK87C,4BAA6BrwB,KAAM,kBAAC,GAAD,CAAcpqB,UAAU,0BAA0Bs8B,QAAQ,cAAepyB,KAAMiF,EAAE,oBACnK+nC,GAAgB,kBAAC,GAAD,CAAYjL,SAAUttC,KAAK+7C,wBAAyBtwB,KAAM,kBAAC6uB,GAAD,CAAUj5C,UAAU,4BAA6BkK,KAAMiF,EAAE,gBAClIkoC,EAAkBnkC,IAAI,SAAArV,GAAC,OACrB,kBAAC,GAAD,CAAYyD,IAAKzD,EAAGmR,OAAQnR,EAAGouC,SAAU,EAAK0O,8BAGtD,yBAAK36C,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,kBAClB,kBAAC,GAAD,CAAYnP,UAAU,6BAA6BoqB,KAAM,kBAAC,KAAD,MAAelgB,KAAMiF,EAAE,qBAAsB/B,QAAS,kBAAM,EAAK4tC,sBAAsB,cAC/IzD,GAAiB,kBAAC,GAAD,CAAYtL,SAAUttC,KAAKi8C,yBAA0BxwB,KAAM,kBAAC2V,GAAD,CAAW//B,UAAU,4BAA6BkK,KAAMiF,EAAE,iBACtIqoC,GAAgB,kBAAC,GAAD,CAAYvL,SAAUttC,KAAKk8C,wBAAyBzwB,KAAM,kBAAC,GAAD,CAAUpqB,UAAU,4BAA6BkK,KAAMiF,EAAE,gBACnIsoC,GAAoB,kBAAC,GAAD,CAAYxL,SAAUttC,KAAKm8C,4BAA6B1wB,KAAM,kBAAC,GAAD,CAAcpqB,UAAU,4BAA6BkK,KAAMiF,EAAE,oBAC9IuoC,EAAkBxkC,IAAI,SAAArV,GAAC,OACrB,kBAAC,GAAD,CAAYyD,IAAKzD,EAAGmR,OAAQnR,EAAGouC,SAAU,EAAK8O,+BAI1D,kBAAC,GAAD,CAAa1hC,KAAM4hC,EAAiBxhC,QAAS9a,KAAKu8C,wBAC9C,kBAAC,GAAD,CAAiBhjC,OAAQ4hC,EAAYjD,KAAMA,EAAMzjC,MAAOA,EAAOV,MAAOA,EAAOnE,SAAU5P,KAAK0I,aAAckqB,SAAU5yB,KAAKqtB,oB,gDA/fzGvsB,EAAOT,GAAQ,IACnCkZ,EAAqBzY,EAArByY,OAAQ+jC,EAAax8C,EAAbw8C,SACRT,EAAiBx8C,EAAjBw8C,aAER,OAAItjC,GAAUsjC,IAAiBS,EACpB,CACHT,aAAcS,EACdnC,WAAW,MAAK5hC,GAChB8C,MAAO9C,EAAO8C,OAIf,S,GAjCY1a,IAAMC,WAwiBlB6Z,GALCC,YACZ9K,cACA+K,IAGWF,CAAQo/B,IEnjBjB0C,I,kNAEFl9C,MAAQ,CACJ+/B,QAAQ,EACRja,aAAa,EACbxgB,KAAM,EACNE,IAAK,G,EAGTif,aAAe,WACX,EAAKsB,yBACL,EAAKo3B,oB,EAGTA,iBAAmB,WACf,EAAKz8C,SAAS,CACVq/B,QAAQ,K,EAIhBqd,kBAAoB,WAChB,EAAK18C,SAAS,CACVq/B,QAAQ,K,EAIhBsd,mBAAqB,WACjB,EAAKD,qB,EAGTE,oBAAsB,WAAO,IACjBj/B,EAAS,EAAK5d,MAAd4d,KACHA,IAEL,EAAK++B,oBAEL/8C,IAAgBC,KAAK,CACjB,QAAS,mBACTkpC,eAAgBnrB,EAAKjgB,O,EAI7BynB,sBAAwB,SAAAzjB,GAChBA,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAGV,EAAKtD,SAAS,CACVolB,aAAa,EACbxgB,KAAMlD,EAAM4F,QACZxC,IAAKpD,EAAM6F,W,EAInB8d,uBAAyB,WACrB,EAAKrlB,SAAS,CACVolB,aAAa,EACbxgB,KAAM,EACNE,IAAK,K,wEAIH,IAAD,EAC8B7F,KAAKc,MAAhC0P,EADH,EACGA,EAAGkO,EADN,EACMA,KAAMk/B,EADZ,EACYA,OAAQnpC,EADpB,EACoBA,MACzB,IAAKiK,EAAM,OAAO,KAFb,MAIsC1e,KAAKK,MAAxC+/B,EAJH,EAIGA,OAAQja,EAJX,EAIWA,YAAatgB,EAJxB,EAIwBA,IAAKF,EAJ7B,EAI6BA,KAE1B0W,EAAUqC,EAAVrC,MACFa,EDvEP,SAA2B1M,EAAG8sC,EAAU7oC,GAC3C,IAAKA,EAAO,MAAO,IAGnB,IADA,IAAIy9B,EAAQ,EACH9+B,EAAI,EAAGA,EAAIqB,EAAMG,SAAS9B,OAAQM,IAC0D,MAA7F+3B,YAAa12B,EAAMG,SAASxB,GAAI,CAAE,QAAS,iBAAkBy2B,eAAgByT,KAC7EpL,IAIR,OAAKA,EAIY,IAAVA,EAAc,SAAd,UAA4BA,EAA5B,UAHI1hC,EAAE,iBC4DQqtC,CAAkBrtC,EAAGkO,EAAKjgB,GAAIgW,GAE/C,OACI,oCACI,kBAACkL,GAAA,EAAD,CAAUte,UAAU,sBAAsBi2C,UAAMC,EAAW33B,QAAM,EAACnR,QAASmvC,EAAQ92B,cAAe9mB,KAAKkmB,uBACnG,kBAAC/F,GAAA,EAAD,CACI9e,UAAU,2BACV+e,QAAS/D,EACTmE,UAAWtD,KAGnB,kBAACkI,GAAA,EAAD,CACI1K,KAAMyL,EACNrL,QAAS9a,KAAKomB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEnf,MAAKF,QACvB2f,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBjX,YAAa,SAAAQ,GAAC,OAAIA,EAAE1K,oBACpB,kBAACqhB,GAAA,EAAD,CAAUjX,QAAS,SAAAM,GAAC,OAAIA,EAAE1K,oBACtB,kBAACshB,GAAA,EAAD,CAAUlX,QAASzO,KAAK8kB,cACpB,kBAAChF,GAAA,EAAD,KACI,kBAAC+F,GAAD,OAEJ,kBAAC1F,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAIrC,kBAAC,IAAD,CACImK,QAASC,KACTC,mBAAoB,EACpBH,KAAM0lB,EACNtlB,QAAS9a,KAAK8zC,aACd/4B,kBAAgB,uBAChB,kBAAC,IAAD,CAAatc,GAAG,uBAAuB+R,EAAE,YACzC,kBAAC,KAAD,KACI,kBAACyiC,GAAA,EAAD,KACKziC,EAAE,uBAGX,kBAAC8K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAASzO,KAAK09C,mBAAoBpnC,MAAM,WAC3C9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAASzO,KAAK29C,oBAAqBrnC,MAAM,WAC5C9F,EAAE,c,GAzHV7O,IAAMC,YAwIZgP,iBAAkB2sC,ICpJ3BO,I,kNAEFC,UAAY,WAAO,IACCC,EAAsB,EAAKl9C,MAAnCyY,OACR,GAAKykC,EAAL,CAFc,IAINzkC,EAAWykC,EAAXzkC,OAER7Y,IAAgBC,KAAK,CACjB,QAAS,mBACT4Y,a,wEAIE,IAAD,EACoCvZ,KAAKc,MAAtC0P,EADH,EACGA,EAAWwtC,EADd,EACMzkC,OACX,IAAKykC,EAAmB,OAAO,KAF1B,IAIGzkC,EAAwBykC,EAAxBzkC,OAAQmQ,EAAgBs0B,EAAhBt0B,YAEhB,OACI,kBAAC/J,GAAA,EAAD,CACIte,UAAU,sBACVi2C,UAAMC,EACN33B,QAAM,GACN,kBAACO,GAAA,EAAD,CACI9e,UAAU,0BACV+e,QAAS7G,EAAO8C,MAChBmE,UAAWkJ,IAEf,kBAACnO,EAAA,EAAD,CAAQla,UAAU,yBAAyBif,QAAQ,YAAY29B,kBAAgB,EAAC3nC,MAAM,UAAU7H,QAASzO,KAAK+9C,WACzGvtC,EAAE,a,GA/BS7O,IAAMC,YA2CvBgP,iBAAkBktC,IChC3BnD,I,OAAUh5C,IAAMi5C,KAAK,kBAAM,iCAE3BpR,G,YAEF,WAAY1oC,GAAQ,IAAD,8BACf,4CAAMA,KA0BVgpC,oBAAsB,SAAAtnC,GAClB4G,WAAW,WACP,EAAK80C,YACN,MA9BY,EAoEnBpD,kBApEmB,qBAoEC,oCAAAhqC,EAAA,yDACM,EAAKzQ,MAAnB06C,UADQ,iEAKNC,EAAW,CACbC,MAAM,uBACNA,MAAM,wBAPE,SAUU3mC,QAAQ7C,IAAIupC,GAVtB,cAUNxU,EAVM,iBAYSlyB,QAAQ7C,IAAI+0B,EAAQjyB,IAAI,SAAArV,GAAC,OAAIA,EAAEqM,UAZxC,oCAYLkb,EAZK,KAcZ,EAAK1lB,SAAS,CAAE0lB,SAdJ,kDAgBZvV,QAAQC,MAAR,MAhBY,wDApED,EAwFnBgtC,mBAAqB,WAAO,IAChB3tC,EAAM,EAAK1P,MAAX0P,EAER,GADoBu5B,GAAZ/lB,QACIlR,QAAUsrC,IAClB,EAAKzoC,sBAAsBnF,EAAE,0BADjC,CAsBA,EAAKzP,SAAS,CACVs9C,YAAY,EACZf,UAAW,EACX/jC,OApBW,CACX,QAAS,YACT8C,MAAO,GACPiiC,UAAW,GACXC,gBAAiB,GACjB7F,kBAAmB,GACnBK,kBAAmB,GACnBH,eAAe,EACfC,cAAc,EACdC,kBAAkB,EAClBT,kBAAkB,EAClBC,sBAAsB,EACtBC,cAAc,EACdC,gBAAgB,EAChBC,kBAAkB,OA9GP,EAwHnB+F,kBAAoB,WAChB,EAAKz9C,SAAS,CACVs9C,YAAY,EACZf,UAAW,EACX/jC,OAAQ,QA5HG,EAgInBklC,iBAhImB,sCAgIA,WAAM//B,GAAN,eAAA5N,EAAA,qEACMpQ,IAAgBC,KAAK,CACtC,QAAS,gBACTkpC,eAAgBnrB,EAAKjgB,KAHV,UACT8a,EADS,wDAQf,EAAKxY,SAAS,CACVs9C,YAAY,EACZf,SAAU5+B,EAAKjgB,GACf8a,WAXW,yCAhIA,wDA+InBs5B,WAAa,SAAAt5B,GAAW,IACZ+jC,EAAa,EAAKj9C,MAAlBi9C,SAER,EAAKkB,oBACAjlC,KAEa,IAAd+jC,EACA58C,IAAgBC,KAAK,CACjB,QAAS,iBACTkpC,eAAgByT,EAChB/jC,WAGJ7Y,IAAgBC,KAAK,CACjB,QAAS,mBACT4Y,aA9JO,EAmKnB+hC,qBAAuB,WACnB,IAAMC,EAAS,EAAKC,UAAUtkC,QACzBqkC,GACAA,EAAOE,UAEZF,EAAOl1C,QAxKQ,EA2KnBsP,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK9U,MAAxC+U,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIzT,IAAI,QACJ0T,aAAW,QACXC,MAAM,UACNjV,UAAU,4BACVoN,QAAS,kBAAMqH,EAAcC,KAC7B,kBAAC/G,EAAA,EAAD,WArLZ,EAAKwsC,UAAY75C,IAAM2Y,YAEvB,EAAKja,MAAQ,CACTg+C,YAAY,EACZf,UAAW,EACX/jC,OAAQ,KACR4hC,WAAY,KACZuD,mBAAoB,KACpBjqC,MAAO,KACPkqC,WAAY,IAAIzrC,KAZL,E,iFAiBflT,KAAK86C,oBACL96C,KAAKk+C,WAELnU,GAAY5+B,GAAG,oBAAqBnL,KAAK8pC,uB,6CAIzCC,GAAYz+B,IAAI,oBAAqBtL,KAAK8pC,uB,6KAUtBppC,IAAgBC,KAAK,CACrC,QAAS,WACTw+B,UAAW,CAAE,QAAS,gBACtBrrB,eAAgB,EAChBD,aAAc,sBACdE,MAAO,M,OAKX,IAVMU,E,OAQWmqC,EAAe7U,GAAxB/lB,QACFrQ,EAAW,GACRP,EAAI,EAAGwrC,GAAcxrC,EAAIwrC,EAAW9rC,OAAQM,IACjDO,EAASK,KAAKtT,IAAgBC,KAAK,CAC/B,QAAS,gBACTkpC,eAAgB+U,EAAWxrC,GAAG3U,KAC/B+V,MAAM,SAAAzF,GAAC,OAAI,Q,gBAEIuF,QAAQ7C,IAAIkC,G,OAGlC,IAHMqQ,E,OAEA26B,EAAa,IAAIzrC,IACdE,EAAI,EAAGwrC,GAAcxrC,EAAIwrC,EAAW9rC,OAAQM,IACjDurC,EAAWnmC,IAAIomC,EAAWxrC,GAAG3U,GAAIulB,EAAQ5Q,I,iBAGZ1S,IAAgBC,KAAK,CAClD,QAAS,8B,QADP+9C,E,OAIN1+C,KAAKe,SAAS,CACV0T,QACAkqC,aACAD,uB,oIA8HE,IAAD,SACkB1+C,KAAKc,MAApB0P,EADH,EACGA,EAAGsK,EADN,EACMA,QADN,EAEiF9a,KAAKK,MAAnFq+C,EAFH,EAEGA,mBAAoBL,EAFvB,EAEuBA,WAAY9kC,EAFnC,EAEmCA,OAAQ+jC,EAF3C,EAE2CA,SAAU72B,EAFrD,EAEqDA,KAAMhS,EAF3D,EAE2DA,MAAOkqC,EAFlE,EAEkEA,WAC/D36B,EAAY+lB,GAAZ/lB,QAEF66B,EAAa76B,GAAWA,EAAQlR,OAAS,EACzCgsC,EAAwBJ,GACvBA,EAAmBxb,aAAapwB,OAAS,KACvCkR,GAAWA,EAAQlR,OAASsrC,KAErC,OACI,oCACI,yBAAK/8C,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,2BAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,uCACX,yBAAKA,UAAU,4BACTolB,GACE,kBAAC,IAAMu2B,SAAP,CAAgBC,SAAU,MACtB,kBAAC,GAAD,CACIhiC,IAAKjb,KAAKw7C,UACVl9C,QAAS,CACL6Q,MAAO,GACP4I,OAAQ,GACRmlC,UAAU,EACVC,MAAM,EACNl2C,OAAQ,UACRm2C,WAAY32B,GAEhBhY,QAASzO,KAAKs7C,yBAM9B,yBAAKj6C,UAAU,uBAAuBmP,EAAE,wBACxC,kBAAC+K,EAAA,EAAD,CAAQla,UAAU,wBAAwBiV,MAAM,UAAUgK,QAAQ,YAAY29B,kBAAgB,EAACc,UAAW,kBAAC1B,GAAD,MAAY5uC,QAASzO,KAAKm+C,oBAC/H3tC,EAAE,qBAGTquC,GACE,oCACI,yBAAKx9C,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,aAChBwT,GAAW,IAAIzP,IAAI,SAAArV,GAAC,OAAK,kBAAC,GAAD,CAAQyD,IAAKzD,EAAET,GAAIigB,KAAMxf,EAAGqa,OAAQolC,EAAW10C,IAAI/K,EAAET,IAAKgW,MAAOA,EAAOmpC,OAAQ,kBAAM,EAAKa,iBAAiBv/C,UAIjJ4/C,GACE,oCACI,yBAAKz9C,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,sBACjBkuC,EAAmBxb,aAAa3uB,IAAI,SAAArV,GAAC,OAAK,kBAAC,GAAD,CAAmByD,IAAKzD,EAAEqa,OAAO8C,MAAO9C,OAAQra,SAK3G,kBAAC,GAAD,CAAawb,KAAM2jC,EAAYvjC,QAAS9a,KAAKw+C,mBACzC,kBAAC,GAAD,CAAcjlC,OAAQA,EAAQ9a,GAAI6+C,EAAUpC,OAAQl7C,KAAK6yC,mB,GAlQvDlxC,IAAMC,WAkRb6Z,GALCC,YACZ9K,cACA+K,IAGWF,CAAQ+tB,ICtSR3nC,gBACX,0BAAMC,EAAE,uhCACR,Y,kBCkFWk9C,G,2MA9EX3+C,MAAQ,CACJ4+C,QAAQ,G,EAWZC,oCAAsC,SAAA18C,GAAW,IACrC28C,EAAc,EAAKr+C,MAAnBq+C,UACR,GAAKA,EAAL,CAF4C,IAIpCl6C,EAAak6C,EAAbl6C,SACR,GAAKA,EAAL,CAL4C,IAOpC+S,EAAc/S,EAAd+S,UACR,GAAKA,EAAL,CAR4C,IAUpCjO,EAASiO,EAATjO,KACR,GAAKA,EAAL,CAX4C,IAapC9C,EAAWzE,EAAXyE,OAEJ8C,EAAKtL,KAAOwI,GAIhB,EAAKwR,mB,EAGT2mC,WAAa,WACT,EAAKr+C,SAAS,CAAEk+C,QAAQ,K,EAG5Bt7C,YAAc,WAAO,IAAD,EACe,EAAK7C,MAA5Bq+C,EADQ,EACRA,UAAW1wC,EADH,EACGA,QAEfA,GACAA,EAAQ0wC,I,mFArCZn1C,IAAUmB,GAAG,oCAAqCnL,KAAKk/C,uC,6CAIvDl1C,IAAUsB,IAAI,oCAAqCtL,KAAKk/C,uC,+BAqClD,IAAD,EAC6Bl/C,KAAKc,MAA/Bq+C,EADH,EACGA,UAAWxe,EADd,EACcA,WAGX17B,GAFYjF,KAAKK,MAAjB4+C,OAEaE,EAAbl6C,UACAshB,EAA6BthB,EAA7BshB,cAAevO,EAAc/S,EAAd+S,UAEjBwO,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EC,EAAWC,YAAO3O,EAAYA,EAAUjO,KAAO,MAE/C6c,EAAMF,GAAYF,EAExB,OACI,yBAAKnlB,UAAU,eAAeoN,QAASzO,KAAK2D,aACxC,yBAAKtC,UAAU,uBAAuBqE,MAAO,CAAEqhB,gBAAgB,OAAD,OAASL,GAAYF,EAArB,KAAiCQ,eAAgB,QAASq4B,mBAAoB,QACvIz4B,IAAQF,GACL,yBAAKrlB,UAAU,4BAA4BqE,MAAO,CAAEqhB,gBAAgB,OAAD,OAASH,EAAT,SAGzE+Z,GAAc,oCAAE,yBAAKt/B,UAAU,uBAAsB,yBAAKA,UAAU,8BACpE4D,GAAYA,EAASA,UAAY,kBAACq6C,GAAA,EAAD,CAAcv1C,KAAM9E,EAASA,SAAUs6C,cAAc,S,GAnEhF59C,IAAMC,WCKxB49C,I,kNACFn/C,MAAQ,CACJo/C,WAAYxjC,KAAUkjC,UAAYljC,KAAUkjC,UAAU1gD,IAAM,G,EAehEkF,YAAc,SAAAw7C,GACV,EAAKp+C,SAAS,CACV0+C,WAAYN,EAAU1gD,KAFH,IAKfwG,EAAak6C,EAAbl6C,SACR,GAAKA,EAAL,CAEsCA,EAA9B+S,UARe,IAQMjO,EAAS9E,EAAnBA,SACnB,GAAK8E,EAAL,CAGA,IADY4c,YAAO5c,GACT,CACN,IAAM8K,EAAQ7K,IAAU8K,WACxB4qC,YAAsB7qC,EAAOsqC,GAAW,GAG5Cz+C,IAAgBgG,aAAa,CACzB,QAAS,6BACTy4C,iB,mFA9BJn/C,KAAKyT,gB,oCAGM,IACHksC,EAAgB3/C,KAAKc,MAArB6+C,YACR,GAAKA,EAAL,CAEA,IAAM9qC,EAAQ7K,IAAU8K,WACxB8qC,YAAuB/qC,EAAO8qC,EAAYA,gB,+BA0BpC,IAAD,SAC+B3/C,KAAKc,MAAjC0P,EADH,EACGA,EAAGmvC,EADN,EACMA,YAAa7kC,EADnB,EACmBA,QAChB2kC,EAAez/C,KAAKK,MAApBo/C,WAEFI,EAAaF,EAAYA,YAAYpmC,OAAO,SAAAra,GAAC,MAAwB,4BAApBA,EAAEwd,KAAK,WAE9D,OACI,oCACI,yBAAKrb,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,qBAGnD,yBAAKnP,UAAU,6DACTw+C,EAAWtrC,IAAI,SAAArV,GAAC,OAAK,kBAAC,GAAD,CAAWyD,IAAKzD,EAAET,GAAI0gD,UAAWjgD,EAAGyhC,WAAYzhC,EAAET,KAAOghD,EAAYhxC,QAAS,EAAK9K,sB,GAzDjGhC,IAAMC,YAoEpBgP,iBAAkB4uC,I,2LCvD3BM,I,mBACF,WAAYh/C,GAAQ,IAAD,8BACf,4CAAMA,KASV4H,aAAe,SAAAjG,GACX,EAAK1B,SAAS,CAAE2b,KAAMja,EAAMuD,OAAO2C,QAEnC23B,KAAiB6C,KAAK,4BAA6B,CAC/CzmB,KAAMja,EAAMuD,OAAO2C,MACnByX,QAAS,EAAK2/B,SAAS,EAAK1/C,MAAMiW,UAfvB,EAmBnB0pC,mBAAqB,SAAAv9C,GACjB,EAAK1B,SAAS,CAAEuV,MAAO7T,EAAMuD,OAAO2C,QAEpC23B,KAAiB6C,KAAK,4BAA6B,CAC/CzmB,KAAM,EAAKrc,MAAMqc,KACjB0D,QAAS,EAAK2/B,SAASt9C,EAAMuD,OAAO2C,UAxBzB,EA4BnBs3C,eAAiB,SAAAt3C,GACb,OAAQA,GACJ,KAAKu3C,KAAI,KACL,MAAO,MACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAM,KACP,MAAO,QACX,IAAK,UACD,MAAO,OACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAW,KACZ,MAAO,aAGf,OAAO,MA9CQ,EAiDnBR,SAAW,SAAAp3C,GACP,OAAQA,GACJ,IAAK,MACD,OAAOu3C,KACX,IAAK,SACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,OACD,MAAO,CAAEzW,KAAM,WACnB,IAAK,SACD,OAAO0W,KACX,IAAK,aACD,OAAOC,KAGf,OAAO,MAnEQ,EAsEnBp9C,YAAc,WACV,EAAKpC,SAAS,CAAE2Z,MAAM,KAvEP,EA0EnBA,KAAO,WACH,EAAK3Z,SAAS,CAAE2Z,MAAM,KAxEtB,EAAKra,MAAQ,CACTqa,MAAM,EACNgC,KAAM,EAAK5b,MAAMywB,MAAMivB,QAAQ9jC,KAC/BpG,MAAO,EAAK2pC,eAAe,EAAKn/C,MAAMywB,MAAMivB,QAAQpgC,QAAQwpB,OANjD,E,sEA8ET,IACEp5B,EAAMxQ,KAAKc,MAAX0P,EADH,EAEyBxQ,KAAKK,MAA3Bqc,EAFH,EAEGA,KAAMpG,EAFT,EAESA,MAAOoE,EAFhB,EAEgBA,KAErB,OACI,kBAAC,IAAD,CACIC,QAASC,KACTC,mBAAoB,EACpBH,KAAMA,EACNI,QAAS9a,KAAKmD,YACd4X,kBAAgB,qBAChBC,mBAAiB,4BACjB,kBAAC,IAAD,CAAavc,GAAG,sBAAsB+R,EAAE,eACxC,kBAAC,KAAD,KACI,kBAACiwC,GAAA,EAAD,CAAaC,UAAU,WAAWr/C,UAAU,qBACxC,kBAACs/C,GAAA,EAAD,CAAWC,SAAO,EAACF,UAAU,UACxBlwC,EAAE,UAEP,kBAACqwC,GAAA,EAAD,CACIxqC,aAAW,QACX0/B,KAAK,SACL10C,UAAU,qBACVsH,MAAO+T,EACP9M,SAAU5P,KAAK0I,cACf,kBAACo4C,GAAA,EAAD,CAAkBn4C,MAAM,QAAQo4C,QAAS,kBAACtJ,GAAA,EAAD,CAAOnhC,MAAM,YAAcwgB,MAAM,UAC1E,kBAACgqB,GAAA,EAAD,CAAkBn4C,MAAM,OAAOo4C,QAAS,kBAACtJ,GAAA,EAAD,CAAOnhC,MAAM,YAAcwgB,MAAM,WAGjF,kBAAC2pB,GAAA,EAAD,CAAaC,UAAU,WAAWr/C,UAAU,qBACxC,kBAACs/C,GAAA,EAAD,CAAWC,SAAO,EAACF,UAAU,UACxBlwC,EAAE,WAEP,kBAACqwC,GAAA,EAAD,CACIxqC,aAAW,SACX0/B,KAAK,UACL10C,UAAU,qBACVsH,MAAO2N,EACP1G,SAAU5P,KAAKggD,oBACf,kBAACc,GAAA,EAAD,CACIn4C,MAAM,MACNo4C,QACI,kBAACtJ,GAAA,EAAD,CACInhC,MAAM,UACN/G,QAAS,CACL5F,KAAM,sBAIlBmtB,MAAM,QAEV,kBAACgqB,GAAA,EAAD,CACIn4C,MAAM,SACNo4C,QACI,kBAACtJ,GAAA,EAAD,CACInhC,MAAM,UACN/G,QAAS,CACL5F,KAAM,yBAIlBmtB,MAAM,WAEV,kBAACgqB,GAAA,EAAD,CACIn4C,MAAM,QACNo4C,QACI,kBAACtJ,GAAA,EAAD,CACInhC,MAAM,UACN/G,QAAS,CACL5F,KAAM,wBAIlBmtB,MAAM,UAEV,kBAACgqB,GAAA,EAAD,CACIn4C,MAAM,QACNo4C,QACI,kBAACtJ,GAAA,EAAD,CACInhC,MAAM,UACN/G,QAAS,CACL5F,KAAM,wBAIlBmtB,MAAM,UAEV,kBAACgqB,GAAA,EAAD,CACIn4C,MAAM,OACNo4C,QACI,kBAACtJ,GAAA,EAAD,CACInhC,MAAM,UACN/G,QAAS,CACL5F,KAAM,uBAIlBmtB,MAAM,SAEV,kBAACgqB,GAAA,EAAD,CACIn4C,MAAM,SACNo4C,QACI,kBAACtJ,GAAA,EAAD,CACInhC,MAAM,UACN/G,QAAS,CACL5F,KAAM,yBAIlBmtB,MAAM,WAEV,kBAACgqB,GAAA,EAAD,CACIn4C,MAAM,aACNo4C,QACI,kBAACtJ,GAAA,EAAD,CACInhC,MAAM,UACN/G,QAAS,CACL5F,KAAM,8BAIlBmtB,MAAM,wB,GAvMZn1B,IAAMC,YA0NjB6Z,GAPCC,YACZuX,cACA+tB,KACApwC,cACAsiB,cAGWzX,CAAQqkC,IClOjBmB,I,mBACF,WAAYngD,GAAQ,IAAD,8BACf,4CAAMA,KAUVogD,iBAAmB,WACf,EAAKC,eAAejqC,QAAQwD,QAZb,EAmBnBjH,YAAc,WACV/S,IAAgBC,KAAK,CACjB,QAAS,iBACTygD,gBAAgB,IACjBxgD,KAAK,SAAA++C,GAAW,OAAI,EAAK5+C,SAAS,CAAE4+C,mBAvBxB,EA0BnB0B,mBAAqB,WACZ,EAAKhhD,MAAMs/C,aAEhB,EAAK5+C,SAAS,CACVsgD,oBAAoB,KA9BT,EAkCnBC,oBAAsB,WAClB,EAAKvgD,SAAS,CACVsgD,oBAAoB,KAjCxB,EAAKhhD,MAAQ,CACTs/C,YAAa,KACb0B,oBAAoB,GAGxB,EAAKF,eAAiBx/C,IAAM2Y,YARb,E,iFAgBfta,KAAKyT,gB,+BAwBC,IAAD,EACkBzT,KAAKc,MAApB0P,EADH,EACGA,EAAGsK,EADN,EACMA,QADN,EAEuC9a,KAAKK,MAAzCs/C,EAFH,EAEGA,YAAa0B,EAFhB,EAEgBA,mBAErB,OACI,oCACI,yBAAKhgD,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,sBAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,wBAOX,kBAACse,GAAA,EAAD,CAAUnE,WAAW,EAAOna,UAAU,qBAAqBue,QAAM,EAACnR,QAASzO,KAAKkhD,kBAC5E,kBAACphC,GAAA,EAAD,KACI,kBAACyhC,GAAD,OAEJ,kBAACphC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,mBAIrC,kBAAC,GAAD,CAAakK,KAAM2mC,EAAoBvmC,QAAS9a,KAAKshD,qBACjD,kBAAC,GAAD,CAAgB3B,YAAaA,KAEjC,kBAAC,GAAD,CAAa1kC,IAAKjb,KAAKmhD,sB,GA1EjBx/C,IAAMC,YA0Fb6Z,GANCC,YACZuX,cACAriB,cACAsiB,cAGWzX,CAAQwlC,IC/FjBO,I,mBACF,WAAY1gD,GAAQ,IAAD,uBACf,4CAAMA,KAUV4H,aAAe,SAAAkf,GACX,EAAK7mB,SAAS,CAAE6mB,aAEhBlnB,IAAgBgG,aAAa,CAAE,QAAS,6BAA8BkhB,cAdvD,IAGPL,EAASzmB,EAATymB,KACFK,EAAWL,EAAOA,EAAKK,SAAW,KAJzB,OAMf,EAAKvnB,MAAQ,CACTunB,SAAUA,GAAY,MAPX,E,sEAiBT,IAAD,SACkB5nB,KAAKc,MAApB0P,EADH,EACGA,EAAGsK,EADN,EACMA,QACH8M,EAAa5nB,KAAKK,MAAlBunB,SAGF65B,GAFOrX,KAAkB1rB,MAAQ,CAAEgjC,eAAgB,KAElCA,eAAentC,IAAI,SAAArV,GAAC,OACvC,yBAAKyD,IAAKzD,EAAET,GAAI4C,UAAU,gBAAgBoN,QAAS,kBAAM,EAAK/F,aAAaxJ,EAAET,MACzE,kBAACg5C,GAAA,EAAD,CACInhC,MAAM,UACNjV,UAAU,wBACV4e,QAAS2H,IAAa1oB,EAAET,GACxBoQ,UAAW,EACX8yC,WAAY,CAAE,kBAAmB,aAErC,kBAACxhC,GAAA,EAAD,CAAc1hB,GAAG,UAAU2hB,QAASlhB,EAAE62C,KAAMv1B,UAAWthB,EAAE0iD,iBAIjE,OACI,oCACI,yBAAKvgD,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,eAGnD,yBAAKnP,UAAU,wBAAwBogD,Q,GA9ChC9/C,IAAMC,YA8Dd6Z,GANCC,YACZuX,cACAriB,cACAsiB,cAGWzX,CAAQ+lC,I,mkBC5DjB3iC,G,YACF,WAAY/d,GAAQ,IAAD,uBACf,4CAAMA,KAsDV+gD,cAAgB,SAAAC,GACZ,IAAMC,EAAW,EAAK1hD,MAAMyhD,GAC5B,GAAKC,EAAL,CAFwB,IAKlBC,EAAW,MAAQD,EAAR,CAAkBE,SAAuB,IADrCF,EAAbE,SACsD,QAAqB,IAEnF,EAAKlhD,SAAL,gBAAiB+gD,EAAWE,MA9Db,EAiEnBE,kBAAoB,SAAAJ,GAChB,IAAMC,EAAW,EAAK1hD,MAAMyhD,GAC5B,GAAKC,EAAL,CAF4B,IAKtBC,EAAW,MAAQD,EAAR,CAAkBI,cADVJ,EAAjBI,eAGR,EAAKphD,SAAL,gBAAiB+gD,EAAWE,MAxEb,EA2EnBI,oBAAsB,WAClB,EAAKrhD,SAAS,CAAEshD,eAAgB,EAAKhiD,MAAMgiD,iBAzE3C,IAAMC,EAAsBtvC,IAAY/I,IAAI,4CAH7B,OAKf,EAAK5J,MAAQ,CACTkiD,qBAAsB9iC,KAAkBsiC,SAAS93C,IAAI,yCACrDu4C,mBAAoB/iC,KAAkBsiC,SAAS93C,IAAI,uCACnDw4C,qBAAsBhjC,KAAkBsiC,SAAS93C,IAAI,yCACrDo4C,eAAgBC,IAAwBA,EAAoB35C,OATjD,E,oFAaK,IAAD,EACuE3I,KAAKK,MAAvFkiD,EADW,EACXA,qBAAsBC,EADX,EACWA,mBAAoBC,EAD/B,EAC+BA,qBAAsBJ,EADrD,EACqDA,cACxEriD,KAAK0iD,6BAA6B,wCAAyCH,GAC3EviD,KAAK0iD,6BAA6B,sCAAuCF,GACzExiD,KAAK0iD,6BAA6B,wCAAyCD,GAC3EziD,KAAK2iD,uBAAuBN,K,+CAGN,IACdA,EAAkBriD,KAAKK,MAAvBgiD,cAEFC,EAAsBtvC,IAAY/I,IAAI,8CAClBq4C,IAAwBA,EAAoB35C,SAC7C05C,GAEzB3hD,IAAgBC,KAAK,CACjB,QAAS,YACTo1C,KAAM,2CACNptC,MAAO,CACH,QAAS,qBACTA,OAAQ05C,O,mDAKSnjC,EAAO6iC,GAChC,GAAK7iC,GACA6iC,EAAL,CACA,IAAMa,EAAcnjC,KAAkBsiC,SAAS93C,IAAIiV,GACnD,GAAK0jC,EAAL,CAJ0C,IAMlCX,EAA2BF,EAA3BE,SAAUE,EAAiBJ,EAAjBI,aACAU,EAA6CD,EAAvDX,SAAoCa,EAAmBF,EAAjCT,aAC1BF,IAAaY,GAAcV,IAAiBW,GAEhDpiD,IAAgBC,KAAK,CACjB,QAAS,+BACTue,MAAO,CAAE,QAASA,GAClB6jC,sBAAuBhB,Q,gCA4BrBA,GACN,QAAKA,GAIe,IAFCA,EAAbE,W,kCAKAF,GACR,QAAKA,GAEoBA,EAAjBI,e,+BAKF,IAAD,SACkBniD,KAAKc,MAApB0P,EADH,EACGA,EAAGsK,EADN,EACMA,QADN,EAEqF9a,KAAKK,MAAvFkiD,EAFH,EAEGA,qBAAsBC,EAFzB,EAEyBA,mBAAoBC,EAF7C,EAE6CA,qBAAsBJ,EAFnE,EAEmEA,cAExE,OACI,oCACI,yBAAKhhD,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,oBAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,8BAClB,yBAAKnP,UAAU,gBAAgBoN,QAAS,kBAAM,EAAKozC,cAAc,0BAC7D,kBAAC9hC,GAAA,EAAD,CACIzJ,MAAM,UACNjV,UAAU,wBACV4e,QAASjgB,KAAKgjD,UAAUT,GACxB1zC,UAAW,EACX8yC,WAAY,CAAE,kBAAmB,aAErC,kBAACxhC,GAAA,EAAD,CACI1hB,GAAG,UACH2hB,QAAS5P,EAAE,gCACXgQ,UACIxgB,KAAKgjD,UAAUT,GACT/xC,EAAE,wBACFA,EAAE,4BAIpB,yBAAKnP,UAAU,gBAAgBoN,QAAS,kBAAM,EAAKyzC,kBAAkB,0BACjE,kBAACniC,GAAA,EAAD,CACIzJ,MAAM,UACNjV,UAAU,wBACV4e,QAASjgB,KAAKijD,YAAYV,GAC1B1zC,UAAW,EACX8yC,WAAY,CAAE,kBAAmB,aAErC,kBAACxhC,GAAA,EAAD,CACI1hB,GAAG,UACH2hB,QAAS5P,EAAE,kBACXgQ,UACIxgB,KAAKijD,YAAYV,GAAwB/xC,EAAE,kBAAoBA,EAAE,uBAKjF,yBAAKnP,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,wBAClB,yBAAKnP,UAAU,gBAAgBoN,QAAS,kBAAM,EAAKozC,cAAc,wBAC7D,kBAAC9hC,GAAA,EAAD,CACIzJ,MAAM,UACNjV,UAAU,wBACV4e,QAASjgB,KAAKgjD,UAAUR,GACxB3zC,UAAW,EACX8yC,WAAY,CAAE,kBAAmB,aAErC,kBAACxhC,GAAA,EAAD,CACI1hB,GAAG,UACH2hB,QAAS5P,EAAE,0BACXgQ,UACIxgB,KAAKgjD,UAAUR,GACThyC,EAAE,wBACFA,EAAE,4BAIpB,yBAAKnP,UAAU,gBAAgBoN,QAAS,kBAAM,EAAKyzC,kBAAkB,wBACjE,kBAACniC,GAAA,EAAD,CACIzJ,MAAM,UACNjV,UAAU,wBACV4e,QAASjgB,KAAKijD,YAAYT,GAC1B3zC,UAAW,EACX8yC,WAAY,CAAE,kBAAmB,aAErC,kBAACxhC,GAAA,EAAD,CACI1hB,GAAG,UACH2hB,QAAS5P,EAAE,kBACXgQ,UACIxgB,KAAKijD,YAAYT,GAAsBhyC,EAAE,kBAAoBA,EAAE,uBAK/E,yBAAKnP,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,0BAClB,yBAAKnP,UAAU,gBAAgBoN,QAAS,kBAAM,EAAKozC,cAAc,0BAC7D,kBAAC9hC,GAAA,EAAD,CACIzJ,MAAM,UACNjV,UAAU,wBACV4e,QAASjgB,KAAKgjD,UAAUP,GACxB5zC,UAAW,EACX8yC,WAAY,CAAE,kBAAmB,aAErC,kBAACxhC,GAAA,EAAD,CACI1hB,GAAG,UACH2hB,QAAS5P,EAAE,4BACXgQ,UACIxgB,KAAKgjD,UAAUP,GACTjyC,EAAE,wBACFA,EAAE,4BAIpB,yBAAKnP,UAAU,gBAAgBoN,QAAS,kBAAM,EAAKyzC,kBAAkB,0BACjE,kBAACniC,GAAA,EAAD,CACIzJ,MAAM,UACNjV,UAAU,wBACV4e,QAASjgB,KAAKijD,YAAYR,GAC1B5zC,UAAW,EACX8yC,WAAY,CAAE,kBAAmB,aAErC,kBAACxhC,GAAA,EAAD,CACI1hB,GAAG,UACH2hB,QAAS5P,EAAE,kBACXgQ,UACIxgB,KAAKijD,YAAYR,GAAwBjyC,EAAE,kBAAoBA,EAAE,uBAKjF,yBAAKnP,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,uBAClB,yBAAKnP,UAAU,gBAAgBoN,QAASzO,KAAKoiD,qBACzC,kBAACriC,GAAA,EAAD,CACIzJ,MAAM,UACNjV,UAAU,wBACV4e,QAASoiC,EACTxzC,UAAW,EACX8yC,WAAY,CAAE,kBAAmB,aAErC,kBAACxhC,GAAA,EAAD,CACI1hB,GAAG,UACH2hB,QAAS5P,EAAE,iBACXgQ,UAA2BhQ,EAAhB6xC,EAAkB,uBAA4B,mC,GA9O7D1gD,IAAMC,WAkQnB6Z,GANCC,YACZuX,cACAriB,cACAsiB,cAGWzX,CAAQoD,IC9QRhd,gBACX,uBAAGm7B,UAAU,kCAAkClB,SAAS,WACpD,0BAAMh6B,EAAE,ygBAEZ,QCOEohD,I,kNACF7iD,MAAQ,CACJ8lB,aAAa,EACbxgB,KAAM,EACNE,IAAK,G,EAGT24B,kBAAoB,SAAA/7B,GACZA,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAHe,IAMjB8+C,EAAY,EAAKriD,MAAjBqiD,QACR,GAAKA,IACDA,EAAQC,WAIZ,GAFwB,EAAK/iD,MAArB8lB,YAGJ,EAAKplB,SAAS,CAAEolB,aAAa,QAC1B,CACH,IAAMxgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKvH,SAAS,CACVolB,aAAa,EACbxgB,OACAE,U,EAKZugB,uBAAyB,SAAA3jB,GACrB,EAAK1B,SAAS,CACVolB,aAAa,EACbxgB,KAAM,EACNE,IAAK,K,EAIbw9C,gBAAkB,SAAA5gD,GACd,EAAK2jB,uBAAuB3jB,GADL,MAGU,EAAK3B,OAEtCwiD,EALuB,EAGfA,aAHe,EAGFH,U,wEAKf,IAAD,EACkBnjD,KAAKc,MAApBqiD,EADH,EACGA,QAAS3yC,EADZ,EACYA,EACjB,IAAK2yC,EAAS,OAAO,KAFhB,MAI8BnjD,KAAKK,MAAhCsF,EAJH,EAIGA,KAAME,EAJT,EAISA,IAAKsgB,EAJd,EAIcA,YAEfi9B,EAUAD,EAVAC,WACAG,EASAJ,EATAI,iBACAC,EAQAL,EARAK,oBACAC,EAOAN,EAPAM,aACAC,EAMAP,EANAO,SACAC,EAKAR,EALAQ,eACAC,EAIAT,EAJAS,GACAC,EAGAV,EAHAU,OACAC,EAEAX,EAFAW,QACAC,EACAZ,EADAY,iBAEEC,GAAYZ,EAElB,OACI,oCACI,kBAACzjC,GAAA,EAAD,CAAUte,UAAU,qBAAqBue,QAAM,EAACkH,cAAe9mB,KAAKw+B,mBAChE,yBAAKn9B,UAAU,WACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,eAAf,UAAiCkiD,EAAjC,YAAqDC,IACpDQ,GACG,yBAAK3iD,UAAU,gBAAgB4sC,YAAe,CAAEzmB,KAAMu8B,MAG9D,yBAAK1iD,UAAU,qBAAf,UAAuCoiD,EAAvC,aAAwDC,EAAxD,YAAoEC,IACpE,yBAAKtiD,UAAU,qBAAf,UACQuiD,EADR,OAEKC,GAAM,UAAOA,EAAP,MACNC,GAAO,UAAOA,MAI3B,kBAAC1+B,GAAA,EAAD,CACI1K,KAAMyL,EACNrL,QAAS9a,KAAKomB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEnf,MAAKF,QACvB2f,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBjX,YAAa,SAAAQ,GAAC,OAAIA,EAAE1K,oBACpB,kBAACqhB,GAAA,EAAD,CAAUjX,QAAS,SAAAM,GAAC,OAAIA,EAAE1K,oBACtB,kBAACshB,GAAA,EAAD,CAAUlX,QAASzO,KAAKqjD,iBACpB,kBAACvjC,GAAA,EAAD,KACI,kBAACmkC,GAAD,OAEJ,kBAAC9jC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,uB,GAzG/B7O,IAAMC,YAuHbgP,iBAAkBsyC,IClH3BgB,I,kNACF7jD,MAAQ,CACJqa,MAAM,EACNypC,SAAS,EACThB,QAAS,M,EAGbE,gBAAkB,SAAAF,GACd,EAAKpiD,SAAS,CACV2Z,MAAM,EACNyoC,a,EAIRiB,wBAA0B,WACtB,EAAKrjD,SAAS,CACVojD,SAAS,K,EAIjBE,wBAA0B,WACtB,EAAKtjD,SAAS,CACV2Z,MAAM,EACNyoC,QAAS,Q,EAIjBmB,uB,qBAAyB,8BAAAxzC,EAAA,wDACbyzC,EAAa,EAAKzjD,MAAlByjD,SACApB,EAAY,EAAK9iD,MAAjB8iD,QAFa,wDAKrB,EAAKpiD,SAAS,CACV2Z,MAAM,EACNyoC,QAAS,OAPQ,SAUfziD,IAAgBC,KAAK,CACvB,QAAS,mBACT6jD,WAAYrB,EAAQ1kD,KAZH,OAerB8lD,EAASA,SAAWA,EAASA,SAAShrC,OAAO,SAAAra,GAAC,OAAIA,EAAET,KAAO0kD,EAAQ1kD,KACnE,EAAKga,cAhBgB,yC,EAmBzBgsC,2BAA6B,WACzB,EAAK1jD,SAAS,CACVojD,SAAS,K,EAIjBO,0B,qBAA4B,4BAAA5zC,EAAA,4DAChByzC,EAAa,EAAKzjD,MAAlByjD,SAER,EAAKxjD,SAAS,CACVojD,SAAS,IAJW,SAOlBzjD,IAAgBC,KAAK,CACvB,QAAS,8BARW,OAWxB4jD,EAASA,SAAWA,EAASA,SAAShrC,OAAO,SAAAra,GAAC,OAAKA,EAAEkkD,aACrD,EAAK3qC,cAZmB,yC,wEAelB,IAAD,SAC4BzY,KAAKc,MAA9B0P,EADH,EACGA,EAAG+zC,EADN,EACMA,SAAUzpC,EADhB,EACgBA,QADhB,EAEqB9a,KAAKK,MAAvBqa,EAFH,EAEGA,KAAMypC,EAFT,EAESA,QAERjtC,EAAUqtC,EAASA,SAAStnC,KAAK,SAAA/d,GAAC,OAAIA,EAAEkkD,aACxCuB,EAAQJ,EAASA,SAAShrC,OAAO,SAAAra,GAAC,OAAKA,EAAEkkD,aAE/C,OACI,oCACI,yBAAK/hD,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,oBAGnD,yBAAKnP,UAAU,wBACVonB,QAAQvR,IACL,yBAAK7V,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,mBAClB,kBAAC,GAAD,CAAS2yC,QAASjsC,EAASosC,YAAatjD,KAAKqjD,kBAC5CsB,EAAM7xC,OAAS,GACZ,kBAAC6M,GAAA,EAAD,CACIte,UAAU,qBACVue,QAAM,EACNM,eAAa,EACbzR,QAASzO,KAAKokD,yBACd,kBAACtkC,GAAA,EAAD,KACI,kBAACmkC,GAAD,CAAU3tC,MAAM,eAEpB,kBAAC6J,GAAA,EAAD,CACIykC,uBAAwB,CAAEtuC,MAAO,aACjC8J,QAAS5P,EAAE,4BAM9Bm0C,EAAM7xC,OAAS,GACZ,oCACI,yBAAKzR,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,kBACjBm0C,EAAMpwC,IAAI,SAAArV,GAAC,OACR,kBAAC,GAAD,CAASyD,IAAKzD,EAAET,GAAI0kD,QAASjkD,EAAGokD,YAAa,EAAKD,uBAMtE,kBAAC,IAAD,CACI1oC,QAASC,KACTC,mBAAoB,EACpBH,KAAMA,EACNI,QAAS9a,KAAKqkD,wBACdtpC,kBAAgB,qBAChB,kBAAC,IAAD,CAAatc,GAAG,qBAAqB+R,EAAE,YACvC,kBAAC,KAAD,KACI,kBAACyiC,GAAA,EAAD,CAAmBvtC,MAAO,CAAEkM,WAAY,aACnCpB,EAAE,0BAGX,kBAAC8K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAASzO,KAAKqkD,wBAAyB/tC,MAAM,WAChD9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAASzO,KAAKskD,uBAAwBhuC,MAAM,WAC/C9F,EAAE,SAIf,kBAAC,IAAD,CACImK,QAASC,KACTC,mBAAoB,EACpBH,KAAMypC,EACNrpC,QAAS9a,KAAKykD,2BACd1pC,kBAAgB,qBAChB,kBAAC,IAAD,CAAatc,GAAG,qBAAqB+R,EAAE,YACvC,kBAAC,KAAD,KACI,kBAACyiC,GAAA,EAAD,CAAmBvtC,MAAO,CAAEkM,WAAY,aACnCpB,EAAE,wBAGX,kBAAC8K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAASzO,KAAKykD,2BAA4BnuC,MAAM,WACnD9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAASzO,KAAK0kD,0BAA2BpuC,MAAM,WAClD9F,EAAE,c,GA5JF7O,IAAMC,YAgLpB6Z,GANCC,YACZuX,cACAriB,cACAsiB,cAGWzX,CAAQyoC,IChMRriD,gBACX,0BAAMC,EAAE,81BACR,WCgBE+iD,I,OAAcljD,IAAMmjD,KAAK,YAAqC,IAAlCl1B,EAAiC,EAAjCA,OAAQnhB,EAAyB,EAAzBA,QAASs2C,EAAgB,EAAhBA,UAAgB,EACzBpjD,IAAMqjD,UAAS,GADU,mBACxD7+B,EADwD,KAC3C8+B,EAD2C,OAEzCtjD,IAAMqjD,SAAS,GAF0B,mBAExDn/C,EAFwD,KAEnDq/C,EAFmD,OAGvCvjD,IAAMqjD,SAAS,GAHwB,mBAGxDr/C,EAHwD,KAGlDw/C,EAHkD,KAIvD30C,EAAM40C,cAAN50C,EAmBF4V,EAAyB,WAC3B6+B,GAAe,GACfE,EAAQ,GACRD,EAAO,IAYX,OACI,oCACI,kBAACvlC,GAAA,EAAD,CAAUte,UAAU,qBAAqBue,QAAM,EAACnR,QAXpC,WAChBA,EAAQmhB,IAUkE9I,cAlCpD,SAAArkB,GAMtB,GALIA,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAGN8hB,EACA8+B,GAAe,OACZ,CAAC,IACI58C,EAAqB5F,EAArB4F,QAASC,EAAY7F,EAAZ6F,QAEjB28C,GAAe,GACfE,EAAQ98C,GACR68C,EAAO58C,MAsBH,kBAACqnB,GAAA,EAAD,CAAMC,OAAQA,KAElB,kBAACxK,GAAA,EAAD,CACI1K,KAAMyL,EACNrL,QAASsL,EACTf,gBAAgB,iBAChBL,eAAgB,CAAEnf,MAAKF,QACvB2f,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBjX,YAAa,SAAAQ,GAAC,OAAIA,EAAE1K,oBACpB,kBAACqhB,GAAA,EAAD,CAAUjX,QAAS,SAAAM,GAAC,OAAIA,EAAE1K,oBACtB,kBAACshB,GAAA,EAAD,CAAUlX,QAzBJ,WAClB2X,IACA2+B,EAAUn1B,KAwBM,kBAAC9P,GAAA,EAAD,KACI,kBAACulC,GAAD,OAEJ,kBAACllC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,oBAc3C80C,G,2MAeFC,kB,sCAAoB,WAAM31B,GAAN,SAAA9e,EAAA,qEACVpQ,IAAgBC,KAAK,CACxB,QAAS,+BACRwqB,OAAQ,CAAE,QAAS,oBAAqBjX,QAAS0b,GACjD41B,YAAY,IAJA,yC,yIAZhBxlD,KAAKyT,gB,oCAGM,IACHwe,EAAUjyB,KAAKc,MAAfmxB,MAEFpd,EAAQ7K,IAAU8K,WAExB+Z,YAAiBha,EAAOod,EAAMwzB,QAAQlsC,OAAO,SAAAra,GAAC,MAAmB,sBAAfA,EAAE,WAAkCqV,IAAI,SAAArV,GAAC,OAAIA,EAAEgV,WACjGa,YAAiBF,EAAOod,EAAMwzB,QAAQlsC,OAAO,SAAAra,GAAC,MAAmB,sBAAfA,EAAE,WAAkCqV,IAAI,SAAArV,GAAC,OAAIA,EAAEiW,a,+BAW3F,IAAD,SACyBnV,KAAKc,MAA3Bga,EADH,EACGA,QAASmX,EADZ,EACYA,MAAOzhB,EADnB,EACmBA,EAExB,OACI,oCACI,yBAAKnP,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,mBAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,wBACT4wB,EAAMwzB,QAAQ3yC,OAAS,EACrB,oCACI,kBAAC,GAAD,CAAe47B,WAAS,GAAEl+B,EAAE,qBAExByhB,EAAMwzB,QAAQlsC,OAAO,SAAAra,GAAC,MAAmB,sBAAfA,EAAE,WAAkCqV,IAAI,SAAArV,GAAC,OAAI,kBAAC2lD,GAAD,CAAaliD,IAAKzD,EAAEgV,QAAS0b,OAAQ1wB,EAAEgV,QAASzF,QAASmgB,KAAUm2B,UAAW,EAAKQ,uBAIlK,kBAAC,GAAD,KAAgB/0C,EAAE,qB,GA9CnB7O,IAAMC,WA2DlBgP,iBAAkB00C,ICzJlBzjD,gBACX,uBAAGm7B,UAAU,iCAAiClB,SAAS,WACnD,0BAAMh6B,EAAE,q3BAEZ,UCJWD,gBACX,uBAAGm7B,UAAU,kCAAkClB,SAAS,WACpD,0BAAMh6B,EAAE,2mCAEZ,gB,mkBCaE4jD,G,2MACFrlD,MAAQ,CACJkkD,SAAU,KACVtyB,MAAO,KACP0zB,kBAAkB,EAClBC,oBAAoB,G,EAaxBtoC,qBAAuB,SAAA9a,GAAW,IACtB0R,EAA4B1R,EAA5B0R,QAAS2xC,EAAmBrjD,EAAnBqjD,eACT5zB,EAAU,EAAK5xB,MAAf4xB,MACR,GAAKA,EAAL,CAH6B,IAKrB7D,EAAyB6D,EAAzB7D,YAAaq3B,EAAYxzB,EAAZwzB,QACbD,EAAeK,EAAfL,WAEJA,MADqE,IAAnDC,EAAQ9wB,UAAU,SAAAz1B,GAAC,OAAIA,EAAEgV,UAAYA,OAGvDsxC,EACA,EAAKzkD,SAAS,CACVkxB,MAAM,MACCA,EADF,CAED7D,YAAaA,EAAc,EAC3Bq3B,QAAQ,CAAE,CAAE,QAAS,oBAAqBvxC,YAAnC,oBAAiDuxC,QAIhE,EAAK1kD,SAAS,CACVkxB,MAAM,MACCA,EADF,CAED7D,YAAaA,EAAc,EAC3Bq3B,QAASA,EAAQlsC,OAAO,SAAAra,GAAC,OAAIA,EAAEgV,UAAYA,W,EAkB3D0xC,mBAAqB,WACZ,EAAKvlD,MAAMkkD,UAEhB,EAAKxjD,SAAS,CACV6kD,oBAAoB,K,EAI5BE,oBAAsB,WAClB,EAAK/kD,SAAS,CACV6kD,oBAAoB,K,EAI5BD,iBAAmB,WACV,EAAKtlD,MAAM4xB,OAEhB,EAAKlxB,SAAS,CACV4kD,kBAAkB,K,EAI1BI,kBAAoB,WAChB,EAAKhlD,SAAS,CACV4kD,kBAAkB,K,mFA1EtB3lD,KAAKyT,cAELU,KAAUhJ,GAAG,qBAAsBnL,KAAKsd,wB,6CAIxCnJ,KAAU7I,IAAI,qBAAsBtL,KAAKsd,wB,uJAiCzC5c,IAAgBC,KAAK,CACjB,QAAS,sBACVC,KAAK,SAAA2jD,GAAQ,OAAI,EAAKxjD,SAAS,CAAEwjD,eAEpC7jD,IAAgBC,KAAK,CACjB,QAAS,2BACT2pB,OAAQ,EACRvW,MAAO,MACRnT,KAAK,SAAAqxB,GAAK,OAAI,EAAKlxB,SAAS,CAAEkxB,Y,8HA+B3B,IAAD,EACkBjyB,KAAKc,MAApB0P,EADH,EACGA,EAAGsK,EADN,EACMA,QADN,EAE6D9a,KAAKK,MAA/DslD,EAFH,EAEGA,iBAAkB1zB,EAFrB,EAEqBA,MAAO2zB,EAF5B,EAE4BA,mBAAoBrB,EAFhD,EAEgDA,SAE/CyB,EACFzB,GAAYA,EAASA,SAASzxC,OAAS,EACJ,IAA7ByxC,EAASA,SAASzxC,OACd,YADJ,UAEOyxC,EAASA,SAASzxC,OAFzB,aAGA,YAEJmzC,EACFh0B,GAASA,EAAM7D,YAAc,EACD,IAAtB6D,EAAM7D,YACF,SADJ,UAEO6D,EAAM7D,YAFb,UAGA,WAEV,OACI,oCACI,yBAAK/sB,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASqM,GAChD,kBAAC,GAAD,OAEJ,yBAAKzZ,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,sBAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAACse,GAAA,EAAD,CACIte,UAAU,sBACVi2C,UAAMC,EACN33B,QAAM,EACNnR,QAASzO,KAAK2lD,kBACd,kBAAC7lC,GAAA,EAAD,CAAcze,UAAU,2BACpB,kBAAC6kD,GAAD,OAEJ,kBAAC/lC,GAAA,EAAD,CACI1hB,GAAG,UACH4C,UAAU,0BACV+e,QAAS5P,EAAE,gBACXgQ,UAAWylC,KAGnB,kBAACtmC,GAAA,EAAD,CACIte,UAAU,sBACVi2C,UAAMC,EACN33B,QAAM,EACNnR,QAASzO,KAAK4lD,oBACd,kBAAC9lC,GAAA,EAAD,CAAcze,UAAU,2BACpB,kBAAC8kD,GAAD,OAEJ,kBAAChmC,GAAA,EAAD,CACI1hB,GAAG,UACH4C,UAAU,0BACV+e,QAAS5P,EAAE,iBACXgQ,UAAWwlC,OA4C3B,kBAAC,GAAD,CAAatrC,KAAMirC,EAAkB7qC,QAAS9a,KAAK+lD,mBAC/C,kBAAC,GAAD,CAAc9zB,MAAOA,KAEzB,kBAAC,GAAD,CAAavX,KAAMkrC,EAAoB9qC,QAAS9a,KAAK8lD,qBACjD,kBAAC,GAAD,CAAgBvB,SAAUA,U,GAhMhB5iD,IAAMC,WAiNrB6Z,GANCC,YACZuX,cACAriB,cACAsiB,cAGWzX,CAAQiqC,ICjNjBU,I,mBACF,WAAYtlD,GAAQ,IAAD,8BACf,4CAAMA,KAsBVulD,kBAAoB,SAAA7jD,GAAW,IACnB6N,EAAW,EAAKvP,MAAhBuP,OACA8E,EAAmB3S,EAAnB2S,QAASwB,EAAUnU,EAAVmU,MAEjB,GAAIxB,IAAY9E,GACXsG,EAAL,CAEA,IAAM9B,EAAQ7K,IAAUC,MACxB+rC,YAAgBnhC,EAAOxE,GAAQ,KA/BhB,EAiDnBi2C,gBAAkB,WACd,EAAKvlD,SAAS,CACVulD,iBAAiB,KAnDN,EAuDnBC,iBAAmB,WACf,EAAKxlD,SAAS,CACVulD,iBAAiB,KAzDN,EA6DnBE,YAAc,WACV,EAAKzlD,SAAS,CACVylD,aAAa,KA/DF,EAmEnBC,aAAe,WACX,EAAK1lD,SAAS,CACVylD,aAAa,KArEF,EAyEnBE,kBAAoB,WAChB,EAAK3lD,SAAS,CACV2lD,mBAAmB,KA3ER,EA+EnBC,mBAAqB,WACjB,EAAK5lD,SAAS,CACV2lD,mBAAmB,KAjFR,EAqFnBE,oBAAsB,WAClB,EAAK7lD,SAAS,CACV6lD,qBAAqB,KAvFV,EA2FnBC,qBAAuB,WACnB,EAAK9lD,SAAS,CACV6lD,qBAAqB,KA7FV,EAiGnBE,aAAe,WACX,EAAK/lD,SAAS,CACV+lD,cAAc,KAnGH,EAuGnBC,cAAgB,WACZ,EAAKhmD,SAAS,CACV+lD,cAAc,KAzGH,EA6GnBE,YAAc,WACV,EAAKjmD,SAAS,CACVimD,aAAa,KA/GF,EAmHnBC,aAAe,WACX,EAAKlmD,SAAS,CACVimD,aAAa,KArHF,EAyHnBE,oBAAsB,WAClBxmD,IAAgBgG,aAAa,CACzB,QAAS,uBACTgU,MAAM,KAzHV,EAAKra,MAAQ,CACTimD,iBAAiB,EACjBE,aAAa,EACbE,mBAAmB,EACnBE,qBAAqB,EACrBE,cAAc,EACdE,aAAa,GATF,E,iFAcfhnD,KAAKyT,cAELwI,KAAU9Q,GAAG,kBAAmBnL,KAAKqmD,qB,6CAIrCpqC,KAAU3Q,IAAI,kBAAmBtL,KAAKqmD,qB,6JAe9Bh2C,EAAWrQ,KAAKc,MAAhBuP,OAEFwE,EAAQ7K,IAAU8K,WAExBkhC,YAAgBnhC,EAAOxE,GAAQ,G,SAEV3P,IAAgBC,KAAK,CACtC,QAAS,kBACTuT,QAASC,KAAUC,Y,OAFjBvT,E,OAKNsT,KAAUgzC,YAAYhzC,KAAUC,UAAWvT,G,mIAkFrC,IAAD,EACqBb,KAAKc,MAAvBuP,EADH,EACGA,OAAQse,EADX,EACWA,MADX,EAEuG3uB,KAAKK,MAAzGimD,EAFH,EAEGA,gBAAiBE,EAFpB,EAEoBA,YAAaE,EAFjC,EAEiCA,kBAAmBE,EAFpD,EAEoDA,oBAAqBE,EAFzE,EAEyEA,aAAcE,EAFvF,EAEuFA,YAE5F,OACI,oCACI,kBAAC,GAAD,CACI32C,OAAQA,EACRse,MAAOA,EACP7T,QAAS9a,KAAKknD,oBACd/T,cAAenzC,KAAKsmD,gBACpBlT,UAAWpzC,KAAKwmD,YAChBnT,gBAAiBrzC,KAAK0mD,kBACtBpT,kBAAmBtzC,KAAK4mD,oBACxBrT,WAAYvzC,KAAK8mD,aACjBtT,UAAWxzC,KAAKgnD,cAEpB,kBAAC,GAAD,CAAatsC,KAAM4rC,EAAiBxrC,QAAS9a,KAAKumD,kBAC9C,kBAAC,GAAD,CAAal2C,OAAQA,KAEzB,kBAAC,GAAD,CAAaqK,KAAM8rC,EAAa1rC,QAAS9a,KAAKymD,cAC1C,kBAAC,GAAD,CAASp2C,OAAQA,KAErB,kBAAC,GAAD,CAAaqK,KAAMgsC,EAAmB5rC,QAAS9a,KAAK2mD,oBAChD,kBAAC,GAAD,CAAet2C,OAAQA,KAE3B,kBAAC,GAAD,CAAaqK,KAAMksC,EAAqB9rC,QAAS9a,KAAK6mD,sBAClD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAansC,KAAMssC,EAAalsC,QAAS9a,KAAKinD,cAC1C,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAavsC,KAAMosC,EAAchsC,QAAS9a,KAAK+mD,eAC3C,kBAAC,GAAD,Y,GAlKGplD,IAAMC,YAoLd6Z,GANCC,YACZuX,cACAriB,cACAsiB,cAGWzX,CAAQ2qC,ICrLjBgB,I,qMACoBrrC,EAAWC,EAAWqK,GAAc,IAAD,EAC3BrmB,KAAKc,MAAvB8uB,EAD6C,EAC7CA,OAAQlqB,EADqC,EACrCA,MAChB,OAAIqW,EAAU6T,SAAWA,GAIrB7T,EAAUrW,MAAMG,MAAQH,EAAMG,M,+BAO5B,IAAD,EAC8B7F,KAAKc,MAAhC8uB,EADH,EACGA,OAAQnhB,EADX,EACWA,QAAS/I,EADpB,EACoBA,MAEzB,OACI,kBAACia,GAAA,EAAD,CAAUte,UAAU,iBAAiBoN,QAAS,kBAAMA,EAAQmhB,IAAShQ,QAAM,EAACla,MAAOA,GAC/E,kBAACiqB,GAAA,EAAD,CAAMC,OAAQA,S,GAnBHjuB,IAAMC,YA+LlBylD,G,YArKX,WAAYvmD,GAAQ,IAAD,8BACf,4CAAMA,KAwBVusB,aAAe,SAAA5qB,GACX,EAAK6kD,uBACL,EAAKC,wBA3BU,EAsCnBC,qBAAuB,WAAO,IAAD,EACM,EAAKnnD,MAA5ByrB,EADiB,EACjBA,MAAOuJ,EADU,EACVA,YAEToyB,EAAepyB,GAAevJ,EAE5B5U,GAAYuwC,IAAiBpyB,EAAc,EAAKJ,cAAgB,EAAK/I,SAArEhV,QACR,GAAKA,EAAL,CAEA,IAAMqV,EAAYrV,EAAQwwC,mBAC1B,GAAIn7B,EAAUzU,KAAO,EAAG,CACpB,IAAM6vC,EAAU,GAChB,aAAIp7B,EAAUikB,QAAQ7wC,QAAQ,SAAAgD,GAC1BglD,EAAQ3zC,KAAKyzC,EAAa9iB,SAAShiC,MAGvC,IAAMkS,EAAQ7K,IAAU8K,WACxB+Z,YAAiBha,EAAO8yC,MAtDb,EA4EnB92B,eAAiB,SAAAjB,GACbhB,aAASgB,GAAQ,GACjB,EAAKzsB,eA9EU,EAiFnB6+B,WAAa,WAAmBlW,GAAW,IAA3B9J,EAA0B,EAA1BA,MAAOtc,EAAmB,EAAnBA,MACbkqB,EAAS9D,EAAM6Y,SAAS3iB,GAE9B,OAAO,kBAAC,GAAD,CAAcrf,IAAKitB,EAAQA,OAAQA,EAAQnhB,QAAS,kBAAM,EAAKoiB,eAAejB,IAASlqB,MAAOA,KApFtF,EAuFnB+tB,aAvFmB,sCAuFJ,WAAMloB,GAAN,mBAAAuF,EAAA,wDACL4I,EAAQnO,EAAKwN,OADR,uBAGP,EAAKhY,SAAS,CACVs0B,YAAa,OAJV,0CASe30B,IAAgBC,KAAK,CAC3C,QAAS,iBACT+Y,QACA3F,MAAO,MAZA,QASLshB,EATK,QAcCsP,SAAWtP,EAAYsP,SAASvS,KAAK,SAAClzB,EAAGmzB,GAAJ,OAC7Cu1B,aAAgB1oD,GAAG2oD,cAAcD,aAAgBv1B,MAG/Cxd,EAAQ7K,IAAU8K,WACxB+Z,YAAiBha,EAAOwgB,EAAYsP,SAAS/X,MAAM,EAAG,KAEtD,EAAK7rB,SAAS,CAAEs0B,gBArBL,0CAvFI,wDA+GnBlyB,YAAc,WACVzC,IAAgBgG,aAAa,CACzB,QAAS,uBACTgU,MAAM,KA/GV,EAAKgZ,eAAiB/xB,IAAM2Y,YAC5B,EAAK4R,QAAUvqB,IAAM2Y,YACrB,EAAK2a,cAAgBtzB,IAAM2Y,YAE3B,EAAKja,MAAQ,CACTyrB,MAAO,KACPuJ,YAAa,MAGjB,EAAKiyB,qBAAuB/nC,YAAS,EAAK+nC,qBAAsB,KAAK,GACrE,EAAKC,qBAAuB1jC,YAAS,EAAK0jC,qBAAsB,KAAK,GAbtD,E,iFAgBE,IACTrwC,EAAYlX,KAAK0zB,eAAjBxc,QACJA,GACA9N,WAAW,kBAAM8N,EAAQxP,SAAS,IAGtC1H,KAAKyT,gB,6CASLzT,KAAKwnD,yB,6CAILxnD,KAAKwnD,yB,uJAwBDrjB,EAAWsD,GAAWtD,S,gCAELzjC,IAAgBC,KAAK,CAClC,QAAS,gB,QADbwjC,E,QAGSQ,SAAWR,EAASQ,SAASvS,KAAK,SAAClzB,EAAGmzB,GAAJ,OAAUu1B,aAAgB1oD,GAAG2oD,cAAcD,aAAgBv1B,MACtGoV,GAAWtD,SAAWA,E,OAGpBtvB,EAAQ7K,IAAU8K,WACxB+Z,YAAiBha,EAAOsvB,EAASQ,SAAS/X,MAAM,EAAG,KAEnD5sB,KAAKe,SAAS,CACV+qB,MAAOqY,I,oIA8CL,IAAD,OACGxV,EAAU3uB,KAAKc,MAAf6tB,MADH,EAE0B3uB,KAAKK,MAA5ByrB,EAFH,EAEGA,MAAOuJ,EAFV,EAEUA,YAET3vB,EAAQipB,EAAQ,CAAE4E,UAAW,KAAQ,KAE3C,OACI,oCACI,yBAAKlyB,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASzO,KAAKmD,aACnDwrB,EAAQ,kBAAC3f,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,kBAAC,GAAD,CAAa+5B,SAAU/oC,KAAK0zB,eAAgB9jB,SAAU5P,KAAKyzB,gBAE/D,yBAAKpyB,UAAU,mBAAmBqE,MAAOA,GACpComB,GACG,kBAAC,GAAD,CACI7Q,IAAKjb,KAAKksB,QACV7qB,UAAU,gBACVG,OAAQsqB,EAAM6Y,SACd7X,UAAW,GACXlB,cAAe,GACfoW,WAAY,SAAA9iC,GAAC,OAAI,EAAK8iC,WAAW9iC,EAAG4sB,IACpC8G,SAAU5yB,KAAKqtB,eAGtBgI,GACG,kBAAC,GAAD,CACIpa,IAAKjb,KAAKi1B,cACV5zB,UAAU,qCACVG,OAAQ6zB,EAAYsP,SACpB7X,UAAW,GACXlB,cAAe,GACfoW,WAAY,SAAA9iC,GAAC,OAAI,EAAK8iC,WAAW9iC,EAAGm2B,IACpCzC,SAAU5yB,KAAKqtB,qB,GAzJpB1rB,IAAMC,W,SCpCvBkmD,I,mBACF,WAAYhnD,GAAQ,IAAD,uBACf,4CAAMA,KAoBVs2B,wBAA0B,SAAA50B,GAAW,IACzB6f,EAAiB7f,EAAjB6f,aAER,EAAKthB,SAAS,CAAEshB,kBAxBD,EA2BnB0lC,kCAAoC,WAChC,EAAKhnD,SAAS,CAAEinD,qBAAqB,KA5BtB,EA+BnBC,aAAe,WACP,EAAK/kD,UAET,EAAKA,SAAU,EACfkG,WAAW,WACP6B,OAAOi9C,SAASC,UACjB,OArCY,IAGP9lC,EAAiB6X,KAAjB7X,aAHO,OAKf,EAAKhiB,MAAQ,CACT2nD,qBAAqB,EACrB3lC,gBAPW,E,iFAYf6X,KAAS/uB,GAAG,kCAAmCnL,KAAK+nD,mCACpD7tB,KAAS/uB,GAAG,wBAAyBnL,KAAKo3B,2B,6CAI1C8C,KAAS5uB,IAAI,kCAAmCtL,KAAK+nD,mCACrD7tB,KAAS5uB,IAAI,wBAAyBtL,KAAKo3B,2B,+BAsBrC,IAAD,EACyCp3B,KAAKK,MAA3C2nD,EADH,EACGA,oBAAqB3lC,EADxB,EACwBA,aACrB7R,EAAMxQ,KAAKc,MAAX0P,EAER,OAAKw3C,EAKD,kBAACzsC,EAAA,EAAD,CAAQla,UAAU,gBAAgBif,QAAQ,YAAYhK,MAAM,UAAU7H,QAASzO,KAAKioD,cAC/E5lC,EAAe,kBAAC+lC,GAAA,EAAD,MAAkB53C,EAAE,WALjC,S,GA9CO7O,IAAMC,YAyDjBgP,iBAAkBk3C,IClD3BO,I,0BACF,WAAYvnD,GAAQ,IAAD,8BACf,4CAAMA,KAaVqC,YAAc,WACVzC,IAAgBgG,aAAa,CACzB,QAAS,yBACTgU,MAAM,KAjBK,EAqBnBm4B,WArBmB,qBAqBN,wCAAA/hC,EAAA,wDACDK,EAAU,EAAK9Q,MAAf8Q,MADC,EAEkC,EAAK9Q,MAAxCioD,EAFC,EAEDA,aAAcC,EAFb,EAEaA,iBAEhBlsC,EAAQ,EAAK++B,SAASlkC,QAAQvO,MAAMoQ,OAJjC,uBAML,EAAKhY,SAAS,CACVoQ,OAAO,IAPN,iCAYLA,GACA,EAAKpQ,SAAS,CACVoQ,OAAO,IAIf,EAAKhO,cAECumB,EAAc,EAAK8+B,eAAetxC,QAAQvO,MApBvC,UAsBUjI,IAAgBC,KAAK,CACpC,QAAS,0BACT0b,QACAqN,cACA++B,YAAY,EACZP,SAAU,OA3BL,QAsBHzrC,EAtBG,OA8BL8rC,EACA7nD,IAAgBC,KAAK,CACjB,QAAS,eACTwU,QAASsH,EAAKhe,GACdkY,MAAO,CAAE,QAAS,cAAelY,GAAI8pD,EAAiB9pD,MAEnD6pD,GACP5nD,IAAgBC,KAAK,CACjB,QAAS,eACTwU,QAASsH,EAAKhe,GACdkY,MAAO,CAAE,QAAS,gBAAiBo/B,KAAM,YAAatvB,KAAM6hC,KAIpE3jC,aAASlI,EAAKhe,IA5CL,0CArBM,EAoEnBq3C,kBApEmB,sCAoEC,WAAOpQ,EAAMyO,GAAb,eAAArjC,EAAA,4DAChB,EAAK/P,SAAS,CACVunD,aAAc5iB,EACdgjB,gBAAiBvU,IAHL,SAMKzzC,IAAgBC,KAAK,CACtC,QAAS,aACToJ,KAAM,CACF,QAAS,gBACTgsC,KAAM,YACNtvB,KAAMif,GAEVijB,UAAW,CAAE,QAAS,iBACtBC,SAAUC,OAdE,OAMVhoD,EANU,OAiBhB,EAAKE,SAAS,CACVwnD,iBAAkB1nD,IAlBN,yCApED,wDAGf,EAAKu6C,SAAWz5C,IAAM2Y,YACtB,EAAKkuC,eAAiB7mD,IAAM2Y,YAE5B,EAAKja,MAAQ,CACT8Q,OAAO,EACPm3C,aAAc,KACdI,gBAAiB,KACjBH,iBAAkB,MAVP,E,sEA0FT,IAAD,EACgBvoD,KAAKc,MAAlB6tB,EADH,EACGA,MAAOne,EADV,EACUA,EACPW,EAAUnR,KAAKK,MAAf8Q,MAER,OACI,oCACI,yBAAK9P,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASzO,KAAKmD,aACnDwrB,EAAQ,kBAAC3f,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAK3N,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,iBAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,oBACX,kBAAC,GAAD,CAAcgzC,SAAUr0C,KAAK81C,oBAC7B,yBAAKz0C,UAAU,kBACX,kBAAC81C,GAAA,EAAD,CACIpO,SAAU/oC,KAAKo7C,SACfjqC,MAAOA,EACP9P,UAAU,iBACVif,QAAQ,WACRsW,WAAS,EACTE,MAAOtmB,EAAE,oBACT4mC,aAAc,KAElB,kBAACD,GAAA,EAAD,CACIpO,SAAU/oC,KAAKwoD,eACfnnD,UAAU,iBACVif,QAAQ,WACRsW,WAAS,EACTE,MAAOtmB,EAAE,kCACT4mC,aAAc,KAElB,yBAAK/1C,UAAU,qBAAqBmP,EAAE,uBAKlD,yBAAKnP,UAAU,yBAAyBoN,QAASzO,KAAK6yC,YAClD,kBAAC,GAAD,Y,GApIKlxC,IAAMC,YAgJhBgP,iBAAkBy3C,ICxGlBS,I,mBA7CX,WAAYhoD,GAAQ,IAAD,8BACf,4CAAMA,KAED82C,OAASj2C,IAAM2Y,YAHL,E,yEAMN,IAAD,EAMJta,KAAK43C,OAAO1gC,QAEhB,MAAO,CAAEvR,KARD,EAEJkd,WAMWhd,IARP,EAGJsmB,UAKgBhd,MARZ,EAIJwU,YAIuB5L,OARnB,EAKJuU,gB,sCAMQ/gB,GACZ,IAAMssC,EAAM73C,KAAK43C,OAAO1gC,QACnB2gC,IAELA,EAAInyC,MAAM6d,QAAUhY,K,+BAGd,IAAD,EACiCvL,KAAKc,MAAnC8uB,EADH,EACGA,OAAQtf,EADX,EACWA,SAAU7B,EADrB,EACqBA,QAE1B,OACI,yBAAKwM,IAAKjb,KAAK43C,OAAQv2C,UAAWiN,IAAW,OAAQ,CAAE,gBAAiBgC,IAAa7B,QAASA,GAC1F,kBAAC8/B,GAAA,EAAD,CAAU3e,OAAQA,EAAQsV,OAAO,IACjC,yBAAK7jC,UAAU,eACX,kBAAC2N,EAAA,EAAD,CAAW3N,UAAU,sBAEzB,yBAAKA,UAAU,aAAa0nD,aAAiBn5B,S,GAlCtCjuB,IAAMC,YCcvBwlD,G,8LACoBrrC,EAAWC,EAAWqK,GAAc,IAAD,EACjBrmB,KAAKc,MAAjC8uB,EAD6C,EAC7CA,OAAQtf,EADqC,EACrCA,SAAU5K,EAD2B,EAC3BA,MAC1B,OAAIqW,EAAU6T,SAAWA,IAIrB7T,EAAUzL,WAAaA,GAIvByL,EAAUrW,MAAMG,MAAQH,EAAMG,O,+BAO5B,IAAD,EACwC7F,KAAKc,MAA1C8uB,EADH,EACGA,OAAQtf,EADX,EACWA,SAAU7B,EADrB,EACqBA,QAAS/I,EAD9B,EAC8BA,MAEnC,OACI,kBAACia,GAAA,EAAD,CAAUte,UAAU,iBAAiBoN,QAAS,kBAAMA,EAAQmhB,IAAShQ,QAAM,EAACla,MAAOA,GAC/E,kBAACqa,GAAA,EAAD,CAAU1e,UAAU,0BAA0B4e,QAAS3P,EAAUgG,MAAM,YACvE,kBAACqZ,GAAA,EAAD,CAAMC,OAAQA,S,GAxBHjuB,IAAMC,WA8B3BonD,G,YACF,WAAYloD,GAAQ,IAAD,8BACf,4CAAMA,KAoCVusB,aAAe,SAAA5qB,GACX,EAAK6kD,uBACL,EAAKC,wBAvCU,EAkDnBC,qBAAuB,WAAO,IAAD,EACM,EAAKnnD,MAA5ByrB,EADiB,EACjBA,MAAOuJ,EADU,EACVA,YAEToyB,EAAepyB,GAAevJ,EAE5B5U,GAAYuwC,IAAiBpyB,EAAc,EAAKJ,cAAgB,EAAK/I,SAArEhV,QACR,GAAKA,EAAL,CAEA,IAAMqV,EAAYrV,EAAQwwC,mBAC1B,GAAIn7B,EAAUzU,KAAO,EAAG,CACpB,IAAM6vC,EAAU,GAChB,aAAIp7B,EAAUikB,QAAQ7wC,QAAQ,SAAAgD,GAC1BglD,EAAQ3zC,KAAKyzC,EAAa9iB,SAAShiC,MAGvC,IAAMkS,EAAQ7K,IAAU8K,WACxB+Z,YAAiBha,EAAO8yC,MAlEb,EAwFnB92B,eAAiB,SAAAjB,GAAW,IAKpBq5B,EALmB,EACgB,EAAK5oD,MAApC6oD,EADe,EACfA,cAAe9Q,EADA,EACAA,YACf7jC,EAAe20C,EAAf30C,IAAK40C,EAAUD,EAAVC,MAEPC,EAAS,IAAIl2C,IAAIqB,GAEnB80C,EAAiB,KACjBhQ,GAAa,EACb9kC,EAAIlB,IAAIuc,IACRw5B,EAAO7wC,OAAOqX,GACdq5B,EAAWE,EAAM5vC,OAAO,SAAAra,GAAC,OAAIA,IAAM0wB,IACnCy5B,EAAiBjR,IAAgBxoB,EAAS,KAAOwoB,EACjDiB,GAAa,IAEb+P,EAAO5wC,IAAIoX,EAAQA,GACnBq5B,EAAWE,EAAM7vC,OAAO,CAACsW,IACzBy5B,EAAiB,MAGrB,IAAMx2C,EAAQ,EAAK6gB,eAAexc,QAClCrE,EAAMnL,QACD2xC,IACDxmC,EAAM6F,UAAY,GAClB,EAAK+a,aAAa,KAGtB,IAAM6lB,EAAY,EAAKN,aAAa9hC,QAC9BqiC,EAAaD,EAAUjoB,aACvBmoB,EAAmBF,EAAUhtB,aAE7BotB,EAAU,IAAIxmC,IA9BG,uBA+BvB,YAAgB,EAAK+lC,SAASzI,OAA9B,+CAAsC,CAAC,IAA9B7tC,EAA6B,QAC5B+uB,EAAK,EAAKunB,SAAShvC,IAAItH,GAC7B,GAAI+uB,EAAI,CACJ,IAAMpH,EAASoH,EAAGwf,YAClBwI,EAAQlhC,IAAI7V,EAAK2nB,KAnCF,kFAuCvB,IAAMmvB,EAAcH,EAAU5zC,MAAM6d,QAC9BmK,EAAgB4rB,EAAUttB,UAC5BqtB,IACAC,EAAU5zC,MAAM6d,QAAU,MAG9B,EAAKxiB,SAAS,CACVq3C,YAAaiR,EACbH,cAAe,CACXC,MAAOF,EACP10C,IAAK60C,IAEV,WACC,EAAKxP,aAAaP,EAAYE,EAAYC,EAAkB9rB,EAAe+rB,GAC3E,EAAK6P,aAAa5P,MA7IP,EAoPnB1X,WAAa,WAAmBlW,EAAOy9B,GAAsB,IAA7CvnC,EAA4C,EAA5CA,MAAOtc,EAAqC,EAArCA,MACbkqB,EAAS9D,EAAM9J,GACf2e,EAAa4oB,EAAiBl2C,IAAIuc,GAExC,OAAO,kBAAC,GAAD,CAAcjtB,IAAKitB,EAAQA,OAAQA,EAAQtf,SAAUqwB,EAAYlyB,QAAS,kBAAM,EAAKoiB,eAAejB,IAASlqB,MAAOA,KAxP5G,EA2PnB+tB,aA3PmB,sCA2PJ,WAAMloB,GAAN,6BAAAuF,EAAA,wDACL4I,EAAQnO,EAAKwN,OADR,uBAGP,EAAKhY,SAAS,CACVs0B,YAAa,KACbm0B,YAAa,KACbpR,YAAa,OANV,iCAWLzkC,EAAW,IACRK,KACLtT,IAAgBC,KAAK,CACjB,QAAS,iBACT+Y,QACA3F,MAAO,MAGfJ,EAASK,KACLtT,IAAgBC,KAAK,CACjB,QAAS,oBACT+Y,WAtBG,SAyB8BpF,QAAQ7C,IAAIkC,GAzB1C,mCAyBJ0hB,EAzBI,KAyBSo0B,EAzBT,KA2BXp0B,EAAYsP,SAAWtP,EAAYsP,SAASvS,KAAK,SAAClzB,EAAGmzB,GAAJ,OAC7Cu1B,aAAgB1oD,GAAG2oD,cAAcD,aAAgBv1B,MAG/Cm3B,EAAc,CAAE,QAAS,QAAS7kB,SAAU,IAClD8kB,EAAY70C,SAASyqB,OAAO,SAAC8pB,EAAO94C,GAChC,IAAMoM,EAAOR,KAAUhS,IAAIoG,GAI3B,OAHIoM,GAA+B,oBAAvBA,EAAKC,KAAK,UAClBysC,EAAMn1C,KAAKyI,EAAKC,KAAKxI,SAElBi1C,GACRK,EAAY7kB,UAET9vB,EAAQ7K,IAAU8K,WACxB+Z,YAAiBha,EAAOwgB,EAAYsP,UACpC9V,YAAiBha,EAAO20C,EAAY7kB,UAEpC,EAAK5jC,SAAS,CAAEs0B,cAAam0B,cAAapR,YAAa,OA5C5C,0CA3PI,wDA0SnBj1C,YAAc,WACVzC,IAAgBgG,aAAa,CACzB,QAAS,uBACTgU,MAAM,KA7SK,EAiTnB6/B,kBAAoB,SAAA93C,GAAU,IAAD,EACc,EAAKpC,MAApC6oD,EADiB,EACjBA,cAAe9Q,EADE,EACFA,YAClB8Q,IAEWA,EAAR30C,IACClB,IAAI+kC,KAEb31C,EAAM4B,kBACN5B,EAAMmF,YAAYghC,2BAElB,EAAK7nC,SAAS,CACVq3C,YAAa,UA5TF,EAgUnBD,gBAAkB,WAAO,IAAD,EACmB,EAAK93C,MAApC6oD,EADY,EACZA,cAAe9Q,EADH,EACGA,YACvB,GAAK8Q,EAAL,CAFoB,IAIZC,EAAeD,EAAfC,MAAO50C,EAAQ20C,EAAR30C,IACf,GAAK40C,GACAA,EAAMr2C,OAEX,GAAIyB,EAAIlB,IAAI+kC,GACR,EAAKvnB,eAAeunB,OADxB,CAKA,IAAMO,EAAWwQ,EAAMA,EAAMr2C,OAAS,GACjC6lC,GAEL,EAAK53C,SAAS,CACVq3C,YAAaO,OA9UjB,EAAKyC,SAAWz5C,IAAM2Y,YACtB,EAAKoZ,eAAiB/xB,IAAM2Y,YAC5B,EAAK4R,QAAUvqB,IAAM2Y,YACrB,EAAK2a,cAAgBtzB,IAAM2Y,YAC3B,EAAK0+B,aAAer3C,IAAM2Y,YAC1B,EAAK2+B,SAAW,IAAI/lC,IAEpB,EAAK7S,MAAQ,CACTyrB,MAAO,KACPuJ,YAAa,KACb6zB,cAAe,CACXC,MAAO,GACP50C,IAAK,IAAIrB,KAEbklC,YAAa,MAGjB,EAAKkP,qBAAuB/nC,YAAS,EAAK+nC,qBAAsB,KAAK,GACrE,EAAKC,qBAAuB1jC,YAAS,EAAK0jC,qBAAsB,KAAK,GArBtD,E,0EAyBf,OAAOvnD,KAAKK,MAAM6oD,cAAcC,Q,0CAGf,IACTjyC,EAAYlX,KAAK0zB,eAAjBxc,QACJA,GACA9N,WAAW,kBAAM8N,EAAQxP,SAAS,IAGtC1H,KAAKyT,gB,6CASLzT,KAAKwnD,yB,6CAILxnD,KAAKwnD,yB,uJAwBDrjB,EAAWsD,GAAWtD,S,gCAELzjC,IAAgBC,KAAK,CAClC,QAAS,gB,QADbwjC,E,QAGSQ,SAAWR,EAASQ,SAASvS,KAAK,SAAClzB,EAAGmzB,GAAJ,OAAUu1B,aAAgB1oD,GAAG2oD,cAAcD,aAAgBv1B,MACtGoV,GAAWtD,SAAWA,E,OAGpBtvB,EAAQ7K,IAAU8K,WACxB+Z,YAAiBha,EAAOsvB,EAASQ,SAAS/X,MAAM,EAAG,KAEnD5sB,KAAKe,SAAS,CACV+qB,MAAOqY,I,wIA6DFkV,EAAYE,EAAYC,EAAkB9rB,EAAe+rB,GAAc,IAAD,OACzEH,EAAYt5C,KAAKg5C,aAAa9hC,QAE9B2iC,EAAgBP,EAAUjoB,aAI1ByoB,GAHsBR,EAAUhtB,aAGpButB,EAAgBN,GADjBM,EAAgBN,EAKzBA,EAFU,KAGVD,EAAU5zC,MAAM6d,QAAhB,sBAAyCjkB,KAAKC,IAAIg6C,EAHxC,KAGV,OACA76C,sBAAsB,WAClB46C,EAAU5zC,MAAM6d,QAAhB,sBAAyCjkB,KAAKC,IAAIs6C,EAL5C,KAKN,OACAzwC,WAAW,WACP,EAAKsqB,eAAexc,QAAQ6iC,eAAe,CAAE5oB,SAAU,UACxD,SAGPmoB,EAAU5zC,MAAM6d,QAAhB,sBAXU,IAWV,OACAvjB,KAAK0zB,eAAexc,QAAQ6iC,eAAe,CAAE5oB,SAAU,YAEpD2oB,EACHD,EAfU,KAgBVP,EAAU5zC,MAAM6d,QAAhB,sBAAyCjkB,KAAKC,IAAIi6C,EAhBxC,KAgBV,OACA96C,sBAAsB,WAClB46C,EAAU5zC,MAAM6d,QAAhB,sBAAyCjkB,KAAKC,IAAIs6C,EAlB5C,KAkBN,WAGJP,EAAU5zC,MAAM6d,QAAhB,sBArBU,IAqBV,OACA+1B,EAAUttB,UAAY0B,GAGtB2rB,GACAC,EAAU5zC,MAAM6d,QAAUk2B,EAC1BH,EAAUttB,UAAY0B,GAEtB1tB,KAAK0zB,eAAexc,QAAQ6iC,eAAe,CAAE5oB,SAAU,a,mCAKtD6oB,GAAc,IAAD,OAChBC,EAAkB,IAAI/mC,IADN,uBAEtB,YAAgBlT,KAAKi5C,SAASzI,OAA9B,+CAAsC,CAAC,IAA9B7tC,EAA6B,QAC5B+uB,EAAK1xB,KAAKi5C,SAAShvC,IAAItH,GAC7B,GAAI+uB,EAAI,CACJ,IAAMwoB,EAAgBxoB,EAAGwf,YACnBiJ,EAAaH,EAAY3mC,IAAI1Q,GAAOq3C,EAAY/vC,IAAItH,GAAO,KACjE,GAAIw3C,EAAY,CACRA,EAAWx0C,KAAOu0C,EAAcv0C,MAChCs0C,EAAgBzhC,IAAIkZ,EAAI,CAAEyoB,aAAYD,kBAG1C,IAAMld,EAAS,+BAA2Bmd,EAAWx0C,KAAOu0C,EAAcv0C,KAA3D,eAAsEw0C,EAAWt0C,IAAMq0C,EAAcr0C,IAArG,OACf6rB,EAAG0oB,gBAAgBpd,MAbT,kFAkBtBt+B,sBAAsB,WAAO,IAAD,uBACxB,YAAgB,EAAKu6C,SAASzI,OAA9B,+CAAsC,CAAC,IAA9B7tC,EAA6B,QAC5B+uB,EAAK,EAAKunB,SAAShvC,IAAItH,GAC7B,GAAI+uB,EAAI,CACJ,IAAItP,EAAU,mCACd,GAAI63B,EAAgB5mC,IAAIqe,GAAK,CAAC,IAAD,EACauoB,EAAgBhwC,IAAIynB,GAAlDyoB,EADiB,EACjBA,WAAYD,EADK,EACLA,cACpB93B,EAAa,+BAAwB+3B,EAAWx0C,KAAOu0C,EAAcv0C,KAAOw0C,EAAWhrC,MAA1E,eAAsFgrC,EAAWt0C,IAAMq0C,EAAcr0C,IAArH,QACA,mCAGjB6rB,EAAG0oB,gBAAgBh4B,KAXH,kFAenB63B,EAAgBniC,MAErB1O,WAAW,WAAO,IAAD,uBACb,YAAe6wC,EAAgBzJ,OAA/B,+CAAuC,CAAC,IAA/B9e,EAA8B,QAC3BwoB,EAAkBD,EAAgBhwC,IAAIynB,GAAtCwoB,cACF93B,EAAa,+BAAwB83B,EAAc/qC,MAAtC,WACA,iCAEnBuiB,EAAG0oB,gBAAgBh4B,IANV,kFASb1jB,sBAAsB,WAAO,IAAD,uBACxB,YAAeu7C,EAAgBzJ,OAA/B,+CAAuC,CAAC,IAA/B9e,EAA8B,QAGnCA,EAAG0oB,gBAFgB,qCAFC,sFAQ7B,S,+BAqGD,IAAD,SACgBp6C,KAAKc,MAAlB6tB,EADH,EACGA,MAAOne,EADV,EACUA,EADV,EAEmExQ,KAAKK,MAArEyrB,EAFH,EAEGA,MAAOuJ,EAFV,EAEUA,YAAam0B,EAFvB,EAEuBA,YAAaN,EAFpC,EAEoCA,cAAe9Q,EAFnD,EAEmDA,YAElD1yC,EAAQipB,EAAQ,CAAE4E,UAAW,KAAQ,KAI3C,OAFAvzB,KAAKi5C,SAASlV,QAGV,oCACI,yBAAK1iC,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASzO,KAAKmD,aACnDwrB,EAAQ,kBAAC3f,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAK3N,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,sBAGnD,yBAAKyK,IAAKjb,KAAKg5C,aAAc33C,UAAU,uBAClC6nD,EAAcC,MAAM50C,IAAI,SAAArV,GAAC,OAAI,kBAAC,GAAD,CAAUoR,SAAU8nC,IAAgBl5C,EAAG+b,IAAK,SAAAyW,GAAQ,EAAKunB,SAASzgC,IAAItZ,EAAGwyB,IAAQ/uB,IAAKzD,EAAG0wB,OAAQ1wB,EAAGuP,QAAS,kBAAM,EAAKoiB,eAAe3xB,QACrK,kBAAC,GAAD,CAAa6pC,SAAU/oC,KAAK0zB,eAAgBsV,KAAMx4B,EAAE,iBAAkBsK,QAAS9a,KAAKu6C,kBAAmB3qC,SAAU5P,KAAKyzB,aAAcoV,YAAa7oC,KAAKm4C,mBAE1J,yBAAK92C,UAAU,oBACf,yBAAKA,UAAU,mBAAmBqE,MAAOA,GACpComB,GACG,kBAAC,GAAD,CACI7Q,IAAKjb,KAAKksB,QACV7qB,UAAU,gBACVG,OAAQsqB,EAAM6Y,SACd7X,UAAW,GACXlB,cAAe,GACfoW,WAAY,SAAA9iC,GAAC,OAAI,EAAK8iC,WAAW9iC,EAAG4sB,EAAM6Y,SAAUukB,EAAc30C,MAClEqe,SAAU5yB,KAAKqtB,eAGtBgI,GAAem0B,GACZ,kBAAC,GAAD,CACIvuC,IAAKjb,KAAKi1B,cACV5zB,UAAU,qCACVG,OAAQ6zB,EAAYsP,SAASrrB,OAAOkwC,EAAY7kB,UAChD7X,UAAW,GACXlB,cAAe,GACfoW,WAAY,SAAA9iC,GAAC,OAAI,EAAK8iC,WAAW9iC,EAAGm2B,EAAYsP,SAASrrB,OAAOkwC,EAAY7kB,UAAWukB,EAAc30C,MACrGqe,SAAU5yB,KAAKqtB,qB,GAjYb1rB,IAAMC,WAqZrB6Z,GANCC,YACZuX,cACAriB,cACAsiB,cAGWzX,CAAQutC,IC1bjB5B,I,qMACoBrrC,EAAWC,EAAWqK,GAAc,IAC9CuJ,EAAW5vB,KAAKc,MAAhB8uB,OACR,OAAI7T,EAAU6T,SAAWA,I,+BAOnB,IAAD,EACqB5vB,KAAKc,MAAvB8uB,EADH,EACGA,OAAQlqB,EADX,EACWA,MAEhB,OACI,kBAACia,GAAA,EAAD,CAAUte,UAAU,iBAAiBue,QAAM,EAACla,MAAOA,GAC/C,kBAACiqB,GAAA,EAAD,CAAMC,OAAQA,S,GAfHjuB,IAAMC,YAqB3B8nD,G,YAEF,WAAY5oD,GAAQ,IAAD,8BACf,4CAAMA,KAoCVqC,YAAc,WAAO,IACT2X,EAAY,EAAKha,MAAjBga,QACHA,GAELA,KAtCA,EAAKsgC,SAAWz5C,IAAM2Y,YAEtB,EAAKja,MAAQ,CACT8Q,OAAO,GANI,E,iFAUE,IACTw2C,EAAY3nD,KAAKc,MAAjB6mD,QAEF9yC,EAAQ7K,IAAU8K,WACxB+Z,YAAiBha,EAAO8yC,K,iCAGhB,IACAx2C,EAAUnR,KAAKK,MAAf8Q,MAEFkL,EAAQrc,KAAKo7C,SAASlkC,QAAQvO,MAAMoQ,OAC1C,OAAKsD,GAODlL,GACAnR,KAAKe,SAAS,CACVoQ,OAAO,IAIRkL,IAZHrc,KAAKe,SAAS,CACVoQ,OAAO,IAEJkL,K,+BAmBL,IAAD,EACkDrc,KAAKc,MAApD0P,EADH,EACGA,EAAGm3C,EADN,EACMA,QAASe,EADf,EACeA,gBAAiBiB,EADhC,EACgCA,cAC7Bx4C,EAAUnR,KAAKK,MAAf8Q,MAEF2a,EAAQ67B,EAAQpzC,IAAI,SAAAqb,GAAM,OAAK,kBAAC,GAAD,CAAcjtB,IAAKitB,EAAQA,OAAQA,MAElEg6B,EAAkC,IAAnBjC,EAAQ70C,OAAR,UAA0B60C,EAAQ70C,OAAlC,sBAAwD60C,EAAQ70C,OAAhE,WAErB,OACI,oCACI,yBAAKzR,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,qBAAqBoN,QAASzO,KAAKmD,aACrD,kBAAC,GAAD,OAEJ,yBAAK9B,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,eAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,oBACX,kBAAC,GAAD,CAAcuzC,WAAY8T,EAAiBrU,SAAUsV,IACrD,yBAAKtoD,UAAU,kBACX,kBAAC81C,GAAA,EAAD,CACIpO,SAAU/oC,KAAKo7C,SACfjqC,MAAOA,EACP9P,UAAU,iBACVif,QAAQ,WACRsW,WAAS,EACTE,MAAOtmB,EAAE,aACT4mC,aAAc,MAGtB,kBAAC,GAAD,KAAgBwS,GACf99B,S,GA/EInqB,IAAMC,WAoGpB6Z,GANCC,YACZuX,cACAriB,cACAsiB,cAGWzX,CAAQiuC,IC5HjBG,G,YACF,WAAY/oD,GAAQ,IAAD,8BACf,4CAAMA,KAcV+xC,WAfmB,qBAeN,wCAAA/hC,EAAA,wDACc,EAAKzQ,MAApBypD,WADC,oBAGCnC,EAAU,EAAKoC,mBAAmB7yC,QAAQ8yC,cACnCl3C,OAJR,iDAML,EAAK/R,SAAS,CACV+oD,YAAY,EACZnC,YARC,4BAW+C,EAAKtnD,MAAjDsnD,EAXH,EAWGA,QAASW,EAXZ,EAWYA,aAAcC,EAX1B,EAW0BA,iBAEzBlsC,EAAQ,EAAK4tC,kBAAkB/yC,QAAQgzC,WAbxC,0DAkBL,EAAK/mD,cAlBA,UAoBczC,IAAgBC,KAAK,CACpC,QAAS,0BACT0b,QACAosC,YAAY,EACZ/+B,YAAa,GACbw+B,SAAU,OAzBT,QAoBCzrC,EApBD,OA4BD8rC,EACA7nD,IAAgBC,KAAK,CACjB,QAAS,eACTwU,QAASsH,EAAKhe,GACdkY,MAAO,CAAE,QAAS,cAAelY,GAAI8pD,EAAiB9pD,MAEnD6pD,GACP5nD,IAAgBC,KAAK,CACjB,QAAS,eACTwU,QAASsH,EAAKhe,GACdkY,MAAO,CAAE,QAAS,gBAAiBo/B,KAAM,YAAatvB,KAAM6hC,KAIhEX,EAAQ70C,OAAS,GACjBpS,IAAgBC,KAAK,CACjB,QAAS,iBACTwU,QAASsH,EAAKhe,GACdkmC,SAAUgjB,IAIlBhjC,aAASlI,EAAKhe,IAlDT,0CAfM,EAqEnB0E,YAAc,WACVzC,IAAgBgG,aAAa,CACzB,QAAS,uBACTgU,MAAM,KAxEK,EA4EnByvC,kBAAoB,WAChB,EAAKppD,SAAS,CACV+oD,YAAY,EACZnC,QAAS,MA/EE,EAmFnB7R,kBAnFmB,sCAmFC,WAAOpQ,EAAMyO,GAAb,eAAArjC,EAAA,4DAChB,EAAK/P,SAAS,CACVunD,aAAc5iB,EACdgjB,gBAAiBvU,IAHL,SAMKzzC,IAAgBC,KAAK,CACtC,QAAS,aACToJ,KAAM,CACF,QAAS,gBACTgsC,KAAM,YACNtvB,KAAMif,GAEVijB,UAAW,CAAE,QAAS,iBACtBC,SAAUC,OAdE,OAMVhoD,EANU,OAiBhB,EAAKE,SAAS,CACVwnD,iBAAkB1nD,IAlBN,yCAnFD,wDAGf,EAAKkpD,mBAAqBpoD,IAAM2Y,YAChC,EAAK2vC,kBAAoBtoD,IAAM2Y,YAE/B,EAAKja,MAAQ,CACTypD,YAAY,EACZnC,QAAS,GACTW,aAAc,KACdI,gBAAiB,KACjBH,iBAAkB,MAXP,E,sEAyGT,IACE55B,EAAU3uB,KAAKc,MAAf6tB,MADH,EAE4C3uB,KAAKK,MAA9CypD,EAFH,EAEGA,WAAYnC,EAFf,EAEeA,QAASe,EAFxB,EAEwBA,gBAE7B,OACI,oCACI,kBAAC,GAAD,CAAiBztC,IAAKjb,KAAK+pD,mBAAoBp7B,MAAOA,EAAO7T,QAAS9a,KAAKmD,cAE3E,kBAAC,GAAD,CAAauX,KAAMovC,GACf,kBAAC,GAAD,CACI7uC,IAAKjb,KAAKiqD,kBACVvB,gBAAiBA,EACjBf,QAASA,EACTgC,cAAe3pD,KAAK81C,kBACpBh7B,QAAS9a,KAAKmqD,qBAItB,yBAAK9oD,UAAU,yBAAyBoN,QAASzO,KAAK6yC,YAClD,kBAAC,GAAD,Y,GA7HGlxC,IAAMC,WAyIdgP,iBAAkBi5C,ICkFlBO,G,YAzNX,WAAYtpD,GAAQ,IAAD,8BACf,4CAAMA,KA2DVupD,yBAA2B,SAAA7nD,GAEvB,GADyB03B,KAAjB7X,aACR,CAFiC,IAIzBhS,EAAkB7N,EAAlB6N,OAAQqJ,EAAUlX,EAAVkX,MAJiB,EAKgB,EAAKrZ,MAA9CwzB,EALyB,EAKzBA,WAAYy2B,EALa,EAKbA,aAActxC,EALD,EAKCA,WAE9B6a,GAAcxjB,IAAWi6C,GAAgB5wC,IAAUV,IAIvD,EAAKU,MAAQA,EACb,EAAK3Y,SACD,CACI8yB,YAAY,EACZy2B,aAAcj6C,EACd2I,WAAY,UA5EL,EAiFnBuxC,kBAAoB,WAChB,GAAK,EAAK7wC,MAAV,CAEA,IAAM8wC,EAAS,EAAKC,UAAUvzC,QAC1BszC,GACAA,EAAOE,aAAa,EAAKhxC,OAG7B,EAAKA,MAAQ,OAzFE,EA4FnBixC,uBAAyB,SAAAnoD,GAErB,GADyB03B,KAAjB7X,aACR,CAF+B,IAIvB3H,EAAiBlY,EAAjBkY,KAAMrK,EAAW7N,EAAX6N,OAEd,EAAKtP,SAAS,CAAE6pD,aAAclwC,EAAMmwC,SAAUx6C,MAlG/B,EAqGnBy6C,uBArGmB,sCAqGM,WAAMtoD,GAAN,eAAAsO,EAAA,wDACIopB,KAAjB7X,aADa,iDAIb3H,EAASlY,EAATkY,KAER,EAAK3Z,SAAS,CAAEgqD,aAAcrwC,IANT,yCArGN,wDA8GnBswC,uBA9GmB,sCA8GM,WAAMxoD,GAAN,eAAAsO,EAAA,wDACIopB,KAAjB7X,aADa,iDAIb3H,EAASlY,EAATkY,KAER,EAAK3Z,SAAS,CAAEkqD,aAAcvwC,IANT,yCA9GN,wDAuHnBwwC,yBAvHmB,sCAuHQ,WAAM1oD,GAAN,eAAAsO,EAAA,wDACEopB,KAAjB7X,aADe,iDAIf3H,EAASlY,EAATkY,KAER,EAAK3Z,SAAS,CAAEoqD,eAAgBzwC,IANT,yCAvHR,wDAgInBvX,YAAc,WACV,EAAKpC,SAAS,CACV6pD,cAAc,EACdG,cAAc,EACdE,cAAc,EACdE,gBAAgB,EAChBt3B,YAAY,KAtID,EA0InBJ,aAAe,SAAA23B,GACX,EAAKrqD,SAAS,CACV8yB,WAAYu3B,EACZd,aAAc,EACdtxC,WAAY,QA9ID,EAkJnBowB,uBAAyB,SAAA79B,GACrB,EAAKxK,SAAS,CACViY,WAAYzN,EACZmO,MAAO,QArJI,EAyJnBm3B,oBAAsB,SAACxgC,EAAQqU,EAAWmP,GACtClP,aAAStU,EAAQqU,GAEjB,EAAK6Q,qBA5JU,EA+JnBA,kBAAoB,WAChB,EAAKx0B,SAAS,CACV8yB,YAAY,EACZy2B,aAAc,EACdtxC,WAAY,QAhKhB,EAAKyxC,UAAY9oD,IAAM2Y,YAEvB,EAAKja,MAAQ,CACTwzB,YAAY,EACZ+2B,cAAc,EACdG,cAAc,EACdE,cAAc,EACdE,gBAAgB,GAVL,E,mFAcGpvC,EAAWC,EAAWqK,GAAc,IAAD,EACwCrmB,KAAKK,MAA1FwzB,EAD6C,EAC7CA,WAAY7a,EADiC,EACjCA,WAAY4xC,EADqB,EACrBA,aAAcG,EADO,EACPA,aAAcE,EADP,EACOA,aAAcE,EADrB,EACqBA,eAE1E,OAAInvC,EAAU6X,aAAeA,IAIzB7X,EAAUhD,aAAeA,IAIzBgD,EAAU4uC,eAAiBA,IAI3B5uC,EAAU+uC,eAAiBA,IAI3B/uC,EAAUivC,eAAiBA,GAI3BjvC,EAAUmvC,iBAAmBA,Q,0CAQjCjxB,KAAS/uB,GAAG,yBAA0BnL,KAAKqqD,0BAC3CpuC,KAAU9Q,GAAG,uBAAwBnL,KAAK2qD,wBAC1C1uC,KAAU9Q,GAAG,uBAAwBnL,KAAK8qD,wBAC1C7uC,KAAU9Q,GAAG,uBAAwBnL,KAAKgrD,wBAC1C/uC,KAAU9Q,GAAG,yBAA0BnL,KAAKkrD,4B,6CAI5ChxB,KAAS5uB,IAAI,yBAA0BtL,KAAKqqD,0BAC5CpuC,KAAU3Q,IAAI,uBAAwBtL,KAAK2qD,wBAC3C1uC,KAAU3Q,IAAI,uBAAwBtL,KAAK8qD,wBAC3C7uC,KAAU3Q,IAAI,uBAAwBtL,KAAKgrD,wBAC3C/uC,KAAU3Q,IAAI,yBAA0BtL,KAAKkrD,4B,+BA8GvC,IAAD,EACgHlrD,KAAKK,MAAlHwqD,EADH,EACGA,SAAUP,EADb,EACaA,aAActxC,EAD3B,EAC2BA,WAAY6a,EADvC,EACuCA,WAAYk3B,EADnD,EACmDA,aAAcH,EADjE,EACiEA,aAAcK,EAD/E,EAC+EA,aAAcE,EAD7F,EAC6FA,eAClG,OAAKt3B,GAAek3B,GAAiBH,GAAiBK,GAAiBE,EAKnE,kBAAC,IAAD,CACIzwC,MAAI,EACJG,mBAAoB,EACpBC,QAAS9a,KAAKmD,YACdoM,QAAS,CACL5F,KAAM,wBACN+B,UAAW,6BACX2/C,MAAO,0BAEXC,QAAStrD,KAAKuqD,mBAEbK,GAAgB,kBAAC,GAAD,CAAUv6C,OAAQw6C,EAAUl8B,OAAK,IACjDo8B,GAAgB,kBAAC,GAAD,CAAUp8B,OAAK,IAC/Bs8B,GAAgB,kBAAC,GAAD,CAAUt8B,OAAK,IAC/Bw8B,GAAkB,kBAAC,GAAD,CAAYx8B,OAAK,IACnCkF,GACG,oCACI,kBAAC,GAAD,CACI5Y,IAAKjb,KAAKyqD,UACV52B,YAAY,EACZiU,SAAS,EACTr5B,QAASzO,KAAKywB,kBACdkD,SAAU3zB,KAAKyzB,aACf4V,mBAAoBrpC,KAAKopC,uBACzBza,OAAK,IAET,yBAAKttB,UAAU,kBACX,kBAAC,GAAD,CACIgP,OAAQi6C,EACR/+C,KAAMyN,EACNg4B,gBAAiBhxC,KAAK6wC,oBACtB/1B,QAAS9a,KAAKu1B,uBAnC3B,S,GA3KS5zB,IAAMC,WCV3B,SAAS2pD,KACZ,IAAMC,EAAUvvC,KAAUqgB,SAASryB,IAAI,mBACjCwK,EAAQ,GACRg3C,EAAa,GACnB,GAAID,EAAS,CAAC,IAAD,uBACT,YAAqBA,EAAQhb,OAA7B,+CAAqC,CAAC,IAA3BngC,EAA0B,QAC3BoM,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAIoM,EAAM,CACN,IAAMyuB,EAAQC,YAAa96B,EAAQ,CAAE,QAAS,oBAChC,MAAV66B,GAAez2B,EAAMT,KAAKyI,GAC9BgvC,EAAWz3C,KAAK,CAAEk3B,QAAOzsC,GAAI4R,EAAQgM,MAAOI,EAAKJ,UANhD,mFAab,OAFqB5H,EAAM2d,KAAK,SAACthB,EAAGo7B,GAAJ,OAAUC,YAAahB,YAAae,EAAG,CAAE,QAAS,oBAAsBf,YAAar6B,EAAG,CAAE,QAAS,uBAE/GyD,IAAI,SAAArV,GAAC,OAAIA,EAAEmd,QAAOpb,KAAK,M,cCQzCyqD,I,OAAiB,CACnBC,MAAOttD,YAASutD,eAChBC,KAAMxtD,YAASytD,gBA4eJC,G,YAxeX,WAAYjrD,GAAQ,IAAD,8BACf,4CAAMA,KAqIVgpC,oBAAsB,SAAAtnC,GAClB,EAAKwpD,mBAvIU,EA0InB50B,wBAA0B,SAAA50B,GAGtB,GAFyBA,EAAjB6f,aAER,CAHgC,MAKiD,EAAKhiB,MAA9EuqD,EALwB,EAKxBA,aAAcG,EALU,EAKVA,aAAcl3B,EALJ,EAKIA,WAAYo3B,EALhB,EAKgBA,aAAcE,EAL9B,EAK8BA,gBAC1DP,GAAgBG,GAAgBl3B,GAAco3B,GAAgBE,IAC9D,EAAKpqD,SAAS,CACNgqD,cAAc,EACdH,cAAc,EACd/2B,YAAY,EACZo3B,cAAc,EACdE,gBAAgB,EAChBrjB,QAAS,GACV,WACC,EAAK/mC,SAAS,CACV+mC,QAAS4jB,SA1JV,EA2MnB1gB,kBAAoB,SAAAxoC,GAAW,IACNypD,EAAoB,EAAK5rD,MAAtCyrC,YAESogB,EAAgB,EAAKC,cAA9Bj1C,QACR,IAAIg1C,IAAeA,EAAYj/B,QAA/B,CAJ0B,IAQTm/B,EAAmB,EAAKC,eAAjCn1C,QACR,IAAIk1C,IAAkBA,EAAen/B,QAArC,CAIA,IAAMq/B,EAAcrwC,KAAUqgB,SAASryB,IAAI,mBACrC6hC,EAAcwgB,GAAeA,EAAYx0C,KAAO,EAEtD,EAAK/W,SAAS,CAAE+qC,cAAaC,aAAcwf,MAAqB,WAC5D,IAAKU,GAAmBngB,EAAa,CAAC,IAC1B50B,EAAY,EAAKi1C,cAAjBj1C,QACR,GAAIA,EAAQgV,QAAS,CAAC,IACDqgC,EAAgBr1C,EAAQgV,QAAjChV,QACJq1C,GAAeA,EAAYvgC,UAAY,IACvC9U,EAAQ8U,WAAa,QAMjCigC,IAAoBngB,GACpBprC,IAAgBgG,aAAa,CACzB,QAAS,gCAzOF,EA8OnBokD,uBA9OmB,sCA8OM,WAAMtoD,GAAN,eAAAsO,EAAA,yDACIopB,KAAjB7X,aADa,iDAIb3H,EAASlY,EAATkY,KAER,EAAK3Z,SAAS,CAAEgqD,aAAcrwC,IANT,yCA9ON,wDAuPnBiwC,uBAAyB,SAAAnoD,GAErB,IADyB03B,KAAjB7X,aACR,CAF+B,IAIvB3H,EAAiBlY,EAAjBkY,KAAMrK,EAAW7N,EAAX6N,OAEd,EAAKtP,SAAS,CAAE6pD,aAAclwC,EAAMmwC,SAAUx6C,MA7P/B,EAgQnB26C,uBAhQmB,sCAgQM,WAAMxoD,GAAN,eAAAsO,EAAA,yDACIopB,KAAjB7X,aADa,iDAIb3H,EAASlY,EAATkY,KAER,EAAK3Z,SAAS,CAAEkqD,aAAcvwC,IANT,yCAhQN,wDAyQnBwwC,yBAzQmB,sCAyQQ,WAAM1oD,GAAN,eAAAsO,EAAA,yDACEopB,KAAjB7X,aADe,iDAIf3H,EAASlY,EAATkY,KAER,EAAK3Z,SAAS,CAAEoqD,eAAgBzwC,IANT,yCAzQR,wDAkRnB8xC,sBAAwB,SAAAhqD,GAAW,IACvBkY,EAASlY,EAATkY,KAER,EAAK3Z,SAAS,CAAEwmC,YAAa7sB,KArRd,EAwRnB+xC,0BAA4B,SAAAjqD,GACxB,EAAKiW,eAzRU,EA4RnB4xC,yBAA2B,SAAA7nD,GAEvB,IADyB03B,KAAjB7X,aACR,CAFiC,IAIzBhS,EAAkB7N,EAAlB6N,OAAQqJ,EAAUlX,EAAVkX,MAJiB,EAKgB,EAAKrZ,MAA9CwzB,EALyB,EAKzBA,WAAYy2B,EALa,EAKbA,aAActxC,EALD,EAKCA,WAElC,IAAI6a,GAAcxjB,IAAWi6C,GAAgB5wC,IAAUV,EAAvD,CAIA,IAAMwxC,EAAS,EAAKkC,iBAAiBx1C,QACrC,EAAKnW,SACD,CACI8yB,YAAY,EACZy2B,aAAcj6C,EACd2I,WAAY,KACZuuB,aAAa,EACbwjB,cAAc,EACdH,cAAc,EACdK,cAAc,EACdE,gBAAgB,GAEpB,WACQX,GACAA,EAAOE,aAAahxC,QArTjB,EA2TnB+W,kBAAoB,WACQ,EAAKpwB,MAArBknC,YAEJ7mC,IAAgBgG,aAAa,CACzB,QAAS,6BAGb,EAAKylD,cAAcj1C,QAAQy1C,eAlUhB,EAsUnBl5B,aAAe,SAAA23B,GACX,EAAKrqD,SAAS,CACV8yB,WAAYu3B,EACZd,aAAc,EACdtxC,WAAY,QA1UD,EA8UnB63B,oBAAsB,SAACxgC,EAAQqU,EAAWmP,GACtClP,aAAStU,EAAQqU,GAEjB,IAAM4lC,EAAez2B,EAAa,EAAKxzB,MAAMiqD,aAAe,EACtDtxC,EAAa6a,EAAa,EAAKxzB,MAAM2Y,WAAa,KAExD,EAAKjY,SAAS,CACV8yB,aACAy2B,eACAtxC,gBAvVW,EA2VnBuc,kBAAoB,WAChB,EAAKx0B,SAAS,CACV8yB,YAAY,EACZy2B,aAAc,EACdtxC,WAAY,QA/VD,EAmWnBowB,uBAAyB,SAAA79B,GACrB,EAAKxK,SAAS,CACViY,WAAYzN,EACZmO,MAAO,QAtWI,EA0WnBsyC,gBAAkB,WACd,EAAKphB,aA3WU,EAmXnBgiB,mBAAqB,WACjB,EAAK7rD,SAAS,CAAEwmC,aAAa,KApXd,EAuXnBslB,oBAAsB,WAClB,EAAK9rD,SAAS,CAAEgqD,cAAc,KAxXf,EA2XnB7D,oBAAsB,WAClB,EAAKnmD,SAAS,CAAE6pD,cAAc,KA5Xf,EA+XnBkC,oBAAsB,WAClB,EAAK/rD,SAAS,CAAEkqD,cAAc,KAhYf,EAmYnB8B,sBAAwB,WACpB,EAAKhsD,SAAS,CAAEoqD,gBAAgB,KAjYhC,EAAKgB,cAAgBxqD,IAAM2Y,YAC3B,EAAK+xC,eAAiB1qD,IAAM2Y,YAC5B,EAAKoyC,iBAAmB/qD,IAAM2Y,YAE9B,EAAKja,MAAQ,CACT+jC,MAAO,KAEP0H,aAAa,EACbC,aAAc,KAEdihB,UAAW,GACXC,aAAc,GAEdnlB,QAAS4jB,GACT73B,YAAY,EACZ0T,aAAa,EACbwjB,cAAc,EACdH,cAAc,EACdK,cAAc,EACdE,gBAAgB,EAEhBb,aAAc,EACdtxC,WAAY,KACZU,MAAO,MA1BI,E,mFA8BGqC,EAAWC,GAAY,IAAD,EAepChc,KAAKK,MAbL+jC,EAFoC,EAEpCA,MACA0H,EAHoC,EAGpCA,YACAC,EAJoC,EAIpCA,aACAihB,EALoC,EAKpCA,UACAC,EANoC,EAMpCA,aACAp5B,EAPoC,EAOpCA,WACA0T,EARoC,EAQpCA,YACAqjB,EAToC,EASpCA,aACAG,EAVoC,EAUpCA,aACAE,EAXoC,EAWpCA,aACAE,EAZoC,EAYpCA,eACAb,EAboC,EAapCA,aACAtxC,EAdoC,EAcpCA,WAGJ,OAAIgD,EAAUooB,QAAUA,IAIpBpoB,EAAU8vB,cAAgBA,IAI1B9vB,EAAU+vB,eAAiBA,IAI3B/vB,EAAUixC,eAAiBA,IAI3BjxC,EAAUgxC,YAAcA,IAIxBhxC,EAAU6X,aAAeA,IAIzB7X,EAAUurB,cAAgBA,IAI1BvrB,EAAU4uC,eAAiBA,IAI3B5uC,EAAU+uC,eAAiBA,IAI3B/uC,EAAUivC,eAAiBA,IAI3BjvC,EAAUmvC,iBAAmBA,IAI7BnvC,EAAUsuC,eAAiBA,GAI3BtuC,EAAUhD,aAAeA,e,0CAQ7BhZ,KAAKktD,YAELhzB,KAAS/uB,GAAG,yBAA0BnL,KAAKqqD,0BAC3CnwB,KAAS/uB,GAAG,0BAA2BnL,KAAKysD,2BAC5CvyB,KAAS/uB,GAAG,wBAAyBnL,KAAKo3B,yBAC1Cnb,KAAU9Q,GAAG,yBAA0BnL,KAAKgrC,mBAC5C/uB,KAAU9Q,GAAG,wBAAyBnL,KAAKgrC,mBAC3C/uB,KAAU9Q,GAAG,qBAAsBnL,KAAKgrC,mBACxC/uB,KAAU9Q,GAAG,uBAAwBnL,KAAK2qD,wBAC1C1uC,KAAU9Q,GAAG,sBAAuBnL,KAAKwsD,uBACzCvwC,KAAU9Q,GAAG,uBAAwBnL,KAAK8qD,wBAC1C7uC,KAAU9Q,GAAG,uBAAwBnL,KAAKgrD,wBAC1C/uC,KAAU9Q,GAAG,yBAA0BnL,KAAKkrD,0BAC5CnhB,GAAY5+B,GAAG,oBAAqBnL,KAAK8pC,uB,6CAIzC5P,KAAS5uB,IAAI,yBAA0BtL,KAAKqqD,0BAC5CnwB,KAAS5uB,IAAI,0BAA2BtL,KAAKysD,2BAC7CvyB,KAAS5uB,IAAI,wBAAyBtL,KAAKo3B,yBAC3Cnb,KAAU3Q,IAAI,yBAA0BtL,KAAKgrC,mBAC7C/uB,KAAU3Q,IAAI,wBAAyBtL,KAAKgrC,mBAC5C/uB,KAAU3Q,IAAI,qBAAsBtL,KAAKgrC,mBACzC/uB,KAAU3Q,IAAI,uBAAwBtL,KAAK2qD,wBAC3C1uC,KAAU3Q,IAAI,sBAAuBtL,KAAKwsD,uBAC1CvwC,KAAU3Q,IAAI,uBAAwBtL,KAAK8qD,wBAC3C7uC,KAAU3Q,IAAI,uBAAwBtL,KAAKgrD,wBAC3C/uC,KAAU3Q,IAAI,yBAA0BtL,KAAKkrD,0BAC7CnhB,GAAYz+B,IAAI,oBAAqBtL,KAAK8pC,uB,oKA8BrBrC,GAAWjD,O,gDAAW,G,OAArCJ,E,KAEE3vB,EAAwB2vB,EAAxB3vB,MAAOowB,EAAiBT,EAAjBS,aAEfkF,GAAY/lB,QAAU+lB,GAAY/lB,SAAWyjB,GAAWzjB,QACxDhkB,KAAKe,SAAS,CACVqjC,QAEA0H,YAAajH,GAAgBA,EAAa/xB,OAAS,EACnDi5B,aAAcwf,OAGlBvrD,KAAK+vB,kBAAkBtb,GAAS,IAAIF,IAAI,SAAArV,GAAC,OAAIA,EAAET,MAE/CiC,IAAgBgG,aAAa,CACzB,QAAS,4B,sQAKPiN,EAAW,IACRK,KAAKtT,IAAgBC,KAAK,CAC/B,QAAS,WACTw+B,UAAW,CAAE,QAAS,gBACtBtrB,aAAc,sBACdC,eAAgB,EAChBC,MAAOs4B,OAEX14B,EAASK,KAAKtT,IAAgBC,KAAK,CAC/B,QAAS,WACTw+B,UAAW,CAAE,QAAS,mBACtBtrB,aAAc,sBACdC,eAAgB,EAChBC,MAAOs4B,O,SAE6B/3B,QAAQ7C,IAAIkC,G,mCAA7Cw5C,E,KAAWtoB,E,KAEV7gB,EAAY+lB,GAAZ/lB,QAERyjB,GAAWzB,KAAKhiB,EAASmpC,EAAUv4C,SAAUiwB,EAAajwB,U,uIAsK7CD,GACb,IAAME,EAAQ7K,IAAU8K,WACxBC,YAAiBF,EAAOF,K,+BAuBlB,IAAD,EAiBD3U,KAAKK,MAfL+jC,EAFC,EAEDA,MACA0H,EAHC,EAGDA,YACAC,EAJC,EAIDA,aACAihB,EALC,EAKDA,UACAC,EANC,EAMDA,aACApC,EAPC,EAODA,SACAD,EARC,EAQDA,aACAG,EATC,EASDA,aACAxjB,EAVC,EAUDA,YACA1T,EAXC,EAWDA,WACAo3B,EAZC,EAYDA,aACAE,EAbC,EAaDA,eACArjB,EAdC,EAcDA,QACAwiB,EAfC,EAeDA,aACAtxC,EAhBC,EAgBDA,WAGEo0C,EAAiBhpB,EAAQA,EAAM3vB,OAAS,GAAK,KAC7C44C,EAAoBjpB,EAAQA,EAAMS,cAAgB,GAAK,KAE7D,OACI,oCACI,yBAAKxjC,UAAU,WACX,yBAAKA,UAAU,gBACX,kBAAC,GAAD,CACI4Z,IAAKjb,KAAK0sD,iBACV74B,WAAYA,EACZiU,QAAqB,IAAZA,EACTr5B,QAASzO,KAAKywB,kBACdkD,SAAU3zB,KAAKyzB,aACf4V,mBAAoBrpC,KAAKopC,yBAE7B,yBAAK/nC,UAAU,mBACX,yBAAKA,UAAU,4BACX,kBAAC,GAAD,MAEA,kBAAC,GAAD,CACIqb,KAAK,eACLzB,IAAKjb,KAAKmsD,cACVngB,WAAYohB,EACZthC,MAAOkhC,EACPlhB,YAAaA,EACbC,aAAcA,EACdrxB,MAAM,EACNmwB,YAAa7qC,KAAKgsD,mBAG1B,kBAACsB,GAAA,EAAD,CACIh/C,WAAW,SACXw5B,QAASA,EACTyK,GAAI1e,EACJ2e,cAAc,EACdC,eAAe,GACf,kBAAC,GAAD,CACIpiC,OAAQi6C,EACR/+C,KAAMyN,EACNg4B,gBAAiBhxC,KAAK6wC,oBACtB/1B,QAAS9a,KAAKu1B,sBAI1B,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAa7a,KAAM6sB,EAAaO,QAASA,EAAShtB,QAAS9a,KAAK4sD,oBAC5D,kBAAC,GAAD,CACIxf,aAAcptC,KAAKqsD,eACnBvgC,MAAOmhC,EACPjhB,WAAYqhB,KAIpB,kBAAC,GAAD,CAAa3yC,KAAMqwC,EAAcjjB,QAASA,EAAShtB,QAAS9a,KAAK6sD,qBAC7D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAanyC,KAAMkwC,EAAc9iB,QAASA,EAAShtB,QAAS9a,KAAKknD,qBAC7D,kBAAC,GAAD,CAAU72C,OAAQw6C,KAGtB,kBAAC,GAAD,CAAanwC,KAAMuwC,EAAcnjB,QAASA,EAAShtB,QAAS9a,KAAK8sD,qBAC7D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAapyC,KAAMywC,EAAgBrjB,QAASA,EAAShtB,QAAS9a,KAAK+sD,uBAC/D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,Y,GAleEnrD,aCsCP2rD,G,2MA9DXltD,MAAQ,CACJgQ,OAAQiwB,KAAiBnG,c,EAmB7BqzB,iCAAmC,SAAAhrD,GAC3B89B,KAAiBmtB,oBACjB,EAAKtqD,e,EAIbuqD,2BAA6B,SAAAlrD,GAAW,IAC5B6N,EAAW7N,EAAX6N,OAER,EAAKtP,SAAS,CAAEsP,Y,EAGpBlN,YAAc,WACVzC,IAAgBgG,aAAa,CACzB,QAAS,2BACT2J,OAAQ,K,qFA/BM0L,EAAWC,EAAWqK,GAAc,IAC9ChW,EAAWrQ,KAAKK,MAAhBgQ,OAER,OAAO2L,EAAU3L,SAAWA,I,0CAI5BiwB,KAAiBn1B,GAAG,2BAA4BnL,KAAK0tD,4BACrDptB,KAAiBn1B,GAAG,iCAAkCnL,KAAKwtD,oC,6CAI3DltB,KAAiBh1B,IAAI,2BAA4BtL,KAAK0tD,4BACtDptB,KAAiBh1B,IAAI,iCAAkCtL,KAAKwtD,oC,+BAsBtD,IACEn9C,EAAWrQ,KAAKK,MAAhBgQ,OACR,OAAKA,EAGD,kBAAC,IAAD,CACIqK,MAAI,EACJC,QAASC,KACTC,mBAAoB,EACpBC,QAAS9a,KAAKmD,YACdoM,QAAS,CACL5F,KAAM,wBACN+B,UAAW,6BACX2/C,MAAO,2BAEX,kBAAC,GAAD,CAAUhqD,UAAU,2BAA2BgP,OAAQA,EAAQse,OAAK,KAbxD,S,GA1CChtB,IAAMC,W,oDCNpBC,gBACX,0BAAMC,EAAE,6zBACR,QCFWD,gBACX,0BAAMC,EAAE,uuBACR,cCFWD,gBACX,0BAAMC,EAAE,uzCACR,U,qBCYE6rD,I,kNACFttD,MAAQ,CACJ0mC,SAAU,M,EAGd6mB,gBAAkB,SAAAnrD,GACd,EAAK1B,SAAS,CAAEgmC,SAAUtkC,EAAMukC,iB,EAGpCC,gBAAkB,WACd,EAAKlmC,SAAS,CAAEgmC,SAAU,Q,EAG9B8mB,kBAAoB,WAChB,EAAK5mB,kBADiB,IAGd6mB,EAAkB,EAAKhtD,MAAvBgtD,cACHA,GAEL1kD,WAAW,kBAAM0kD,KAAiBC,M,EAGtCC,qBAAuB,WACnB,EAAK/mB,kBADoB,IAGjBgnB,EAAqB,EAAKntD,MAA1BmtD,iBACHA,GAEL7kD,WAAW,kBAAM6kD,KAAoBF,M,EAGzCG,iBAAmB,WACf,EAAKjnB,kBADgB,IAGbknB,EAAiB,EAAKrtD,MAAtBqtD,aACHA,GAELA,K,wEAGM,IAAD,EAC0BnuD,KAAKc,MAAnB0P,GADZ,EACGjB,QADH,EACYiB,GAAGH,EADf,EACeA,OACZ02B,EAAa/mC,KAAKK,MAAlB0mC,SAER,OACI,oCACI,kBAAC3wB,EAAA,EAAD,CACI/U,UAAU,uBACVgV,aAAW,SACXqE,KAAM+N,QAAQse,GACdt4B,QAASzO,KAAK4tD,iBACd,kBAACQ,GAAD,OAEJ,kBAACnmB,GAAA,EAAD,CACIxpC,GAAG,cACHsoC,SAAUA,EACVrsB,KAAM+N,QAAQse,GACdmB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB9iB,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAEhBjW,QAAS,CACL87C,MAAO,uBAEXvwC,QAAS9a,KAAKinC,iBACd,kBAACthB,GAAA,EAAD,CAAUlX,QAASzO,KAAK6tD,kBAAmB79C,UAAWq+C,YAAqBh+C,IACvE,kBAACyP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,kBAE7B,kBAACmV,GAAA,EAAD,CAAUlX,QAASzO,KAAKguD,qBAAsBh+C,UAAWq+C,YAAqBh+C,IAC1E,kBAACyP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,sBAE3BmO,aAActO,IACZ,kBAACsV,GAAA,EAAD,CAAUlX,QAASzO,KAAKkuD,iBAAkBl+C,UAAWs+C,YAAaj+C,IAC9D,kBAACyP,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,iB,GAzF1B7O,IAAMC,YAyGlBgP,iBAAkB+8C,I,8BC1H1B,SAASY,GAAUC,GAAsB,IAAhBC,EAAe,wDAC3C,GAAKD,EAAL,CAEA,GAAIC,GAASD,EAAKnsB,YAAcmsB,EAAKnsB,WAAWvvB,OAAS,EAAG,CACxD,IAAM47C,EAAWF,EAAKnsB,WAAWmsB,EAAKnsB,WAAWvvB,OAAS,GACpD0vB,EAAQv9B,SAASw9B,cACvBD,EAAME,SAASgsB,EAAUA,EAAS57C,QAClC0vB,EAAMG,UAAS,GAEf,IAAMC,EAAY33B,OAAO43B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBgsB,EAAKxiC,UAAYwiC,EAAKn9B,aAG1Bm9B,EAAK9mD,SCfT,IAAM8oC,GACS,EADTA,GAEK,GAFLA,GAGI,GAHJA,GAIG,GAJHA,GAKM,GALNA,GAOS,GAPTA,GAQO,GARPA,GASU,GATVA,GAUS,GAGFme,GAAQ,CACjBC,QAAS,GACTC,aAAc,GACdC,UAHiB,SAGP//C,GACN,MAA0C,qBAA5B/O,KAAK4uD,QAAQ7/C,EAAE6J,UAEjCm2C,eANiB,SAMFhgD,GACX,MAA+C,qBAAjC/O,KAAK6uD,aAAa9/C,EAAE6J,WAI1C+1C,GAAMC,QAAQpe,KAAqB,EACnCme,GAAMC,QAAQpe,KAAiB,EAC/Bme,GAAMC,QAAQpe,KAAgB,EAC9Bme,GAAMC,QAAQpe,KAAe,EAC7Bme,GAAMC,QAAQpe,KAAkB,EAEhCme,GAAME,aAAare,KAAmB,EACtCme,GAAME,aAAare,KAAqB,EACxCme,GAAME,aAAare,KAAqB,EACxCme,GAAME,aAAare,KAAsB,E,WClBnCwe,G,YACF,WAAYluD,GAAQ,IAAD,8BACf,4CAAMA,KASVmuD,QAAU,WACN,OAAO,EAAKC,cAAch4C,QAAQwB,WAXnB,EAcnBhR,MAAQ,WAAoB,IAAnB+mD,EAAkB,wDACjBD,EAAO,EAAKU,cAAch4C,QAEhCq3C,GAAUC,EAAMC,IAjBD,EAoBnB3pC,aAAe,WAAO,IAAD,EACY,EAAKhkB,MAA1BskC,EADS,EACTA,OAAQkI,EADC,EACDA,SACXlI,GACAkI,GAELA,EAASlI,EAAO3mC,KAzBD,EA4BnBqqC,YAAc,SAAArmC,GAAU,IACZ2iC,EAAW,EAAKtkC,MAAhBskC,OAER3iC,EAAM6B,iBAEN,IAAMkqD,EAAO,EAAKU,cAAch4C,QAC1BpE,EAAS07C,EAAKW,QAAQr8C,OAEtBvH,GADYijD,EAAKW,QAAQC,UAClB,EAAKH,WAElB,EAAKluD,SAAS,CACVsuD,aAAcv8C,EAASvH,EAAKuH,SAGhCpS,IAAgBgG,aAAa,CACzB,QAAS,yBACTjI,GAAI2mC,EAAO3mC,GACX8M,UA7CW,EAiDnBuoB,cAAgB,SAAArxB,GACZ,IAAM+rD,EAAO,EAAKU,cAAch4C,QAC1Bk4C,EAAYZ,EAAKW,QAAQC,UAEzBt8C,EADY,EAAKm8C,UACEn8C,OAErBw8C,GAAe,EACb1sB,EAAY33B,OAAO43B,eACnBisB,EAAYH,GAAMG,UAAUrsD,GAC5BssD,EAAiBJ,GAAMI,eAAetsD,GAM5C,OAJImgC,IACA0sB,IAAiB1sB,EAAU2sB,YAGvB9sD,EAAME,KACV,IAAK,YAED,IADa,EAAKssD,UACP,CAAC,IAAD,EACsB,EAAKnuD,MAA1BskC,EADD,EACCA,OAAQkI,EADT,EACSA,SAMhB,OALIA,GACAA,EAASlI,EAAO3mC,IAAI,GAGxBgE,EAAM6B,kBACC,EAGX,MAEJ,IAAK,QAAU,IAAD,EACsB,EAAKxD,MAA7BskC,EADE,EACFA,OAAQoqB,EADN,EACMA,YAMhB,OALIpqB,GAAUoqB,GACVA,EAAYpqB,EAAO3mC,IAGvBgE,EAAM6B,kBACC,EAEX,IAAK,UACD,IAAMs+B,EAAY33B,OAAO43B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU6sB,YAAa,MAE5B,IAAM7sC,EAAa4rC,EAAKnsB,YAAcmsB,EAAKnsB,WAAWvvB,OAAS,EAAI07C,EAAKnsB,WAAW,GAAK,KAExF,IAAKzf,GAAeggB,EAAU8sB,aAAe9sC,IAAeggB,EAAU+sB,aAAe,CAAC,IAAD,EACjD,EAAK7uD,MAA7BskC,EADyE,EACzEA,OAAQwqB,EADiE,EACjEA,YAMhB,OALIA,GACAA,EAAYxqB,EAAO3mC,IAGvBgE,EAAM6B,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMs+B,EAAY33B,OAAO43B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU6sB,YAAa,MAE5B,IAAMI,EACFrB,EAAKnsB,YAAcmsB,EAAKnsB,WAAWvvB,OAAS,EAAI07C,EAAKnsB,WAAWmsB,EAAKnsB,WAAWvvB,OAAS,GAAK,KAElG,IAAK+8C,GAAcjtB,EAAU8sB,aAAeG,GAAajtB,EAAU+sB,eAAiBE,EAAU/8C,OAAS,CAAC,IAAD,EACnE,EAAKhS,MAA7BskC,EAD2F,EAC3FA,OAAQoqB,EADmF,EACnFA,YAMhB,OALIA,GACAA,EAAYpqB,EAAO3mC,IAGvBgE,EAAM6B,kBACC,GAOnB,SAAIwqD,IAAaC,OAIbj8C,GAAUs8C,IAAcE,KACxB7sD,EAAM6B,kBACC,KAvII,EA6InB0vB,YAAc,SAAAvxB,GACVA,EAAM6B,iBAEN,IACM8qD,EADO,EAAKF,cAAch4C,QACTi4C,QAAQC,UAEzBxsB,EAAY33B,OAAO43B,eACnBitB,EAAkBltB,EAAYA,EAAU2sB,WAAa,GAErD72C,EAAY,EAAKu2C,UACvB,KAAIv2C,EAAU5F,OAAS8vB,EAAU9vB,QAAUs8C,GAA3C,CAEA,IAAIW,EAAYttD,EAAMoX,cAAcC,QAAQ,cACvCi2C,IAELA,EAAYA,EAAU/rD,QAAQ,OAAQ,MAAMA,QAAQ,KAAM,KAEtD0U,EAAU5F,OAASg9C,EAAgBh9C,OAASi9C,EAAUj9C,OAASs8C,IAC/DW,EAAYA,EAAUngB,OAAO,EAAGwf,EAAY12C,EAAU5F,OAASg9C,EAAgBh9C,SAEnF7N,SAASkN,YAAY,cAAc,EAAO49C,MAjK3B,EAoKnBrnD,aAAe,WAAO,IACV08B,EAAW,EAAKtkC,MAAhBskC,OACHA,GAEL1kC,IAAgBgG,aAAa,CACzB,QAAS,+BACTjI,GAAI2mC,EAAO3mC,MAvKf,EAAKywD,cAAgBvtD,IAAM2Y,YAE3B,EAAKja,MAAQ,CACTgvD,aAAcW,MANH,E,sEA8KT,IAAD,EACiBhwD,KAAKc,MAAnB0P,EADH,EACGA,EAAG40B,EADN,EACMA,OACHiqB,EAAiBrvD,KAAKK,MAAtBgvD,aAEAY,EAAc7qB,EAAd6qB,UAER,OACI,yBAAK5uD,UAAU,sBACX,yBAAKA,UAAU,8BACX,kBAACo2C,GAAA,EAAD,CACI90C,IAAK+kB,KAAK1oB,MACVuQ,QAAS,CAAE5F,KAAM,0BACjB2M,MAAM,UACN2J,QAASgwC,EACTrgD,SAAU5P,KAAK0I,eAEnB,yBACIuS,IAAKjb,KAAKkvD,cACV7tD,UAAU,0BACVkQ,iBAAe,EACf2J,gCAA8B,EAC9BC,YAAa3K,EAAE,UACf0/C,cAAaC,KACbC,kBAAiBJ,KACjB9mB,QAASlpC,KAAK8oC,YACdpmC,UAAW1C,KAAK8zB,cAChBzY,QAASrb,KAAKg0B,eAGtB,yBAAK3yB,UAAU,oCACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,4BAA4BoN,QAASzO,KAAK8kB,cAC5D,kBAAC9V,EAAA,EAAD,CAAWqhD,SAAS,YAG5B,yBAAKhvD,UAAU,qCACdguD,GAAgBc,KAAqBG,MAClC,kBAAC,KAAD,CACIC,MAAM,SACNlvD,UAAU,8BACViV,MAAO+4C,GAAgB,EAAI,gBAAkB,QAC7C/uC,QAAQ,aACP+uC,Q,GAxNM1tD,IAAMC,WA6OtB6Z,GANCC,YACZuX,cACAriB,cACAsiB,cAGWzX,CAAQuzC,I,UCvNjBwB,I,mBACF,WAAY1vD,GAAQ,IAAD,8BACf,4CAAMA,KAsCV2vD,0BAA4B,SAAAjuD,GAAW,IAC3BkuD,EAASC,KAATD,KAER,EAAK3vD,SAAS,CACV6vD,SAAS,EACTvB,aAAcwB,KACdH,UA7CW,EAiDnBI,+BAAiC,SAAAtuD,GAAW,IAChCkuD,EAASC,KAATD,KAEFlC,EAAO,EAAKuC,YAAY75C,QACxBpE,EAAS07C,EAAKW,QAAQr8C,OACtB4F,EAAY81C,EAAK91C,UAEvB,EAAK3X,SAAS,CACVsuD,aAAcv8C,EAAS4F,EAAU5F,OACjC49C,UA1DW,EA8DnBM,uBAAyB,SAAAxuD,GAAW,IACxBkuD,EAASC,KAATD,KAER,EAAK3vD,SAAS,CAAE2vD,UAjED,EAoEnBO,gCAAkC,SAAAzuD,GAAW,IACjCkuD,EAASC,KAATD,KAER,EAAK3vD,SAAS,CAAE2vD,QAAQ,WACpBtnD,WAAW,WACM,EAAK8nD,cAAcjnD,IAAIymD,EAAKpyD,QAAQwU,OAAS,GAErDpL,OAAM,QA3EJ,EA0FnBosB,cAAgB,SAAArxB,GACZ,IAAM+rD,EAAO,EAAKuC,YAAY75C,QACxBk4C,EAAYZ,EAAKW,QAAQC,UAEzBt8C,EADY07C,EAAK91C,UACE5F,OAErBw8C,GAAe,EACb1sB,EAAY33B,OAAO43B,eACnBisB,EAAYH,GAAMG,UAAUrsD,GAC5BssD,EAAiBJ,GAAMI,eAAetsD,GAM5C,OAJImgC,IACA0sB,IAAiB1sB,EAAU2sB,YAGvB9sD,EAAME,KACV,IAAK,QACD,IAAKF,EAAMO,SAIP,OAHA,EAAKmuD,sBAAsB,GAE3B1uD,EAAM6B,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMs+B,EAAY33B,OAAO43B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU6sB,YAAa,MAE5B,IAAMI,EACFrB,EAAKnsB,YAAcmsB,EAAKnsB,WAAWvvB,OAAS,EAAI07C,EAAKnsB,WAAWmsB,EAAKnsB,WAAWvvB,OAAS,GAAK,KAElG,IAAK+8C,GAAcjtB,EAAU8sB,aAAeG,GAAajtB,EAAU+sB,eAAiBE,EAAU/8C,OAI1F,OAHA,EAAKq+C,sBAAsB,GAE3B1uD,EAAM6B,kBACC,EAOnB,SAAIwqD,IAAaC,OAIbj8C,GAAUs8C,IAAcE,KACxB7sD,EAAM6B,kBACC,KA7II,EAmJnB0vB,YAAc,SAAAvxB,GACVA,EAAM6B,iBAEN,IAAMkqD,EAAO,EAAKuC,YAAY75C,QACxBk4C,EAAYZ,EAAKW,QAAQC,UAEzBxsB,EAAY33B,OAAO43B,eACnBitB,EAAkBltB,EAAYA,EAAU2sB,WAAa,GAErD72C,EAAY81C,EAAK91C,UACvB,KAAIA,EAAU5F,OAAS8vB,EAAU9vB,QAAUs8C,GAA3C,CAEA,IAAIW,EAAYttD,EAAMoX,cAAcC,QAAQ,cACvCi2C,IAEDr3C,EAAU5F,OAASg9C,EAAgBh9C,OAASi9C,EAAUj9C,OAASs8C,IAC/DW,EAAYA,EAAUngB,OAAO,EAAGwf,EAAY12C,EAAU5F,OAASg9C,EAAgBh9C,SAEnF7N,SAASkN,YAAY,cAAc,EAAO49C,MArK3B,EAwKnBjnB,YAAc,SAAArmC,GACVA,EAAM6B,iBAEN,IAAMkqD,EAAO,EAAKuC,YAAY75C,QAGxBwB,EAAY81C,EAAK91C,UAGL,SAFA81C,EAAKniD,YAGnBmiD,EAAK91C,UAAY,IAOrBhY,IAAgBgG,aAAa,CACzB,QAAS,2BACT0qD,SAAU14C,KA3LC,EA+LnB24C,gBAAkB,WAAO,IACbX,EAAS,EAAKrwD,MAAdqwD,KACR,GAAKA,KAEeA,EAAZpyD,QACIwU,QAAUw+C,MAAtB,CAEA,IAAMlsB,EAAS,CACX3mC,GAAIipB,KAAK1oB,MACTuM,KAAM,IAGV7K,IAAgBgG,aAAa,CACzB,QAAS,4BACT0+B,aA7MW,EAiNnBmsB,mBAAqB,SAAC9yD,GAA2B,IAAvB+yD,EAAsB,wDACxCA,EACA,EAAKC,wBAAwBhzD,GAE7B,EAAKqmB,aAAarmB,IArNP,EAyNnBqmB,aAAe,SAAArmB,GACXiC,IAAgBgG,aAAa,CACzB,QAAS,+BACTjI,QA5NW,EAgOnBgzD,wBAA0B,SAAAhzD,GAAO,IACrBiyD,EAAS,EAAKrwD,MAAdqwD,KACR,GAAKA,EAAL,CAOA,IAT4B,IAIpBpyD,EAAYoyD,EAAZpyD,QAEF0jB,EAAQ1jB,EAAQq2B,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOA,IACxCizD,EAAY1vC,EAAQ,EACtB2vC,GAAe,EACVv+C,EAAI4O,EAAO5O,EAAI9U,EAAQwU,OAAQM,IAAK,CAEzC,GADiB9U,EAAQ8U,GAAjB7H,KACE,CACNomD,GAAe,EACf,OAIJA,GACA,EAAKJ,mBAAmB9yD,GAG5B,IAAMmzD,EAAW,EAAKV,cAAcjnD,IAAIynD,GACxC,GAAKE,EAOLA,EAASlqD,OAAM,QAJX6mD,GAFgB,EAAKwC,YAAY75C,SAEd,KAzPR,EAgQnB26C,sBAAwB,SAAApzD,GAAO,IACnBiyD,EAAS,EAAKrwD,MAAdqwD,KACR,GAAKA,EAAL,CAF0B,IAOpBgB,EAHchB,EAAZpyD,QAEcq2B,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOA,IACpB,EAEpBmzD,EAAW,EAAKV,cAAcjnD,IAAIynD,GACxC,GAAKE,EAOLA,EAASlqD,OAAM,QAJX6mD,GAFgB,EAAKwC,YAAY75C,SAEd,KA7QR,EAoRnBi6C,sBAAwB,SAAA1yD,GAAO,IACnBiyD,EAAS,EAAKrwD,MAAdqwD,KACR,GAAKA,EAAL,CAF0B,IAIlBpyD,EAAYoyD,EAAZpyD,QAEF0jB,EAAQ1jB,EAAQq2B,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOA,IACxCqzD,EAAY9vC,EAAQ,EAEpB+vC,EAAW,EAAKb,cAAcjnD,IAAI6nD,GACxC,GAAKC,EAULA,EAASrqD,MAAMqqD,GAAU,OAVzB,CACI,IAAMxmD,EAAOyW,GAAS,GAAKA,EAAQ1jB,EAAQwU,OAASxU,EAAQ0jB,GAAOzW,KAAO,GAC1E,GAAIjN,EAAQwU,SAAWvH,EACnB,OAGJ,EAAK8lD,qBApSM,EA2SnBW,QAAU,WAAO,IACLtB,EAAS,EAAKrwD,MAAdqwD,KACR,GAAKA,EAAL,CAFY,IAIJpyD,EAAYoyD,EAAZpyD,QAEF2zD,EAAWX,KAAyBhzD,EAAQwU,OAElD,OAAIm/C,GAAY,EACL,gDAEM,IAAbA,EACO,6BAGL,eAAN,OAAsBX,KAAyBhzD,EAAQwU,OAAvD,oBA1Te,EA6TnB3P,YAAc,WAAO,IACTutD,EAAS,EAAKrwD,MAAdqwD,KAEJwB,aAAYxB,GACZ,EAAK3vD,SAAS,CAAE6vD,SAAS,IAEzB,EAAKuB,0BAnUM,EAuUnBt7C,WAAa,WAAO,IACRu7C,EAAW,EAAKtxD,MAAhBsxD,OAEFC,EAAmB1B,KAAU2B,sBAC9BD,IAELD,EAAOC,GAEP,EAAKF,2BA/UU,EAkVnBI,wBAA0B,WACtB,EAAKxxD,SAAS,CAAE6vD,SAAS,KAnVV,EAsVnBuB,uBAAyB,WACrB,EAAKI,0BAEL7xD,IAAgBgG,aAAa,CACzB,QAAS,4BA1VE,EA8VnB8rD,sBAAwB,WACpB9xD,IAAgBgG,aAAa,CACzB,QAAS,qCAhWE,EAoWnB+rD,iCAAmC,WAC/B/xD,IAAgBgG,aAAa,CACzB,QAAS,gDAtWE,EA0WnBgsD,iBAAmB,WACfhyD,IAAgBgG,aAAa,CACzB,QAAS,gCA5WE,EAgXnBiP,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK9U,MAAxC+U,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIzT,IAAI,QACJ0T,aAAW,QACXC,MAAM,UACNjV,UAAU,4BACVoN,QAAS,kBAAMqH,EAAcC,KAC7B,kBAAC/G,EAAA,EAAD,WA7XG,EAmYnB2jD,gCAAkC,SAAAlwD,GAAU,IAChC+N,EAAM,EAAK1P,MAAX0P,EACAkgD,EAAS,EAAKrwD,MAAdqwD,KACHA,IAEmC,iBAAvBA,EAAKh0C,KAAK,WAEvBja,EAAM4B,kBAEN,EAAKsR,sBAAsBnF,EAAE,8BAzYjC,EAAKugD,YAAcpvD,IAAM2Y,YACzB,EAAK42C,cAAgB,IAAIh+C,IAEzB,EAAK7S,MAAQ,CACTqwD,KAAM,KACNE,SAAS,EACTvB,aAAcwB,MATH,E,iFAcfF,KAAUxlD,GAAG,+BAAgCnL,KAAKgxD,wBAClDL,KAAUxlD,GAAG,kCAAmCnL,KAAKgxD,wBACrDL,KAAUxlD,GAAG,6CAA8CnL,KAAKgxD,wBAChEL,KAAUxlD,GAAG,6BAA8BnL,KAAKgxD,wBAChDL,KAAUxlD,GAAG,yBAA0BnL,KAAKgxD,wBAC5CL,KAAUxlD,GAAG,+BAAgCnL,KAAKgxD,wBAClDL,KAAUxlD,GAAG,sBAAuBnL,KAAKywD,2BACzCE,KAAUxlD,GAAG,4BAA6BnL,KAAKixD,iCAC/CN,KAAUxlD,GAAG,yBAA0BnL,KAAKgxD,wBAC5CL,KAAUxlD,GAAG,2BAA4BnL,KAAK8wD,kC,6CAI9CH,KAAUrlD,IAAI,+BAAgCtL,KAAKgxD,wBACnDL,KAAUrlD,IAAI,kCAAmCtL,KAAKgxD,wBACtDL,KAAUrlD,IAAI,6CAA8CtL,KAAKgxD,wBACjEL,KAAUrlD,IAAI,6BAA8BtL,KAAKgxD,wBACjDL,KAAUrlD,IAAI,yBAA0BtL,KAAKgxD,wBAC7CL,KAAUrlD,IAAI,+BAAgCtL,KAAKgxD,wBACnDL,KAAUrlD,IAAI,sBAAuBtL,KAAKywD,2BAC1CE,KAAUrlD,IAAI,4BAA6BtL,KAAKixD,iCAChDN,KAAUrlD,IAAI,yBAA0BtL,KAAKgxD,wBAC7CL,KAAUrlD,IAAI,2BAA4BtL,KAAK8wD,kC,yCA4ChC5vD,EAAWC,EAAWC,GAAW,IAAD,OAC9BpB,KAAKK,MAAdqwD,OAEKvvD,EAAUuvD,MACnBtnD,WAAW,WACPmlD,GAAU,EAAKwC,YAAY75C,SAAS,IACrC,K,+BA0TD,IAAD,OACG1G,EAAMxQ,KAAKc,MAAX0P,EADH,EAEmCxQ,KAAKK,MAArCgvD,EAFH,EAEGA,aAAcuB,EAFjB,EAEiBA,QAASF,EAF1B,EAE0BA,KAC/B,IAAKA,EAAM,OAAO,KAHb,IAKGkC,EAAiBlC,EAAjBkC,aAEFt0D,EAAUoyD,EAAOA,EAAKpyD,QAAU,GAChCu0D,EAAuBnC,EAAKh0C,KAAKo2C,uBACjCC,EAAsD,oBAAvBrC,EAAKh0C,KAAK,SACzCs2C,EAAkC,iBAAvBtC,EAAKh0C,KAAK,SAE3B1c,KAAKkxD,cAAcntB,QACnB,IAAMjY,EAAQxtB,EAAQiW,IAAI,SAACrV,EAAGkU,GAAJ,OACtB,kBAAC,GAAD,CACI6H,IAAK,SAAAyW,GAAE,OAAI,EAAKw/B,cAAc14C,IAAIpF,EAAGse,IACrC/uB,IAAKzD,EAAET,GACP2mC,OAAQlmC,EACRouC,SAAU,EAAKikB,mBACf3B,YAAa,EAAKiC,sBAClBrC,YAAa,EAAK2B,0BAIpB8B,EAAe3B,KAAyBhzD,EAAQwU,OAAS,EACzDk2B,EAAOhpC,KAAKgyD,UAElB,OACI,oCACI,kBAAC,IAAD,CACI3wD,UAAWiN,IAAW,qBAAsB,CAAE,qBAAsB0kD,IACpEt4C,MAAI,EACJC,QAASC,KACTC,mBAAoB,EACpBC,QAAS9a,KAAKmD,YACd4X,kBAAgB,gBAChB,kBAAC,IAAD,CAAatc,GAAG,gBAAgB+R,EAAE,YAClC,kBAAC,KAAD,CAAejB,QAAS,CAAE5F,KAAM,4BAC5B,yBAAKtI,UAAU,qCACX,kBAACgf,GAAA,EAAD,CAAY/J,MAAM,UAAUgK,QAAQ,YAAY5a,MAAO,CAAEwtD,SAAU,IAC9D1iD,EAAE,aAEN6+C,GAAgB8D,KAAuBC,MACpC,kBAAC/yC,GAAA,EAAD,CAAY/J,MAAO+4C,GAAgB,EAAI,gBAAkB,QAAS/uC,QAAQ,aACrE+uC,IAIb,yBACIp0C,IAAKjb,KAAK+wD,YACVtyD,GAAG,8BACH8S,iBAAe,EACf2J,gCAA8B,EAC9BC,YAAa3K,EAAE,gBACf0/C,cAAaiD,KACb/C,kBAAiBS,KACjBx1C,QAASrb,KAAKg0B,YACdtxB,UAAW1C,KAAK8zB,cAChBoV,QAASlpC,KAAK8oC,cAElB,kBAACuqB,GAAA,EAAD,CAAShyD,UAAU,YACnB,kBAACgf,GAAA,EAAD,CAAY/J,MAAM,UAAUgK,QAAQ,aAC/B9P,EAAE,gBAEP,kBAACqiB,GAAA,EAAD,CAAMtjB,QAAS,CAAE5F,KAAM,4BAClBmiB,EACAmnC,GACG,kBAACtzC,GAAA,EAAD,CACIrP,UAAU,EACVjP,UAAU,yBACVue,QAAM,EACNnR,QAASzO,KAAKqxD,iBACd,kBAAClxC,GAAA,EAAD,CAAcmzC,mBAAiB,EAAClzC,QAAS5P,EAAE,mBAIvD,kBAAC6P,GAAA,EAAD,KAAa2oB,GACb,kBAACqqB,GAAA,EAAD,CAAShyD,UAAU,YACnB,kBAACgf,GAAA,EAAD,CAAY/J,MAAM,UAAUgK,QAAQ,aAC/B9P,EAAE,aAEP,kBAAC+iD,GAAA,EAAD,KACI,kBAACzS,GAAA,EAAD,CACIC,QACI,kBAAChhC,GAAA,EAAD,CACIzJ,MAAM,UACN2J,QAAS2yC,EACThjD,SAAU5P,KAAKwyD,wBAGvB17B,MAAOtmB,EAAE,mBAEb,yBAAK/B,QAASzO,KAAK2yD,gCAAiCjtD,MAAO,CAAE8tD,WAAY,gBACrE,kBAAC1S,GAAA,EAAD,CACIC,QACI,kBAAChhC,GAAA,EAAD,CACIzJ,MAAM,UACNtG,SAAU+iD,EACV9yC,QAAS4yC,EACTjjD,SAAU5P,KAAKyyD,mCAGvB37B,MAAOtmB,EAAE,mBAGjB,kBAACswC,GAAA,EAAD,CACIC,QACI,kBAAChhC,GAAA,EAAD,CAAUzJ,MAAM,UAAU2J,QAAS+yC,EAAUpjD,SAAU5P,KAAK0yD,mBAEhE57B,MAAOtmB,EAAE,eAGjB,kBAAC6P,GAAA,EAAD,KAAa7P,EAAE,cAEnB,kBAAC8K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQjF,MAAM,UAAU7H,QAASzO,KAAKmD,aACjCqN,EAAE,WAENijD,aAAY/C,IACT,kBAACn1C,EAAA,EAAD,CAAQjF,MAAM,UAAU7H,QAASzO,KAAK6W,YACjCrG,EAAE,aAKnB,kBAAC,IAAD,CACInP,UAAU,0BACVqZ,KAAMk2C,EACNj2C,QAASC,KACTC,mBAAoB,EACpBC,QAAS9a,KAAKuyD,wBACdx3C,kBAAgB,gBAChB,kBAAC,IAAD,CAAatc,GAAG,gBAAgB+R,EAAE,yBAClC,kBAAC,KAAD,CAAejB,QAAS,CAAE5F,KAAM,4BAC3B6G,EAAE,wBAEP,kBAAC8K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQjF,MAAM,UAAU7H,QAASzO,KAAKuyD,yBACjC/hD,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQjF,MAAM,UAAU7H,QAASzO,KAAKmyD,wBACjC3hD,EAAE,c,GA9hBA7O,IAAMC,YAkjBtB6Z,GAPCC,YACZuX,cACAriB,cACA+K,IACAuX,cAGWzX,CAAQ+0C,I,SC1kBjBkD,I,mBACF,WAAY5yD,GAAQ,IAAD,8BACf,4CAAMA,KAuGV6yD,kBAAoB,SAAAlxD,GACE,UAAdA,EAAME,MACN,EAAKixD,YAAY18C,QAAQxP,QACzBjF,EAAM6B,iBACN7B,EAAM4B,oBA5GK,EAgHnBwvD,iBAAmB,SAAApxD,GACG,UAAdA,EAAME,MACN,EAAKkwC,aACLpwC,EAAM6B,iBACN7B,EAAM4B,oBApHK,EAwHnByvD,iBAAmB,SAAArxD,GACf,EAAK1B,SAAS,CACVwK,KAAM9I,EAAMuD,OAAO2C,SA1HR,EA8HnBorD,gBAAkB,SAAAtxD,GACd,EAAK1B,SAAS,CACVugB,IAAK7e,EAAMuD,OAAO2C,SAhIP,EAoInBkqC,WAAa,WAAO,IAAD,EACqB,EAAK/xC,MAAjCkzD,EADO,EACPA,YAAaC,EADN,EACMA,WADN,EAEK,EAAK5zD,MAAnBkL,EAFS,EAETA,KAAM+V,EAFG,EAEHA,IAKZ,GAFAA,EAAc,OAARA,EAAeA,EAAM2yC,GAD3B1oD,EAAgB,OAATA,EAAgBA,EAAOyoD,IAGhB1yC,EAAd,CAKA,IAAK/V,EAGD,OAFA,EAAKxK,SAAS,CAAEmzD,WAAW,SAC3B,EAAKC,aAAaj9C,QAAQxP,QAK9B,KADA4Z,EAAM8yC,aAAY9yC,IAId,OAFA,EAAKvgB,SAAS,CAAEszD,UAAU,SAC1B,EAAKT,YAAY18C,QAAQxP,SAM7BwzC,EAFmB,EAAKp6C,MAAhBo6C,QAED3vC,EAAM+V,QAnBT,EAAK6yC,aAAaj9C,QAAQxP,SA5If,EAkKnBosC,aAAe,YAGXwgB,EAFqB,EAAKxzD,MAAlBwzD,aAhKR,EAAKC,QAAU5yD,IAAM2Y,YACrB,EAAK65C,aAAexyD,IAAM2Y,YAC1B,EAAKk6C,OAAS7yD,IAAM2Y,YACpB,EAAKs5C,YAAcjyD,IAAM2Y,YAEzB,EAAKja,MAAQ,GARE,E,gFAWAa,EAAWC,EAAWC,GAAW,IAAD,SACLpB,KAAKc,MAAvCkzD,EADuC,EACvCA,YAAaC,EAD0B,EAC1BA,WAAYv5C,EADc,EACdA,KAE7BA,GAAQxZ,EAAUwZ,OAASA,GAC3BtR,WAAW,WACP,IAAMmC,EAAO,EAAK4oD,aAAaj9C,QACzBoK,EAAM,EAAKsyC,YAAY18C,QAExB3L,GACA+V,IAEA0yC,EAEOC,GAGR1oD,EAAK7D,QACL6D,EAAK2G,UAHLoP,EAAI5Z,QAFJ6D,EAAK7D,UAOV,K,yFAyBWqU,EAAWC,EAAWqK,GAAc,IAAD,EACOrmB,KAAKc,MAAzDkzD,EAD6C,EAC7CA,YAAaC,EADgC,EAChCA,WAAY/Y,EADoB,EACpBA,OAAQoZ,EADY,EACZA,SAAU55C,EADE,EACFA,KADE,EAErB1a,KAAKK,MAA7B6zD,EAF6C,EAE7CA,UAAWG,EAFkC,EAElCA,SAEnB,OAAIt4C,EAAUi4C,cAAgBA,IAI1Bj4C,EAAUk4C,aAAeA,IAIzBj4C,EAAUk4C,YAAcA,IAIxBl4C,EAAUq4C,WAAaA,IAIvBt4C,EAAUm/B,SAAWA,IAIrBn/B,EAAUu4C,WAAaA,GAIvBv4C,EAAUrB,OAASA,S,+BAqFjB,IAAD,EACwC1a,KAAKc,MAA1C4Z,EADH,EACGA,KAAMu5C,EADT,EACSA,WAAYD,EADrB,EACqBA,YAAaxjD,EADlC,EACkCA,EADlC,EAE2BxQ,KAAKK,MAA7B6zD,EAFH,EAEGA,UAAWG,EAFd,EAEcA,SACnB,OAAK35C,EAGD,kBAAC,IAAD,CACIC,QAASC,KACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS9a,KAAK8zC,aACd/4B,kBAAgB,yBAChB,kBAAC,IAAD,CAAatc,GAAG,yBAAyB+R,EAAE,eAC3C,kBAAC,KAAD,KACI,yBAAK9K,MAAO,CAAE+uD,QAAS,OAAQC,cAAe,SAAUvlD,MAAO,MAC3D,kBAACgoC,GAAA,EAAD,CACIl8B,IAAKjb,KAAKu0D,QACVxrB,SAAU/oC,KAAKm0D,aACfr9B,MAAOtmB,EAAE,QACT2kC,OAAO,SACPwf,aAAa,MACbvd,aAAc4c,EACd7iD,MAAO+iD,EACPtkD,SAAU5P,KAAK8zD,iBACfpxD,UAAW1C,KAAK2zD,oBAEpB,kBAACxc,GAAA,EAAD,CACIl8B,IAAKjb,KAAKw0D,OACVzrB,SAAU/oC,KAAK4zD,YACf98B,MAAOtmB,EAAE,OACT2kC,OAAO,SACPwf,aAAa,MACbvd,aAAc6c,EACd9iD,MAAOkjD,EACPzkD,SAAU5P,KAAK+zD,gBACfrxD,UAAW1C,KAAK6zD,qBAI5B,kBAACv4C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAASzO,KAAK8zC,aAAcx9B,MAAM,WACrC9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAASzO,KAAK6yC,WAAYv8B,MAAM,WACnC9F,EAAE,aAzCD,Q,gDAjFU1P,EAAOT,GACnC,OAAIA,EAAMu0D,WAAa9zD,EAAM4Z,KAClB,CACHk6C,UAAU,EACVV,WAAW,EACXG,UAAU,EACV9oD,KAAM,KACN+V,IAAK,MAIN,S,GAtGa3f,IAAMC,YAqOnBgP,iBAAkB8iD,ICpJlBmB,I,kNA/DXC,mBAAqB,SAAAtyD,GAAW,IAAD,EACc,EAAK1B,MAAtCuP,EADmB,EACnBA,OAAQqU,EADW,EACXA,UAAW1M,EADA,EACAA,UAC3B,GAAKA,EAAL,CAEA,IAAMjO,EAAOiO,EAAUrB,OAASqB,EAAUjO,KACrCA,GAEDvH,EAAO6N,SAAWA,GAAU7N,EAAOkiB,YAAcA,GAAaliB,EAAOyE,SAAW8C,EAAKtL,IACrF,EAAKga,gB,mFA3BTzO,IAAUmB,GAAG,qCAAsCnL,KAAK80D,oBACxD9qD,IAAUmB,GAAG,iCAAkCnL,KAAK80D,oBACpD9qD,IAAUmB,GAAG,oCAAqCnL,KAAK80D,oBACvD9qD,IAAUmB,GAAG,wBAAyBnL,KAAK80D,oBAC3C9qD,IAAUmB,GAAG,mCAAoCnL,KAAK80D,oBACtD9qD,IAAUmB,GAAG,iCAAkCnL,KAAK80D,oBACpD9qD,IAAUmB,GAAG,qCAAsCnL,KAAK80D,sB,6CAIxD9qD,IAAUsB,IAAI,qCAAsCtL,KAAK80D,oBACzD9qD,IAAUsB,IAAI,iCAAkCtL,KAAK80D,oBACrD9qD,IAAUsB,IAAI,oCAAqCtL,KAAK80D,oBACxD9qD,IAAUsB,IAAI,wBAAyBtL,KAAK80D,oBAC5C9qD,IAAUsB,IAAI,mCAAoCtL,KAAK80D,oBACvD9qD,IAAUsB,IAAI,iCAAkCtL,KAAK80D,oBACrD9qD,IAAUsB,IAAI,qCAAsCtL,KAAK80D,sB,+BAenD,IAAD,EAC4D90D,KAAKc,MAA9DuP,EADH,EACGA,OAAQqU,EADX,EACWA,UAAW1M,EADtB,EACsBA,UAAWuO,EADjC,EACiCA,cAAe9X,EADhD,EACgDA,QACrD,IAAKuJ,EAAW,OAAO,KAEvB,IAAMjO,EAAOiO,EAAUrB,OAASqB,EAAUjO,KAC1C,IAAKA,EAAM,OAAO,KAElB,IAAMyc,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EG,EAAMD,YAAO5c,GACbqe,EAAYvB,aAAmB7O,EAAWqQ,KAA2B0sC,MACrEzsC,EAAcC,aAAalY,EAAQqU,GAEzC,OACI,yBAAKrjB,UAAU,aAAaoN,QAASA,GAChC+X,GACG,yBACInlB,UAAWiN,IACP,mBACA,CAAE,yBAA0Bga,GAC5B,CAAE,sBAAsB,IAE5BO,WAAW,EACXjC,IAAKJ,EACLsC,IAAI,KAGXlC,GACG,yBACIvlB,UAAWiN,IACP,mBACA,CAAE,yBAA0Bga,GAC5B,CAAE,gBAAiB1B,GAAOwB,IAE9BS,WAAW,EACXjC,IAAKA,EACLkC,IAAI,U,GApEJnnB,IAAMC,YCAxBozD,I,kNASFC,mBAAqB,SAAAp0D,GAAW,IAAD,EACG,EAAKC,MAA3BuP,EADmB,EACnBA,OAAQqU,EADW,EACXA,UAEZrU,IAAWxP,EAAOsU,SAAWuP,IAAc7jB,EAAOpC,IAClD,EAAKga,e,EAIb9U,YAAc,SAAAlB,GACVA,EAAM4B,mB,EAGVqqB,WAAa,SAAAjsB,GACT,GAAqB,IAAjBA,EAAMmd,OAAV,CAEAnd,EAAM4B,kBAHY,MAKqB,EAAKvD,MAApCuP,EALU,EAKVA,OAAQqU,EALE,EAKFA,UAAWjW,EALT,EAKSA,QAErBmH,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,KACrB,GAAIs/C,aAAiBt/C,GAAU,OAAO,KAEtC+O,aAAStU,EAAQqU,GAAW,GAC5BywC,eACI1mD,GAASA,M,mFAhCb+H,KAAarL,GAAG,mBAAoBnL,KAAKi1D,sB,6CAIzCz+C,KAAalL,IAAI,mBAAoBtL,KAAKi1D,sB,+BA+BpC,IAAD,EAC4Bj1D,KAAKc,MAA9B0P,EADH,EACGA,EAAGH,EADN,EACMA,OAAQqU,EADd,EACcA,UACbrI,EAAUrc,KAAKc,MAAfub,MAEAzG,EAAUY,KAAavM,IAAIoG,EAAQqU,GAEzCrI,EAAQA,GAAS6tC,aAASt0C,EAASpF,GACnC,IAAIkG,EAAWd,EAAyBy4B,aAAWz4B,EAASpF,GAAnCA,EAAE,WACrBwH,EAAYo9C,aAAkB/kD,EAAQqU,GACtC6B,EAAgB8uC,aAAsBhlD,EAAQqU,GAOpD,OALIwwC,aAAiBt/C,KACjByG,EAAQ,KACR3F,EAAUlG,EAAE,mBAIZ,yBAAKnP,UAAU,QAAQkN,YAAavO,KAAK0uB,WAAYjgB,QAASzO,KAAK2D,aAC/D,yBAAKtC,UAAU,iBACX,yBAAKA,UAAU,wBACd2W,GACG,kBAAC,GAAD,CACI3H,OAAQA,EACRqU,UAAWA,EACX6B,cAAeA,EACfvO,UAAWA,IAGnB,yBAAK3W,UAAU,iBACVgb,GAAS,yBAAKhb,UAAU,uBAAuBgb,GAChD,yBAAKhb,UAAWiN,IAAW,2BAA4BoI,U,GAnE3D/U,IAAMC,YAkFXgP,iBAAkBokD,ICjF3BM,I,kNASF50C,uBAAyB,SAAAle,GAAW,IAAD,EACc,EAAK1B,MAA1CuP,EADuB,EACvBA,OAAQqU,EADe,EACfA,UAAW6wC,EADI,EACJA,cACnBpgD,EAAwB3S,EAAxB2S,QAASC,EAAe5S,EAAf4S,WAEb/E,IAAW8E,IACXuP,IAActP,GAAcmgD,IAAkBngD,GAElD,EAAKqD,gB,EAGTtV,YAAc,WAAO,IAAD,EACkB,EAAKrC,MAA/BuP,EADQ,EACRA,OADQ,EACAklD,cAGZC,aAAYnlD,EAAQ,GAEpBolD,aAAaplD,EAAQ,I,mFAvBzBmG,KAAarL,GAAG,uBAAwBnL,KAAK0gB,0B,6CAI7ClK,KAAalL,IAAI,uBAAwBtL,KAAK0gB,0B,+BAuBxC,IAAD,EACoD1gB,KAAKc,MAAtDuP,EADH,EACGA,OAAQqU,EADX,EACWA,UAAW6wC,EADtB,EACsBA,cAAe/kD,EADrC,EACqCA,EAAG/B,EADxC,EACwCA,QAC7C,OAAK4B,IACAqU,GAAc6wC,GAGf,yBAAKl0D,UAAU,mBACX,yBAAKA,UAAU,+BACX,kBAAC+U,EAAA,EAAD,CAAY/U,UAAU,uBAAuBgV,aAAW,QAAQ5H,QAASzO,KAAKmD,aAC1E,kBAAC6L,EAAA,EAAD,QAGR,yBAAK3N,UAAU,iCACX,kBAAC,GAAD,CACIgP,OAAQA,EACRqU,UAAW6wC,GAAiB7wC,EAC5BrI,MAAOk5C,EAAgB/kD,EAAE,eAAiB,KAC1C/B,QAASA,KAGjB,yBAAKpN,UAAU,kCAlBH,S,GA/BCM,IAAMC,YA8DpBgP,iBAAkB0kD,IC5D3BI,I,kNACF7iB,WAAa,YAET8iB,EADsB,EAAK70D,MAAnB60D,c,EAIZ7hB,aAAe,YAEXwgB,EADqB,EAAKxzD,MAAlBwzD,a,wEAIF,IAAD,EACgBt0D,KAAKc,MAAlB2jC,EADH,EACGA,MAAOj0B,EADV,EACUA,EACf,OAAKi0B,EAGD,kBAAC,IAAD,CACI9pB,QAASC,KACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS9a,KAAK8zC,aACd/4B,kBAAgB,uBAChB,kBAAC,IAAD,CAAatc,GAAG,uBAAuB+R,EAAE,YACzC,kBAAC,KAAD,KACI,kBAACyiC,GAAA,EAAD,KACKxO,EAAM3xB,OAAS,EAAItC,EAAE,yBAA2BA,EAAE,0BAG3D,kBAAC8K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAASzO,KAAK8zC,aAAcx9B,MAAM,WACrC9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAASzO,KAAK6yC,WAAYv8B,MAAM,WACnC9F,EAAE,SApBA,S,GAbI7O,IAAMC,YAiDtB6Z,GAFCC,YAAQ9K,cAET6K,CAAQi6C,IC2CRE,I,kNAnGXv1D,MAAQ,G,EAcRw1D,0BAA4B,WACxB,EAAKC,MAAQC,YAAY,WACrB,IACMC,EADM,IAAItuC,KACG,EAAK7oB,UAGxB,EAAKkC,SAAS,CACV1B,KAAM22D,KAEX,IACH,EAAKn3D,UAAY,IAAI6oB,M,EAGzBuuC,yBAA2B,WACnB,EAAKH,OACL5sD,aAAa,EAAK4sD,OAGtB,EAAK/0D,SAAS,CACV1B,KAAM,Q,EAId62D,0BAA4B,WACpB,EAAKJ,OACL5sD,aAAa,EAAK4sD,OAGtB,EAAK/0D,SAAS,CACV1B,KAAM,Q,mFAxCVmX,KAAarL,GAAG,0BAA2BnL,KAAK61D,2BAChDr/C,KAAarL,GAAG,yBAA0BnL,KAAKi2D,0BAC/Cz/C,KAAarL,GAAG,0BAA2BnL,KAAKk2D,6B,6CAIhD1/C,KAAalL,IAAI,0BAA2BtL,KAAK61D,2BACjDr/C,KAAalL,IAAI,yBAA0BtL,KAAKi2D,0BAChDz/C,KAAalL,IAAI,0BAA2BtL,KAAKk2D,6B,iCAoC1Cj2D,GACP,IAAIk2D,EAAQl2D,EAAEsvD,WAOd,OANqB,IAAjB4G,EAAMrjD,OACNqjD,GAAS,IACFA,EAAMrjD,OAAS,IACtBqjD,EAAQA,EAAMvmB,OAAO,EAAG,IAGrBumB,I,iCAGAl2D,GACP,IAAIk2D,EAAQl2D,EAAEsvD,WAKd,OAJqB,IAAjB4G,EAAMrjD,SACNqjD,EAAQ,IAAMA,GAGXA,I,+BAGFC,GACL,IAAIC,EAAMD,EAAI,IAEVE,GADJF,GAAKA,EAAIC,GAAM,KACA,GAEXE,GADJH,GAAKA,EAAIE,GAAQ,IACF,GACXE,GAAOJ,EAAIG,GAAQ,GAEnB11D,EAAS01D,EAAO,IAAMv2D,KAAKy2D,WAAWH,GAAQ,IAAMt2D,KAAK02D,WAAWL,GAKxE,OAJIG,EAAM,IACN31D,EAAS21D,EAAM,IAAM31D,GAGlBA,I,+BAGD,IACExB,EAASW,KAAKK,MAAdhB,KACR,OAAKA,EAGD,yBAAKgC,UAAU,gBACVrB,KAAK22D,SAASt3D,GACf,yBAAKgC,UAAU,uBALL,S,GAtFAM,IAAMC,Y,qBCe1Bg1D,I,mBACF,WAAY91D,GAAQ,IAAD,8BACf,4CAAMA,KAqDV+1D,sBAAwB,WAChB5xD,SAASuE,gBAAkB,EAAKstD,WAAW5/C,SAC3C,EAAK6/C,iBAxDM,EA4DnBC,YAAc,WAAO,IAAD,EAC6B,EAAKl2D,MAA1CuP,EADQ,EACRA,OAAQqU,EADA,EACAA,UAAWhK,EADX,EACWA,KAAMu8C,EADjB,EACiBA,QACjC,GAAKv8C,EAAL,CAEA,IAAInP,EAAO,KACP8L,EAAU,KACRzB,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,GAAI9O,EAAS,CAAC,IACFc,EAAYd,EAAZc,QACJA,IACAnL,EAAOmL,EAAQnL,KACf8L,EAAUX,EAAQW,SAI1B,IAAMjK,EAAU,EAAK0pD,WAAW5/C,QAC3B9J,IAED7B,EACA,EAAK2rD,iBAAiB3rD,GACf8L,EACP,EAAK6/C,iBAAiB7/C,GACf4/C,GAAWA,EAAQ5/C,QAC1BjK,EAAQf,UAAY4qD,EAAQ5/C,QAE5BjK,EAAQsL,UAAY,KAGxB6pB,GAAWn1B,MAxFI,EAgHnBylC,WAAa,WAAO,IAAD,EAC6B,EAAK/xC,MAAzCuP,EADO,EACPA,OAAQ4mD,EADD,EACCA,QAAS7E,EADV,EACUA,OAAQxU,EADlB,EACkBA,OADlB,EAE2C,EAAKv9C,MAAvDm1D,EAFO,EAEPA,YAAa2B,EAFN,EAEMA,SAAUC,EAFhB,EAEgBA,UAAWC,EAF3B,EAE2BA,YAEpCjqD,EAAU,EAAK0pD,WAAW5/C,QAChC,GAAK9J,EAAL,CALe,IAOPf,EAAce,EAAdf,UAERe,EAAQsL,UAAY,KATL,MAWY4+C,aAAYjrD,GAEjCgL,EAAU,CACZ,QAAS,gBACT9L,KAfW,EAWPA,KAKJ+L,SAhBW,EAWDA,UASd,GADkBmR,QAAQ+sC,GACX,CACX,GAAI4B,EAAW,CAAC,IACJzgD,EAAUygD,EAAVzgD,MACR,IAAKA,EAAO,OAFD,IAIHC,EAAUD,EAAVC,MACR,IAAKA,EAAO,OAEZ,IAAMkB,EAAOlB,EAAMA,EAAM9D,OAAS,GAE1B3D,EAAkB2I,EAAlB3I,MAAO4I,EAAWD,EAAXC,OAUf6lC,EAAO,KARS,CACZ,QAAS,oBACTjnC,MAAO,CAAE,QAAS,gBAAiBo/B,KAAMohB,EAASphB,KAAMtvB,KAAM0wC,GAC9DhoD,QACA4I,SACAV,iBAKJumC,EAAOvmC,EAAS,MAGpBkgD,aAAkBlnD,EAAQ,OACvB,CAAC,IACIuQ,EAAgBq2C,EAAhBr2C,MAAO7W,EAASktD,EAATltD,KACPsX,EAA2BT,EAA3BS,MAAO1K,EAAoBiK,EAApBjK,MAAO1R,EAAa2b,EAAb3b,SAElByR,EAAU,KACd,GAAIC,EAAO,CAAC,IACAC,EAAUD,EAAVC,MACR,IAAKA,EAAO,OAEZ,IAAMkB,EAAOlB,EAAMA,EAAM9D,OAAS,GAE1B3D,EAAkB2I,EAAlB3I,MAAO4I,EAAWD,EAAXC,OAEfrB,EAAU2gD,EACJ,CACE,QAAS,oBACT1gD,MAAO,CAAE,QAAS,gBAAiBo/B,KAAMhsC,EAAKgsC,KAAMtvB,KAAM1c,GAC1DoF,QACA4I,SACAV,WAEF,CACE,QAAS,uBACTpS,SAAU,CAAE,QAAS,gBAAiB8wC,KAAMhsC,EAAKgsC,KAAMtvB,KAAM1c,GAC7DiO,UAAW,KACXX,gBAEL,GAAIpS,EACPyR,EAAU,CACN,QAAS,uBACTzR,SAAU,CAAE,QAAS,gBAAiB8wC,KAAMhsC,EAAKgsC,KAAMtvB,KAAM1c,GAC7DiO,UAAW,KACXX,gBAED,GAAIgK,EAAO,CAAC,IACPhjB,EAA+BgjB,EAA/BhjB,SAAUge,EAAqBgF,EAArBhF,MAAOm7C,EAAcn2C,EAAdm2C,UAEzB9gD,EAAU,CACN,QAAS,oBACT2K,MAAO,CAAE,QAAS,gBAAiB00B,KAAMhsC,EAAKgsC,KAAMtvB,KAAM1c,GAC1DiO,UAAW,KACX3Z,WACAge,QACAm7C,YACAngD,WAGR,IAAKX,EAAS,OAEd07C,EAAO17C,EAAS3M,MA/ML,EAmNnB+pC,aAAe,WAAO,IAAD,EACuB,EAAKhzC,MAArCuP,EADS,EACTA,OAAQqU,EADC,EACDA,UAAW4vC,EADV,EACUA,SAErB1+C,EAAUY,KAAavM,IAAIoG,EAAQqU,GACvB+D,QAAQ7S,IAGtB2hD,aAAkBlnD,EAAQ,GAG9BikD,KA7Ne,EAgOnBxgC,cAAgB,SAAArxB,GAAU,IACdI,EAAgFJ,EAAhFI,OAAQC,EAAwEL,EAAxEK,QAA6BC,GAA2CN,EAA/DE,IAA+DF,EAA1DmW,QAA0DnW,EAAjDG,KAAiDH,EAA3CM,SAASC,EAAkCP,EAAlCO,SAAUy0D,EAAwBh1D,EAAxBg1D,OAAQ7vD,EAAgBnF,EAAhBmF,YAIxE,GADwBA,EAAhBknC,YAEJrsC,EAAM4B,uBAIV,OAAQuD,EAAYhF,MAChB,IAAK,QACL,IAAK,cAEIC,KAAWC,GAAWC,GAAWC,IAAcy0D,EAO1C50D,GAAWC,GAAYC,GAAYC,GAAay0D,IACtD,EAAK5kB,aAELpwC,EAAM6B,iBACN7B,EAAM4B,oBAVNY,SAASkN,YAAY,mBAErB1P,EAAM6B,iBACN7B,EAAM4B,mBASV,MAGJ,IAAK,OACIxB,IAAWC,IAAWC,GAAaC,GAAay0D,IACjD,EAAKC,aAELj1D,EAAM6B,iBACN7B,EAAM4B,mBAEV,MAGJ,IAAK,OACIxB,IAAWC,IAAWC,GAAaC,GAAay0D,IACjD,EAAKE,eAELl1D,EAAM6B,iBACN7B,EAAM4B,mBAEV,MAEJ,IAAK,OAEIxB,IAAWC,IAAWC,GAAaC,GAAay0D,GAO5C50D,IAAWC,IAAWC,GAAaC,GAAay0D,IACrD,EAAKG,aAELn1D,EAAM6B,iBACN7B,EAAM4B,oBAVN,EAAKwzD,YAELp1D,EAAM6B,iBACN7B,EAAM4B,mBASV,MAGJ,IAAK,QACGxB,IAAWC,IAAWC,GAAaC,GAAay0D,IAChD,EAAKK,cAELr1D,EAAM6B,iBACN7B,EAAM4B,qBAxSH,EA+SnByzD,YAAc,WACV7yD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,OAjTvB,EAoTnBulD,WAAa,WACTzyD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,QAAQ,EAAO,OAxTrB,EA2TnBwlD,aAAe,WACX1yD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,UAAU,EAAO,OA/TvB,EAkUnBylD,WAAa,WACT3yD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtC,IAAI5G,EAAO,GACHq3B,EALO,eAKPA,UACJA,IAAcA,EAAU6sB,cACxBlkD,EAAOq3B,EAAU2sB,YAGhBhkD,IACLA,EAAI,gBAAYA,EAAZ,WACJtG,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,cAAc,EAAO5G,KA/U3B,EAkVnBwsD,gBAAkB,WACd9yD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,aAAa,EAAO,OAtV1B,EAyVnB6lD,oBAAsB,WAClB/yD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,iBAAiB,EAAO,OA7V9B,EAgWnB0lD,UAAY,WACR,EAAKI,qBAjWU,EAoWnBA,kBAAoB,WAChB,IAAIjE,EAAc,GACdC,EAAa,GAFK,iBAIdrxB,EAJc,EAIdA,UAAWJ,EAJG,EAIHA,MACnB,GAAIA,EAAO,CAAC,IACF01B,EAAiC11B,EAAjC01B,eACN,GAAIA,IADmC11B,EAAjB21B,aACe,CAAC,IAC1BC,EAAkBF,EAAlBE,cACJA,GAA4C,MAA3BA,EAAcC,WAC/BrE,EAAcoE,EAAc1/C,UAC5Bu7C,EAAamE,EAAcE,OAKlCtE,IAAepxB,GAAcA,EAAU6sB,cACxCuE,EAAcpxB,EAAU2sB,YAG5B,EAAKxuD,SAAS,CACVw3D,aAAa,EACbtE,aACAD,iBA3XW,EA+XnBwE,mBAAqB,WACjB,EAAKz3D,SACD,CACIw3D,aAAa,GAEjB,WACI,EAAKE,sBArYE,EAianBzkC,YAAc,SAAAvxB,GACV,IAAMmX,EAAYnX,EAAMoX,cAAcC,QAAQ,cAC1CF,IACAnX,EAAM6B,iBACNW,SAASkN,YAAY,cAAc,EAAOyH,KAra/B,EAyanBkvB,YAAc,WACV,EAAK4vB,kBA1aU,EAubnBC,oBAAsB,WAClB,EAAKH,sBAxbU,EA2bnBI,kBAAoB,SAACrtD,EAAM+V,GACvB,EAAKk3C,qBACLpvD,WAAW,WAAM,IAELo5B,EAFK,eAELA,MACR,GAAIA,EAAO,CAAC,IACA01B,EAAiC11B,EAAjC01B,eAAgBC,EAAiB31B,EAAjB21B,aACxB,GAAID,GAAkBA,IAAmBC,EAAc,CAAC,IAC5CU,EAAeX,EAAfW,WACR,GAAIA,GAAsC,MAAxBA,EAAWR,SAAkB,CAC3CQ,EAAWP,KAAOh3C,EAClBu3C,EAAWx8C,MAAQiF,EACnBu3C,EAAWngD,UAAYnN,EAHoB,IAMnCskD,EAAcgJ,EAAdhJ,UACR,GAAIA,EAAW,CACX,IAAMrtB,EAAQv9B,SAASw9B,cACvBD,EAAME,SAASmtB,EAAWA,EAAUiJ,YAAYhmD,QAChD0vB,EAAMu2B,OAAOlJ,EAAWA,EAAUiJ,YAAYhmD,QAE9C,IAAM8vB,EAAY39B,SAAS49B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB,SAMZ,IAAM9sB,EAAI,kBAAc4L,EAAd,kBAA2BA,EAA3B,sDAA4E/V,EAA5E,QACVtG,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,cAAc,EAAOuD,IAC3C,IA7dY,EAgenBsjD,gBAAkB,SAAAv2D,GACd,IAAM2K,EAAU,EAAK6rD,aAAa/hD,QAC7B9J,GAELA,EAAQonC,SApeO,EAuenB0kB,wBAvemB,qBAueO,sCAAApoD,EAAA,wDAChB1D,EAAU,EAAK6rD,aAAa/hD,QADZ,oDAKD,KADbutB,EAAUr3B,EAAVq3B,OACE3xB,OALY,sDAOEg6B,MAAMltC,KAAK6kC,GAPb,kBAOf16B,EAPe,gBAQjBA,EARiB,kEAUEovD,aAAsBpvD,GAVxB,QAUhBqtD,EAVgB,OAYtB,EAAKr2D,SAAS,CACVo2D,SAAUptD,EACVqtD,cAGJhqD,EAAQzE,MAAQ,GAjBM,0CAveP,EA2fnBywD,kBAAoB,WAAO,IACf/B,EAAgB,EAAKh3D,MAArBg3D,YAER,EAAKt2D,SAAS,CACVs2D,aAAcA,KA5flB,EAAKP,WAAan1D,IAAM2Y,YACxB,EAAK2+C,aAAet3D,IAAM2Y,YAE1B,EAAKja,MAAQ,GANE,E,iFA+Cf4E,SAASiG,iBAAiB,kBAAmBlL,KAAK62D,uBAAuB,K,6CAIzE5xD,SAASoG,oBAAoB,kBAAmBrL,KAAK62D,uBAAuB,K,uCAwC/D3f,GAAgB,IACrB1mC,EAAMxQ,KAAKc,MAAX0P,EACFpD,EAAUpN,KAAK82D,WAAW5/C,QAEhC,GAAKggC,EAAL,CAJ4B,IASpB3rC,EAAmB2rC,EAAnB3rC,KAAM+L,EAAa4/B,EAAb5/B,SACd,IACI,IAAM+hD,EAAQC,aAAS/tD,EAAM+L,EAAU9G,GACvCpD,EAAQf,UAAY,KACpBgtD,EAAM15D,QAAQ,SAAAT,GACVkO,EAAQd,YAAYpN,KAE1B,MAAO6P,GACL3B,EAAQsL,UAAYnN,QAZpB6B,EAAQsL,UAAY,O,sCA2SxB1Y,KAAK4iC,UAAY39B,SAAS49B,eACrB7iC,KAAK4iC,WACL5iC,KAAK4iC,UAAU22B,aAEpBv5D,KAAKwiC,MAAQxiC,KAAK4iC,UAAU42B,WAAW,M,yCAGvB,IACRh3B,EAAUxiC,KAAVwiC,MAER,GAAKA,EAAL,CAKA,IAAMI,EAAY39B,SAAS49B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBxiC,KAAK82D,WAAW5/C,QAAQxP,aARpB66B,O,uCAwBJ,IAAMn1B,EAAUpN,KAAK82D,WAAW5/C,QAChC,GAAK9J,EAAL,CAFa,IAILf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,S,+BAgFlB,IAAD,EAC2CrM,KAAKc,MAA7CuP,EADH,EACGA,OAAQqU,EADX,EACWA,UAAWuyC,EADtB,EACsBA,QAASv8C,EAD/B,EAC+BA,KAAMlK,EADrC,EACqCA,EADrC,EAEiFxQ,KAAKK,MAAnF2zD,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,WAAYsE,EAF5B,EAE4BA,YAAa/C,EAFzC,EAEyCA,YAAa4B,EAFtD,EAEsDA,UAAWC,EAFjE,EAEiEA,YACtE,IAAK38C,EAAM,OAAO,KAElB,IAAM9E,EAAUY,KAAavM,IAAIoG,EAAQqU,GACnC+0C,EAAYhxC,QAAQ7S,GACtB8jD,GAAU,EACVzC,GAAWA,EAAQr2C,OAAoC,iBAA3Bq2C,EAAQr2C,MAAM,SAC1C84C,GAAU,EACHtC,GAAoC,iBAAvBA,EAAU,SAC9BsC,GAAU,EACHlE,GAAgD,iBAAjCA,EAAY9+C,QAAQ,WAC1CgjD,GAAU,GAGd,IAAI94C,EAAQ,KACR64C,EACA74C,EACAw2C,EACMv2C,aAAS,CAAEnK,QAAS0gD,IACpBv2C,aAASjL,EAAS,MACjBqhD,IACPr2C,EAAQC,aAAS,CAAEnK,QAASugD,EAAQr2C,SAExC,IAAM+4C,EAAwBnpD,EAAZipD,EAAc,OAAY,QAE5C,OACI,kBAAC,IAAD,CACI9+C,QAASC,KACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS9a,KAAK8zC,aACd/4B,kBAAgB,0BAChBuwC,QAAStrD,KAAKg3D,aACd,yBAAK31D,UAAU,6BACX,yBAAKqE,MAAO,CAAEyvC,OAAQ,KAAOv0B,GAC3B64C,GACE,oCACI,kBAACrjD,EAAA,EAAD,CACI8J,eAAe,EACf7J,aAAY7F,EAAE,QACdnP,UAAU,gCACVyW,KAAK,QACLrJ,QAASzO,KAAKg5D,iBACd,kBAAC,KAAD,CAAU3I,SAAS,aAEvB,2BACIp1C,IAAKjb,KAAKi5D,aACV53D,UAAU,yBACVqb,KAAK,OACLw4B,OAAO,UACPtlC,SAAU5P,KAAKk5D,4BAIxBO,GAAaC,GACZ,kBAAC7Y,GAAA,EAAD,CAAYl4C,MAAO0uD,EAAaznD,SAAU5P,KAAKo5D,kBAAmB1zD,MAAO,CAAEyvC,OAAQ,gBAC/E,kBAAC2L,GAAA,EAAD,CAAkBn4C,OAAO,EAAMo4C,QAAS,kBAACtJ,GAAA,EAAD,CAAOnhC,MAAM,YAAawgB,MAAOtmB,EAAE,iBAC3E,kBAACswC,GAAA,EAAD,CAAkBn4C,OAAO,EAAOo4C,QAAS,kBAACtJ,GAAA,EAAD,CAAOnhC,MAAM,YAAawgB,MAAOtmB,EAAE,kBAIxF,yBACIyK,IAAKjb,KAAK82D,WACVr4D,GAAG,4BACH4C,UAAU,oBACVkQ,iBAAe,EACf2J,gCAA8B,EAC9BC,YAAa3K,EAAE,WACf9N,UAAW1C,KAAK8zB,cAChBzY,QAASrb,KAAKg0B,YACdkV,QAASlpC,KAAK8oC,cAElB,kBAACxtB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAASzO,KAAK8zC,aAAcx9B,MAAM,WACrC9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAASzO,KAAK6yC,WAAYv8B,MAAM,WACnCqjD,IAGT,kBAAC,GAAD,CACIj/C,KAAM69C,EACNvE,YAAaA,EACbC,WAAYA,EACZ/Y,OAAQl7C,KAAK44D,kBACbtE,SAAUt0D,KAAK24D,0B,gDA/kBC73D,EAAOT,GAAQ,IACnCu0D,EAAav0D,EAAbu0D,SACAl6C,EAAqC5Z,EAArC4Z,KAAMrK,EAA+BvP,EAA/BuP,OAAQqU,EAAuB5jB,EAAvB4jB,UAAWuyC,EAAYn2D,EAAZm2D,QAEjC,GAAIrC,IAAal6C,EAAM,CACnB,GAAIA,EAAM,CACN,IAAM86C,EAAch/C,KAAavM,IAAIoG,EAAQqU,GACzC2yC,GAAc,EAOlB,OANI7B,GAAgD,iBAAjCA,EAAY9+C,QAAQ,SACnC2gD,GAAc,EACPJ,GAAWA,EAAQr2C,OAAoC,iBAA3Bq2C,EAAQr2C,MAAM,WACjDy2C,GAAc,GAGX,CACHzC,UAAU,EACVyC,cACA7B,cACA4B,UAAW,KACXD,SAAU,MAGd,MAAO,CACHvC,UAAU,EACVyC,aAAa,EACb7B,YAAa,KACb4B,UAAW,KACXD,SAAU,MAKtB,OAAO,S,GA5Cex1D,IAAMC,YA8mBrBgP,iBAAkBgmD,ICnmBlB3xB,G,WA3BX,WAAY50B,GAAS,oBACjBrQ,KAAKqQ,OAASA,EACdrQ,KAAK45D,WAAa,K,sDAGZzjD,GACN,GAAKnW,KAAKqQ,OAAV,CAEA,GAAIrQ,KAAK45D,YAAc55D,KAAK45D,WAAW,WAAazjD,EAAO,SAAU,CACjE,IAAInX,EAAM,IAAI0oB,KAEd,GADA1oB,EAAI66D,WAAW76D,EAAI86D,aAAeC,MAC9B/5D,KAAKg6D,gBAAkBh6D,KAAKg6D,eAAiBh7D,EAC7C,OAIRgB,KAAK45D,WAAazjD,EAClBnW,KAAKg6D,eAAiB,IAAItyC,KAE1BhnB,IAAgBC,KAAK,CACjB,QAAS,iBACTwU,QAASnV,KAAKqQ,OACd8F,OAAQA,S,wBCgBd8jD,I,OAAoBt4D,IAAMi5C,KAAK,kBAAM,uDAErCsf,G,YACF,WAAYp5D,GAAQ,IAAD,uBACf,4CAAMA,KAoHVq5D,wBAA0B,WAElBl1D,SAASuE,gBAAkB,EAAK4wD,cAAcljD,SAC9C,EAAK6/C,iBAxHM,EAkKnBsD,uBAAyB,SAAA73D,GAAW,IACxB+I,EAAS/I,EAAT+I,KAER,GAAKA,EAAL,CAEA,IAAM6B,EAAU,EAAKgtD,cAAcljD,QAC9B9J,IAELA,EAAQsL,UAAYnN,EACpBg3B,GAAWn1B,MA3KI,EA8KnBktD,yBAA2B,SAAA93D,GAAW,IAAD,EACH,EAAK1B,MADF,EACzBuP,OADyB,EACjBqU,UACE,EAAKrkB,MAAfy8C,MAGJ,EAAK/7C,SAAS,CAAE+7C,OAAO,GAAS,WAC5B1zC,WAAW,WACP,EAAKrI,SAAS,CAAE+7C,OAAO,KACxB,KAGP,EAAK/7C,SAAS,CAAE+7C,OAAO,KAzLZ,EA6LnByd,wBAA0B,SAAA/3D,GAAW,IACzBiiC,EAAUjiC,EAAViiC,MACHA,GAEL,EAAK+1B,gBAAgB1tB,MAAMltC,KAAK6kC,KAjMjB,EAoMnB1jB,uBAAyB,SAAAve,GAAW,IAAD,EACG,EAAKnC,MAA/BgQ,EADuB,EACvBA,OAAQklD,EADe,EACfA,cACRpgD,EAAuC3S,EAAvC2S,QAASiD,EAA8B5V,EAA9B4V,YAAaqiD,EAAiBj4D,EAAjBi4D,aAEzBlF,GACAkF,GACDpqD,IAAW8E,IAC6B,IAAxCiD,EAAY+B,QAAQo7C,IAExB,EAAKzhB,gBA7MU,EAgNnB4mB,0BAA4B,SAAAl4D,GAAW,IAC3B6N,EAAsB7N,EAAtB6N,OAAQqU,EAAcliB,EAAdkiB,UAEhB,IAD0B,EAAKrkB,MAAvBs6D,eAEJ,EAAKt6D,MAAMgQ,SAAWA,EAA1B,CAEKqU,EAGD,EAAKk2C,wBAFL,EAAKC,2BAKT,IAAMC,EAA8B,IAAdp2C,GAAmBq2C,aAAc1qD,EAAQqU,GAC/D,EAAK3jB,SACD,CACIw0D,cAAe7wC,EACfo2C,iBAEJ,WACS,EAAKz6D,MAAMy6D,gBACZ,EAAKE,iBACL,EAAKlyB,cACL1/B,WAAW,WACP,EAAKm5B,cACN,QAxOA,EAmRnB04B,0BAA4B,SAAAz4D,GACJA,EAAZo+C,SAGR,EAAKsa,aAvRU,EA0RnBC,yBAA2B,SAAA34D,GAAW,IAC1B2S,EAAY3S,EAAZ2S,QADyB,EAEC,EAAK9U,MAA/BgQ,EAFyB,EAEzBA,OAFyB,EAEjBsqD,eAGZtqD,IAAW8E,GAEf,EAAKimD,aAjSU,EAoSnBC,4BAA8B,SAAA74D,GAAW,IAClBigB,EAASjgB,EAApBmnB,UACR,GAAKlH,EAAL,CAFoC,IAI5BkH,EAAkDlH,EAAlDkH,UAAW3R,EAAuCyK,EAAvCzK,UAAW7I,EAA4BsT,EAA5BtT,MAAO4I,EAAqB0K,EAArB1K,OAAQ1Z,EAAaokB,EAAbpkB,SAC7C,GAAKsrB,EAAL,CAEA,IAAMvc,EAAU,EAAKgtD,cAAcljD,QACnC,GAAK9J,EAAL,CAEAA,EAAQsL,UAAY,KAEpB,EAAK+/C,mBAEL,IAAM/hD,EAAU,CACZ,QAAS,wBACTiT,UAAW,CACP,QAAS,cACTlrB,GAAIkrB,EAAUlrB,IAElB0Q,QACA4I,SACA1Z,YAGJ,GAAI2Z,EAAW,CAAC,IACGsjD,EAAkDtjD,EAAzD7I,MAA+BosD,EAA0BvjD,EAAlCD,OAAyBhO,EAASiO,EAATjO,KAExD2M,EAAQsB,UAAY,CAChB,QAAS,iBACTA,UAAW,CACP,QAAS,cACTvZ,GAAIsL,EAAKtL,IAEb0Q,MAAOmsD,EACPvjD,OAAQwjD,GAIhB,EAAKC,YAAY9kD,GAAS,EAAO,SAAA7V,UA3UlB,EA8UnB46D,0BAA4B,SAAAj5D,GAAW,IAClBigB,EAASjgB,EAAlB/B,QACR,GAAKgiB,EAAL,CAFkC,IAI1BhiB,EAAsCgiB,EAAtChiB,QAASuX,EAA6ByK,EAA7BzK,UAAW7I,EAAkBsT,EAAlBtT,MAAO4I,EAAW0K,EAAX1K,OACnC,GAAKtX,EAAL,CAEA,IAAM2M,EAAU,EAAKgtD,cAAcljD,QACnC,GAAK9J,EAAL,CAEAA,EAAQsL,UAAY,KAEpB,EAAK+/C,mBAEL,IAAM/hD,EAAU,CACZ,QAAS,sBACTjW,QAAS,CACL,QAAS,cACThC,GAAIgC,EAAQhC,IAEhB0Q,QACA4I,UAGJ,GAAIC,EAAW,CAAC,IACGsjD,EAAkDtjD,EAAzD7I,MAA+BosD,EAA0BvjD,EAAlCD,OAAyBhO,EAASiO,EAATjO,KAExD2M,EAAQsB,UAAY,CAChB,QAAS,iBACTA,UAAW,CACP,QAAS,cACTvZ,GAAIsL,EAAKtL,IAEb0Q,MAAOmsD,EACPvjD,OAAQwjD,GAIhB,EAAKC,YAAY9kD,GAAS,EAAO,SAAA7V,MAEjCH,IAAgBgG,aAAa,CACzB,QAAS,gCACTsiC,KAAM,WAxXK,EA4XnB0yB,oBAAsB,SAAAl5D,GAAW,IAAD,EACqB,EAAKnC,MAAtC6hB,EADY,EACpB7R,OAAuBsqD,EADH,EACGA,cACvBtqD,EAAsB7N,EAAtB6N,OAAQqU,EAAcliB,EAAdkiB,UAEZxC,IAAkB7R,IAItB,EAAKtP,SAAS,CAAE46D,iBAAkBj3C,IAE9BA,IAAci2C,GACd,EAAKiB,kBAvYM,EA2YnBtkC,qBAAuB,SAAA90B,GACA,EAAKnC,MAAhBgQ,SACO7N,EAAO+0B,aAEtB,EAAK2jC,YACL,EAAKW,eAAiB,KACtB,EAAK96D,SACD,CACIsP,OAAQ7N,EAAO+0B,WACfokC,iBAAkBG,YAA6Bt5D,EAAO+0B,YACtDg+B,cAAe,EACfgD,aAAa,GAEjB,WACI,EAAK6C,cAIb,EAAKW,uBA7ZU,EAganBC,SAAW,WAAO,IACN3rD,EAAW,EAAKhQ,MAAhBgQ,OAEFjD,EAAU,EAAKgtD,cAAcljD,QAE7BggC,EAAgB3b,YAAalrB,GAC/B6mC,GACA,EAAKggB,iBAAiBhgB,GACtB,EAAKn2C,SAAS,CACV46D,iBAAkBG,YAA6BzrD,MAGnDjD,EAAQsL,UAAY,MA5aT,EA4dnBkjD,cAAgB,WACc,EAAKv7D,MAAvBs6D,eAGRvxD,WAAW,WAGPm5B,GAFgB,EAAK63B,cAAcljD,UAGpC,MApeY,EAuenB+kD,oBAAsB,SAAAC,GAClB,GAAKA,EAAL,CADsC,IAG9B7rD,EAAyB6rD,EAAzB7rD,OAAQ8rD,EAAiBD,EAAjBC,aACX9rD,GAEL3P,IAAgBC,KAAK,CACjB,QAAS,sBACTwU,QAAS9E,EACT+rD,cAAeD,MAhfJ,EAofnBE,gBAAkB,SAAChsD,EAAQsrD,EAAkBtvD,GACzC,IAAMoQ,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,EAAL,CAFuD,IAI/C2/C,EAAkB3/C,EAAlB2/C,cAJ+C,EAK5B9E,aAAYjrD,GAA/Bd,EAL+C,EAK/CA,KAAM+L,EALyC,EAKzCA,SACR6kD,EACD5wD,GAAQA,EAAKuH,OAAS,GAAMwE,EAASxE,OAAS,EACzC,CACI,QAAS,eACTyE,oBAAqBokD,EACrBW,mBAAoB,CAChB,QAAS,mBACT/wD,KAAM,CACF,QAAS,gBACTA,OACA+L,YAEJM,0BAA0B,EAC1BC,aAAa,IAGrB,KAEV,OAAI0kD,YAAYH,EAAeD,GACpB,KAGJ,CAAE9rD,SAAQ8rD,kBAhhBF,EAmhBnBK,aAAe,WAAyB,IAAxBC,IAAuB,2DACgD,EAAKp8D,MAAhFgQ,EAD2B,EAC3BA,OAAQklD,EADmB,EACnBA,cAAiCmH,GADd,EACJf,iBADI,EACce,gBAAgB/B,EAD9B,EAC8BA,cAEjE,GAAIA,EAAJ,CACI,GAAK,IAAIjzC,KAASizC,EAAiBgC,KAC/B,OAGJ,EAAKC,wBAEF,GAAIF,EACHD,GAAa,EAAKI,mBADnB,CAKP,IAAMzvD,EAAU,EAAKgtD,cAAcljD,QACnC,GAAK9J,EAAL,CAhBmC,IAkB7Bf,EAAce,EAAdf,UAKN,GAHAe,EAAQsL,UAAY,KACpB,EAAKowB,cAEAz8B,GACAA,EAAU0M,OAAf,CAxBmC,MA0BRu+C,aAAYjrD,GAA/Bd,EA1B2B,EA0B3BA,KAAM+L,EA1BqB,EA0BrBA,SAER4/B,EAAgB,CAClB,QAAS,gBACT3rC,OACA+L,YAEEwlD,EAAe,CACjB,QAAS,mBACTvxD,KAAM2rC,EACNt/B,0BAA0B,EAC1BC,aAAa,GAGjB,GAAI09C,EAAe,CACf,IAAMwH,EAAgBvmD,KAAavM,IAAIoG,EAAQklD,GAC/C,IAAKwH,EAAe,OAFL,IAIPrmD,EAAYqmD,EAAZrmD,QACR,IAAKA,EAAS,OALC,IAOPnL,EAAkBmL,EAAlBnL,KAAM8L,EAAYX,EAAZW,QACV9L,EACA,EAAKyxD,gBAAgBF,EAAc,SAAAj8D,MAC5BwW,GACP,EAAK4lD,mBAAmB/lB,GAE5Bse,aAAYnlD,EAAQ,QAEpB,EAAKmrD,YAAYsB,GAAc,EAAO,SAAAj8D,UA1kB3B,EA8kBnBqtD,iBAAmB,WACfxtD,IAAgBgG,aAAa,CACzB,QAAS,yBAhlBE,EAolBnBmnD,kBAAoB,WACX,EAAKtZ,gBAEV,EAAKA,eAAer9B,QAAQs9B,SAvlBb,EA8mBnB0oB,0BA9mBmB,qBA8mBS,oCAAApsD,EAAA,wDAEH,KADb2zB,EAAU,EAAK8P,eAAer9B,QAA9ButB,OACE3xB,OAFc,oDAIH,IAAjB2xB,EAAM3xB,OAJc,sBAKSg6B,MAAMltC,KAAK6kC,GALpB,kBAKZ04B,EALY,gBAMfA,EANe,iEAQE,EAAKC,WAAWD,GAAS,GAR3B,OAQdlG,EARc,OAUpB,EAAKl2D,SAAS,CACV+5D,eAAe,EACf7D,YAZgB,wBAepBnqB,MAAMltC,KAAK6kC,GAAO9kC,QAAlB,sCAA0B,WAAMoK,GAAN,uBAAA+G,EAAA,qEACQ4jC,YAAc3qC,GADtB,mCACfoF,EADe,KACR4I,EADQ,KAGhBrB,EAAU,CACZ,QAAS,oBACTC,MAAO,CAAE,QAAS,gBAAiBo/B,KAAMhsC,EAAKgsC,KAAMj+B,KAAM/N,EAAK+N,KAAM2O,KAAM1c,GAC3EoF,QACA4I,UAGJ,EAAKslD,gBAAgB3mD,EAAS3M,GAVR,yCAA1B,uDAfoB,QA6BxB,EAAKwqC,eAAer9B,QAAQvO,MAAQ,GA7BZ,0CA9mBT,EA8oBnBqlD,qBAAuB,WACd,EAAKsP,mBAEV,EAAKA,kBAAkBpmD,QAAQs9B,SAjpBhB,EAopBnB+oB,6BAppBmB,qBAopBY,oCAAAzsD,EAAA,wDAEN,KADb2zB,EAAU,EAAK64B,kBAAkBpmD,QAAjCutB,OACE3xB,OAFiB,oDAIN,IAAjB2xB,EAAM3xB,OAJiB,sBAKMg6B,MAAMltC,KAAK6kC,GALjB,kBAKf04B,EALe,gBAMlBA,EANkB,iEAQD,EAAKC,WAAWD,GAAS,GARxB,OAQjBlG,EARiB,OAUvB,EAAKl2D,SAAS,CACV+5D,eAAe,EACf7D,YAZmB,wBAevBnqB,MAAMltC,KAAK6kC,GAAO9kC,QAAQ,SAAAoK,GACtB,IAAM2M,EAAU,CACZ,QAAS,uBACTzR,SAAU,CAAE,QAAS,gBAAiB8wC,KAAMhsC,EAAKgsC,KAAMj+B,KAAM/N,EAAK+N,KAAM2O,KAAM1c,IAGlF,EAAKyzD,mBAAmB9mD,EAAS3M,KArBd,QAyB3B,EAAKuzD,kBAAkBpmD,QAAQvO,MAAQ,GAzBZ,0CAppBZ,EAswBnBmvD,YAAc,WACV7yD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,OAxwBvB,EA2wBnBulD,WAAa,WACTzyD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,QAAQ,EAAO,OA/wBrB,EAkxBnBwlD,aAAe,WACX1yD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,UAAU,EAAO,OAtxBvB,EAyxBnBylD,WAAa,WACT3yD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtC,IAAI5G,EAAO,GACHq3B,EALO,eAKPA,UACJA,IAAcA,EAAU6sB,cACxBlkD,EAAOq3B,EAAU2sB,YAGhBhkD,IACLA,EAAI,gBAAYA,EAAZ,WACJtG,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,cAAc,EAAO5G,KAtyB3B,EAyyBnBwsD,gBAAkB,WACd9yD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,aAAa,EAAO,OA7yB1B,EAgzBnB6lD,oBAAsB,WAClB/yD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,iBAAiB,EAAO,OApzB9B,EAuzBnB0lD,UAAY,WACR,EAAKI,qBAxzBU,EA2zBnBnkB,aAAe,WAAO,IAAD,EACmC,EAAKzzC,MAAjDgQ,EADS,EACTA,OAAQklD,EADC,EACDA,cAAeoG,EADd,EACcA,iBAC/B,OAAIpG,GACAC,aAAYnlD,EAAQ,IACb,KACAsrD,IACPlG,aAAaplD,EAAQ,IACd,IAl0BI,EAw0BnByjB,cAAgB,SAAArxB,GAAU,IACdI,EAAoFJ,EAApFI,OAAQC,EAA4EL,EAA5EK,QAAiCC,GAA2CN,EAAnEE,IAAmEF,EAA9DmW,QAA8DnW,EAArDg7D,SAAqDh7D,EAA3CM,SAASC,EAAkCP,EAAlCO,SAAUy0D,EAAwBh1D,EAAxBg1D,OAAQ7vD,EAAgBnF,EAAhBmF,YADvD,EAEuB,EAAKvH,MAAzCk1D,EAFa,EAEbA,cAAeoG,EAFF,EAEEA,iBAWvB,IADwB/zD,EAAhBknC,YAKR,OAAQlnC,EAAYhF,MAEhB,IAAK,SACD,GAAIC,GAAUC,IAAYC,IAAYC,EAAU,CAC5C,GAAIuyD,EAAe,OACnB,GAAIoG,EAAkB,OAEtBl5D,EAAM6B,iBAEV,MAEJ,IAAK,QACL,IAAK,cAEIzB,KAAWC,GAAWC,GAAWC,IAAcy0D,EAO1C50D,GAAWC,GAAYC,GAAYC,GAAay0D,IACtD,EAAK+E,cAAa,GAElB/5D,EAAM6B,iBACN7B,EAAM4B,oBAVNY,SAASkN,YAAY,mBAErB1P,EAAM6B,iBACN7B,EAAM4B,mBASV,MAGJ,IAAK,SACIxB,GAAWC,GAAYC,GAAYC,IAC/By0D,GAAU,EAAK3jB,iBAChBrxC,EAAM6B,iBACN7B,EAAM4B,mBAGd,MAGJ,IAAK,UACD,IAAKozD,IAAW50D,IAAWC,IAAYC,IAAYC,EAAU,CACzD,IAAMoK,EAAU,EAAKgtD,cAAcljD,QACnC,GAAI9J,IAAYA,EAAQsL,UAAW,CAE/B,GAD0B,EAAKrY,MAAvBk1D,cACW,OAEnB70D,IAAgBgG,aAAa,CACzB,QAAS,+BAGbjE,EAAM6B,iBACN7B,EAAM4B,mBAGd,MAGJ,IAAK,OACIxB,IAAWC,IAAWC,GAAaC,GAAay0D,IACjD,EAAKC,aAELj1D,EAAM6B,iBACN7B,EAAM4B,mBAEV,MAGJ,IAAK,OACIxB,IAAWC,IAAWC,GAAaC,GAAay0D,IACjD,EAAKE,eAELl1D,EAAM6B,iBACN7B,EAAM4B,mBAEV,MAEJ,IAAK,OAEIxB,IAAWC,IAAWC,GAAaC,GAAay0D,GAO5C50D,IAAWC,IAAWC,GAAaC,GAAay0D,IACrD,EAAKG,aAELn1D,EAAM6B,iBACN7B,EAAM4B,oBAVN,EAAKwzD,YAELp1D,EAAM6B,iBACN7B,EAAM4B,mBASV,MAGJ,IAAK,QACGxB,IAAWC,IAAWC,GAAaC,GAAay0D,IAChD,EAAKK,cAELr1D,EAAM6B,iBACN7B,EAAM4B,qBA77BH,EAo8BnBg5D,gBAAkB,SAAC3mD,EAAS3M,GACnB2M,GAEL,EAAK8kD,YAAY9kD,GAAS,EAAM,SAAA7V,GAC5B,IAAM68D,EAAgBlnD,KAAavM,IAAIpJ,EAAOsU,QAAStU,EAAOpC,IACzC,MAAjBi/D,GACA,EAAKC,qBAAqBD,EAAe3zD,GAG7CC,IAAU4zD,WAAW/8D,EAAO6V,QAAQC,MAAMC,MAAM,GAAGD,MAAMlY,GAAIoC,MA78BlD,EAi9BnBg9D,eAAiB,SAAAnN,GACb,EAAK8K,YAAY9K,GAAM,EAAM,eAl9Bd,EAq9BnB8M,mBAAqB,SAAC9mD,EAAS3M,GACtB2M,GAEL,EAAK8kD,YAAY9kD,GAAS,EAAM,SAAA7V,GAAM,OAAImJ,IAAU4zD,WAAW/8D,EAAO6V,QAAQzR,SAASA,SAASxG,GAAIoC,MAx9BrF,EA29BnBi9D,gBAAkB,SAACpnD,EAAS3M,GACnB2M,GAEL,EAAK8kD,YAAY9kD,GAAS,EAAM,SAAA7V,GAAM,OAAImJ,IAAU4zD,WAAW/8D,EAAO6V,QAAQ2K,MAAMA,MAAM5iB,GAAIoC,MA99B/E,EAi+BnBk9D,oBAAsB,SAACrnD,EAAS3M,GACvB2M,GAEL,EAAK8kD,YAAY9kD,GAAS,EAAM,SAAA7V,GAAM,OAAImJ,IAAU4zD,WAAW/8D,EAAO6V,QAAQmZ,WAAWzE,MAAM3sB,GAAIoC,MAp+BpF,EAw/BnBmzB,YAx/BmB,sCAw/BL,WAAMvxB,GAAN,qBAAAqO,EAAA,0DACQrO,EAAMoX,eAAiBpX,EAAMu7D,cAAcnkD,cAArDiS,EADE,EACFA,MADE,oDAIJ2Y,EAAQ,GACdqI,MAAMltC,KAAKksB,GAAOnsB,QAAQ,SAAA8iB,GACtB,GAAkC,IAA9BA,EAAKw7C,KAAK9jD,QAAQ,QAAe,CACjC,IAAMpQ,EAAO0Y,EAAKy7C,YACdn0D,GACA06B,EAAMzwB,KAAKjK,QAKnB06B,EAAM3xB,OAAS,GAdT,uBAeNrQ,EAAM6B,iBAEN,EAAKk2D,gBAAgB/1B,GAjBf,+BAqBJ7qB,EAAYnX,EAAMoX,cAAcC,QAAQ,eArBpC,wBAuBNrX,EAAM6B,iBACNW,SAASkN,YAAY,cAAc,EAAOyH,GAxBpC,6DAx/BK,wDAqhCnBukD,mBAAqB,WAAO,IAChB15B,EAAU,EAAKpkC,MAAfokC,MACHA,GACAA,EAAM3xB,SAEX2xB,EAAM9kC,QAAQ,SAAAoK,GACV,IAAM2M,EAAU,CACZ,QAAS,uBACTzR,SAAU,CAAE,QAAS,gBAAiB8wC,KAAMhsC,EAAKgsC,KAAMtvB,KAAM1c,IAGjE,EAAKyzD,mBAAmB9mD,EAAS3M,KAGrC,EAAKq0D,sBAniCU,EAsiCnBA,kBAAoB,WAChB,EAAKr9D,SAAS,CAAE0jC,MAAO,QAviCR,EA0iCnB45B,yBAA2B,WACF,EAAKh+D,MAAlBi+D,WAGR,EAAKlD,YACL,EAAKmD,4BA/iCU,EAkjCnBA,wBAA0B,WACtB,EAAKx9D,SAAS,CAAEu9D,SAAU,QAnjCX,EAsjCnBX,qBAAuB,SAAC/nD,EAAS8vB,GAC7B,GAAK9vB,EAAL,CADsC,IAG9BynB,EAAwCznB,EAAxCynB,cAAe3mB,EAAyBd,EAAzBc,QAASvB,EAAgBS,EAAhBT,QAAS1W,EAAOmX,EAAPnX,GACzC,GAAK4+B,GAC0B,+BAA3BA,EAAc,UACO,iBAArB3mB,EAAQ,SAAZ,CANsC,IAQ9BC,EAAUD,EAAVC,MACR,GAAKA,EAAL,CAEA,IAAMmB,EAAOqP,YAAQxQ,EAAMC,MAAOwQ,KAClC,GAAKtP,EAAL,CAZsC,IAcvB/N,EAAS+N,EAAhBnB,MACH5M,IAELC,IAAUw0D,QAAQz0D,EAAKtL,GAAIinC,GAC3B17B,IAAUy0D,gBAAgBtpD,EAAS1W,EAAIsL,EAAKtL,UAxkC7B,EA8nCnB+8D,YA9nCmB,sCA8nCL,WAAO9kD,EAASgoD,EAAY5pC,GAA5B,qBAAAhkB,EAAA,0DAC2B,EAAKzQ,MAAlCgQ,EADE,EACFA,OAAQsrD,EADN,EACMA,iBAEXtrD,EAHK,oDAILqG,EAJK,0EAOAwjB,KAASykC,sBAAT,0CAAkEtuD,IAPlE,wBASe3P,IAAgBC,KAAK,CACtC,QAAS,cACTwU,QAAS9E,EACTkH,oBAAqBokD,EACrBhkD,sBAAuBjB,IAbrB,QASA7V,EATA,OAgBN,EAAKE,SAAS,CAAE46D,iBAAkB,GAAK,WAC/B+C,GACA,EAAKxD,cAKbx6D,IAAgBC,KAAK,CACjB,QAAS,eACTwU,QAAS9E,EACT+H,YAAa,CAACvX,EAAOpC,MAGrBk9D,GACAlG,aAAaplD,EAAQ,GAGzBykB,EAASj0B,GAjCH,kDAmCN+9D,MAAM,qBAAuBl7B,KAAKG,UAAL,OAnCvB,wDA9nCK,4DAqqCnBg7B,kBAAoB,SAAAv+D,GACXA,IAEL,EAAKm4D,mBACLxzD,SAASkN,YAAY,cAAc,EAAO7R,EAAMw+D,QAChD,EAAKh2B,gBA1qCU,EA6qCnBA,YA7qCmB,sCA6qCL,WAAMrmC,GAAN,SAAAqO,EAAA,qDACV,EAAKiuD,YACL,EAAKC,WACL,EAAKC,yBAHK,yCA7qCK,wDAisCnBhH,kBAAoB,WAChB,IAAIjE,EAAc,GACdC,EAAa,GAFK,iBAIdrxB,EAJc,EAIdA,UAAWJ,EAJG,EAIHA,MACnB,GAAIA,EAAO,CAAC,IACF01B,EAAiC11B,EAAjC01B,eACN,GAAIA,IADmC11B,EAAjB21B,aACe,CAAC,IAC1BC,EAAkBF,EAAlBE,cACJA,GAA4C,MAA3BA,EAAcC,WAC/BrE,EAAcoE,EAAc1/C,UAC5Bu7C,EAAamE,EAAcE,OAKlCtE,IAAepxB,GAAcA,EAAU6sB,cACxCuE,EAAcpxB,EAAU2sB,YAG5B,EAAKxuD,SAAS,CACVw3D,aAAa,EACbtE,aACAD,iBAxtCW,EA4tCnBwE,mBAAqB,WACjB,EAAKz3D,SACD,CACIw3D,aAAa,GAEjB,WACI,EAAKE,sBAluCE,EA8vCnBl2B,WAAa,WACT,IAAMn1B,EAAU,EAAKgtD,cAAcljD,QACnC,GAAK9J,EACL,GAAKA,EAAQi1B,WAAWvvB,OAAxB,CAKA,IAAMosD,EAAej9B,GAAiB70B,GACtC,GAAK8xD,EAAL,CAIA,IAAM18B,EAAQv9B,SAASw9B,cACvBD,EAAME,SAASw8B,EAAcA,EAAapsD,QAC1C0vB,EAAMG,UAAS,GAEf,IAAMC,EAAY33B,OAAO43B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBp1B,EAAQ1F,cAjBJ0F,EAAQ1F,SAlwCG,EAsxCnBixD,oBAAsB,WAClB,EAAKH,sBAvxCU,EA0xCnBI,kBAAoB,SAACrtD,EAAM+V,GACvB,EAAKk3C,qBACLpvD,WAAW,WAAM,IAELo5B,EAFK,eAELA,MACR,GAAIA,EAAO,CAAC,IACA01B,EAAiC11B,EAAjC01B,eAAgBC,EAAiB31B,EAAjB21B,aACxB,GAAID,GAAkBA,IAAmBC,EAAc,CAAC,IAC5CU,EAAeX,EAAfW,WACR,GAAIA,GAAsC,MAAxBA,EAAWR,SAAkB,CAC3CQ,EAAWP,KAAOh3C,EAClBu3C,EAAWx8C,MAAQiF,EACnBu3C,EAAWngD,UAAYnN,EAHoB,IAMnCskD,EAAcgJ,EAAdhJ,UACR,GAAIA,EAAW,CACX,IAAMrtB,EAAQv9B,SAASw9B,cACvBD,EAAME,SAASmtB,EAAWA,EAAUiJ,YAAYhmD,QAChD0vB,EAAMu2B,OAAOlJ,EAAWA,EAAUiJ,YAAYhmD,QAE9C,IAAM8vB,EAAY39B,SAAS49B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB,SAMZ,IAAM9sB,EAAI,kBAAc4L,EAAd,kBAA2BA,EAA3B,sDAA4E/V,EAA5E,QACVtG,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,cAAc,EAAOuD,IAC3C,IA5zCY,EA+zCnBypD,sBAAwB,WACpB,EAAKC,wBAh0CU,EAm0CnBpG,gBAn0CmB,sCAm0CD,WAAO3hD,EAASX,GAAhB,2BAAA5F,EAAA,yDACV4F,EADU,iCAEY,EAAK2oD,iBAAiB3oD,GAFlC,YAEJd,EAFI,yBAIW0pD,EAAgB1pD,EAAzBc,QAJF,KAKE4oD,EAAY,SALd,OAMG,iBANH,0BAOiBC,EAAc7oD,EAArBC,MAPV,wDAUgB+uB,EAAS65B,EAAf94C,KAVV,wDAaU9P,EAAU2oD,EAAV3oD,MAbV,wDAgBQ6oD,EAAQ7oD,EAAMC,MAAMqG,KAAK,SAAA/d,GAAC,MAAe,MAAXA,EAAEwd,OAhBxC,4DAmBiB3S,EAASy1D,EAAhB7oD,QAEJ3M,IAAUw0D,QAAQz0D,EAAKtL,GAAIinC,GArBjC,+DA8Bd,EAAKu3B,mBAAmB5lD,GA9BV,0CAn0CC,0DAo2CnBooD,gBAAkB,SAAC/oD,EAAS3M,GAGxB,OAFA,EAAKq1D,sBAAqB,GAElB1oD,EAAQ,UACZ,IAAK,oBACD,EAAKonD,gBAAgBpnD,EAAS3M,GAC9B,MAEJ,IAAK,oBACD,EAAKszD,gBAAgB3mD,EAAS3M,GAC9B,MAEJ,IAAK,uBACD,EAAKyzD,mBAAmB9mD,EAAS3M,KAj3C1B,EA24CnB0mB,kBAAoB,WAChBrnB,WAAW,kBAAM,EAAKqvD,oBAAoB,IA54C3B,EA+4CnBmE,iBAAmB,WAAwB,IAAvB8C,EAAsB,wDACjC,EAAKC,WAEV,EAAKA,SAASD,UAAYA,EAC1B,EAAKC,SAAS7/D,OACd,EAAK6/D,SAASC,OAAOC,iBAAiBlgE,QAAQ,SAAA8P,GAAK,OAAIA,EAAM3P,WAp5C9C,EAu5CnBi8D,mBAAqB,WACjB,EAAKa,kBAAiB,IAx5CP,EA25CnBC,aA35CmB,qBA25CJ,sCAAA/rD,EAAA,yDACP,EAAK6uD,SADE,wDAGPC,EAAS,KAHF,kBAKQ7uD,UAAU+uD,aAAaC,aAAa,CAAE1+C,OAAO,IALrD,UAKPu+C,EALO,QAMH,EAAKD,SANF,8GASNC,EATM,wBAUP,EAAK7+D,SAAS,CACVi/D,wBAAwB,IAXrB,2BAgBLC,EAAc,CAChBC,aAAc,EACdC,WAAY,MAGFP,EAAOC,iBAAiB,GAChCO,iBAAiBH,GAEjB3hE,EAAU,CAAE+hE,SAAU,yBAA0BC,mBAAoB,MACpEC,EAAgB,CAClBC,qBAAsB,WAClB,OAAO,IAAIC,OAAOC,6DAEtBC,uBAAwBD,2DAGtBf,EAAW,IAAIiB,KAAchB,EAAQthE,EAASiiE,GAE9CM,EAAS,GAEflB,EAASmB,gBAAkB,SAAA/xD,GACvB8xD,EAAO7sD,KAAKjF,EAAE0X,OAElBk5C,EAASoB,QAAU,aAGnBpB,EAASqB,OAAS,WACdtgE,IAAgBgG,aAAa,CAAE,QAAS,2BACxC,EAAK3F,SAAS,CAAE45D,cAAe,OAFX,IAIZ+E,EAAc,EAAKC,SAAnBD,UAIR,GAHA,EAAKC,SAAW,KAEhB,EAAKvE,aACDsE,EAAJ,CAKA,IAAMh6B,EAAO,IAAIu7B,KAAKJ,EAAQ,CAAE,KAAS,2BACnCK,EAAWj2D,OAAOoe,IAAI+qB,gBAAgB1O,GAEtCrkB,EAAQ,IAAI8/C,MAAMD,GACxB7/C,EAAMxV,UAAY,WACd,IAAM6K,EAAU,CACZ,QAAS,wBACTmZ,WAAY,CAAE,QAAS,gBAAiBkmB,KAAM,GAAIj+B,KAAM4tB,EAAK5tB,KAAM2O,KAAMif,GACzErnC,SAAUiB,KAAK8hE,MAAM//C,EAAMhjB,UAC3BgjE,SAAU,GACVhqD,QAAS,MAGb,EAAK0mD,oBAAoBrnD,EAASgvB,MAG1Ci6B,EAASp5B,QAAU,WACf7lC,IAAgBgG,aAAa,CAAE,QAAS,4BACxC,EAAK3F,SAAS,CAAE45D,cAAe,OAE/B,EAAKS,aAIT,EAAKuE,SAAWA,EAChB,EAAKA,SAASphE,MAAM,IACpB,EAAKM,UAAY,IAAI6oB,KAErBhnB,IAAgBgG,aAAa,CAAE,QAAS,4BACxC,EAAK3F,SAAS,CAAE45D,cAAe,IAAIjzC,OApFxB,wDA35CI,EAk/CnB45C,sBAAwB,WACpB,EAAKvgE,SAAS,CACVi/D,wBAAwB,KAj/C5B,EAAK1C,kBAAoB37D,IAAM2Y,YAC/B,EAAKi6B,eAAiB5yC,IAAM2Y,YAC5B,EAAK8/C,cAAgBz4D,IAAM2Y,YAE3B,IAAMjK,EAAS6pB,KAAS0G,YAPT,OASf,EAAKvgC,MAAQ,CACTgQ,SACAsrD,iBAAkBG,YAA6BzrD,GAC/CklD,cAAe,EACfmH,gBAAgB,EAChB/B,cAAe,KACfqF,wBAAwB,EACxBuB,SAAU,MAGdt8D,SAASkN,YAAY,6BAA6B,EAAO,MAnB1C,E,mFAsBG4J,EAAWC,GAAY,IACjCxL,EAAMxQ,KAAKc,MAAX0P,EADgC,EAepCxQ,KAAKK,MAZLgQ,EAHoC,EAGpCA,OACAiuD,EAJoC,EAIpCA,SACA75B,EALoC,EAKpCA,MACAk3B,EANoC,EAMpCA,iBACApG,EAPoC,EAOpCA,cACAuF,EARoC,EAQpCA,cACAvC,EAToC,EASpCA,YACAgJ,EAVoC,EAUpCA,SACA7E,EAXoC,EAWpCA,eACA/B,EAZoC,EAYpCA,cACAqF,EAboC,EAapCA,uBACAljB,EAdoC,EAcpCA,MAGJ,OAAI/gC,EAAUvL,IAAMA,IAIhBwL,EAAU3L,SAAWA,IAIrB2L,EAAUsiD,WAAaA,IAIvBtiD,EAAUyoB,QAAUA,IAIpBzoB,EAAU2/C,mBAAqBA,IAI/B3/C,EAAUu5C,gBAAkBA,IAI5Bv5C,EAAUulD,WAAaA,IAIvBvlD,EAAUu8C,cAAgBA,IAI1Bv8C,EAAU8+C,gBAAkBA,IAI5B9+C,EAAU2+C,gBAAkBA,IAI5B3+C,EAAU0gD,iBAAmBA,IAI7B1gD,EAAUgkD,yBAA2BA,GAIrChkD,EAAU8gC,QAAUA,e,kCAQxB98C,KAAKg8D,WACLh8D,KAAK47D,gBACL57D,KAAK8oC,gB,kCAGI,IAAD,EAC4C9oC,KAAKK,MAAjDgQ,EADA,EACAA,OAAQklD,EADR,EACQA,cAAeoG,EADvB,EACuBA,iBAEzBvuD,EAAUpN,KAAKo6D,cAAcljD,QACnC,GAAK9J,EAAL,CAEA,IAAIf,EAAY,KAEZA,EADAkpD,EACYv1D,KAAK67D,eAAiB77D,KAAK67D,eAAexvD,UAAY,KAEtDe,EAAQf,UAGxB,IAAM8vD,EAAen8D,KAAKq8D,gBAAgBhsD,EAAQsrD,EAAkBtvD,GACpErM,KAAKi8D,oBAAoBE,M,0CAWzBl3D,SAASiG,iBAAiB,kBAAmBlL,KAAKm6D,yBAAyB,GAE3EqH,KAAer2D,GAAG,4BAA6BnL,KAAKq7D,6BACpDnhC,KAAS/uB,GAAG,yBAA0BnL,KAAKs6D,0BAC3CpgC,KAAS/uB,GAAG,qBAAsBnL,KAAKs3B,sBACvC4C,KAAS/uB,GAAG,0BAA2BnL,KAAKi7D,2BAC5Ch/C,KAAU9Q,GAAG,yBAA0BnL,KAAKm7D,0BAC5CnxD,IAAUmB,GAAG,wBAAyBnL,KAAKu6D,yBAC3C/jD,KAAarL,GAAG,0BAA2BnL,KAAK06D,2BAChDlkD,KAAarL,GAAG,oBAAqBnL,KAAK07D,qBAC1CllD,KAAarL,GAAG,uBAAwBnL,KAAKq6D,wBAC7C7jD,KAAarL,GAAG,uBAAwBnL,KAAK+gB,wBAC7C0gD,KAAat2D,GAAG,0BAA2BnL,KAAKy7D,2BAEhDz7D,KAAKo7D,c,6CAILp7D,KAAKk7D,YAELsG,KAAel2D,IAAI,4BAA6BtL,KAAKq7D,6BACrDnhC,KAAS5uB,IAAI,yBAA0BtL,KAAKs6D,0BAC5CpgC,KAAS5uB,IAAI,qBAAsBtL,KAAKs3B,sBACxC4C,KAAS5uB,IAAI,0BAA2BtL,KAAKi7D,2BAC7Ch/C,KAAU3Q,IAAI,yBAA0BtL,KAAKm7D,0BAC7CnxD,IAAUsB,IAAI,wBAAyBtL,KAAKu6D,yBAC5C/jD,KAAalL,IAAI,0BAA2BtL,KAAK06D,2BACjDlkD,KAAalL,IAAI,oBAAqBtL,KAAK07D,qBAC3CllD,KAAalL,IAAI,uBAAwBtL,KAAK+gB,wBAC9CvK,KAAalL,IAAI,uBAAwBtL,KAAKq6D,wBAC9CoH,KAAan2D,IAAI,0BAA2BtL,KAAKy7D,2BAEjDx2D,SAASoG,oBAAoB,kBAAmBrL,KAAKm6D,yBAAyB,GAE9En6D,KAAK+7D,uB,iDAgFL,IAAM3uD,EAAUpN,KAAKo6D,cAAcljD,QACnC,GAAK9J,EAAL,CAFuB,IAIfyuD,EAAmB77D,KAAnB67D,eAER,GAAIA,EAAgB,CAGhB,GAFAzuD,EAAQf,UAAYwvD,EAAexvD,WAE9BwvD,EAAer5B,MAEhB,YADAxiC,KAAKuiC,aAIT,IAAMK,EAAY39B,SAAS49B,eAC3BD,EAAUE,kBACVF,EAAUG,SAAS84B,EAAer5B,OAElCp1B,EAAQ1F,aAER0F,EAAQf,UAAY,KACpBrM,KAAKuiC,aAGTviC,KAAK8oC,iB,8CAIL,IAAM17B,EAAUpN,KAAKo6D,cAAcljD,QAC9B9J,IAELpN,KAAK67D,eAAiB,CAClBxvD,UAAWe,EAAQf,UACnBm2B,MAAOxiC,KAAKwiC,U,uCAiKF,IAAD,EACqBxiC,KAAKK,MAA/BgQ,EADK,EACLA,OAAQklD,EADH,EACGA,cAEV3/C,EAAUY,KAAavM,IAAIoG,EAAQklD,GACzC,GAAK3/C,EAAL,CAJa,IAMLc,EAAYd,EAAZc,QACR,GAAKA,EAAL,CAPa,IASLnL,EAAkBmL,EAAlBnL,KAAM8L,EAAYX,EAAZW,QACd,GAAK9L,GAAS8L,EAAd,CAEA,IAAMjK,EAAUpN,KAAKo6D,cAAcljD,QAE/B3L,EACAvL,KAAKk3D,iBAAiB3rD,GACf8L,EACPrX,KAAKk3D,iBAAiB7/C,GAEtBjK,EAAQsL,UAAY,U,uCAIXw+B,GAAgB,IACrB1mC,EAAMxQ,KAAKc,MAAX0P,EACFpD,EAAUpN,KAAKo6D,cAAcljD,QAEnC,GAAKggC,EAAL,CAJ4B,IASpB3rC,EAAmB2rC,EAAnB3rC,KAAM+L,EAAa4/B,EAAb5/B,SACd,IACI,IAAM+hD,EAAQC,aAAS/tD,EAAM+L,EAAU9G,GACvCpD,EAAQf,UAAY,KACpBgtD,EAAM15D,QAAQ,SAAAT,GACVkO,EAAQd,YAAYpN,KAE1B,MAAO6P,GACL3B,EAAQsL,UAAYnN,QAZpB6B,EAAQsL,UAAY,O,yEA8IX3O,EAAM23D,G,2EACd33D,E,yCAAa,M,WAEZsN,EAAUrX,KAAKo6D,cAAcljD,QAAQ7K,aAEvCrM,KAAKo6D,cAAcljD,QAAQ7K,UAAY,KACvCrM,KAAK8oC,gBAGK44B,E,iCACFvI,aAAsBpvD,G,4DACtB43D,aAAyB53D,G,mCAF/B6W,E,uBAIC,CACH7W,OACA6W,QACAvJ,Y,0IAsEK,IAAD,EAC0BrX,KAAKK,MAA/BgQ,EADA,EACAA,OAAQklD,EADR,EACQA,cACV94C,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,EAAL,CAEA,IAAMrP,EAAUpN,KAAKo6D,cAAcljD,QACnC,GAAK9J,EAAL,CANQ,IAQAf,EAAce,EAAdf,UAMR,GALkB,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MAEFe,EAAdsL,UAGR,IAAI6F,aAASlO,GACb,IAAIklD,GAEkB94C,EAAKwoB,sBAAwBxoB,EAAKwoB,oBAAsB,IAAIA,GAAoBxoB,EAAKhe,MAC7FsgE,UAAU,CAAE,QAAS,yB,iCAG3B,IACAxJ,EAAkBv1D,KAAKK,MAAvBk1D,cACF78C,EAAY1Y,KAAKo6D,cAAcljD,QAAQwB,UAC7C,IAAKA,GAAaA,EAAU5F,OAAS,IAAMyiD,EAA3C,CACqBkM,KAATz4B,MAEJtoC,IAAgBgG,aAAa,CACzB,QAAS,gCACTsiC,KAAM,WALlB,CAYW44B,YAAY5iE,MAAvB,IAEI6iE,EADUC,OACIC,KAAKrpD,GACZkpD,YAAY5iE,MAEvB,GAAK6iE,GAASnpD,IAAcmpD,EAAM,GAAlC,CAYA,IAAMG,EAAYt6C,KAAK1oB,MACvB0B,IAAgBC,KAAK,CACjB,QAAS,cACTL,MAAOuhE,EAAM,GACb9tD,MAAO,MACRnT,KAAK,SAAAqhE,GACJvhE,IAAgBgG,aAAa,CACzB,QAAS,gCACTsiC,KAAM,CACFg5B,YACA1hE,MAAOuhE,EAAM,GACbI,gBAKZvhE,IAAgBC,KAAK,CACjB,QAAS,iBACTL,MAAOuhE,EAAM,GACb9tD,MAAO,MACRnT,KAAK,SAAAqhE,GACJvhE,IAAgBgG,aAAa,CACzB,QAAS,iCACTsiC,KAAM,CACFg5B,YACA1hE,MAAOuhE,EAAM,GACbI,oBAtCZ,CACqBR,KAATz4B,MAEJtoC,IAAgBgG,aAAa,CACzB,QAAS,gCACTsiC,KAAM,W,8EAwQAvE,G,yEACbA,E,oDACAA,EAAM3xB,O,oDAEU,IAAjB2xB,EAAM3xB,O,iCACgB9S,KAAKo9D,WAAW34B,EAAM,GAAIA,EAAM,GAAG/nB,KAAKuM,WAAW,U,UAAnEguC,E,0DAGNj3D,KAAKe,SAAS,CACV+5D,eAAe,EACf7D,Y,wBAGJj3D,KAAKe,SAAS,CAAE0jC,U,qLAuFD/tB,G,+EACe1W,KAAKK,MAA/BgQ,E,EAAAA,OAAQklD,E,EAAAA,cAGXllD,E,oDACAklD,E,oDACA7+C,E,0EAEEhW,IAAgBC,KAAK,CACxB,QAAS,mBACTwU,QAAS9E,EACT+E,WAAYmgD,EACZ59C,sBAAuBjB,K,8IAIZW,GAAU,IAAD,EACUrX,KAAKK,MAA/BgQ,EADgB,EAChBA,OAAQklD,EADQ,EACRA,cAEXllD,GACAklD,GACAl+C,GAEL3W,IAAgBC,KAAK,CACjB,QAAS,qBACTwU,QAAS9E,EACT+E,WAAYmgD,EACZl+C,c,8EAIcX,EAASoe,G,iFACO90B,KAAKK,MAA/BgQ,E,EAAAA,OAAQklD,E,EAAAA,cAEXllD,E,oDACAklD,E,oDACA7+C,E,2EAGoBhW,IAAgBC,KAAK,CACtC,QAAS,kBACTwU,QAAS9E,EACT+E,WAAYmgD,EACZ59C,sBAAuBjB,I,QAJrB7V,E,OAONi0B,EAASj0B,G,0MA0DS,IACd00D,EAAkBv1D,KAAKK,MAAvBk1D,cACUv1D,KAAKo6D,cAAcljD,QAAQwB,WAC1B68C,EAKfv1D,KAAKe,SAAS,CACV27D,gBAAgB,IALpB18D,KAAKe,SAAS,CACV27D,gBAAgB,M,sCAgDxB18D,KAAK4iC,UAAY39B,SAAS49B,eACrB7iC,KAAK4iC,WACL5iC,KAAK4iC,UAAU22B,aAEpBv5D,KAAKwiC,MAAQxiC,KAAK4iC,UAAU42B,WAAW,M,yCAGvB,IACRh3B,EAAUxiC,KAAVwiC,MAER,GAAKA,EAAL,CAKA,IAAMI,EAAY39B,SAAS49B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBxiC,KAAKo6D,cAAcljD,QAAQxP,aARvB1H,KAAKuiC,e,6CAoIwB,IAAD,OAAf2/B,IAAe,yDACxBjL,EAAYj3D,KAAKK,MAAjB42D,QAERj3D,KAAKe,SACD,CACI+5D,eAAe,EACf7D,QAAS,MAEb,WACQiL,GAAUjL,GAAWA,EAAQ5/C,SAC7B,EAAK+iD,cAAcljD,QAAQ7K,UAAY4qD,EAAQ5/C,QAC/C,EAAKkrB,aACL,EAAKuG,eAEL,EAAK2vB,uB,+BAmHX,IACEjoD,EAAMxQ,KAAKc,MAAX0P,EADH,EAiBDxQ,KAAKK,MAdLgQ,EAHC,EAGDA,OACAklD,EAJC,EAIDA,cACA0B,EALC,EAKDA,QACA0E,EANC,EAMDA,iBACAl3B,EAPC,EAODA,MAEAuvB,GATC,EAQDsK,SARC,EASDtK,aACAC,EAVC,EAUDA,WACAsE,EAXC,EAWDA,YACAuC,EAZC,EAYDA,cACA4B,EAbC,EAaDA,eACA/B,EAdC,EAcDA,cACAqF,EAfC,EAeDA,uBACAljB,EAhBC,EAgBDA,MAGEqlB,EAAiB5M,EAAgB,IAAM6M,aAAc/xD,EAAQklD,GAC/D9pC,EAAQ,kBAACyI,GAAA,EAAD,CAAexZ,MAAOigD,GAAiB+B,EAAgBvoC,SAAU,kBAACkuC,GAAD,MAAoB52C,KAAM,kBAAC62C,GAAD,QAKvG,OAJI/M,IACA9pC,EAAO,kBAACsxB,GAAD,OAIP,yBAAK17C,UAAU,uBACX,yBAAKA,UAAWiN,IAAW,WAAY,CAAE,qBAAsBqsD,GAAiB,CAAE,MAAS7d,KACvF,yBAAKz7C,UAAWiN,IAAW,oBACvB,kBAAC,GAAD,CACI+B,OAAQA,EACRqU,UAAWi3C,EACXpG,cAAeuF,EAAgB,EAAIvF,EACnC9mD,QAASzO,KAAKywB,oBAElB,yBAAKpvB,UAAU,oBACX,yBAAKA,UAAU,wBACX,kBAAC,IAAM27C,SAAP,CACIC,SACI,kBAAC7mC,EAAA,EAAD,CAAY/U,UAAU,uBAAuBgV,aAAW,YACpD,kBAAC,KAAD,QAGR,kBAAC4jD,GAAD,CAAmB1pD,SAAUvQ,KAAK6+D,sBAG1C,yBAAKx9D,UAAU,0BACX,yBACI5C,GAAG,mBACH4C,UAAU,oBACV4Z,IAAKjb,KAAKo6D,cACVj/C,YAA8B3K,EAAjB2xD,EAAmB,UAAe,WAC/C5wD,iBAAe,EACf2J,gCAA8B,EAC9BxY,UAAW1C,KAAK8zB,cAEhBzY,QAASrb,KAAKg0B,YACdkV,QAASlpC,KAAK8oC,eAGtB,yBAAKznC,UAAU,yBACX,kBAAC,GAAD,MACA,2BACI4Z,IAAKjb,KAAKs9D,kBACVj8D,UAAU,yBACVqb,KAAK,OACLu4B,SAAS,WACTrlC,SAAU5P,KAAKu9D,+BAEnB,2BACItiD,IAAKjb,KAAKu0C,eACVlzC,UAAU,yBACVqb,KAAK,OACLu4B,SAAS,WACTC,OAAO,UACPtlC,SAAU5P,KAAKk9D,6BAEjBz0C,QAAQ8sC,KAAmBoF,GACzB,kBAAC,GAAD,CACItqD,OAAQA,EACRy9C,cAAe9tD,KAAK6tD,kBACpBI,iBAAkBjuD,KAAKguD,qBACvBG,aAAcnuD,KAAKkuD,sBAUrCyM,GACE,yBAAKt5D,UAAU,4CACX,kBAAC+U,EAAA,EAAD,CACI/U,UAAU,gCACVgV,aAAW,SACXyB,KAAK,QACLxB,MAAM,YACN7H,QAASzO,KAAK+7D,oBACd,kBAACl2C,GAAD,QAIZ,yBAAKxkB,UAAU,mCACX,kBAAC+U,EAAA,EAAD,CACI/U,UAAWiN,IAAW,uBAAwB,CAAC,8BAA+BqsD,IAAkB+B,IAChGrmD,aAAW,OACXyB,KAAK,QACLrJ,QAASzO,KAAKw8D,cACb/wC,MAIX9M,aAActO,IAAW,kBAAC,GAAD,CAAkB+hD,OAAQpyD,KAAK69D,iBAC1D,kBAAC,GAAD,CAAkBp5B,MAAOA,EAAOkxB,UAAW31D,KAAKm+D,mBAAoB7J,SAAUt0D,KAAKo+D,oBAEnF,kBAAC,GAAD,CACI1jD,KAAM69C,EACNvE,YAAaA,EACbC,WAAYA,EACZ/Y,OAAQl7C,KAAK44D,kBACbtE,SAAUt0D,KAAK24D,sBAEnB,kBAAC,GAAD,CACIj+C,KAAMogD,EACNzqD,OAAQA,EACRqU,UAAW6wC,EACX0B,QAASA,EACTrZ,OAAQ59C,KAAKg5D,gBACb5G,OAAQpyD,KAAKy/D,gBACbnL,SAAUt0D,KAAKm/D,wBAEnB,kBAAC,IAAD,CACItkD,mBAAoB,EACpBH,KAAMslD,EACNllD,QAAS9a,KAAKshE,sBACdvmD,kBAAgB,qBAChB,kBAAC,IAAD,CAAatc,GAAG,qBAAqB+R,EAAE,sBACvC,kBAAC,KAAD,KACI,kBAACyiC,GAAA,EAAD,KAAoBziC,EAAE,6BAE1B,kBAAC8K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAASzO,KAAKshE,sBAAuBhrD,MAAM,WAC9C9F,EAAE,c,GAzoDR5O,aAkpDRgP,iBAAkBspD,I,qBCxqDlBqI,I,wLAjBD,IAAD,EAC0BviE,KAAKc,MAA5B2tC,EADH,EACGA,QAAS+zB,EADZ,EACYA,UAEjB,OACI,yBAAKnhE,UAAU,kBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAQiV,MAAM,UAAUjV,UAAU,wBAAwBoN,QAAS+zD,GAC9D/zB,U,GATD9sC,IAAMC,YCC5B6gE,G,iLACQ,IACEjyD,EAAMxQ,KAAKc,MAAX0P,EAEFi+B,EAAoBj+B,EADNxQ,KAAKK,MAAjB0e,QACoB,cAAmB,aAE/C,OAAO,kBAAC,GAAD,CAAe0vB,QAASA,EAAS+zB,UAAWxiE,KAAKmf,iC,GAN7BN,IAUpBjO,iBAAkB6xD,ICH3BC,I,kNAyBFhlD,mBAAqB,SAAAlb,GAAW,IACpB6N,EAAW,EAAKvP,MAAhBuP,OAEJsyD,YAAgBtyD,EAAQ7N,EAAOmb,YAAYlf,KAC3C,EAAKga,e,EAIbmF,mBAAqB,SAAApb,GAAW,IACpB6N,EAAW,EAAKvP,MAAhBuP,OAEJuyD,YAAgBvyD,EAAQ7N,EAAOqb,WAAWpf,KAC1C,EAAKga,e,EAIboqD,WAAa,WAAO,IACRxyD,EAAW,EAAKvP,MAAhBuP,OACHA,GAEL3P,IAAgBC,KAAK,CACjB,QAAS,WACTwU,QAAS9E,K,EAIjByyD,oBAAsB,WAAO,IACjBzyD,EAAW,EAAKvP,MAAhBuP,OACHA,GAEL3P,IAAgBC,KAAK,CACjB,QAAS,oBACTwU,QAAS9E,EACT0yD,uBAAuB,K,qFAzDThnD,EAAWC,GAAY,IAAD,EAClBhc,KAAKc,MAAnB0P,EADgC,EAChCA,EAAGH,EAD6B,EAC7BA,OAEX,OAAI0L,EAAU1L,SAAWA,GAIrB0L,EAAUvL,IAAMA,I,0CAQpBqM,KAAgB1R,GAAG,mBAAoBnL,KAAK0d,oBAC5CK,KAAgB5S,GAAG,mBAAoBnL,KAAK4d,sB,6CAI5Cf,KAAgBvR,IAAI,mBAAoBtL,KAAK0d,oBAC7CK,KAAgBzS,IAAI,mBAAoBtL,KAAK4d,sB,+BA8CvC,IAAD,EACiB5d,KAAKc,MAAnBuP,EADH,EACGA,OAAQG,EADX,EACWA,EACViM,EAAOR,KAAUhS,IAAIoG,GAC3B,IAAKoM,EAAM,OAAO,KAHb,IAKGC,EAASD,EAATC,KACR,IAAKA,EAAM,OAAO,KAElB,OAAQA,EAAK,UACT,IAAK,qBACD,IAAMkpB,EAAa/oB,KAAgB5S,IAAIyS,EAAKK,gBAC5C,IAAK6oB,EAAY,OAAO,KAFD,IAIfo9B,EAAWp9B,EAAXo9B,OACR,IAAKA,EAAQ,OAAO,KALG,IAOfC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,YAEnB,OAAQF,EAAO,UACX,IAAK,gCACD,OAAO,kBAAC,GAAD,MAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,CAAev0B,QAASj+B,EAAE,cAAegyD,UAAWxiE,KAAK8iE,sBAEpE,IAAK,0BACD,OAAOG,EAAY,kBAAC,GAAD,MAAe,kBAAC,GAAD,CAAex0B,QAASj+B,EAAE,aAAcgyD,UAAWxiE,KAAK6iE,aAE9F,IAAK,uBACD,OAAO,KAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,MAEX,IAAK,6BACD,OAAII,EACOC,GAAeA,EAAYC,kBAAoB,kBAAC,GAAD,MAAe,KAE9D,kBAAC,GAAD,CAAe10B,QAASj+B,EAAE,aAAcgyD,UAAWxiE,KAAK6iE,aAI3E,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,kBAAC,GAAD,MAEX,IAAK,qBACD,IAAMhlD,EAAaE,KAAgB9T,IAAIyS,EAAKe,eAC5C,IAAKI,EAAY,OAAO,KAFD,IAIf4qC,EAAuB5qC,EAAvB4qC,WAAYua,EAAWnlD,EAAXmlD,OACpB,IAAKA,EAAQ,OAAO,KALG,IAOfC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,YAEnB,OAAQF,EAAO,UACX,IAAK,gCACD,OAAO,kBAAC,GAAD,MAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,CAAev0B,QAASj+B,EAAE,cAAegyD,UAAWxiE,KAAK8iE,sBAEpE,IAAK,0BACD,OAAOG,EAAY,kBAAC,GAAD,MAAe,kBAAC,GAAD,CAAex0B,QAAsBj+B,EAAbi4C,EAAe,cAAmB,aAAc+Z,UAAWxiE,KAAK6iE,aAE9H,IAAK,uBACD,OACI,kBAAC,GAAD,CACIp0B,QAAsBj+B,EAAbi4C,EAAe,cAAmB,aAC3C+Z,UAAWxiE,KAAK6iE,aAI5B,IAAK,yBACD,OAAIpa,EACO,kBAAC,GAAD,CAAsBp4C,OAAQA,IAE9B,kBAAC,GAAD,MAGf,IAAK,6BACD,OAAI4yD,EACOC,GAAeA,EAAYC,kBAAoB,kBAAC,GAAD,MAAe,KAGjE,kBAAC,GAAD,CACI10B,QAAsBj+B,EAAbi4C,EAAe,cAAmB,aAC3C+Z,UAAWxiE,KAAK6iE,cAS5C,OAAO,S,GAxKMlhE,IAAMC,YA4KZgP,iBAAkB8xD,ICrLlB7gE,gBACX,0BAAMC,EAAE,iPACR,SCmBE4kC,I,kNACFrmC,MAAQ,CACJ0mC,SAAU,M,EAGdq8B,kB,sCAAoB,WAAM3gE,GAAN,mBAAAqO,EAAA,4DACOi2B,EAAatkC,EAA5BukC,cAEF32B,EAAS6pB,KAAS0G,YAHR,SAIGlgC,IAAgBC,KAAK,CAAE,QAAS,UAAWwU,QAAS9E,IAJvD,OAIVoM,EAJU,OAKhBR,KAAUzD,IAAIiE,GAEd,EAAK1b,SAAS,CAAEgmC,aAPA,yC,wDAUpBE,gBAAkB,WACd,EAAKlmC,SAAS,CAAEgmC,SAAU,Q,EAG9Bs8B,eAAiB,WACb,EAAKp8B,kBACL79B,WAAW,kBAAM,EAAKtI,MAAMwiE,mBAAmB,M,EAGnDC,mBAAqB,WACjB,EAAKt8B,kBAELnM,aAAaZ,KAAS0G,c,EAG1BV,iBAAmB,WACf,EAAK+G,kBAEL9G,aAAUjG,KAAS0G,c,EAGvB4iC,YAAc,WACV,EAAKv8B,kBAEL,IAAM52B,EAAS6pB,KAAS0G,YAElBhgB,EAAQpK,KAAaqK,SAASxQ,GACpC,IAAKuQ,EAAO,OAAO,EANH,IAQR6iD,EAAW7iD,EAAX6iD,OACR,QAAKA,IACiB,IAAlBA,EAAO3wD,aAEX4wD,aAAoBrzD,EAAQozD,EAAO,GAAGhlE,M,wEAGhC,IACE+R,EAAMxQ,KAAKc,MAAX0P,EACAu2B,EAAa/mC,KAAKK,MAAlB0mC,SAEF12B,EAAS6pB,KAAS0G,YAClB9F,EAAe6oC,YAAgBtzD,GAC/BkwB,EAAaC,YAAcnwB,GAC3BowB,EAAkBC,YAAmBrwB,EAAQG,GAC7C4tB,EAAewlC,YAAoBvzD,GAEzC,OACI,oCACI,kBAAC+F,EAAA,EAAD,CACIqyB,YAAW1B,EAAW,cAAgB,KACtC2B,gBAAc,OACdrnC,UAAU,mBACVgV,aAAW,OACX5H,QAASzO,KAAKojE,mBACd,kBAACrwB,GAAD,OAEJ,kBAAC9K,GAAA,EAAD,CACIxpC,GAAG,YACHsoC,SAAUA,EACVrsB,KAAM+N,QAAQse,GACdjsB,QAAS9a,KAAKinC,gBACdiB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB9iB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,kBAACG,GAAA,EAAD,CAAUlX,QAASzO,KAAKqjE,gBACpB,kBAACvjD,GAAA,EAAD,KACKnB,aAActO,GAAU,kBAAC,GAAD,MAAe,kBAAC4wB,GAAD,OAE5C,kBAAC9gB,GAAA,EAAD,CAAcC,QAAS8gB,YAAiB7wB,EAAQG,MAEnDsqB,GACG,kBAACnV,GAAA,EAAD,CAAUlX,QAASzO,KAAKujE,oBACpB,kBAACzjD,GAAA,EAAD,KACI,kBAAC+jD,GAAD,OAEJ,kBAAC1jD,GAAA,EAAD,CAAcC,QAAS5P,EAAE,mBAGhC+vB,GAAcE,GACX,kBAAC9a,GAAA,EAAD,CAAUlX,QAASzO,KAAKkgC,kBACpB,kBAACpgB,GAAA,EAAD,KACI,kBAAC+F,GAAD,OAEJ,kBAAC1F,GAAA,EAAD,CAAcC,QAASqgB,KAG9BrC,GACG,kBAACzY,GAAA,EAAD,CAAUlX,QAASzO,KAAKwjE,aACpB,kBAAC1jD,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,mC,GAlHxB7O,IAAMC,YAgIpB6Z,GALCC,YACZC,IACA/K,cAGW6K,CAAQirB,ICeRo9B,I,kNApIXC,8BAAgC,SAAAvhE,GACT,EAAK1B,MAAhBuP,SACO7N,EAAO2S,SAEtB,EAAKsD,e,EAGTqD,kBAAoB,SAAAtZ,GACG,EAAK1B,MAAhBuP,SACO7N,EAAO2S,SAEtB,EAAKsD,e,EAGTurD,uBAAyB,SAAAxhE,GACF,EAAK1B,MAAhBuP,SACO7N,EAAO2S,SAEtB,EAAKsD,e,EAGT+D,mBAAqB,SAAAha,GAAW,IACpB6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,GACAA,EAAKC,KAEV,OAAQD,EAAKC,KAAK,UACd,IAAK,qBACD,IAAME,EAAWC,KAAgBC,YAAYL,EAAKC,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAA/d,GAAC,OAAIA,EAAEgV,UAAY1R,EAAO0R,WAE3D,EAAKuE,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACGgE,EAAKC,KAAKxI,UAAY1R,EAAO0R,SAC7B,EAAKuE,gB,EAUrB6E,qBAAuB,SAAA9a,GAAW,IACtB6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GACtBoM,GACAA,EAAKC,OAGkB,oBAAvBD,EAAKC,KAAK,UAAyD,mBAAvBD,EAAKC,KAAK,UACvDD,EAAKC,KAAKxI,UAAY1R,EAAO0R,SAE7B,EAAKuE,gB,EAIb8E,2BAA6B,SAAA/a,GAAW,IAC5B6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GACtBoM,GACAA,EAAKC,MAEiB,uBAAvBD,EAAKC,KAAK,UAAqCD,EAAKC,KAAKK,iBAAmBva,EAAOua,gBACnF,EAAKtE,e,EAIb+E,2BAA6B,SAAAhb,GAAW,IAC5B6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GACtBoM,GACAA,EAAKC,MAEiB,uBAAvBD,EAAKC,KAAK,UAAqCD,EAAKC,KAAKe,gBAAkBjb,EAAOib,eAClF,EAAKhF,e,EAIbiF,mBAAqB,SAAAlb,GAAW,IACpB6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GACtBoM,GACAA,EAAKC,MAEiB,uBAAvBD,EAAKC,KAAK,UAAqCD,EAAKC,KAAKK,iBAAmBva,EAAOmb,YAAYlf,IAC/F,EAAKga,e,EAIbmF,mBAAqB,SAAApb,GAAW,IACpB6N,EAAW,EAAKvP,MAAhBuP,OACFoM,EAAOR,KAAUhS,IAAIoG,GACtBoM,GACAA,EAAKC,MAEiB,uBAAvBD,EAAKC,KAAK,UAAqCD,EAAKC,KAAKe,gBAAkBjb,EAAOqb,WAAWpf,IAC7F,EAAKga,e,mFArITwD,KAAU9Q,GAAG,8BAA+BnL,KAAK+jE,+BACjD9nD,KAAU9Q,GAAG,kBAAmBnL,KAAK8b,mBACrC3H,KAAUhJ,GAAG,mBAAoBnL,KAAKwc,oBACtCP,KAAU9Q,GAAG,uBAAwBnL,KAAKgkE,wBAC1C7vD,KAAUhJ,GAAG,qBAAsBnL,KAAKsd,sBACxCT,KAAgB1R,GAAG,2BAA4BnL,KAAKud,4BACpDQ,KAAgB5S,GAAG,2BAA4BnL,KAAKwd,4BACpDX,KAAgB1R,GAAG,mBAAoBnL,KAAK0d,oBAC5CK,KAAgB5S,GAAG,mBAAoBnL,KAAK4d,sB,6CAI5C3B,KAAU3Q,IAAI,8BAA+BtL,KAAK+jE,+BAClD9nD,KAAU3Q,IAAI,kBAAmBtL,KAAK8b,mBACtC3H,KAAU7I,IAAI,mBAAoBtL,KAAKwc,oBACvCP,KAAU3Q,IAAI,uBAAwBtL,KAAKgkE,wBAC3C7vD,KAAU7I,IAAI,qBAAsBtL,KAAKsd,sBACzCT,KAAgBvR,IAAI,2BAA4BtL,KAAKud,4BACrDQ,KAAgBzS,IAAI,2BAA4BtL,KAAKwd,4BACrDX,KAAgBvR,IAAI,mBAAoBtL,KAAK0d,oBAC7CK,KAAgBzS,IAAI,mBAAoBtL,KAAK4d,sB,+BAqHvC,IACEvN,EAAWrQ,KAAKc,MAAhBuP,OAEF6M,EAAW+mD,YAAgB5zD,GAAQ,GACnC6zD,EAAmBC,YAAqB9zD,GAE9C,OACI,yBAAKhP,UAAWiN,IAAW,uBAAwB,CAAE,8BAA+B41D,KAC/EhnD,O,GAnJgBvb,IAAMC,YCkBxBwiE,I,wLAnBD,IAAD,EACkCpkE,KAAKc,MAApCO,EADH,EACGA,UAAWgP,EADd,EACcA,OAAQ5B,EADtB,EACsBA,QAE3B,OACI,yBAAKpN,UAAWiN,IAAW,cAAejN,GAAYoN,QAASA,GAC3D,kBAACkC,EAAA,EAAD,CAAUN,OAAQA,EAAQyH,KAAM,KAChC,yBAAKzW,UAAU,uBACX,kBAAC,GAAD,CAAagP,OAAQA,IACrB,kBAAC,GAAD,CAAoBA,OAAQA,U,GATvB1O,IAAMC,YCJzByiE,I,0BACF,WAAYvjE,GAAQ,IAAD,8BACf,4CAAMA,KA6CVwjE,QAAU,SAAC1kE,EAAMT,EAAIolE,GAAgB,IACzBxsD,EAAW,EAAKjX,MAAhBiX,OAEFrM,EAAY,EAAK84D,aAAattD,QAC9ButD,EAAQ,EAAKC,SAASxtD,QACtBytD,EAAQ,EAAKC,SAAS1tD,QAE5B,GAAKxL,GAAc+4D,GAAUE,EAA7B,CAKIJ,GACA74D,EAAUhG,MAAM6d,QAAhB,iCAAoDxL,EAApD,OACA0sD,EAAM/+D,MAAM6d,QAAU,aACtBohD,EAAMj/D,MAAM6d,QAAU,aACtB7kB,sBAAsB,WAClBgN,EAAUhG,MAAM6d,QAAhB,0DARS,QAQT,YAPe,eAQfkhD,EAAM/+D,MAAM6d,QAAZ,0CATS,QAST,YARe,cAQf,qBAAgGxL,EAAhG,MACA4sD,EAAMj/D,MAAM6d,QAAZ,0CAVS,QAUT,YATe,cASf,qBAAgGxL,EAAhG,UAGJrM,EAAUhG,MAAM6d,QAAU,6BAC1BkhD,EAAM/+D,MAAM6d,QAAU,aACtBohD,EAAMj/D,MAAM6d,QAAU,aACtB7kB,sBAAsB,WAClBgN,EAAUhG,MAAM6d,QAAhB,iCAAoDxL,EAApD,sCAjBS,QAiBT,YAhBe,eAiBf0sD,EAAM/+D,MAAM6d,QAAZ,0CAlBS,QAkBT,YAjBe,cAiBf,qBAAgGxL,EAAhG,MACA4sD,EAAMj/D,MAAM6d,QAAZ,0CAnBS,QAmBT,YAlBe,cAkBf,qBAAgGxL,EAAhG,WAvER,EAAKysD,aAAe7iE,IAAM2Y,YAC1B,EAAKoqD,SAAW/iE,IAAM2Y,YACtB,EAAKsqD,SAAWjjE,IAAM2Y,YAEtB,EAAKja,MAAQ,GAPE,E,mFAUG0b,EAAWC,EAAWqK,GACxC,OAAOtK,EAAU0G,OAASziB,KAAKc,MAAM2hB,O,0CAmBpB,IACT8hD,EAAevkE,KAAKc,MAApByjE,WACAplE,EAAOa,KAAKK,MAAZlB,GAERa,KAAKskE,QAAQ,GAAInlE,EAAIolE,K,yCAGNrjE,EAAWC,EAAWC,GAAW,IAAD,EAClBpB,KAAKc,MAA1B2hB,EADuC,EACvCA,KAAM8hD,EADiC,EACjCA,WADiC,EAE1BvkE,KAAKK,MAAlBT,EAFuC,EAEvCA,KAAMT,EAFiC,EAEjCA,GAEV+B,EAAUuhB,OAASA,GACnBziB,KAAKskE,QAAQ1kE,EAAMT,EAAIolE,K,+BAqCrB,IAAD,EAC0BvkE,KAAKc,MAA5ByjE,EADH,EACGA,WAAYxsD,EADf,EACeA,OADf,EAEgB/X,KAAKK,MAAlBT,EAFH,EAEGA,KAAMT,EAFT,EAESA,GAId,OACI,yBAAKkC,UAAU,gBAAgBqE,MAAO,CAAEqS,WACpC,yBAAK1W,UAAU,6BAA6BlC,GAC5C,yBAAK8b,IAAKjb,KAAKwkE,aAAcnjE,UAAU,yBACnC,yBAAK4Z,IAAKjb,KAAK0kE,SAAUrjE,UAAU,kBAAkBqE,MAAO,CAAEqS,WAAWwsD,EAAaplE,EAAKS,GAC3F,yBAAKqb,IAAKjb,KAAK4kE,SAAUvjE,UAAU,kBAAkBqE,MAAO,CAAEqS,WAAWwsD,EAAa3kE,EAAOT,Q,gDA5E7E2B,EAAOT,GAAQ,IACnCoiB,EAAS3hB,EAAT2hB,KACAtjB,EAAiBkB,EAAjBlB,GAER,OAAIsjB,IAFqBpiB,EAAbwkE,SAGD,CACHA,SAAUpiD,EACV7iB,KAAMT,EACNA,GAAIsjB,EACJ8hD,WAAY9hD,EAAOtjB,GAIpB,S,GA5BYwC,IAAMC,YAwGjCyiE,GAAa/nD,aAAe,CACxBmG,KAAM,KACN8hD,YAAY,EACZxsD,OAAQ,IAGGssD,UC7GTS,I,kNAEFzkE,MAAQ,G,wEAiBE,IAAD,EACgCL,KAAKc,MAAlCikE,EADH,EACGA,QAAShtD,EADZ,EACYA,OAAQitD,EADpB,EACoBA,QACjBT,EAAevkE,KAAKK,MAApBkkE,WACR,IAAKQ,EAAS,OAAO,KAErB,IAAME,EAAaF,EAAU,GAE7B,OACI,yBAAK1jE,UAAU,mBAAmBqE,MAAO,CAAEqS,WACtC,aAAIktD,GAAYD,UAAUzwD,IAAI,SAACrV,EAAG8iB,GAAJ,OAAc,kBAAC,GAAD,CAAcrf,IAAKqf,EAAOS,KAAMvjB,EAAGqlE,WAAYS,GAAWT,EAAaA,EAAYxsD,OAAQA,U,gDAxBpHjX,EAAOT,GAAQ,IACnC0kE,EAAYjkE,EAAZikE,QACAG,EAAgB7kE,EAAhB6kE,YAER,OAAIH,IAAYG,EACL,CACHA,YAAaH,EAEbR,WAAYQ,EAAUG,GAIvB,S,GAhBevjE,IAAMC,YAwCpCkjE,GAAgBxoD,aAAe,CAC3ByoD,QAAS,EACThtD,OAAQ,GACRitD,SAAS,GAGEF,UC1CTK,G,2MACFrxB,aAAe,WACXh9B,gB,EAGJgO,aAAe,WACX,IAAIrmB,EAAK,EACLuW,EAAa,GAFA,uBAGjB,YAAkCwB,KAAa0yC,cAAcrjB,SAA7D,+CAAuE,CAAC,IAAD,UAA5Dx1B,EAA4D,EAA5DA,OAAQqU,EAAoD,EAApDA,UACfjmB,EAAK4R,EACL2E,EAAWhB,KAAK0Q,IALH,kFAQjBK,aAAetmB,EAAIuW,I,EAGvB4P,cAAgB,WACZ,IAAInmB,EACEuW,EAAa,GAFD,uBAGlB,YAAkCwB,KAAa0yC,cAAcrjB,SAA7D,+CAAuE,CAAC,IAAD,UAA5Dx1B,EAA4D,EAA5DA,OAAQqU,EAAoD,EAApDA,UACfjmB,EAAK4R,EACL2E,EAAWhB,KAAK0Q,IALF,kFAQlBG,aAAgBpmB,EAAIuW,I,wEAGd,IAAD,EACgBhV,KAAKc,MAAlB0P,EADH,EACGA,EAAG0hC,EADN,EACMA,MAEPkzB,GAAe,EAHd,uBAIL,YAAkC5uD,KAAa0yC,cAAcrjB,SAA7D,+CAAuE,CAAC,IAAD,UAA5Dx1B,EAA4D,EAA5DA,OAAQqU,EAAoD,EAApDA,UACT9O,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,CACVwvD,GAAe,EACf,MAEJ,IAAKxvD,EAAQsP,+BAAiCtP,EAAQuP,6BAA8B,CAChFigD,GAAe,EACf,QAZH,kFAgBL,IAAIC,GAAiB,EAhBhB,uBAiBL,YAAkC7uD,KAAa0yC,cAAcrjB,SAA7D,+CAAuE,CAAC,IAAD,UAA5Dx1B,EAA4D,EAA5DA,OAAQqU,EAAoD,EAApDA,UACT9O,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,CACVyvD,GAAiB,EACjB,MAEJ,IAAKzvD,EAAQa,iBAAkB,CAC3B4uD,GAAiB,EACjB,QAzBH,kFA6BL,OACI,yBAAKhkE,UAAU,kBACVgkE,GACG,kBAAC9pD,EAAA,EAAD,CAAQjF,MAAM,UAAUjV,UAAU,wBAAwBoN,QAASzO,KAAK4kB,eACnEpU,EAAE,WACH,sCACA,kBAAC,GAAD,CAAiBu0D,QAAS7yB,KAGjCkzB,GACG,kBAAC7pD,EAAA,EAAD,CAAQjF,MAAM,UAAUjV,UAAU,wBAAwBoN,QAASzO,KAAK8kB,cACnEtU,EAAE,UACH,sCACA,kBAAC,GAAD,CAAiBu0D,QAAS7yB,KAGlC,yBAAK7wC,UAAU,yBACf,kBAACka,EAAA,EAAD,CAAQjF,MAAM,UAAUjV,UAAU,wBAAwBoN,QAASzO,KAAK8zC,cACnEtjC,EAAE,gB,GA1EK7O,IAAMC,WAqFnBgP,iBAAkBu0D,I,SC5FlBtjE,gBACX,0BAAMC,EAAE,q8DACR,gBCyIWwjE,I,yNAtIXC,SAAW,SAACrmE,EAAGmzB,EAAGljB,EAAO4I,EAAQytD,GAC7B,MAAM,IAAN,OAAWtmE,EAAX,YAAgBmzB,EAAImzC,EAApB,YAA8BA,EAA9B,YAAwCA,EAAxC,kBAAwDr2D,EAAxD,cAAmE4I,EAAS,EAAIytD,EAAhF,YAA0FA,EAA1F,YAAoGA,EAApG,mBAAqHr2D,EAArH,Q,EAGJs2D,YAAc,SAAChnE,EAAIinE,EAAWxzB,GAC1B,IAEIpwC,EAAI,GACR,GAAc,IAAVowC,EACApwC,EAAI,EAAKyjE,SAAS,EAAG,EAAG,EAAGG,EAJhB,GAKL,EAAKH,SAAS,EAAG,GAAI,EAAGG,EAAY,EAL/B,GAML,EAAKH,SAAS,EAAG,GAAI,EAAGG,EANnB,QAQX,IAAK,IAAItyD,EAAI,EAAGA,EAAI8+B,EAAO9+B,IACvBtR,GAAK,EAAKyjE,SAAS,GAAIG,EAAY,GAAKtyD,EAAG,EAAGsyD,EATvC,GAaf,OACI,8BAAUjnE,GAAIA,GACV,0BAAMqD,EAAGA,M,EAKrB6jE,aAAe,SAACzzB,EAAOlwB,GACnB,IAAI0jD,EAAY,GAahB,OAZc,IAAVxzB,EACAwzB,EAAY,GACK,IAAVxzB,EACPwzB,EAAY,GACK,IAAVxzB,EACPwzB,EAAY,EACK,IAAVxzB,EACPwzB,EAAY,EACLxzB,EAAQ,IACfwzB,EAAY,GAGTA,G,EAGXE,cAAgB,SAAC1zB,EAAOlwB,GACpB,IAAI0jD,EAAY,GAahB,OAZc,IAAVxzB,EACAwzB,EAAY,GACK,IAAVxzB,EACPwzB,EAAY,GACK,IAAVxzB,EACPwzB,EAAsB,IAAV1jD,EAAc,GAAK,EACd,IAAVkwB,EACPwzB,EAAY,EACLxzB,EAAQ,IACfwzB,EAAY,GAGTA,G,EAGXG,kBAAoB,SAAC7jD,EAAO0jD,EAAWxzB,GACnC,OAAc,IAAVA,EACO,EACU,IAAVA,EACU,IAAVlwB,EAAc,EAAI0jD,EAAY,EAG3B,IAAVxzB,EACc,IAAVlwB,EACO,EACU,IAAVA,EACA,GAGJ,IAEC0jD,EAAY,GAAK1jD,G,EAIjC8jD,mBAAqB,SAAC9jD,EAAOkwB,EAAOwzB,EAAWK,GAC3C,OAAI7zB,GAAS,EACF,EAGPlwB,GAAS,EACF,EACAA,GAASkwB,EAAQ,EACjB6zB,EAAc,IAGjBL,EAAY,GAAK,GAAK1jD,EAAQ,IAAM0jD,EAAY,I,EAG5DM,eAAiB,SAAC9zB,EAAOwzB,GACrB,OAAOxzB,GAAS,EAAI,GAAKwzB,EAAYxzB,EAAQ,GAAKA,EAAQ,I,wEAGpD,IAAD,EACoBlyC,KAAKc,MAAtBoxC,EADH,EACGA,MAAOlwB,EADV,EACUA,MACf,GAAc,IAAVkwB,EACA,OACI,yBAAK7wC,UAAU,yBACX,yBAAKA,UAAU,qCAI3B,IAAMqkE,EAAY1lE,KAAK2lE,aAAazzB,EAAOlwB,GACrCikD,EAAajmE,KAAK4lE,cAAc1zB,EAAOlwB,GACvC+jD,EAAc/lE,KAAKgmE,eAAe9zB,EAAOwzB,GAEzCQ,EAAU,mBAAeh0B,GACzBi0B,EAAWnmE,KAAKylE,YAAYS,EAAYR,EAAWxzB,GAEnDk0B,EAAiBpmE,KAAK6lE,kBAAkB7jD,EAAO0jD,EAAWxzB,GAC1Dm0B,EAAkBrmE,KAAK8lE,mBAAmB9jD,EAAOkwB,EAAOwzB,EAAWK,GAEzE,OACI,yBAAK1kE,UAAWiN,IAAW,wBAAyB,CAAE,6BAA8B4jC,EAAQ,KACxF,yBAAK7wC,UAAU,gCAAgCqE,MAAO,CAAEygE,SAAS,QAAD,OAAUD,EAAV,KAAyB/2D,MAAO,EAAG4I,OAAQguD,EAAa/oC,UAAU,eAAD,OAAiBqpC,EAAjB,SAC7H,yBAAKtuD,OAAO,IAAI5I,MAAM,KAClB,8BAAOg3D,IAEX,yBAAK9kE,UAAU,6BAA6BqE,MAAO,CAAEqS,OAAQkuD,EAAYjpC,UAAU,cAAD,OAAgBopC,EAAhB,gB,GA5HpEzkE,IAAMC,YCalC0kE,G,2MACFjmE,MAAQ,G,EAsFRkmE,mCAAqC,SAAA/jE,GACd,EAAK1B,MAAhBuP,SACO7N,EAAO6N,QAItB,EAAKm2D,kBAAkBhkE,EAAOkiB,Y,EAGlC+hD,wBAA0B,SAAAjkE,GACH,EAAK1B,MAAhBuP,SACY7N,EAAZ2S,SAKR,EAAKuxD,kB,EAGT1lD,mBAAqB,SAAAxe,GAAW,IACpB6N,EAAW,EAAKvP,MAAhBuP,OACAuF,EAAYpT,EAAZoT,QACJvF,IAAWuF,EAAQT,SAGlBS,EAAQ+wD,WAIb,EAAKD,kB,EAGT3lD,uBAAyB,SAAAve,GAAW,IACxB6N,EAAW,EAAKvP,MAAhBuP,OACAozD,EAAW,EAAKpjE,MAAhBojE,OACAtuD,EAAuC3S,EAAvC2S,QAASslD,EAA8Bj4D,EAA9Bi4D,aAAcriD,EAAgB5V,EAAhB4V,YACzBpD,EAAa,IAAI9B,IAAIkF,EAAY7D,IAAI,SAAArV,GAAC,MAAI,CAACA,EAAGA,MAChDmR,IAAW8E,GAGVsuD,EAAO13C,KAAK,SAAA7sB,GAAC,OAAI8V,EAAW3B,IAAInU,EAAET,OAGlCg8D,GAIL,EAAKiM,kB,EAGThmD,uBAAyB,SAAAle,GAAW,IACxB6N,EAAW,EAAKvP,MAAhBuP,OACAozD,EAAW,EAAKpjE,MAAhBojE,OACAtuD,EAAwB3S,EAAxB2S,QAASC,EAAe5S,EAAf4S,WACb/E,IAAW8E,GAGVsuD,EAAO13C,KAAK,SAAA7sB,GAAC,OAAIA,EAAET,KAAO2W,KAI/B,EAAKsxD,kB,EAGTE,YAAc,SAACliD,EAAWqZ,GAAmC,IAApB1/B,EAAmB,uDAAR,IAC1CwoE,EAAc5hE,SAASI,eAAe,gCACtCyhE,EAAe7hE,SAASI,eAAe,kCACvC0hE,EAAe9hE,SAASI,eAAe,kCAC7C,GAAKwhE,GAAgBC,GAAiBC,EAAtC,CAEA,IAAMC,EAAiB,cAEjBzC,EAA+B,IAAlBxmC,GAAuBrZ,EAAYqZ,EAClDwmC,GACAsC,EAAYnhE,MAAM6d,QAAU,+BAC5BujD,EAAaphE,MAAM6d,QAAU,aAC7BwjD,EAAarhE,MAAM6d,QAAU,aAC7B7kB,sBAAsB,WAClBmoE,EAAYnhE,MAAM6d,QAAlB,0DAA+EllB,EAA/E,cAA6F2oE,GAC7FF,EAAaphE,MAAM6d,QAAnB,0CAAgEllB,EAAhE,cAA8E2oE,GAC9ED,EAAarhE,MAAM6d,QAAnB,0CAAgEllB,EAAhE,cAA8E2oE,OAGlFH,EAAYnhE,MAAM6d,QAAU,6BAC5BujD,EAAaphE,MAAM6d,QAAU,aAC7BwjD,EAAarhE,MAAM6d,QAAU,aAC7B7kB,sBAAsB,WAClBmoE,EAAYnhE,MAAM6d,QAAlB,8DAAmFllB,EAAnF,cAAiG2oE,GACjGF,EAAaphE,MAAM6d,QAAnB,0CAAgEllB,EAAhE,cAA8E2oE,GAC9ED,EAAarhE,MAAM6d,QAAnB,0CAAgEllB,EAAhE,cAA8E2oE,Q,EAK1FN,eAAiB,WAAO,IACZr2D,EAAW,EAAKvP,MAAhBuP,OADW,EAE0D,EAAKhQ,MAA/D4mE,EAFA,EAEXviD,UAA4CwiD,EAFjC,EAEkBnpC,cAE/BopC,EAAalrD,KAAUmrD,cAAc/2D,GAErCuQ,EAAQpK,KAAaqK,SAASxQ,GAC9BozD,EAAS7iD,EAAQA,EAAM6iD,OAAS,GAElC/+C,EAAY++C,EAAO13C,KAAK,SAAA7sB,GAAC,OAAIA,EAAET,KAAOwoE,IAAoBA,EAAmB,GAC5EviD,GAAa++C,EAAO3wD,OAAS,IAC9B4R,EAAY++C,EAAO,GAAGhlE,IAE1B,IAAIs/B,EAAgBkpC,IAAqBviD,EAAYwiD,EAAuBD,EAEtEjvD,EAAYo9C,aAAkB/kD,EAAQqU,GACtC6B,EAAgB8uC,aAAsBhlD,EAAQqU,GAEpDlO,KAAa6wD,cAAgB,CAAEh3D,SAAQ5R,GAAIimB,GAC3C,EAAK3jB,SAAS,CACVomE,aACA1D,SACA1lC,gBACArZ,YACA1M,YACAuO,gBACA+gD,UAAW,CACP5iD,YACA1M,YACAuO,kBAEL,WACkC,IAA7B,EAAKlmB,MAAM09B,eACXkpC,IAAqB,EAAK5mE,MAAMqkB,WAEpC,EAAKkiD,YAAY,EAAKvmE,MAAMqkB,UAAW,EAAKrkB,MAAM09B,kB,EAI1D9b,wBAA0B,SAAAzf,GAAW,IACjB0f,EAAkB,EAAKphB,MAA/BuP,OACW7N,EAAX6N,SACO6R,GAEf,EAAKwkD,kB,EAGTa,gCAAkC,SAAA/kE,GAAW,IACjC6N,EAAuB7N,EAAvB6N,OAAQ82D,EAAe3kE,EAAf2kE,WAEZ,EAAKrmE,MAAMuP,SAAWA,GAE1B,EAAKtP,SAAS,CAAEomE,gB,EAGpBX,kBAAoB,SAAA54B,GAAkB,IAC1Bv9B,EAAW,EAAKvP,MAAhBuP,OADyB,EAEe,EAAKhQ,MAA7CqkB,EAFyB,EAEzBA,UAAW1M,EAFc,EAEdA,UAAWuO,EAFG,EAEHA,cAExBihD,EAAgBpS,aAAkB/kD,EAAQu9B,GAC1C65B,EAAoBpS,aAAsBhlD,EAAQu9B,GAElD05B,EAAYE,EAAgB,CAC9B9iD,UAAWkpB,EACX51B,UAAWwvD,EACXjhD,cAAekhD,GACf,CACA/iD,YACA1M,YACAuO,iBAGJ/P,KAAa6wD,cAAgB,CAAEh3D,SAAQ5R,GAAIimB,GAC3C,EAAK3jB,SAAS,CACVg9B,cAAerZ,EACfA,UAAWkpB,EACX51B,UAAWwvD,EACXjhD,cAAekhD,EACfH,aACD,WACkC,IAA7B,EAAKjnE,MAAM09B,eACXrZ,IAAc,EAAKrkB,MAAMqkB,WAE7B,EAAKkiD,YAAY,EAAKvmE,MAAMqkB,UAAW,EAAKrkB,MAAM09B,kB,EAI1Dp6B,YAAc,SAAAlB,GAAU,IACZ4N,EAAW,EAAKvP,MAAhBuP,OADW,EAEW,EAAKhQ,MAA3BojE,EAFW,EAEXA,OAAQ/+C,EAFG,EAEHA,UAChB,GAAK++C,EAAO3wD,QAEP4R,GAC2B,IAA5BjiB,EAAMmF,YAAYC,MAAtB,CAEA2O,KAAakxD,cAAgB,CAAEr3D,SAAQ5R,GAAIimB,GAE3CC,aAAStU,EAAQqU,GAEjB,IAAM1C,EAAQyhD,EAAO9uC,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOimB,IAC7C,IAAe,IAAX1C,EAAJ,CAEA,IAAM8vC,EAAY9vC,GAASyhD,EAAO3wD,OAAS,EAAI,EAAIkP,EAAQ,EAE3D,EAAKwkD,kBAAkB/C,EAAO3R,GAAWrzD,O,EAG7C8J,gBAAkB,SAAA9F,GACdA,EAAM4B,mB,EAGVsjE,gBAAkB,SAAAllE,GAAU,IAChB4N,EAAW,EAAKvP,MAAhBuP,OAER3P,IAAgBgG,aAAa,CACzB,QAAS,yBACT2J,Y,qFAtQc0L,EAAWC,EAAWqK,GAAc,IAC9ChW,EAAWrQ,KAAKc,MAAhBuP,OAD6C,EAEXrQ,KAAKK,MAAvC8mE,EAF6C,EAE7CA,WAAY1D,EAFiC,EAEjCA,OAAQ/+C,EAFyB,EAEzBA,UAE5B,OAAI3I,EAAU1L,SAAWA,IAIrB2L,EAAUmrD,aAAeA,IAIzBnrD,EAAUynD,SAAWA,GAIrBznD,EAAU0I,YAAcA,M,yCAObxjB,EAAWC,EAAWC,GAAW,IACxCiP,EAAWrQ,KAAKc,MAAhBuP,OADuC,EAEVrQ,KAAKK,MAAlC09B,EAFuC,EAEvCA,cAAerZ,EAFwB,EAExBA,UAEnBxjB,EAAUmP,SAAWA,GACrBrQ,KAAK4mE,YAAYliD,EAAWqZ,EAAe,K,0CAK/C9hB,KAAU9Q,GAAG,gCAAiCnL,KAAKunE,iCACnD/wD,KAAarL,GAAG,wBAAyBnL,KAAKiiB,yBAC9CzL,KAAarL,GAAG,mCAAoCnL,KAAKumE,oCACzD/vD,KAAarL,GAAG,mBAAoBnL,KAAKghB,oBACzCxK,KAAarL,GAAG,uBAAwBnL,KAAK+gB,wBAC7CvK,KAAarL,GAAG,uBAAwBnL,KAAK0gB,wBAC7ClK,KAAarL,GAAG,wBAAyBnL,KAAKymE,2B,6CAI9CxqD,KAAU3Q,IAAI,gCAAiCtL,KAAKunE,iCACpD/wD,KAAalL,IAAI,wBAAyBtL,KAAKiiB,yBAC/CzL,KAAalL,IAAI,mCAAoCtL,KAAKumE,oCAC1D/vD,KAAalL,IAAI,mBAAoBtL,KAAKghB,oBAC1CxK,KAAalL,IAAI,uBAAwBtL,KAAK+gB,wBAC9CvK,KAAalL,IAAI,uBAAwBtL,KAAK0gB,wBAC9ClK,KAAalL,IAAI,wBAAyBtL,KAAKymE,2B,+BAyNzC,IAAD,EACiBzmE,KAAKc,MAAnBuP,EADH,EACGA,OAAQG,EADX,EACWA,EADX,EAEyFxQ,KAAKK,MAA3FqkB,EAFH,EAEGA,UAAWqZ,EAFd,EAEcA,cAAe0lC,EAF7B,EAE6BA,OAAQzrD,EAFrC,EAEqCA,UAA0BsvD,GAF/D,EAEgD/gD,cAFhD,EAE+D+gD,WAAWH,EAF1E,EAE0EA,WAE/E,IAAK92D,EAAQ,OAAO,KAEpB,GAAI82D,GACqBA,EAAbS,SACM,OAAO,KAGzB,IAAMhyD,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,KAErB,IAAMiyD,EAAcrxD,KAAavM,IAAIoG,EAAQ0tB,GAEzCrnB,EAAWd,EAAyBy4B,aAAWz4B,EAASpF,GAAnCA,EAAE,WACvB0kD,aAAiBt/C,KACjBc,EAAUlG,EAAE,mBAGhB,IAAIs3D,EAAeD,EAAmBx5B,aAAWw5B,EAAar3D,GAA7B,GAC7B0kD,aAAiB2S,KACjBnxD,EAAUlG,EAAE,mBAGhB,IAAIwR,EAAQ,EACR3K,EAAU7G,EAAE,iBACZizD,GAAUA,EAAO3wD,OAAS,IAC1BkP,EAAQyhD,EAASA,EAAO9uC,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOimB,KAAc,EAE1DrN,EADkB,IAAlBosD,EAAO3wD,OACiBtC,EAAJ,IAAVwR,EAAgB,wBAA6B,iBAGnD,oCACKxR,EAAE,iBACFwR,EAAQ,GACL,oCACK,KACD,kBAAC,GAAD,CAAiB+iD,QAAStB,EAAO3wD,OAASkP,EAAOjK,OAAQ,GAAIitD,SAAS,OAO9F,IAAMT,EAA+B,IAAlBxmC,GAAuBrZ,EAAYqZ,EAEtD,OACI,oCACI,kBAACpe,GAAA,EAAD,CAAUC,QAAM,EAACve,UAAWiN,IAAW,iBAAkB,CAAE,uBAAwB0J,IAAczJ,YAAavO,KAAK2D,aAC/G,kBAAC,GAAD,CAAqBqe,MAAOyhD,EAAO3wD,OAASkP,EAAQ,EAAGkwB,MAAOuxB,EAAO3wD,SACrE,kBAACw6C,GAAA,EAAD,CACI/a,KAAMv6B,EACN1J,WAAW,sBACXw5B,QAAS,IACT0K,cAAc,EACdC,eAAe,GACf,6BACI,kBAAC,GAAD,CACIpiC,OAAQA,EACRqU,UAAW4iD,EAAYA,EAAU5iD,UAAY,KAC7C1M,UAAWsvD,EAAYA,EAAUtvD,UAAY,KAC7CuO,cAAe+gD,EAAYA,EAAU/gD,cAAgB,SAIjE,yBAAKllB,UAAU,0BACX,yBAAKA,UAAU,wBAAwBgW,GACvC,yBAAKhW,UAAU,2BACX,yBAAK5C,GAAG,gCACJ,yBAAKA,GAAG,kCAAkC8lE,EAAa7tD,EAAUoxD,GACjE,yBAAKrpE,GAAG,kCAAkC8lE,EAAauD,EAAcpxD,MAI/E+sD,EAAO3wD,OAAS,GACd,kBAACsD,EAAA,EAAD,CACI/U,UAAU,6BACVgV,aAAW,OACX5H,QAASzO,KAAK2nE,gBACdp5D,YAAavO,KAAKuI,iBAClB,kBAACw/D,GAAD,Y,gDA5XQjnE,EAAOT,GAAQ,IACnC2nE,EAAoB3nE,EAApB2nE,gBACA33D,EAAWvP,EAAXuP,OAER,GAAI23D,IAAoB33D,EAAQ,CAC5B,IAAMuQ,EAAQpK,KAAaqK,SAASxQ,GAE9BozD,EAAS7iD,EAAQA,EAAM6iD,OAAS,GAEhC/+C,EAAY++C,GAAUA,EAAO3wD,OAAS,EAAI2wD,EAAO,GAAGhlE,GAAK,EACzDuZ,EAAYo9C,aAAkB/kD,EAAQqU,GACtC6B,EAAgB8uC,aAAsBhlD,EAAQqU,GAEpD,MAAO,CACHsjD,gBAAiB33D,EACjB82D,WAAYlrD,KAAUmrD,cAAc/2D,GACpCozD,SACA1lC,cAAe,EACfrZ,YACA6B,gBACAvO,YACAsvD,UAAW,CACP5iD,YACA6B,gBACAvO,cAKZ,OAAO,S,GAhCarW,IAAMC,WA4YnBgP,iBAAkB01D,ICxY3B2B,G,2MACF5nE,MAAQ,CACJumC,mBAAoB1M,KAAS2N,wBAC7BqgC,gBAAiBhuC,KAASiuC,sB,EAqB9BC,8BAAgC,SAAA5lE,GAC5B,EAAKzB,SAAS,CAAEsnE,eAAgB7xD,KAAa0yC,cAAcpxC,Q,EAG/Dwf,qBAAuB,SAAA90B,GACnB,EAAKiW,e,EAGT6vD,wBAA0B,SAAA9lE,GACtB,EAAKzB,SAAS,CAAEmnE,gBAAiB1lE,EAAOnC,S,EAG5CsmC,2BAA6B,SAAAnkC,GACzB,EAAKzB,SAAS,CAAE6lC,mBAAoBpkC,EAAOygC,uB,EAG/CqgC,gBAAkB,WACd,IAAMjzD,EAAS6pB,KAAS0G,YACX3kB,KAAUhS,IAAIoG,KAGF6pB,KAAjB7X,aAGJsC,aAAStU,EAAQ,MAAM,GAEvB+oB,cAA4B,K,EAIpCmvC,iBAAmB,WACf,IAAMl4D,EAAS6pB,KAAS0G,YACX3kB,KAAUhS,IAAIoG,IAG3Bu3B,aAAWv3B,I,EAGfm4D,SAAW,SAAAC,GAGP,OAAOj4D,EAFO,EAAK1P,MAAX0P,GAECi4D,GACJzkE,QAAQ,MAAO,IACfA,QAAQ,SAAK,K,mFA5DlBk2B,KAAS/uB,GAAG,qBAAsBnL,KAAKs3B,sBACvC4C,KAAS/uB,GAAG,2BAA4BnL,KAAK2mC,4BAC7CzM,KAAS/uB,GAAG,wBAAyBnL,KAAKsoE,yBAE1C9xD,KAAarL,GAAG,6BAA8BnL,KAAKooE,+BACnD5xD,KAAarL,GAAG,8BAA+BnL,KAAKooE,iC,6CAIpDluC,KAAS5uB,IAAI,qBAAsBtL,KAAKs3B,sBACxC4C,KAAS5uB,IAAI,2BAA4BtL,KAAK2mC,4BAC9CzM,KAAS5uB,IAAI,wBAAyBtL,KAAKsoE,yBAE3C9xD,KAAalL,IAAI,6BAA8BtL,KAAKooE,+BACpD5xD,KAAalL,IAAI,8BAA+BtL,KAAKooE,iC,+BAiD/C,IACE53D,EAAMxQ,KAAKc,MAAX0P,EADH,EAMDxQ,KAAKK,MAHLumC,EAHC,EAGDA,mBACAshC,EAJC,EAIDA,gBACAG,EALC,EAKDA,eAGEh4D,EAAS6pB,KAAS0G,YAClBnkB,EAAOR,KAAUhS,IAAIoG,GAErB6zD,EAAmBC,YAAqB9zD,GAC1CgM,EAAQpC,YAAa5J,GAAQ,EAAMG,GACnC0M,EAAW+mD,YAAgB5zD,GAAQ,GACnCq4D,GAAwB,EAE5B,GAAIR,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACD7rD,EAAQrc,KAAKwoE,SAAS,cACtBtrD,EAAW,GACXwrD,GAAwB,EACxB,MACJ,IAAK,mCACDrsD,EAAQrc,KAAKwoE,SAAS,uBACtBtrD,EAAW,GACXwrD,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACDrsD,EAAQrc,KAAKwoE,SAAS,YACtBtrD,EAAW,GACXwrD,GAAwB,EACxB,MACJ,IAAK,mCACDrsD,EAAQrc,KAAKwoE,SAAS,uBACtBtrD,EAAW,GACXwrD,GAAwB,OAG7B,GAAI9hC,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,6BACD,MACJ,IAAK,+BACDvqB,EAAQrc,KAAKwoE,SAAS,eACtBtrD,EAAW,GACXwrD,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACDrsD,EAAQrc,KAAKwoE,SAAS,WACtBtrD,EAAW,GACXwrD,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACDrsD,EAAQrc,KAAKwoE,SAAS,WACtBtrD,EAAW,GACXwrD,GAAwB,OAIhCrsD,EAAQrc,KAAKwoE,SAAS,WACtBtrD,EAAW,GACXwrD,GAAwB,EAG5B,OACI,yBAAKrnE,UAAWiN,IAAW,iBAAkB,CAAE,2BAA4B+5D,EAAiB,KACxF,yBAAKhnE,UAAU,0BACX,kBAAC,GAAD,CAAe6wC,MAAOm2B,IACtB,yBAAKhnE,UAAU,sBACVqnE,EACG,yBACIrnE,UAAWiN,IAAW,gBAAiB,OAAQmO,EAAO,iBAAmB,kBACzEhO,QAASzO,KAAKsjE,iBACd,0BAAMjiE,UAAU,yBAAyBgb,GACzC,kBAACssD,GAAA,EAAD,MACA,0BAAMtnE,UAAWiN,IAAW,sBAAuB,CAAE,uBAAwB41D,KACxEhnD,GAEL,0BAAM7b,UAAU,wBAGpB,kBAAC,GAAD,CACIA,UAAWiN,IAAW,OAAQ,kBAC9B+B,OAAQA,EACR5B,QAASzO,KAAKsjE,kBAGtB,kBAAC,GAAD,CAAejzD,OAAQA,IACtBoM,GACG,oCACI,kBAACrG,EAAA,EAAD,CACI/U,UAAU,6BACVgV,aAAW,SACX5H,QAASzO,KAAKuoE,kBACd,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAgBjF,gBAAiBtjE,KAAKsjE,0B,GAnLjD1hE,aA6LNgP,iBAAkBq3D,I,8HC7BlBW,I,kNAzKXvoE,MAAQ,CACJ0mC,SAAU,KACVp+B,MAAOyB,IAAY3G,OACnBolE,UAAWz+D,IAAY3G,OACvB+E,UAAU,EACVsgE,YAAY,EACZC,WAAW,G,EAWfC,0BAA4B,SAAAxmE,GAAW,IAC3BiB,EAAuBjB,EAAvBiB,OAAQiG,EAAelH,EAAfkH,gBAEG6tC,IAAf7tC,EACA,EAAK3I,SAAS,CAAE4H,MAAOlF,IAEvB,EAAK1C,SAAS,CAAE4H,MAAOlF,EAAQolE,UAAWn/D,K,EAIlDu/D,kBAAoB,SAAAliC,GAChB,EAAKhmC,SAAS,CAAEgmC,SAAUA,K,EAG9BmiC,mBAAqB,WAAO,IAAD,EACqB,EAAK7oE,MAAzCmI,EADe,EACfA,SAAUsgE,EADK,EACLA,WAAYC,EADP,EACOA,UAE1BvgE,GACAsgE,GACAC,GAEJ,EAAKhoE,SAAS,CAAEgmC,SAAU,Q,EAG9BoiC,iBAAmB,SAAC1mE,EAAO2mE,GACvB,EAAKroE,SAAS,CAAE+nE,YAAY,IAExBM,GACA,EAAKH,kBAAkBxmE,EAAMukC,gB,EAIrCqiC,iBAAmB,WACf,EAAKtoE,SAAS,CAAE+nE,YAAY,GAAS,WACjC,EAAKI,wB,EAIbI,sBAAwB,WACpB,EAAKvoE,SAAS,CAAEgoE,WAAW,GAAS,WAChC,EAAKG,wB,EAIbK,iBAAmB,WAAO,IAAD,EACQ,EAAKlpE,MAA1BsI,EADa,EACbA,MAAOkgE,EADM,EACNA,UACTW,EAAY7gE,EAAQ,EAAI,EAAIkgE,GAAaY,KAE/C/oE,IAAgBgG,aAAa,CACzB,QAAS,0BACTjD,OAAQ+lE,K,EAIhB9gE,aAAe,SAACjG,EAAOkG,GAAW,IAAD,EACG,EAAKtI,MAA7BmI,EADqB,EACrBA,SAAUqgE,EADW,EACXA,UAEdrgE,EACA9H,IAAgBgG,aAAa,CACzB,QAAS,0BACTjD,OAAQkF,IAGZjI,IAAgBgG,aAAa,CACzB,QAAS,0BACTgD,WAAYf,EAAQ,EAAIA,EAAQkgE,EAChCplE,OAAQkF,K,EAKpB+gE,gBAAkB,WAAO,IACb/gE,EAAU,EAAKtI,MAAfsI,MAER,EAAK5H,SAAS,CACVyH,UAAU,EACVqgE,UAAWlgE,K,EAInBghE,cAAgB,WAAO,IAAD,EACW,EAAKtpE,MAA1BsI,EADU,EACVA,MAAOkgE,EADG,EACHA,UAEf,EAAK9nE,SACD,CACIyH,UAAU,EACVqgE,UAAWlgE,EAAQ,EAAIA,EAAQkgE,GAEnC,WACI,EAAKK,wB,EAKjBn5D,cAAgB,SAAApH,GACZ,OAAc,IAAVA,EACO,kBAAC,KAAD,CAAe0nD,SAAS,UAG/B1nD,EAAQ,IACD,kBAAC,KAAD,CAAgB0nD,SAAS,UAGhC1nD,EAAQ,GACD,kBAAC,KAAD,CAAgB0nD,SAAS,UAG7B,kBAAC,KAAD,CAAcA,SAAS,W,mFAlH9BjmD,IAAYe,GAAG,0BAA2BnL,KAAKgpE,6B,6CAI/C5+D,IAAYkB,IAAI,0BAA2BtL,KAAKgpE,6B,+BAiH1C,IAAD,SACuBhpE,KAAKK,MAAzB0mC,EADH,EACGA,SAAUp+B,EADb,EACaA,MACZ+R,EAAO+N,QAAQse,GAErB,OACI,yBACI93B,aAAc,SAAAF,GAAC,OAAI,EAAKo6D,iBAAiBp6D,GAAG,IAC5CG,aAAclP,KAAKqpE,iBACnB3jE,MAAO,CACHgM,SAAU,WACV8hD,WAAY,gBAEhB,kBAACp9C,EAAA,EAAD,CAAY/U,UAAU,uBAAuBiV,MAAM,UAAU7H,QAASzO,KAAKupE,kBACtEvpE,KAAK+P,cAAcpH,IAExB,yBACIjD,MAAO,CACHgM,SAAU,WACV8hD,WAAY,cACZoW,WAAYlvD,EAAO,UAAY,SAC/B8/B,OAAQ,GAEZvrC,aAAc,SAAAF,GAAC,OAAI,EAAKo6D,iBAAiBp6D,GAAG,IAC5CG,aAAclP,KAAKspE,uBACnB,yBAAKjoE,UAAU,uBACX,kBAAC+N,EAAA,EAAD,CACI7P,IAAK,EACL8P,IAAK,EACLC,KAAM,IACN3G,MAAOA,EACPiH,SAAU5P,KAAK0I,aACfmhE,YAAa7pE,KAAK0pE,gBAClBI,UAAW9pE,KAAK2pE,cAChBI,YAAY,oB,GAjKbpoE,IAAMC,Y,0CC4ElBooE,G,YAhFX,WAAYlpE,GAAQ,IAAD,uBACf,4CAAMA,KAiBVmpE,0BAA4B,SAAAznE,GAAW,IAC3Bi1D,EAAWj1D,EAAXi1D,OAER,EAAK12D,SAAS,CAAE02D,YArBD,EAwBnByS,aAAe,WAAO,IACVzS,EAAW,EAAKp3D,MAAhBo3D,OAEJ0S,EAAa1S,EACjB,OAAQA,GACJ,KAAK2S,IAAWC,KACZF,EAAaC,IAAWE,OACxB,MAEJ,KAAKF,IAAWE,OACZH,EAAaC,IAAWG,WACxB,MAEJ,KAAKH,IAAWG,WACZJ,EAAaC,IAAWC,KAKhC3pE,IAAgBgG,aAAa,CACzB,QAAS,0BACT+wD,OAAQ0S,KA7CG,EAiDnBK,QAAU,SAAA/S,GACN,OAAQA,GACJ,KAAK2S,IAAWC,KAGhB,KAAKD,IAAWE,OACZ,OAAO,kBAAC,KAAD,CAAYja,SAAS,UAEhC,KAAK+Z,IAAWG,WACZ,OAAO,kBAAC,KAAD,CAAela,SAAS,UAEnC,QACI,OAAO,kBAAC,KAAD,CAAYA,SAAS,YA7DrB,IAGPoH,EAAWrtD,IAAXqtD,OAHO,OAKf,EAAKp3D,MAAQ,CACTo3D,UANW,E,iFAWfrtD,IAAYe,GAAG,0BAA2BnL,KAAKiqE,6B,6CAI/C7/D,IAAYkB,IAAI,0BAA2BtL,KAAKiqE,6B,+BAmD1C,IACExS,EAAWz3D,KAAKK,MAAhBo3D,OAER,OACI,kBAACrhD,EAAA,EAAD,CACI/U,UAAU,uBACViV,MAAOmhD,IAAW2S,IAAWC,KAAO,UAAY,UAChD57D,QAASzO,KAAKkqE,cACblqE,KAAKwqE,QAAQ/S,Q,GA3EH91D,IAAMC,W,qBC+ClB6oE,G,YA/CX,WAAY3pE,GAAQ,IAAD,uBACf,4CAAMA,KAiBV4pE,2BAA6B,SAAAloE,GAAW,IAC5BmoE,EAAYnoE,EAAZmoE,QAER,EAAK5pE,SAAS,CAAE4pE,aArBD,EAwBnBC,cAAgB,WAAO,IACXD,EAAY,EAAKtqE,MAAjBsqE,QAERjqE,IAAgBgG,aAAa,CACzB,QAAS,2BACTikE,SAAUA,KA7BC,IAGPA,EAAYvgE,IAAZugE,QAHO,OAKf,EAAKtqE,MAAQ,CACTsqE,WANW,E,iFAWfvgE,IAAYe,GAAG,2BAA4BnL,KAAK0qE,8B,6CAIhDtgE,IAAYkB,IAAI,2BAA4BtL,KAAK0qE,8B,+BAkB3C,IACEC,EAAY3qE,KAAKK,MAAjBsqE,QAER,OACI,kBAACv0D,EAAA,EAAD,CACI/U,UAAU,uBACViV,MAAQq0D,EAAsB,UAAZ,UAClBl8D,QAASzO,KAAK4qE,eACd,kBAAC,KAAD,CAAava,SAAS,e,GA1CV1uD,IAAMC,WCC5BipE,G,YACF,WAAY/pE,GAAQ,IAAD,uBACf,4CAAMA,KAoBVgqE,gCAAkC,SAAAtoE,GAAW,IACjC2B,EAAiB3B,EAAjB2B,aAER,EAAKpD,SAAS,CAAEoD,kBAxBD,EA2BnB4mE,qCAAuC,SAAAvoE,GAAW,IACtCwoE,EAAsBxoE,EAAtBwoE,kBAER,EAAKjqE,SAAS,CAAEiqE,uBA9BD,EAiCnB9mE,mBAAqB,WAAO,IAChBmd,EAAU,EAAKvgB,MAAfugB,MADe,EAEqB,EAAKhhB,MAAzC2qE,EAFe,EAEfA,kBAAmB7mE,EAFJ,EAEIA,aAGrB8mE,GADO5pD,EAAQ2pD,EAAoB7mE,KACf+mE,IACpBC,IACAD,IAEF7pD,EACA3gB,IAAgBgG,aAAa,CACzB,QAAS,qCACTskE,kBAAmBC,IAGvBvqE,IAAgBgG,aAAa,CACzB,QAAS,gCACTvC,aAAc8mE,KAlDP,IAGPD,EAAoC5gE,IAApC4gE,kBAAmB7mE,EAAiBiG,IAAjBjG,aAHZ,OAKf,EAAK9D,MAAQ,CACT2qE,oBACA7mE,gBAPW,E,iFAYfiG,IAAYe,GAAG,gCAAiCnL,KAAK8qE,iCACrD1gE,IAAYe,GAAG,qCAAsCnL,KAAK+qE,wC,6CAI1D3gE,IAAYkB,IAAI,gCAAiCtL,KAAK8qE,iCACtD1gE,IAAYkB,IAAI,qCAAsCtL,KAAK+qE,wC,+BAqCrD,IACE1pD,EAAUrhB,KAAKc,MAAfugB,MADH,EAEuCrhB,KAAKK,MAAzC2qE,EAFH,EAEGA,kBAAmB7mE,EAFtB,EAEsBA,aAErBS,EAAOyc,EAAQ2pD,EAAoB7mE,EAEzC,OACI,kBAACiS,EAAA,EAAD,CACI/U,UAAU,uBACViV,MAAO1R,EAAOsmE,IAA6B,UAAY,UACvDz8D,QAASzO,KAAKkE,oBACd,yBAAK7C,UAAU,+BAAf,W,GAnEiBM,IAAMC,WAyEvCipE,GAAmBvuD,aAAe,CAC9B+E,OAAO,GAOIwpD,UCxBAO,I,mBA1DX,WAAYtqE,GAAQ,IAAD,uBACf,4CAAMA,KAuBVuqE,wBAA0B,SAAA7oE,GAAW,IACzBa,EAA0Bb,EAA1Ba,YAAahF,EAAamE,EAAbnE,SACb2mE,EAAY,EAAK3kE,MAAjB2kE,QAER,EAAKjkE,SAAS,CACVsC,cACAhF,WACAitE,kBAAmBt9D,YAAkB1O,KAAK2O,MAAM5K,GAAe,GAAIhF,EAAU2mE,MA/BlE,EAmCnBuG,cAAgB,SAAA9oE,GACZA,EAAM4B,kBACN5B,EAAM6B,iBAFe,MAIsB,EAAKjE,MAAxCgD,EAJa,EAIbA,YAAahF,EAJA,EAIAA,SAAU2mE,EAJV,EAIUA,QAE/B,EAAKjkE,SAAS,CACVikE,SAAUA,EACVsG,kBAAmBt9D,YAAkB1O,KAAK2O,MAAM5K,GAAe,GAAIhF,GAAW2mE,MA3CnE,IAGP3mE,EAAa,EAAKyC,MAAlBzC,SAHO,OAQf,EAAKgC,MAAQ,CACT2kE,SAHY,EAIZ3hE,YALgB,EAMhBhF,WACAitE,kBAAmBt9D,YAPH,EAOkC3P,GANtC,IAND,E,iFAiBf+L,IAAYe,GAAG,wBAAyBnL,KAAKqrE,2B,6CAI7CjhE,IAAYkB,IAAI,wBAAyBtL,KAAKqrE,2B,+BA0BxC,IACEC,EAAsBtrE,KAAKK,MAA3BirE,kBAER,OACI,yBAAKjqE,UAAU,qBAAqBoN,QAASzO,KAAKurE,eAC7CD,O,GArDE3pE,IAAMC,Y,0DCsRV4pE,I,mBA5QX,WAAY1qE,GAAQ,IAAD,uBACf,4CAAMA,KAyBV2qE,eAAiB,WACb,IAAMx/C,EAAO,EAAKC,QAAQhV,QAC1B,GAAK+U,EAAL,CAFmB,MAIkB,EAAK5rB,MAAlCqrE,EAJW,EAIXA,SAAU91D,EAJC,EAIDA,QAAS+1D,EAJR,EAIQA,MAC3B,IAAK/1D,GAAY+1D,IACZD,EAAL,CAEA,IAAM1pD,EAAQ,aAAI0pD,EAAS5/C,OACtBk5C,UACArwC,UAAU,SAAAz1B,GAAC,OAAI0sE,aAAmB1sE,EAAG0W,GAAW+1D,KACrD,IAAe,IAAX3pD,EAAJ,CAEA,IAAMS,EAAO,EAAKopD,WAAW5hE,IAAI+X,GACjC,GAAKS,EAAL,CAEA,IAAM+rC,EAAOsd,eAAqBrpD,GAC7B+rC,IAELviC,EAAKD,UAAYwiC,EAAKriC,UAAY,SA7CnB,EA8DnB4/C,kCAAoC,SAAAvpE,GAAW,IACnCwpE,EAASxpE,EAATwpE,KAEJA,EACA,EAAKjrE,SACD,CACIkrE,kBAAmBD,GAEvB,WACI,EAAKE,YAIb,EAAKnrE,SACD,CACIkrE,kBAAmBD,GAEvB,WACI,EAAKG,cAhFF,EAsFnBC,0BAA4B,SAAA5pE,GAAW,IAC3BhB,EAAWgB,EAAXhB,OAER,OAAQA,EAAO,UACX,IAAK,UAED,EAAKT,SAAS,CACV6U,QAASpU,EACTmqE,MAAO,OAEX,MAEJ,IAAK,oBAED,EAAK5qE,SAAS,CACV6U,QAAS,KACT+1D,MAAOnqE,EAAOmqE,UAtGX,EA6GnBU,mCAAqC,SAAA7pE,GAAW,IAAD,EAChB,EAAKnC,MAAxBuV,EADmC,EACnCA,QAAS+1D,EAD0B,EAC1BA,MACTnqE,EAAWgB,EAAXhB,OAEF6O,EAASuF,EAAUA,EAAQT,QAAU,EACrCuP,EAAY9O,EAAUA,EAAQnX,GAAK,EAErC6tE,aAAgBj8D,EAAQqU,EAAWinD,EAAOnqE,IAC1C,EAAKT,SAAS,CACV2qE,SAAU,QAtHH,EA2HnBa,4BAA8B,SAAA/pE,GAAW,IAAD,EACT,EAAKnC,MAAxBuV,EAD4B,EAC5BA,QAAS+1D,EADmB,EACnBA,MACTnqE,EAAqBgB,EAArBhB,OAAQkqE,EAAalpE,EAAbkpE,SAEVr7D,EAASuF,EAAUA,EAAQT,QAAU,EACrCuP,EAAY9O,EAAUA,EAAQnX,GAAK,EAErC6tE,aAAgBj8D,EAAQqU,EAAWinD,EAAOnqE,IAC1C,EAAKT,SAAS,CACV2qE,cApIO,EAyInBQ,QAAU,WACNhjE,aAAa,EAAKsjE,aAElB,EAAKA,YAAcpjE,WAAW,WAAO,IAAD,EACc,EAAK/I,MAA3CosE,EADwB,EACxBA,eAAgBR,EADQ,EACRA,kBACxB,EAAKlrE,SAAS,CACV2Z,KAAM+xD,GAAkBR,KAE7B,MAjJY,EAoJnBE,SAAW,WACPjjE,aAAa,EAAK4+B,SAElB,EAAKA,QAAU1+B,WAAW,WAAO,IAAD,EACkB,EAAK/I,MAA3CosE,EADoB,EACpBA,eAAgBR,EADI,EACJA,kBACxB,EAAKlrE,SAAS,CACV2Z,KAAM+xD,GAAkBR,KAE7B,MA5JY,EA+JnB9C,iBAAmB,WACf,EAAKpoE,SAAS,CACVkrE,mBAAmB,EACnBvxD,MAAM,KAlKK,EAsKnB2uD,iBAAmB,WACf,EAAKtoE,SACD,CACIkrE,mBAAmB,GAEvB,WACI,EAAKE,cA5KE,EAiLnB9+C,aAAe,WACX,IAAMpB,EAAO,EAAKC,QAAQhV,QACrB+U,IAEDA,EAAKD,WAAasF,KAClB5wB,IAAgBgG,aAAa,CACzB,QAAS,kCAENulB,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKoF,aAAeC,MACjE5wB,IAAgBgG,aAAa,CACzB,QAAS,oCAxLjB,EAAKwlB,QAAUvqB,IAAM2Y,YACrB,EAAKuxD,WAAa,IAAI34D,IAJP,IAMP0C,EAA6BxL,IAA7BwL,QAAS+1D,EAAoBvhE,IAApBuhE,MAAOD,EAAathE,IAAbshE,SANT,OAOf,EAAKrrE,MAAQ,CACTuV,UACA+1D,QACAD,WAEAhxD,MAAM,EACN+xD,gBAAgB,EAChBR,mBAAmB,GAdR,E,gFAkBA/qE,EAAWC,EAAWC,GAAW,IACxCsZ,EAAS1a,KAAKK,MAAdqa,MAEHvZ,EAAUuZ,MAAQA,GACnB1a,KAAKyrE,mB,0CA2BTrhE,IAAYe,GAAG,0BAA2BnL,KAAKosE,2BAC/ChiE,IAAYe,GAAG,4BAA6BnL,KAAKusE,6BACjDniE,IAAYe,GAAG,mCAAoCnL,KAAKqsE,oCACxDjiE,IAAYe,GAAG,kCAAmCnL,KAAK+rE,qC,6CAIvD3hE,IAAYkB,IAAI,0BAA2BtL,KAAKosE,2BAChDhiE,IAAYkB,IAAI,4BAA6BtL,KAAKusE,6BAClDniE,IAAYkB,IAAI,mCAAoCtL,KAAKqsE,oCACzDjiE,IAAYkB,IAAI,kCAAmCtL,KAAK+rE,qC,mCAqI/CJ,EAAOe,GAChB,IAAKf,EAAO,OAAO,KAEnB,IAAIv+D,EAAU,KACd,OAAQu+D,EAAM,UACV,IAAK,iBACDv+D,EACI,kBAAC,KAAD,CACIu+D,MAAOA,EACPtqD,MAAOsqD,EAAMtqD,MACbiF,UAAW,kBAAMqmD,aAAqBhB,EAAMtqD,MAAOsqD,EAAMt0D,QAASs0D,EAAOe,GAAa,MAE9F,MAEJ,IAAK,qBACDt/D,EACI,kBAAC,KAAD,CACIu+D,MAAOA,EACPpqD,UAAWoqD,EAAM97C,WACjBvJ,UAAW,kBAAMqmD,aAAqBhB,EAAM97C,WAAY87C,EAAMt0D,QAASs0D,EAAOe,GAAa,MAM3G,OAAOt/D,I,+BAGD,IAAD,SACsBpN,KAAKK,MAAxBqa,EADH,EACGA,KAAMgxD,EADT,EACSA,SAEd,IAAKhxD,EAAM,OAAO,KAClB,IAAKgxD,EAAU,OAAO,KAJjB,IAMG5/C,EAAU4/C,EAAV5/C,MACR,IAAKA,EAAO,OAAO,KACnB,GAAIA,EAAMhZ,QAAU,EAAG,OAAO,KAE9B9S,KAAK6rE,WAAW9nC,QAEhB,IAAI6oC,EAAK,KACiB,sBAAtB9gD,EAAM,GAAG,WACT8gD,EAAKlB,EAASlqE,OAAOkrE,aAGzB,IAAMG,EAAqC,YAAtB/gD,EAAM,GAAG,SACxB,SAAA5sB,GAAC,OAAI2hB,aAAS3hB,EAAG,kBAAMonB,aAAUpnB,EAAEiW,QAASjW,EAAET,OAC9C,SAAAS,GAAC,OAAI,EAAK4tE,aAAa5tE,EAAG0tE,IAEhC,OACI,yBAAKvrE,UAAU,YACX,yBAAKA,UAAU,oBACX,yBACI4Z,IAAKjb,KAAKksB,QACV7qB,UAAU,iBACV4N,aAAcjP,KAAKmpE,iBACnBj6D,aAAclP,KAAKqpE,iBACnBz2C,SAAU5yB,KAAKqtB,cACd,aAAIvB,GACAk5C,UACAzwD,IAAI,SAACrV,EAAG8iB,GAAJ,OACD,yBAAKrf,IAAKzD,EAAET,IAAMujB,EAAO/G,IAAK,SAAAyW,GAAE,OAAI,EAAKm6C,WAAWrzD,IAAIwJ,EAAO0P,IAAKrwB,UAAU,iBACzEwrE,EAAa3tE,a,GA/P3ByC,IAAMC,YCD7B,IAAIogE,GAAY,KAEV+K,GAAU,IAAI75D,IACd85D,GAAW,IAAI95D,IAEd,SAAe+5D,GAAtB,mC,6CAAO,WAA+B3rD,GAA/B,mBAAAxQ,EAAA,iEAEKjQ,EAAS,MACTksE,GAAQ15D,IAAIiO,GAHjB,gBAIKzgB,EAASksE,GAAQ9iE,IAAIqX,GAJ1B,8BAMWtiB,EAAOgjE,GAAY,IAAIt6C,KANlC,SAOoBhnB,IAAgBC,KAAK,CAChC,QAAS,wBACT2gB,MACA4rD,YAAY,IAVrB,UAOKrsE,EAPL,OAYKksE,GAAQv0D,IAAI8I,EAAKzgB,GACjBmsE,GAASx0D,IAAI3X,EAAQygB,GACjB0gD,KAAchjE,EAdvB,mDAiBCkS,QAAQu7B,IAAI,YAAa5rC,GACzBssE,YAAuBtsE,GACvBusE,aAAsB,CAAEV,YAAa7rE,EAAQygB,QAnB9C,mDAqBO+rD,EAAYpiE,OAAOyP,QACf4yD,OAAS,KACnBD,EAAUnlB,SAAW5mC,EAvBtB,yD,8PCUDisD,G,YACF,WAAYzsE,GAAQ,IAAD,uBACf,4CAAMA,KAuGV0sE,kBAAoB,WAChB,IAAMvqE,EAAQ,EAAKwqE,SAASv2D,QACvBjU,GAEL,EAAKG,WAAWH,EAAMI,YAAcE,MA5GrB,EA+GnBmqE,mBAAqB,WACjB,IAAMzqE,EAAQ,EAAKwqE,SAASv2D,QACvBjU,GAEL,EAAKG,WAAWH,EAAMI,YAAcE,MAnHrB,EAsHnBoqE,aAAe,SAAAlrE,GACG,EAAKgrE,SAASv2D,SAG5B,EAAK9T,WAAWX,EAAMmrE,WA1HP,EA6HnBxqE,WAAa,SAAAC,GACT,IAAMJ,EAAQ,EAAKwqE,SAASv2D,QACvBjU,IAELI,EAAckB,YAAMlB,EAAa,EAAGJ,EAAM5E,UAAY,GAEtD4E,EAAMI,YAAcA,IAnIL,EA4LnBwyD,0BAA4B,SAAArzD,GACxB,IAAM+C,EAAS,EAAKkoE,SAASv2D,QACxB3R,IAEAA,EAAOgC,SACR,EAAKsmE,cAAc,KACnB,EAAKC,iBAAkB,KAlMZ,EAsMnB7X,yBAA2B,SAAAzzD,GACvB,IAAM+C,EAAS,EAAKkoE,SAASv2D,QACxB3R,GAEDA,EAAOgC,QAAU,EAAKumE,kBACtB,EAAKC,aAAa,KAClB,EAAKD,iBAAkB,IA5MZ,EAgNnBhD,gCAAkC,SAAAtoE,GAAW,IACjC2B,EAAiB3B,EAAjB2B,aADgC,EAGb,EAAK9D,MAAxBuV,EAHgC,EAGhCA,QAAS+1D,EAHuB,EAGvBA,MACjB,IAAK/1D,GAAY+1D,KAEH/pD,aAAShM,GAAW+1D,GAClC,CAEA,IAAMpmE,EAAS,EAAKkoE,SAASv2D,QACxB3R,IAELA,EAAOpB,aAAeA,KA5NP,EA+NnB4mE,qCAAuC,SAAAvoE,GAAW,IACtCwoE,EAAsBxoE,EAAtBwoE,kBADqC,EAGlB,EAAK3qE,MAAxBuV,EAHqC,EAGrCA,QAAS+1D,EAH4B,EAG5BA,MACjB,IAAK/1D,GAAY+1D,IAEZ/pD,aAAShM,GAAW+1D,IACpBqC,aAAqBp4D,GAAW+1D,GAArC,CAEA,IAAMpmE,EAAS,EAAKkoE,SAASv2D,QACxB3R,IAELA,EAAOpB,aAAe6mE,KA3OP,EA8OnBhC,0BAA4B,SAAAxmE,GAAW,IAC3BiB,EAAWjB,EAAXiB,OAEF8B,EAAS,EAAKkoE,SAASv2D,QACxB3R,IAELA,EAAO9B,OAASA,IApPD,EAuPnBwqE,wBAA0B,SAAAzrE,GAAW,IACzBhB,EAA4BgB,EAA5BhB,OAAQmH,EAAoBnG,EAApBmG,MAAOtK,EAAamE,EAAbnE,SADS,EAEL,EAAKgC,MAAxBuV,EAFwB,EAExBA,QAAS+1D,EAFe,EAEfA,MAEjB,GAAKW,aAAgB12D,EAASA,EAAQT,QAAU,EAAGS,EAASA,EAAQnX,GAAK,EAAGktE,EAAOnqE,GAAnF,CAEA,IAAM+D,EAAS,EAAKkoE,SAASv2D,QACxB3R,IACAA,EAAOlH,SAKZkH,EAAOlC,YAAcsF,EAAQpD,EAAOlH,SAJhC,EAAK6vE,aAAe,CAAEvlE,QAAOtK,eAhQlB,EAuQnBmvD,iCAAmC,SAAAhrD,GAC/B,EAAK2rE,mBAAqB1lD,QAAQyR,KAASuzB,qBAxQ5B,EA2QnB2gB,+BAAiC,SAAA5rE,GAC7B,EAAK2rE,oBAAqB,GA5QX,EA+QnBE,+BAAiC,SAAA7rE,GAC7B,EAAK2rE,oBAAqB,GAhRX,EAmRnBG,8BAAgC,SAAA9rE,GAC5B,EAAK2rE,oBAAqB,EAEX,EAAKV,SAASv2D,SAG7B,EAAK22D,cAAc,MAzRJ,EA4RnBU,iBAAmB,SAAA/sE,GACf,GAAKA,EAAL,CADyB,IAGjBkqE,EAAathE,IAAbshE,SACK8C,EAAY,EAAKnuE,MAAtBumB,IAEFA,EAAM6nD,aAAYjtE,GAClB6+D,EAAWqO,aAAiBltE,GAPT,EAQSsI,aAAetI,GAAzC6B,EARiB,EAQjBA,YAAahF,EARI,EAQJA,SACfswE,EAAUlmD,QAAQ7B,GAElBgoD,EAAgC,sBAApBptE,EAAO,SACnB,CAAEoU,QAAS,KAAM+1D,MAAOnqE,EAAOmqE,MAAOe,YAAalrE,EAAOkrE,aAC1D,CAAE92D,QAASpU,EAAQmqE,MAAO,KAAMe,YAAa,MAEnD,EAAK3rE,S,wVAAL,EAEQsC,cACAhF,WACAqtE,WACAiD,UACA/nD,OACGgoD,EAPX,CAQQvO,aAEJ,WACI,IAAM96D,EAAS,EAAKkoE,SAASv2D,QACxB3R,IAEDipE,IAAY5nD,IACZrhB,EAAOi/B,OACH,EAAK0pC,cACL3oE,EAAOlC,YAAc,EAAK6qE,aAAavlE,MAAQ,EAAKulE,aAAa7vE,SACjE,EAAK6vE,aAAe,MAEpB3oE,EAAOlC,YAAcA,GAIzB,EAAK8qE,oBACL5oE,EAAOe,QAEP5F,IAAgBgG,aAAa,CACzB,QAAS,yBACTlF,YAEG+D,EAAOgC,QACdhC,EAAOc,YA3UJ,EAiVnBwoE,wBAA0B,SAAArsE,GAAW,IACzB6N,EAA8B7N,EAA9B6N,OAAQqU,EAAsBliB,EAAtBkiB,UAAWzd,EAAWzE,EAAXyE,OADK,EAEQ,EAAK5G,MAArCuV,EAFwB,EAExBA,QAAS+1D,EAFe,EAEfA,MAAOe,EAFQ,EAERA,YAExB,GAAI92D,EAAS,CAAC,IACFT,EAAyBS,EAAzBT,QAAS1W,EAAgBmX,EAAhBnX,GAAIiY,EAAYd,EAAZc,QACrB,IAAKA,EAAS,OACd,GAAIrG,IAAW8E,GAAWuP,IAAcjmB,EAAI,OAE5C,IAAIqwE,GAAe,EACnB,OAAQp4D,EAAQ,UACZ,IAAK,cAAgB,IACT+Y,EAAa/Y,EAAb+Y,SACR,GAAIA,EAAU,CAAC,IACHpO,EAAkCoO,EAAlCpO,MAAOwO,EAA2BJ,EAA3BI,WAAYjG,EAAe6F,EAAf7F,WAE3B,GAAIvI,EAAO,CACP,GAAI0tD,cAAqB,OAGzB,GADwB1tD,EAAhBA,MACE,CACNytD,GAAe,EACf,OAIR,GAAIj/C,EAEA,GADkBA,EAAVzE,MACG,CACP0jD,GAAe,EACf,MAIR,GAAIllD,EAEA,GADkBA,EAAV3mB,MACG,CACP6rE,GAAe,EACf,OAKZ,MAEJ,IAAK,eAAiB,IACVztD,EAAU3K,EAAV2K,MACR,GAAIA,EAAO,CACP,GAAI0tD,cAAqB,OAGzB,GADwB1tD,EAAhBA,MACE,CACNytD,GAAe,EACf,OAIR,MAEJ,IAAK,mBAAqB,IACdj/C,EAAenZ,EAAfmZ,WACR,GAAIA,EAEA,GADkBA,EAAVzE,MACG,CACP0jD,GAAe,EACf,MAIR,MAEJ,IAAK,mBAAqB,IACdllD,EAAelT,EAAfkT,WACR,GAAIA,EAEA,GADkBA,EAAV3mB,MACG,CACP6rE,GAAe,EACf,OAQZA,GACA,EAAKP,iBAAiB34D,QAEvB,GAAI+1D,EAAO,CACd,IAAImD,GAAe,EACnB,OAAQnD,EAAM,UACV,IAAK,iBAAmB,IACZtqD,EAAUsqD,EAAVtqD,MACR,GAAIA,EAAO,CACP,GAAI0tD,cAAqB,OADlB,IAGQhlE,EAASsX,EAAhBA,MACJtX,GAAQA,EAAKtL,KAAOwI,IACpB6nE,GAAe,GAIvB,MAEJ,IAAK,qBAAuB,IAChBj/C,EAAe87C,EAAf97C,WACR,GAAIA,EAAY,CAAC,IACE9lB,EAAS8lB,EAAhBzE,MACJrhB,GAAQA,EAAKtL,KAAOwI,IACpB6nE,GAAe,GAIvB,MAEJ,IAAK,qBAAuB,IAChBllD,EAAe+hD,EAAf/hD,WACR,GAAIA,EAAY,CAAC,IACE7f,EAAS6f,EAAhB3mB,MACJ8G,GAAQA,EAAKtL,KAAOwI,IACpB6nE,GAAe,IAQ3BA,GACA,EAAKP,iBAAiB,CAAE,QAAS,oBAAqB5C,QAAOe,kBAldtD,EAudnBH,4BAA8B,SAAA/pE,GAAW,IAC7BkpE,EAAqBlpE,EAArBkpE,SAAUlqE,EAAWgB,EAAXhB,OADkB,EAET,EAAKnB,MAAxBuV,EAF4B,EAE5BA,QAAS+1D,EAFmB,EAEnBA,MAEXt7D,EAASuF,EAAUA,EAAQT,QAAU,EACrCuP,EAAY9O,EAAUA,EAAQnX,GAAK,EAErC6tE,aAAgBj8D,EAAQqU,EAAWinD,EAAOnqE,IAC1C,EAAKT,SAAS,CAAE2qE,cA/dL,EAmenBsD,yBAA2B,SAAAxsE,GACvB,EAAKzB,SAAS,CACV6U,QAAS,KACT+1D,MAAO,KACPe,YAAa,KACbhB,SAAU,KACViD,SAAS,EACT/nD,IAAK,KACLy5C,SAAU,MACX,WACC,IAAM96D,EAAS,EAAKkoE,SAASv2D,QACxB3R,GAELA,EAAOi/B,UAhfI,EAofnB4nC,0BAA4B,SAAA5pE,GAAW,IAC3BhB,EAAWgB,EAAXhB,OAD0B,EAEF,EAAKnB,MAA7BuV,EAF0B,EAE1BA,QAAS+1D,EAFiB,EAEjBA,MAAO/kD,EAFU,EAEVA,IAExB,GAAI0lD,aAAgB12D,EAAUA,EAAQT,QAAU,EAAGS,EAAUA,EAAQnX,GAAK,EAAGktE,EAAOnqE,GAAS,CACzF,IAAKolB,EAAK,OAEV,IAAMrhB,EAAS,EAAKkoE,SAASv2D,QAC7B,IAAK3R,EAAQ,OAEb,EAAKuoE,iBAAkB,EACnBvoE,EAAOgC,OACPhC,EAAOc,OAEPd,EAAOe,aAGX,EAAKioE,iBAAiB/sE,IArgBX,EAygBnBytE,WAAa,WACTvuE,IAAgBgG,aAAa,CACzB,QAAS,2BA3gBE,EA+gBnBH,WAAa,WAAO,IAAD,EACyB,EAAKlG,MAArCuV,EADO,EACPA,QAAS+1D,EADF,EACEA,MAAOe,EADT,EACSA,YACxB,GAAK92D,GAAY+1D,EAAjB,CAEA,IAAMnqE,EAASoU,GAAW,CAAE,QAAS,oBAAqB+1D,QAAOe,eAEjEhsE,IAAgBgG,aAAa,CACzB,QAAS,0BACTlF,aAvhBW,EA2hBnB0tE,WAAa,WACTxuE,IAAgBgG,aAAa,CACzB,QAAS,2BA7hBE,EAiiBnBG,YAAc,WAAsB,IAArBsoE,IAAoB,2DACS,EAAK9uE,MAArCuV,EADuB,EACvBA,QAAS+1D,EADc,EACdA,MAAOe,EADO,EACPA,YACxB,GAAK92D,GAAY+1D,EAAjB,CAEA,IAAMnqE,EAASoU,GAAW,CAAE,QAAS,oBAAqB+1D,QAAOe,eAEjEhsE,IAAgBgG,aAAa,CACzB,QAAS,0BACTlF,SACA2tE,aAGJ,EAAKpuE,SACD,GAKA,WACIL,IAAgBgG,aAAa,CACzB,QAAS,uBACTlF,SACA2tE,iBAvjBG,EA6jBnBC,iBAAmB,WACf,IAAMnsE,EAAQ,EAAKwqE,SAASv2D,QAC5B,EAAKnQ,eAAe,CAAE1D,YAAa,EAAGhF,SAAU4E,EAAM5E,WAEtD,EAAKwI,aAAY,IAjkBF,EAokBnB1D,YAAc,WACV,IAAMoC,EAAS,EAAKkoE,SAASv2D,QACzB3R,GACAA,EAAOe,QAGX,EAAKO,aAAY,IA1kBF,EA6kBnBZ,qBAAuB,WAAO,IAAD,EAC0B,EAAK5F,MAAlDuV,EADmB,EACnBA,QAAS+1D,EADU,EACVA,MAAOe,EADG,EACHA,YAAarpE,EADV,EACUA,YACnC,GAAKuS,GAAY+1D,EAAjB,CAEA,IAAMpmE,EAAS,EAAKkoE,SAASv2D,QAC7B,GAAK3R,EAAL,CALyB,IAOjBylE,EAA4C5gE,IAA5C4gE,kBAAmB7mE,EAAyBiG,IAAzBjG,aAAcV,EAAW2G,IAAX3G,OAEnC4d,EAAQO,aAAShM,GAAW+1D,GAC5BpqD,EAAY8tD,aAASz5D,GAAW+1D,GAElC/mE,EAAOsmE,IACP3pD,EACA3c,EAAOT,EACAkd,GAAS2sD,aAAqBp4D,GAAW+1D,KAChD/mE,EAAOomE,GAGXzlE,EAAOpB,aAAeS,EACtBW,EAAO9B,OAASA,EAChB8B,EAAO+pE,OAAQ,EACX,EAAKpB,cACL3oE,EAAOlC,YAAckC,EAAOlH,SAAW,EAAK6vE,aAAavlE,MACzD,EAAKulE,aAAe,MAEpB3oE,EAAOlC,YAAcA,EAGzBkC,EAAOc,OA7BkB,IA+BjBH,EAAgDX,EAAhDW,SAAU7H,EAAsCkH,EAAtClH,SAAUkxE,EAA4BhqE,EAA5BgqE,WAAYC,EAAgBjqE,EAAhBiqE,YAClChuE,EAASoU,GAAW,CAAE,QAAS,oBAAqB+1D,QAAOe,eAWjE,GATAhsE,IAAgBgG,aAAa,CACzB,QAAS,kCACTlF,SACA0E,WACA7H,WACAkxE,aACAC,iBAGAnuD,IAGAE,EAAJ,CAIA,IAAIq+C,EAAS,KACT,kBAAmBr6D,EACnBq6D,EAASr6D,EAAOkqE,gBACT,qBAAsBlqE,IAC7Bq6D,EAASr6D,EAAOmqE,oBAGf9P,GAILl/D,IAAgBgG,aAAa,CACzB,QAAS,iCACT2J,OAAQuF,EAAQT,QAChBuP,UAAW9O,EAAQnX,GACnBmhE,OAAQA,QA9oBG,EAkpBnBx4D,eAAiB,WAAO,IAAD,EACqB,EAAK/G,MAArCuV,EADW,EACXA,QAAS+1D,EADE,EACFA,MAAOe,EADL,EACKA,YACxB,GAAK92D,GAAY+1D,EAAjB,CAEA,IAAMpmE,EAAS,EAAKkoE,SAASv2D,QAC7B,GAAK3R,EAAL,CALmB,IAOXW,EAAaX,EAAbW,SAEF1E,EAASoU,GAAW,CAAE,QAAS,oBAAqB+1D,QAAOe,eAEjEhsE,IAAgBgG,aAAa,CACzB,QAAS,4BACTlF,SACA0E,gBAhqBW,EAoqBnBc,iBAAmB,WAAO,IAAD,EACmB,EAAK3G,MAArCuV,EADa,EACbA,QAAS+1D,EADI,EACJA,MAAOe,EADH,EACGA,YACxB,GAAK92D,GAAY+1D,EAAjB,CAEA,IAAMpmE,EAAS,EAAKkoE,SAASv2D,QAC7B,GAAK3R,EAAL,CALqB,IAOblC,EAAoCkC,EAApClC,YAAa6C,EAAuBX,EAAvBW,SAAU7H,EAAakH,EAAblH,SAE/B,EAAK0C,SAAS,CAAEsC,gBAEhB,IAAM7B,EAASoU,GAAW,CAAE,QAAS,oBAAqB+1D,QAAOe,eAEjEhsE,IAAgBgG,aAAa,CACzB,QAAS,wBACTlF,SACAnD,WACAgF,cACA6C,WACA87D,UAAWt6C,KAAK1oB,QAGpB,EAAK+H,eAAe,CAAE1D,cAAahF,gBA1rBpB,EA6rBnB+H,cAAgB,aA7rBG,EAisBnBupE,gBAAkB,WAAO,IAAD,EACoB,EAAKtvE,MAArCuV,EADY,EACZA,QAAS+1D,EADG,EACHA,MAAOe,EADJ,EACIA,YACxB,GAAK92D,GAAY+1D,EAAjB,CAEA,EAAK5qE,SAAS,CAAE4tE,SAAS,IAEzB,IAAMppE,EAAS,EAAKkoE,SAASv2D,QAC7B,GAAK3R,EAAL,CAPoB,IASZlC,EAA0BkC,EAA1BlC,YAAahF,EAAakH,EAAblH,SAEfmD,EAASoU,GAAW,CAAE,QAAS,oBAAqB+1D,QAAOe,eAEjEhsE,IAAgBgG,aAAa,CACzB,QAAS,wBACTlF,SACA6B,cACAhF,WACA2jE,UAAWt6C,KAAK1oB,WAntBL,EAutBnB4wE,iBAAmB,WAAO,IAAD,EACmB,EAAKvvE,MAArCuV,EADa,EACbA,QAAS+1D,EADI,EACJA,MAAOe,EADH,EACGA,YACxB,IAAK92D,GAAY+1D,KAEjB,EAAK5qE,SAAS,CACV4tE,SAAS,IAGE,EAAKlB,SAASv2D,SAC7B,CAEA,IAAM1V,EAASoU,GAAW,CAAE,QAAS,oBAAqB+1D,QAAOe,eAEjEhsE,IAAgBgG,aAAa,CACzB,QAAS,yBACTlF,aAtuBW,EA0uBnBquE,QAAU,SAACptD,EAAMipD,GACb,IAAKjpD,EAAM,OAAO,EAClB,IAAKipD,IAAaA,EAAS5/C,MAAMhZ,OAAQ,OAAO,EAEhD,IAAMkP,EAAQ0pD,EAAS5/C,MAAM6I,UAAU,SAAAz1B,GAAC,OAAI0sE,aAAmB1sE,EAAGujB,KAClE,OAAe,IAAXT,GAEGA,EAAQ,EAAI0pD,EAAS5/C,MAAMhZ,QAjvBnB,EAovBnBg9D,QAAU,SAACrtD,EAAMipD,GACb,IAAKjpD,EAAM,OAAO,EAClB,IAAKipD,IAAaA,EAAS5/C,MAAMhZ,OAAQ,OAAO,EAEhD,IAAMkP,EAAQ0pD,EAAS5/C,MAAM6I,UAAU,SAAAz1B,GAAC,OAAI0sE,aAAmB1sE,EAAGujB,KAClE,OAAe,IAAXT,GAEGA,EAAQ,GAAK,GA3vBL,EA8vBnB+tD,sBAAwB,WACpBrvE,IAAgBgG,aAAa,CACzB,QAAS,kCACTslE,MAAM,KAjwBK,EAqwBnBgE,sBAAwB,WACpBtvE,IAAgBgG,aAAa,CACzB,QAAS,kCACTslE,MAAM,KAxwBK,EA4wBnBiE,iBAAmB,WAAO,IAAD,EACmB,EAAK5vE,MAArCuV,EADa,EACbA,QAAS+1D,EADI,EACJA,MAAOe,EADH,EACGA,YACpB92D,EACA+O,aAAS/O,EAAQT,QAASS,EAAQnX,IAIlCktE,GAASe,GD5yBd,SAA8BA,EAAaf,GAC9C,IAAMrqD,EAAM0rD,GAAS/iE,IAAIyiE,GACpBprD,IAELpQ,QAAQu7B,IAAI,YAAaigC,GACzBS,YAAuBT,GACvBU,aAAsB,CAAEV,cAAaf,QAAOrqD,SCuyBpC4uD,CAAqBxD,EAAaf,IApxBvB,EAyxBnB5kE,eAAiB,SAAA1D,GAAgB,IAAD,EACD,EAAKhD,MAAxBuV,EADoB,EACpBA,QAAS+1D,EADW,EACXA,MACjB,IAAK/1D,GAAY+1D,IAEZqC,aAAqBp4D,GAAW+1D,GAArC,CAEA,IAAMtqD,EAAQ8uD,aAAgBv6D,EAAQT,QAASS,EAAQnX,IACvD,GAAK4iB,EAAL,CAP4B,IASbtX,EAASsX,EAAhBA,MACR,GAAKtX,EAAL,CAV4B,IAYpBG,EAAWH,EAAXG,OACR,GAAKA,EAAL,CAb4B,IAepBC,EAAcD,EAAdC,UACHA,IAEA9G,EAGD+G,IAAYrD,eAAeoD,EAAW9G,GAFtC+G,IAAYC,iBAAiBF,SAzyBjC,EAAKsjE,SAAW9rE,IAAM2Y,YAHP,IAKP1E,EAA0CxL,IAA1CwL,QAAS+1D,EAAiCvhE,IAAjCuhE,MAAOe,EAA0BtiE,IAA1BsiE,YAAahB,EAAathE,IAAbshE,SALtB,EAMmB5hE,aAAe8L,GAAzCvS,EANO,EAMPA,YAAahF,EANN,EAMMA,SANN,OAQf,EAAKgC,MAAQ,CACTgD,cACAhF,WACAuX,UACA+1D,QACAe,cACAhB,WACAiD,SAAS,EACT/nD,IAAK6nD,aAAY74D,GACjByqD,SAAUqO,aAAiB94D,IAjBhB,E,mFAqBGmG,EAAWC,EAAWqK,GAAc,IAAD,EACFrmB,KAAKK,MAAhDuV,EAD6C,EAC7CA,QAAS+1D,EADoC,EACpCA,MAAOD,EAD6B,EAC7BA,SAAU9kD,EADmB,EACnBA,IAAK+nD,EADc,EACdA,QAEvC,OAAI3yD,EAAU2vD,QAAUA,IAIpB3vD,EAAUpG,UAAYA,IAItBoG,EAAU0vD,WAAaA,IAIvB1vD,EAAU4K,MAAQA,GAIlB5K,EAAU2yD,UAAYA,O,0CAQ1B3uE,KAAKowE,0BAELl2C,KAAS/uB,GAAG,iCAAkCnL,KAAKwtD,kCACnDxjD,IAAUmB,GAAG,4BAA6BnL,KAAK6uE,yBAC/C7kE,IAAUmB,GAAG,4BAA6BnL,KAAK6uE,yBAC/C7kE,IAAUmB,GAAG,wBAAyBnL,KAAK6uE,yBAC3Cr4D,KAAarL,GAAG,0BAA2BnL,KAAK61D,2BAChDr/C,KAAarL,GAAG,yBAA0BnL,KAAKi2D,0BAC/C7rD,IAAYe,GAAG,0BAA2BnL,KAAKosE,2BAC/ChiE,IAAYe,GAAG,yBAA0BnL,KAAKgvE,0BAC9C5kE,IAAYe,GAAG,4BAA6BnL,KAAKusE,6BACjDniE,IAAYe,GAAG,8BAA+BnL,KAAKsuE,+BACnDlkE,IAAYe,GAAG,+BAAgCnL,KAAKquE,gCACpDjkE,IAAYe,GAAG,+BAAgCnL,KAAKouE,gCACpDhkE,IAAYe,GAAG,0BAA2BnL,KAAKgpE,2BAC/C5+D,IAAYe,GAAG,gCAAiCnL,KAAK8qE,iCACrD1gE,IAAYe,GAAG,qCAAsCnL,KAAK+qE,sCAC1D3gE,IAAYe,GAAG,wBAAyBnL,KAAKiuE,2B,6CAI7CjuE,KAAKqwE,6BAELn2C,KAAS5uB,IAAI,iCAAkCtL,KAAKwtD,kCACpDxjD,IAAUsB,IAAI,4BAA6BtL,KAAK6uE,yBAChD7kE,IAAUsB,IAAI,4BAA6BtL,KAAK6uE,yBAChD7kE,IAAUsB,IAAI,wBAAyBtL,KAAK6uE,yBAC5Cr4D,KAAalL,IAAI,0BAA2BtL,KAAK61D,2BACjDr/C,KAAalL,IAAI,yBAA0BtL,KAAKi2D,0BAChD7rD,IAAYkB,IAAI,0BAA2BtL,KAAKosE,2BAChDhiE,IAAYkB,IAAI,yBAA0BtL,KAAKgvE,0BAC/C5kE,IAAYkB,IAAI,4BAA6BtL,KAAKusE,6BAClDniE,IAAYkB,IAAI,8BAA+BtL,KAAKsuE,+BACpDlkE,IAAYkB,IAAI,+BAAgCtL,KAAKquE,gCACrDjkE,IAAYkB,IAAI,+BAAgCtL,KAAKouE,gCACrDhkE,IAAYkB,IAAI,0BAA2BtL,KAAKgpE,2BAChD5+D,IAAYkB,IAAI,gCAAiCtL,KAAK8qE,iCACtD1gE,IAAYkB,IAAI,qCAAsCtL,KAAK+qE,sCAC3D3gE,IAAYkB,IAAI,wBAAyBtL,KAAKiuE,2B,gDAGvB,IACfqC,EAAiBv/D,UAAjBu/D,aACR,GAAKA,EAEL,IACIA,EAAaC,iBAAiB,YAAavwE,KAAKkvE,YAChDoB,EAAaC,iBAAiB,gBAAiBvwE,KAAKivE,YACpDqB,EAAaC,iBAAiB,cAAevwE,KAAKwtE,mBAClD8C,EAAaC,iBAAiB,eAAgBvwE,KAAK0tE,oBACnD4C,EAAaC,iBAAiB,SAAUvwE,KAAK2tE,cAC/C,a,mDAmCwB,IAClB2C,EAAiBv/D,UAAjBu/D,aACR,GAAKA,EAEL,IACIA,EAAaC,iBAAiB,YAAa,MAC3CD,EAAaC,iBAAiB,gBAAiB,MAC/CD,EAAaC,iBAAiB,cAAe,MAC7CD,EAAaC,iBAAiB,eAAgB,MAC9CD,EAAaC,iBAAiB,SAAU,MAC3C,a,oCAKSlyE,GAAW,IAAD,OACdkH,EAASvF,KAAKytE,SAASv2D,QAC7B,GAAK3R,EAAL,CAEA,IACI2sC,EAAQ,EACNs+B,EAAgBjrE,EAAO9B,OAC7BzD,KAAKywE,eAAiB1a,YAAY,WAC1B7jB,GAJgB,IAKhB3sC,EAAOe,QACPf,EAAO9B,OAAS+sE,EAChBE,cAAc,EAAKD,kBAEnBlrE,EAAO9B,OAAS+sE,GAAiBt+B,EAAQ,GACzCA,MAEL7zC,EAZqB,O,mCAefA,GAAW,IAAD,OACbkH,EAASvF,KAAKytE,SAASv2D,QAC7B,GAAK3R,EAAL,CAEA,IACI2sC,EAAQ,EACNs+B,EAAgBjrE,EAAO9B,OAC7B8B,EAAO9B,OAAS,EAChB8B,EAAOc,OACPrG,KAAKywE,eAAiB1a,YAAY,WAC1B7jB,GANgB,IAOhB3sC,EAAO9B,OAAS+sE,EAChBE,cAAc,EAAKD,kBAEnBlrE,EAAO9B,OAAS+sE,EAVA,IAUmCt+B,EAAQ,GAC3DA,MAEL7zC,EAbqB,O,+BAsoBlB,IACEmS,EAAMxQ,KAAKc,MAAX0P,EADH,EAEkExQ,KAAKK,MAApEsuE,EAFH,EAEGA,QAAS/4D,EAFZ,EAEYA,QAAS+1D,EAFrB,EAEqBA,MAAOttE,EAF5B,EAE4BA,SAAUqtE,EAFtC,EAEsCA,SAAU9kD,EAFhD,EAEgDA,IAAKy5C,EAFrD,EAEqDA,SAEpDh/C,EAAQO,aAAShM,GAAW+1D,GAC5BgF,EAAe3C,aAAqBp4D,GAAW+1D,GAE/CnkD,EAAO5R,EAAUA,EAAQ4R,KAAO,KAEhCnL,EAAQu0D,aAAch7D,GAAW+1D,EAAOn7D,GAIxCqgE,GAHcC,aAAYtpD,GAChBupD,aAAQvpD,IAEEnG,GAASsvD,GAC7BK,EAAa3vD,EACb4vD,EAAc5vD,EACdwuD,EAAU7vE,KAAK6vE,QAAQj6D,GAAW+1D,EAAOD,GACzCoE,EAAU9vE,KAAK8vE,QAAQl6D,GAAW+1D,EAAOD,GAEzClqE,EAASolB,EAAM,4BAAQA,IAAKA,EAAKlK,KAAM2jD,IAAc,KAE3D,OACI,oCACI,2BACIh/D,UAAU,sBACV4Z,IAAKjb,KAAKytE,SACVyD,UAAU,EACVliD,UAAU,EACV7f,MAAO,GACP4I,OAAQ,GACRo5D,yBAAyB,EACzBC,iBAAkBpxE,KAAKiG,qBACvBorE,UAAWrxE,KAAKoG,cAChBI,OAAQxG,KAAK2vE,gBACb/oE,QAAS5G,KAAK4vE,iBACd9oE,QAAS9G,KAAKovE,iBACdkC,aAActxE,KAAKgH,iBACnBuqE,WAAYvxE,KAAKoH,gBAEhB5F,IAEHoU,GAAW+1D,IACT,yBAAKtqE,UAAU,iBACX,kBAAC+U,EAAA,EAAD,CACIpG,UAAW6/D,EACXxuE,UAAU,uBACViV,MAAM,UACN7H,QAASzO,KAAKivE,YACd,kBAAC,KAAD,CAAkB5e,SAAS,WAE/B,kBAACj6C,EAAA,EAAD,CACI/U,UAAU,uBACViV,MAAM,UACNtG,UAAW4W,EACXnY,QAASzO,KAAKuG,YACbooE,EAAU,kBAAC7+D,EAAA,EAAD,MAAgB,kBAAC0hE,EAAA,EAAD,OAE/B,kBAACp7D,EAAA,EAAD,CACIpG,UAAW8/D,EACXzuE,UAAU,uBACViV,MAAM,UACN7H,QAASzO,KAAKkvE,YACd,kBAAC,KAAD,CAAc7e,SAAS,WAE3B,kBAAC,GAAD,MACA,yBACIhvD,UAAU,wBACV4N,aAAcjP,KAAK+vE,sBACnB7gE,aAAclP,KAAKgwE,sBACnBvhE,QAASzO,KAAKiwE,kBACd,yBAAK5uE,UAAU,uBACVgb,GA3DR,GAqDD,QAgBA,kBAAC,GAAD,CAAMhe,SAAUA,IAChB,kBAAC,GAAD,MACCwyE,GAAoB,kBAAC,GAAD,CAAoBxvD,MAAOA,IAC/C2vD,GAAc,kBAAC,GAAD,MACdC,GAAe,kBAAC,GAAD,MAChB,kBAAC76D,EAAA,EAAD,CAAY/U,UAAU,uBAAuBoN,QAASzO,KAAKmD,aACvD,kBAAC6L,EAAA,EAAD,CAAWqhD,SAAS,iB,GA14BrB1uD,IAAMC,WAm5BlBgP,iBAAkB28D,ICn6B3BkE,I,kNASFC,sBAAwB,SAAAlvE,GAAW,IACvB6N,EAAW,EAAKvP,MAAhBuP,OACY7N,EAAZ2S,UAEQ9E,GAEhB,EAAKoI,e,EAGTtV,YAAc,WAAO,IACTkN,EAAW,EAAKvP,MAAhBuP,OAER,IADa4L,KAAUhS,IAAIoG,GAChB,OAAO,KAElB3P,IAAgBC,KAAK,CACjB,QAAS,sBACTwU,QAAS9E,K,EAIjBshE,iBAAmB,WAAO,IACdthE,EAAW,EAAKvP,MAAhBuP,OAER,IADa4L,KAAUhS,IAAIoG,GAChB,OAAO,KAElB3P,IAAgBC,KAAK,CACjB,QAAS,aACTwU,QAAS9E,EACTuhE,OAAQ,CACJ,QAAS,wBAEbx5D,YAAa,M,EAIrBy5D,8BAAgC,WAAO,IAC3BxhE,EAAW,EAAKvP,MAAhBuP,OAER,IADa4L,KAAUhS,IAAIoG,GAChB,OAAO,KAElB3P,IAAgBC,KAAK,CACjB,QAAS,aACTwU,QAAS9E,EACTuhE,OAAQ,CACJ,QAAS,qCAEbx5D,YAAa,M,EAIrB05D,uBAAyB,WAAO,IACpBzhE,EAAW,EAAKvP,MAAhBuP,OACFuf,EAAS0D,YAAcjjB,GACxBuf,GAELlvB,IAAgBC,KAAK,CACjB,QAAS,mBACTuT,QAAS0b,K,EAIjBmiD,iBAAmB,WAAO,IACd1hE,EAAW,EAAKvP,MAAhBuP,OACFuf,EAAS0D,YAAcjjB,GAC7B,GAAKuf,EAAL,CAEA,IAAMuC,EAAOhe,KAAUlK,IAAI2lB,GAC3B,GAAKuC,EAAL,CANqB,IAQbje,EAAiDie,EAAjDje,QAAS89D,EAAwC7/C,EAAxC6/C,aAAc17B,EAA0BnkB,EAA1BmkB,WAAYE,EAAcrkB,EAAdqkB,UAE3C91C,IAAgBC,KAAK,CACjB,QAAS,aACTsxE,QAAS,CACL,QAAS,UACTD,eACA17B,aACAE,YACA07B,MAAO,GACPh+D,WAEJi+D,oBAAoB,O,EAI5BC,gBAAkB,WAAO,IACb/hE,EAAW,EAAKvP,MAAhBuP,OACFuf,EAAS0D,YAAcjjB,GACxBuf,GAELlvB,IAAgBC,KAAK,CACjB,QAAS,YACTuT,QAAS0b,K,mFAnGb3T,KAAU9Q,GAAG,sBAAuBnL,KAAK0xE,yB,6CAIzCz1D,KAAU3Q,IAAI,sBAAuBtL,KAAK0xE,yB,+BAmGpC,IAAD,EACiB1xE,KAAKc,MAAnBuP,EADH,EACGA,OAAQG,EADX,EACWA,EAChB,IAAKH,EAAQ,OAAO,KAEpB,IAAMoM,EAAOR,KAAUhS,IAAIoG,GAC3B,IAAKoM,EAAM,OAAO,KALb,IAOG41D,EAAe51D,EAAf41D,WACR,IAAKA,EAAY,OAAO,KAExB,IAAI37D,EAAU,KACd,OAAQ27D,EAAW,UACf,IAAK,gCACD37D,EACI,kBAAC6E,EAAA,EAAD,CAAQjF,MAAM,UAAUjV,UAAU,wBAAwBoN,QAASzO,KAAK8xE,wBACnEthE,EAAE,iBAGX,MAEJ,IAAK,0BACDkG,EACI,kBAAC6E,EAAA,EAAD,CAAQjF,MAAM,UAAUjV,UAAU,wBAAwBoN,QAASzO,KAAK+xE,kBACnEvhE,EAAE,mBAGX,MAEJ,IAAK,8BACDkG,EACI,oCACI,kBAAC6E,EAAA,EAAD,CAAQjF,MAAM,UAAUjV,UAAU,wBAAwBoN,QAASzO,KAAK+xE,kBACnEvhE,EAAE,mBAEP,kBAAC+K,EAAA,EAAD,CAAQjF,MAAM,YAAYjV,UAAU,wBAAwBoN,QAASzO,KAAKoyE,iBACrE5hE,EAAE,oBAIf,MAEJ,IAAK,iCACDkG,EACI,kBAAC6E,EAAA,EAAD,CACIjF,MAAM,YACNjV,UAAU,wBACVoN,QAASzO,KAAK6xE,+BACbrhE,EAAE,uBAGX,MAEJ,IAAK,0BACDkG,EACI,kBAAC6E,EAAA,EAAD,CAAQjF,MAAM,YAAYjV,UAAU,wBAAwBoN,QAASzO,KAAK2xE,kBACrEnhE,EAAE,eAOnB,OACI,yBAAKnP,UAAU,aAAakN,YAAavO,KAAK2D,aAC1C,yBAAKtC,UAAU,sBAAsBqV,GACrC,yBAAKrV,UAAU,2BACX,kBAAC+U,EAAA,EAAD,CAAY3H,QAASzO,KAAKmD,aACtB,kBAAC6L,EAAA,EAAD,a,GA5KArN,IAAMC,YAwLfgP,iBAAkB6gE,I,+BClMlB5vE,gBACX,0BAAMC,EAAE,4jBACR,QCFWD,gBACX,0BAAMC,EAAE,wzBACR,cCFWD,gBACX,uBAAGk7B,OAAO,eAAenB,YAAY,IAAIC,KAAK,OAAOC,SAAS,UAAUK,cAAc,QAAQa,UAAU,mBACpG,0BAAMl7B,EAAE,2IACR,8BAAUs6B,eAAe,QAAQk2C,OAAO,yBACxC,8BAAUl2C,eAAe,QAAQk2C,OAAO,+BAE5C,e,oBCiCEC,I,kNACFlyE,MAAQ,CACJmyE,iBAAiB,G,EAGrBC,sBAAwB,SAAAhwE,GACD,EAAKpC,MAAhB+/B,QAGR,EAAKr/B,SAAS,CACVyxE,iBAAiB,EACjBrsD,aAAa,K,EAIrBusD,mBAAqB,SAAAjwE,GACbA,GACAA,EAAM4B,kBAGV,EAAKtD,SAAS,CAAEyxE,iBAAiB,K,EAGrCG,eAAiB,SAAAlwE,GACbA,EAAM4B,kBADgB,MAGQ,EAAKvD,MAA3BuP,EAHc,EAGdA,OAAQqU,EAHM,EAGNA,UACY,EAAKrkB,MAAzBmyE,iBAGJ,EAAKzxE,SAAS,CAAEyxE,iBAAiB,IAGrCI,aAASviE,EAAQqU,I,EAGrBmuD,aAAe,SAAApwE,GACPA,GACAA,EAAM4B,kBAFU,MAKmB,EAAKvD,MAApCuP,EALY,EAKZA,OAAQqU,EALI,EAKJA,WAEhB5J,EAPoB,EAKOA,SAEnBrY,GACRqwE,aAAiBziE,EAAQqU,I,EAG7BjP,eAAiB,SAAAhT,GAAU,IAAD,EACW,EAAK3B,MAA9Bga,EADc,EACdA,QAASi4D,EADK,EACLA,SAAUviE,EADL,EACKA,EAE3BsK,EAAQrY,GAEHswE,IAELliE,EAAKkiE,GACL,EAAKp9D,sBAAsBnF,EAAE,iB,EAGjCwiE,4B,sCAA8B,WAAMvwE,GAAN,2BAAAqO,EAAA,8DACgB,EAAKhQ,MAAvCga,EADkB,EAClBA,QAASzK,EADS,EACTA,OAAQqU,EADC,EACDA,UAAWlU,EADV,EACUA,EAEpCsK,EAAQrY,GAHkB,SAKJ/B,IAAgBC,KAAK,CACvC,QAAS,iBACTwU,QAAS9E,EACT+E,WAAYsP,EACZrP,WAAW,EACXC,aAAa,IAVS,UAKpB29D,EALoB,2DAcZF,EAAaE,EAAnBv9D,KAdkB,mDAkB1B7E,EAAKkiE,GACL,EAAKp9D,sBAAsBnF,EAAE,eAnBH,0C,wDAsB9BmF,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK9U,MAAxC+U,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIzT,IAAI,QACJ0T,aAAW,QACXC,MAAM,UACNjV,UAAU,4BACVoN,QAAS,WACLqH,EAAcC,KAElB,kBAAC/G,EAAA,EAAD,W,EAMhBkkE,YAAc,SAAAzwE,GAAU,IAAD,EACoB,EAAK3B,MAApCuP,EADW,EACXA,OAAQqU,EADG,EACHA,UAAW5J,EADR,EACQA,QAE3BhE,eACAgE,EAAQrY,GACRgzD,aAAaplD,EAAQqU,I,EAGzB4a,UAAY,SAAA78B,GAAU,IAAD,EACsB,EAAK3B,MAApCuP,EADS,EACTA,OAAQqU,EADC,EACDA,UAAW5J,EADV,EACUA,QAE3BhE,eACAgE,EAAQrY,GAEJ0wE,aAAgB9iE,EAAQqU,GACxBg/C,aAAoBrzD,EAAQqU,GAE5B0uD,aAAkB/iE,EAAQqU,I,EAIlCE,cAAgB,SAAAniB,GAAU,IAAD,EACkB,EAAK3B,MAApCuP,EADa,EACbA,OAAQqU,EADK,EACLA,WAEhB5J,EAHqB,EACMA,SAEnBrY,GACRoiB,aAAgBxU,EAAQ,CAACqU,K,EAG7B2uD,WAAa,SAAA5wE,GAAU,IAAD,EACqB,EAAK3B,MAApCuP,EADU,EACVA,OAAQqU,EADE,EACFA,UAAW5J,EADT,EACSA,QAE3BhE,eACAgE,EAAQrY,GACR+yD,aAAYnlD,EAAQqU,I,EAGxB2O,aAAe,SAAA5wB,GAAU,IAAD,EACmB,EAAK3B,MAApCuP,EADY,EACZA,OAAQqU,EADI,EACJA,WAChB5J,EAFoB,EACOA,SACnBrY,GAER,IAAMmgC,EAAY33B,OAAO43B,eAAe0sB,WACxC,GAAK+jB,aAAiB1wC,GAAtB,CAIA,IAAMtyB,GAAYkG,KAAa0yC,cAAc71C,IAA3B,iBAAyChD,EAAzC,sBAA6DqU,IAC/E6uD,aAAcljE,EAAQqU,EAAWpU,K,EAGrCwU,aAAe,SAAAriB,GAAU,IAAD,EACmB,EAAK3B,MAApCuP,EADY,EACZA,OAAQqU,EADI,EACJA,WAEhB5J,EAHoB,EACOA,SAEnBrY,GACRsiB,aAAe1U,EAAQ,CAACqU,K,EAG5B8uD,eAAiB,SAAA/wE,GAAU,IAAD,EACQ,EAAK3B,MAA3BuP,EADc,EACdA,OAAQqU,EADM,EACNA,UACV9O,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,GAAK9O,EAAL,CAHsB,IAKdc,EAAYd,EAAZc,QACR,GAAKA,EAAL,CANsB,IAQdjW,EAAYiW,EAAZjW,QACR,GAAKA,EAAL,CATsB,IAWLsJ,EAAStJ,EAAlBA,QACR,GAAKsJ,EAAL,CAEA,IAAM27B,EAAO17B,IAAU27B,QAAQ57B,EAAKtL,IAC/BinC,GAEL+tC,YAAS/tC,EAAM,oB,wEAGT,IAAD,EAC6E1lC,KAAKc,MAA/E0P,EADH,EACGA,EAAGH,EADN,EACMA,OAAQqU,EADd,EACcA,UAAWM,EADzB,EACyBA,eAAgB+tD,EADzC,EACyCA,SAAUr4D,EADnD,EACmDA,KAAMI,EADzD,EACyDA,QAAStZ,EADlE,EACkEA,OAC/DgxE,EAAoBxyE,KAAKK,MAAzBmyE,gBACR,IAAKA,IAAoB93D,EAAM,OAAO,KAEtC,IAAM8hB,EAAW22C,aAAgB9iE,EAAQqU,GACnCgvD,EAAeC,aAAoBtjE,EAAQqU,IAAyB,SAAXljB,EACzDoyE,EAAcC,aAAmBxjE,EAAQqU,IAAyB,SAAXljB,EACvDsyE,EAAet6D,YAAgBnJ,IAAsB,SAAX7O,EAC1CuyE,EAAcC,YAAe3jE,GAC7Bg1D,EAAiB4O,aAAsB5jE,EAAQqU,GAC/C0gD,EAAe8O,aAAoB7jE,EAAQqU,GAC3CyvD,EAAcC,aAAmB/jE,EAAQqU,KAAewV,KAASm6C,WAAwB,SAAX7yE,EAC9E8yE,GAAiB99D,KAAa+9D,mBAAmBlkE,EAAQqU,GACzD8vD,EAAc/rD,QAAQsqD,GACtB0B,EAA2BC,aAAmBrkE,GAEpD,OACI,oCACI,kBAAC+U,GAAA,EAAD,CACI1K,MAAM,EACNI,QAASA,EACTuK,gBAAgB,iBAChBL,eAAgBA,EAChBM,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBjX,YAAa,SAAAQ,GAAC,OAAIA,EAAE1K,oBACpB,kBAACqhB,GAAA,EAAD,CAAUjX,QAAS,SAAAM,GAAC,OAAIA,EAAE1K,oBAOrBiwE,GACG,kBAAC3uD,GAAA,EAAD,CAAUlX,QAASzO,KAAKqzB,cACpB,kBAACvT,GAAA,EAAD,KACI,kBAAC60D,GAAD,OAEJ,kBAACx0D,GAAA,EAAD,CAAcC,QAAS5P,EAAE,aAGhCikE,GACG,kBAAC9uD,GAAA,EAAD,CAAUlX,QAASzO,KAAKgzE,6BACpB,kBAAClzD,GAAA,EAAD,KACI,kBAAC80D,GAAD,OAEJ,kBAACz0D,GAAA,EAAD,CAAcC,QAAS5P,EAAE,sBAGhCgkE,GACG,kBAAC7uD,GAAA,EAAD,CAAUlX,QAASzO,KAAKyV,gBACpB,kBAACqK,GAAA,EAAD,KACI,kBAAC80D,GAAD,OAEJ,kBAACz0D,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAGhCsjE,GACG,kBAACnuD,GAAA,EAAD,CAAUlX,QAASzO,KAAKkzE,aACpB,kBAACpzD,GAAA,EAAD,KACI,kBAAC8F,GAAD,CAAWlgB,MAAO,CAACs3B,UAAW,iBAElC,kBAAC7c,GAAA,EAAD,CAAcC,QAAS5P,EAAE,YAGhCujE,GACG,kBAACpuD,GAAA,EAAD,CAAUlX,QAASzO,KAAKs/B,WACnB9C,EACG,oCACI,kBAAC1c,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,mBAG7B,oCACI,kBAACsP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,kBAKxC60D,GACG,kBAAC1/C,GAAA,EAAD,CAAUlX,QAASzO,KAAK4kB,eACpB,kBAAC9E,GAAA,EAAD,KACI,kBAAC8F,GAAD,OAEJ,kBAACzF,GAAA,EAAD,CAAcC,QAAS5P,EAAE,cAGhC2jE,GACG,kBAACxuD,GAAA,EAAD,CAAUlX,QAASzO,KAAKqzE,YACpB,kBAACvzD,GAAA,EAAD,KACI,kBAAC2zB,GAAD,OAEJ,kBAACtzB,GAAA,EAAD,CAAcC,QAAS5P,EAAE,WAGhC40D,GACG,kBAACz/C,GAAA,EAAD,CAAUrP,MAAM,YAAY7H,QAASzO,KAAK8kB,cACtC,kBAAChF,GAAA,EAAD,KACI,kBAAC+F,GAAD,OAEJ,kBAAC1F,GAAA,EAAD,CAAcC,QAAS5P,EAAE,aAGhCkjE,GACG,kBAAC/tD,GAAA,EAAD,CAAUlX,QAASzO,KAAK6yE,cACpB,kBAAC/yD,GAAA,EAAD,KACI,kBAAC+0D,GAAD,OAEJ,kBAAC10D,GAAA,EAAD,CAAcC,QAAS5P,EAAE,aAGhCojE,GACG,kBAACjuD,GAAA,EAAD,CAAUlX,QAASzO,KAAKyyE,uBACpB,kBAAC3yD,GAAA,EAAD,KACI,kBAACmkC,GAAD,OAEJ,kBAAC9jC,GAAA,EAAD,CAAcC,QAAS5P,EAAE,iBAKzC,kBAAC,IAAD,CACIqK,mBAAoB,EACpBH,KAAM83D,EACN13D,QAAS9a,KAAK0yE,mBACd33D,kBAAgB,qBAChB,kBAAC,IAAD,CAAatc,GAAG,qBAAqB+R,EAAE,uBACvC,kBAAC,KAAD,KACI,kBAACyiC,GAAA,EAAD,KAAoBziC,EAAE,uBAE1B,kBAAC8K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAASzO,KAAK0yE,mBAAoBp8D,MAAM,WAC3C9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAASzO,KAAK2yE,eAAgBr8D,MAAM,WACvC9F,EAAE,gB,GApUL7O,IAAM4rC,gBA4VjB9xB,GALCC,YACZ9K,cACA+K,IAGWF,CAAQ82D,ICnYR1wE,gBACX,0BAAMC,EAAE,gEACR,a,qBCQEgzE,I,kNAEFz0E,MAAQ,G,EA6CRomE,wBAA0B,SAAAjkE,GAAW,IACzB2S,EAAwB3S,EAAxB2S,QAASC,EAAe5S,EAAf4S,WADe,EAEU,EAAKtU,MAAvCuP,EAFwB,EAExBA,OAAQqU,EAFgB,EAEhBA,UAAW1P,EAFK,EAELA,WAErBi4B,EAAM,CAACvoB,GAAD,oBAAgB1P,GAAc,KAAKuE,OAAO,SAAAra,GAAC,OAAIupB,QAAQvpB,KAE/DiW,IAAY9E,GACX48B,EAAIlhB,KAAK,SAAA7sB,GAAC,OAAIA,IAAMkW,KAEzB,EAAKrU,SAAS,CAAEy7B,SAAUyQ,EAAIlhB,KAAK,SAAA7sB,GAAC,OAAIsX,KAAavM,IAAIoG,EAAQnR,GAAGynE,e,EAGxEoO,sBAAwB,SAAAvyE,GAAW,IACvB2S,EAA6C3S,EAA7C2S,QAASC,EAAoC5S,EAApC4S,WAAuB4/D,EAAaxyE,EAAxByyE,UACrBr/D,EAAY,EAAKvV,MAAjBuV,QAEHA,GACDA,EAAQT,UAAYA,GACpBS,EAAQnX,KAAO2W,GAEnB,EAAKrU,SAAS,CAAEi0E,c,EAGpBE,+BAAiC,SAAA1yE,GAAW,IAChC2S,EAA0C3S,EAA1C2S,QAASC,EAAiC5S,EAAjC4S,WAAY+/D,EAAqB3yE,EAArB2yE,iBACrBv/D,EAAY,EAAKvV,MAAjBuV,QAEHA,GACDA,EAAQT,UAAYA,GACpBS,EAAQnX,KAAO2W,GAEnB,EAAKrU,SAAS,CAAEq0E,gBAAiBD,K,mFA1CjC3+D,KAAarL,GAAG,sBAAuBnL,KAAK+0E,uBAC5Cv+D,KAAarL,GAAG,+BAAgCnL,KAAKk1E,gCACrD1+D,KAAarL,GAAG,wBAAyBnL,KAAKymE,2B,6CAI9CjwD,KAAalL,IAAI,sBAAuBtL,KAAK+0E,uBAC7Cv+D,KAAalL,IAAI,+BAAgCtL,KAAKk1E,gCACtD1+D,KAAalL,IAAI,wBAAyBtL,KAAKymE,2B,+BAqCzC,IAAD,EAC2DzmE,KAAKc,MAA7DO,EADH,EACGA,UAAWgP,EADd,EACcA,OAAQqU,EADtB,EACsBA,UAAW2wD,EADjC,EACiCA,YAAa7kE,EAD9C,EAC8CA,EAAG9K,EADjD,EACiDA,MADjD,EAE6D1F,KAAKK,MAA/DmnB,EAFH,EAEGA,KAAMwtD,EAFT,EAESA,SAAUM,EAFnB,EAEmBA,WAAY94C,EAF/B,EAE+BA,SAEhB+4C,GAJf,EAEyCH,iBAEG,CAAEI,WAAY,EAAGC,cAAe,IAAzED,WAEFE,EAAU3E,aAAQvpD,GAClBmuD,EAAc7E,aAAYtpD,GAC1BouD,EAAWC,aAASN,GAE1B,OACI,yBAAKl0E,UAAWiN,IAAW,OAAQjN,GAAYqE,MAAOA,GAElD,wCACC6vE,EAAQ,GACL,oCACI,kBAAC,KAAD,CAAgBl0E,UAAU,oBAC1B,0BAAMA,UAAU,aAAagb,MAAOk5D,GAApC,OAEKK,EAFL,cAOPp5C,GACG,oCACI,kBAAC,GAAD,CAASn7B,UAAU,kBACnB,uCAGP2zE,EAAW,GAAK,8BAAOxkE,EAAE,iBAAT,QACjB,uBAAG/B,QAAS4mE,GACR,0BAAMh5D,MAAOs5D,GAAcD,IAE9BJ,GAAc,kBAAC,GAAD,CAAQjlE,OAAQA,EAAQqU,UAAWA,Q,gDA/G9B5jB,EAAOT,GAAQ,IACnCgQ,EAAkCvP,EAAlCuP,OAAQqU,EAA0B5jB,EAA1B4jB,UAAW1P,EAAelU,EAAfkU,WACnB8I,EAA8Czd,EAA9Cyd,WAAYigB,EAAkC19B,EAAlC09B,cAAe+3C,EAAmBz1E,EAAnBy1E,eAEnC,GAAIh4D,IAAezN,GAAU0tB,IAAkBrZ,GAAaqxD,YAAmBD,EAAgB9gE,GAAa,CAExG,IAAMi4B,EAAM,CAACvoB,GAAD,oBAAgB1P,GAAc,KAAKuE,OAAO,SAAAra,GAAC,OAAIupB,QAAQvpB,KAC7DT,EAAKwuC,EAAIA,EAAIn6B,OAAS,GAEtB8C,EAAUY,KAAavM,IAAIoG,EAAQ5R,GACzC,IAAKmX,EAAS,OAAO,KANmF,IAQhG4R,EAA0F5R,EAA1F4R,KAAiBwtD,EAAyEp/D,EAApFq/D,UAAuCG,EAA6Cx/D,EAA/Du/D,iBAAgDG,EAAe1/D,EAA5BuoB,YAEtE,MAAO,CACHrgB,WAAYzN,EACZ0tB,cAAerZ,EACfoxD,eAAgB9gE,EAEhBY,UACA4R,OACAwtD,WACAI,kBACAE,aACA94C,SAAUyQ,EAAIlhB,KAAK,SAAA7sB,GAAC,OAAIsX,KAAavM,IAAIoG,EAAQnR,GAAGynE,aAI5D,OAAO,S,GAhCIhlE,IAAMC,YAgIVgP,iBAAkBkkE,I,oBCkJlBkB,I,kNA7QX31E,MAAQ,CACJ8lB,aAAa,G,EAGjB8vD,aAAe,SAACrgE,EAAStU,GAAiB,IAC9B6T,EAAyBS,EAAzBT,QAAS1W,EAAgBmX,EAAhBnX,GAAIiY,EAAYd,EAAZc,QAErB,OAAQA,EAAQ,UACZ,IAAK,eACD,IAAMw/D,EACF,kBAAC,GAAD,CACI70E,UAAU,cACVsB,IAAG,UAAKwS,EAAL,YAAgB1W,EAAhB,SACH4R,OAAQ8E,EACRuP,UAAWjmB,IAIbuqB,EAAUmtD,aAAWvgE,GACrBrK,EAAO0jD,aAAQr5C,EAAWoT,EAAU,KAAOktD,EAAY,SAAAh3E,GAAC,OAAIA,IAElE,OACI,oCACI,kBAAC,KAAD,CACIwd,KAAK,UACLrM,OAAQ8E,EACRuP,UAAWjmB,EACX4iB,MAAO3K,EAAQ2K,MACf/f,YAAaA,EACboE,MAAO,CAAEyJ,MAAO,OAAQ4I,OAAQ,QAChCuO,UAAW,EAAKA,YAClB/a,GAAQA,EAAKuH,OAAS,GACpB,yBAAKzR,UAAW,gBACXkK,IAMrB,IAAK,eACD,OACI,kBAAC6qE,GAAA,EAAD,CACI15D,KAAK,UACLrM,OAAQ8E,EACRuP,UAAWjmB,EACXkY,MAAOD,EAAQC,MACfrV,YAAaA,EACboE,MAAO,CAAEyJ,MAAO,OAAQ4I,OAAQ,QAChCuO,UAAW,EAAKA,YAG5B,IAAK,eACD,OACI,kBAAC+vD,GAAA,EAAD,CACI35D,KAAK,UACLrM,OAAQ8E,EACRuP,UAAWjmB,EACXwE,MAAOyT,EAAQzT,MACf3B,YAAaA,EACboE,MAAO,CAAEyJ,MAAO,OAAQ4I,OAAQ,QAChCuO,UAAW,EAAKA,YAG5B,IAAK,kBACD,IAAM4vD,EACF,kBAAC,GAAD,CACI70E,UAAU,cACVsB,IAAG,UAAKwS,EAAL,YAAgB1W,EAAhB,SACH4R,OAAQ8E,EACRuP,UAAWjmB,IAIbuqB,EAAUmtD,aAAWvgE,GACrBrK,EAAO0jD,aAAQr5C,EAAWoT,EAAU,KAAOktD,EAAY,SAAAh3E,GAAC,OAAIA,IAElE,OACI,oCACI,kBAACo3E,GAAA,EAAD,CACI55D,KAAK,UACLrM,OAAQ8E,EACRuP,UAAWjmB,EACXwG,SAAUyR,EAAQzR,SAClB3D,YAAaA,EACboE,MAAO,CAAEyJ,MAAO,OAAQ4I,OAAQ,QAChCuO,UAAW,EAAKA,YAClB/a,GAAQA,EAAKuH,OAAS,GACpB,yBAAKzR,UAAW,gBACXkK,IAQzB,OAAO,M,EAiBXgrE,iCAAmC,SAAA/zE,GAAW,IAClCoT,EAAY,EAAK9U,MAAjB8U,QADiC,EAEP,EAAKvV,MAA/BiQ,EAFiC,EAEjCA,SAAUkmE,EAFuB,EAEvBA,YAEdlmE,IAEAsF,EAAQT,UAAY3S,EAAO6N,QAAUuF,EAAQnX,KAAO+D,EAAOkiB,UACvD8xD,EACA,EAAKz1E,SAAS,CAAEy1E,aAAa,GAAS,WAClCptE,WAAW,WACP,EAAKrI,SAAS,CAAEy1E,aAAa,KAC9B,KAGP,EAAKz1E,SAAS,CAAEy1E,aAAa,IAE1BA,GACP,EAAKz1E,SAAS,CAAEy1E,aAAa,M,EAIrCC,6BAA+B,SAAAj0E,GACtB,EAAKnC,MAAMiQ,UAEhB,EAAKvP,SAAS,CAAEuP,UAAU,K,EAG9B83D,8BAAgC,SAAA5lE,GAAW,IAC/BoT,EAAY,EAAK9U,MAAjB8U,QACSvF,EAA0BuF,EAAnCT,QAAqBuP,EAAc9O,EAAlBnX,GAEjB6R,EAAa9N,EAAb8N,SAEJD,IAAW7N,EAAO6N,QAAUqU,IAAcliB,EAAOkiB,WACjD,EAAK3jB,SAAS,CAAEuP,WAAUkmE,aAAa,K,EAI/CtwD,sB,sCAAwB,WAAMzjB,GAAN,mBAAAqO,EAAA,qDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAGc,EAAKhE,MAArB8lB,YAGJ,EAAKplB,SAAS,CAAEolB,aAAa,KAEvBxgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QACZyqE,EACFtwE,EAAMuD,QAAmC,MAAzBvD,EAAMuD,OAAO0wE,SAAmBj0E,EAAMuD,OAAOsyD,KAAO71D,EAAMuD,OAAOsyD,KAAO,KAE5F,EAAKv3D,SAAS,CACVolB,aAAa,EACb4sD,WACAptE,OACAE,SApBY,yC,wDAyBxBugB,uBAAyB,SAAA3jB,GACjBA,GACAA,EAAM4B,kBAGV,EAAKtD,SAAS,CAAEolB,aAAa,K,EAGjCG,UAAY,SAAA7jB,GACR,KAAI+T,KAAa0yC,cAAcpxC,KAAO,GAAtC,CAEIrV,IACAA,EAAM6B,iBACN7B,EAAM4B,mBALO,IAQTuR,EAAY,EAAK9U,MAAjB8U,QACR,GAAKA,EAAL,CATiB,IAWTT,EAAgBS,EAAhBT,QAAS1W,EAAOmX,EAAPnX,GAEjB6nB,aAAUnR,EAAS1W,M,EAGvBk4E,gBAAkB,SAAAl0E,GAGd,IAAMmgC,EAAY33B,OAAO43B,eAAe0sB,WACxC,GAAK+jB,aAAiB1wC,GAAtB,CAJuB,IAQfhtB,EAAY,EAAK9U,MAAjB8U,QACSvF,EAA0BuF,EAAnCT,QAAqBuP,EAAc9O,EAAlBnX,GAEzB,GAAwC,IAApC+X,KAAa0yC,cAAcpxC,KAA/B,CAEA,IAAMxH,GAAYkG,KAAa0yC,cAAc71C,IAA3B,iBAAyChD,EAAzC,sBAA6DqU,IAC/E6uD,aAAcljE,EAAQqU,EAAWpU,GAEjC7N,EAAM6B,iBACN7B,EAAM4B,qB,mFArHNmS,KAAarL,GAAG,iCAAkCnL,KAAKu2E,kCACvD//D,KAAarL,GAAG,8BAA+BnL,KAAKooE,+BAEpD5xD,KAAarL,GAAG,6BAA8BnL,KAAKy2E,gC,6CAInDjgE,KAAalL,IAAI,iCAAkCtL,KAAKu2E,kCACxD//D,KAAalL,IAAI,8BAA+BtL,KAAKooE,+BAErD5xD,KAAalL,IAAI,6BAA8BtL,KAAKy2E,gC,+BA8G9C,IAAD,EAC8Cz2E,KAAKc,MAAhD8U,EADH,EACGA,QAASlE,EADZ,EACYA,SAAUpQ,EADtB,EACsBA,YAAaE,EADnC,EACmCA,OADnC,EAE+DxB,KAAKK,MAAjE8lB,EAFH,EAEGA,YAAa4sD,EAFhB,EAEgBA,SAAUltE,EAF1B,EAE0BA,IAAKF,EAF/B,EAE+BA,KAAM2K,EAFrC,EAEqCA,SAAUkmE,EAF/C,EAE+CA,YAE5CrhE,EAAgBS,EAAhBT,QAAS1W,EAAOmX,EAAPnX,GAEbiH,EAAQ,GACRrE,EAAY,sBAMhB,OALIqQ,IACAhM,EAAQ,CAAEyJ,MAAOuC,EAASvC,MAAO4I,OAAQrG,EAASqG,OAASzW,GAC3DD,EAAY,cAIZ,oCACI,yBACIA,UAAWiN,IAAWjN,EAAW,CAAE,yBAA0Bm1E,IAAgBlmE,GAAW,CAAE,gBAAiBA,IAC3G7B,QAASzO,KAAK22E,gBACd7vD,cAAe9mB,KAAKkmB,sBACpBxgB,MAAOA,GACP,yBAAKrE,UAAU,sBAAsBrB,KAAKi2E,aAAargE,EAAStU,KAC9DgP,GAAYkmE,IACV,yBAAKn1E,UAAU,wBACX,yBAAKA,UAAU,6BACTiP,GAAY,kBAAC,KAAD,CAAejP,UAAU,8BAKvD,kBAAC,GAAD,CACIgP,OAAQ8E,EACRuP,UAAWjmB,EACXumB,eAAgB,CAAEnf,MAAKF,QACvB+U,KAAMyL,EACNrL,QAAS9a,KAAKomB,uBACd2sD,SAAUA,EACVvxE,OAAQA,S,GAlQJG,IAAMC,YCTxBg1E,I,kNASFC,uBAAyB,WACrB,EAAKp+D,e,mFARL2xB,KAAkBj/B,GAAG,6BAA8BnL,KAAK62E,0B,6CAIxDzsC,KAAkB9+B,IAAI,6BAA8BtL,KAAK62E,0B,+BAOnD,IAAD,EACkB72E,KAAKc,MAApB0mB,EADH,EACGA,KAAMD,EADT,EACSA,KAGRjpB,EADW,IAAIopB,KAAY,IAAPF,GAAasvD,iBAAkB,IAAIpvD,MAAOovD,cAE9D,CACIjvD,IAAK,UACLC,MAAO,OACPC,KAAM,WAEV,CACIF,IAAK,UACLC,MAAO,QAGjB,OACI,yBAAKzmB,UAAU,YACX,yBAAKA,UAAU,oBACX,6BAAM,IAAIqmB,KAAY,IAAPF,GAAaG,mBAAmB,CAACJ,EAAKK,UAAWtpB,U,GA/B9DqD,IAAMC,YA0CbgP,iBAAkBgmE,ICvC3BG,I,kNACF12E,MAAQ,CACJ22E,SAAU,M,EAGdC,eAAiB,SAAAzoB,GACb,EAAKztD,SAAS,CACVi2E,SAAUxoB,K,EAIlB0oB,YAAc,SAAAz0E,GACVA,EAAM4B,kBADa,IAGX8yE,EAAgB,EAAKr2E,MAArBq2E,YACR,IAAKA,EAAa,OAAO,KAJN,IAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA6B,IACtBppD,EAAmBopD,EAAnBppD,eAERY,aAASZ,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAAgC,IACzB7Y,EAAwBiiE,EAAxBjiE,QAASC,EAAegiE,EAAfhiE,WAEjBuP,aAASxP,EAASC,K,wEAMpB,IAAD,EACsBpV,KAAKc,MAAxB0P,EADH,EACGA,EAAG2mE,EADN,EACMA,YAGL96D,GAFerc,KAAKK,MAAlB22E,SAEMK,aAAgBF,EAAa3mE,IAC3B8mE,aAAsBH,IAClC,oCACK3mE,EAAE,cACH,0BAAMnP,UAAU,gBAAgB4Z,IAAKjb,KAAKi3E,kBAMlD,OACI,yBAAK51E,UAAWiN,IAAW,iBAAkB,YACzC,6BAAMkC,EAAE,qBACR,yBAAKnP,UAAU,oBACVmP,EAAE,QAAU,IAeT,uBAAG/B,QAASzO,KAAKk3E,aAAc76D,S,GAvEjC1a,IAAMC,YAmFbgP,iBAAkBmmE,ICrF3BQ,GACF,WAAYC,EAAYC,GAAU,oBAC9Bz3E,KAAKw3E,WAAaA,EAClBx3E,KAAKy3E,QAAUA,GAIjBC,G,4FAeEC,EAAMC,EAAMC,EAAMC,EAAMC,EAAGC,EAAGC,GAC9Bj4E,KAAK23E,KAAOA,EACZ33E,KAAK43E,KAAOA,EACZ53E,KAAK63E,KAAOA,EACZ73E,KAAK83E,KAAOA,EACZ93E,KAAKk4E,SAAWH,EAChB/3E,KAAKmP,MAAQ4oE,EACb/3E,KAAK+X,OAASigE,EACdh4E,KAAKi4E,MAAQA,I,gCAIb,MAAM,QAAN,OAAej4E,KAAK23E,KAApB,kBAAkC33E,KAAK43E,KAAvC,kBAAqD53E,KAAK63E,KAA1D,kBAAwE73E,KAAK83E,KAA7E,sBAA+F93E,KAAKk4E,SAApG,mBAAuHl4E,KAAKmP,MAA5H,oBAA6InP,KAAK+X,OAAlJ,mBAAmK/X,KAAKi4E,MAAxK,4BAAiMj4E,KAAKm4E,eAAtM,4BAAwOn4E,KAAKo4E,oB,KA0atOC,G,WApaX,aAAe,oBACXr4E,KAAKs4E,SAAW,GAChBt4E,KAAKu4E,UAAY,IAAIrlE,IACrBlT,KAAKw4E,aAAe,IACpBx4E,KAAKy4E,YAAa,EAClBz4E,KAAK04E,MAAQ,E,wDAGLvvB,EAAO5qD,EAAOo6E,GAEtB,IADA,IAAIC,EAAM,EACDxlE,EAAI7U,EAAO6U,EAAIulE,EAAKvlE,IACzBwlE,GAAOzvB,EAAM/1C,GAGjB,OAAO,IAAQpT,KAAK04E,MAAQE,I,gCAGtB/qD,EAAUgrD,GAKhB,GAJA74E,KAAKs4E,SAAW,GAChBt4E,KAAKu4E,UAAY,IAAIrlE,IACrBlT,KAAK6tB,SAAWA,EAEXA,EAAL,CAL8B,IAMtB/a,EAAW+a,EAAX/a,OACR,KAAIA,GAAU,GAAd,CAIA9S,KAAK84E,WAAa,EAClB94E,KAAK+4E,YAAc,EAEnB/4E,KAAK04E,MAAQG,EAAe74E,KAAKw4E,aACjCx4E,KAAKw4E,aAAeK,EAEYv5E,KAAK8hE,MAAM,IAAMphE,KAAK04E,OAWtD,IAXA,IACMnlD,EAAYj0B,KAAK8hE,MAAM,IAAMphE,KAAK04E,OAClC3hD,EAAWz3B,KAAK8hE,MAAM,GAAKphE,KAAK04E,OAChCM,EAAgB15E,KAAK8hE,MAAM,GAAKphE,KAAK04E,OACrCO,EAAgB,IAAQj5E,KAAK04E,MAC/BQ,EAAqB,EACrBC,EAAc,GAEdvB,EAAO,EACPwB,GAAY,EAEPhmE,EAAI,EAAGA,EAAIN,EAAQM,IAAK,CAC7B,IAAMwC,EAAUiY,EAASza,GADI,EAEZilE,EAAgBgB,eAAezjE,GAAxCmiE,EAFqB,EAErBA,EAAGC,EAFkB,EAElBA,EAELtmE,EAAW,IAAIgmE,GACrBhmE,EAAS4nE,OAASlmE,IAAMya,EAAS/a,OAAS,EAC1CpB,EAAS0jC,YAAc2iC,EAAIC,EACvBtmE,EAAS0jC,YAAc,IACvB+jC,GAAe,IACRznE,EAAS0jC,YAAc,GAC9B+jC,GAAe,IAEfA,GAAe,IAGnBD,GAAsBxnE,EAAS0jC,YAC3B1jC,EAAS0jC,YAAc,IACvBgkC,GAAY,GAGhBp5E,KAAKu4E,UAAU//D,IAAI5C,EAASlE,GAC5B1R,KAAKs4E,SAAStkE,KAAKtC,GAGvB,IAAM6nE,EAAkBv5E,KAAKw4E,aAAeS,EAG5C,GAFAC,GAA0CpmE,EAErCsmE,GAAyB,IAAXtmE,GAA2B,IAAXA,GAA2B,IAAXA,EA8I5C,CAEH,IADA,IAUI0mE,EACAC,EACAC,EACAC,EAbEC,EAAgB,IAAI9sC,MAAM9sC,KAAKs4E,SAASxlE,QACrCM,EAAI,EAAGA,EAAIN,EAAQM,IAEpBwmE,EAAcxmE,GADd8lE,EAAqB,IACF55E,KAAK+P,IAAI,EAAKrP,KAAKs4E,SAASllE,GAAGgiC,aAE/B91C,KAAKC,IAAI,EAAKS,KAAKs4E,SAASllE,GAAGgiC,aAEtDwkC,EAAcxmE,GAAK9T,KAAK+P,IAAI,OAAS/P,KAAKC,IAAI,IAAKq6E,EAAcxmE,KAOrE,IAAMymE,EAAW,GACjB,IAAKL,EAAY,EAAGA,EAAYI,EAAc9mE,OAAQ0mE,IAClDC,EAAaG,EAAc9mE,OAAS0mE,EAChCA,EAAY,GAAKC,EAAa,GAGlCI,EAAS7lE,KAAK,IAAIujE,GAA4B,CAACiC,EAAWC,GAAa,CAACz5E,KAAK85E,YAAYF,EAAe,EAAGJ,GAAYx5E,KAAK85E,YAAYF,EAAeJ,EAAWI,EAAc9mE,WAGpL,IAAK0mE,EAAY,EAAGA,EAAYI,EAAc9mE,OAAS,EAAG0mE,IACtD,IAAKC,EAAa,EAAGA,EAAaG,EAAc9mE,OAAS0mE,EAAWC,IAChEC,EAAYE,EAAc9mE,OAAS0mE,EAAYC,EAC3CD,EAAY,GAAKC,GAAcP,EAAqB,IAAO,EAAI,IAAMQ,EAAY,GAGrFG,EAAS7lE,KAAK,IAAIujE,GAA4B,CAACiC,EAAWC,EAAYC,GAAY,CAAC15E,KAAK85E,YAAYF,EAAe,EAAGJ,GAAYx5E,KAAK85E,YAAYF,EAAeJ,EAAWA,EAAYC,GAAaz5E,KAAK85E,YAAYF,EAAeJ,EAAYC,EAAYG,EAAc9mE,WAIpR,IAAK0mE,EAAY,EAAGA,EAAYI,EAAc9mE,OAAS,EAAG0mE,IACtD,IAAKC,EAAa,EAAGA,EAAaG,EAAc9mE,OAAS0mE,EAAWC,IAChE,IAAKC,EAAY,EAAGA,EAAYE,EAAc9mE,OAAS0mE,EAAYC,EAAYC,IAC3EC,EAAaC,EAAc9mE,OAAS0mE,EAAYC,EAAaC,EACzDF,EAAY,GAAKC,EAAa,GAAKC,EAAY,GAAKC,EAAa,GAGrEE,EAAS7lE,KAAK,IAAIujE,GAA4B,CAACiC,EAAWC,EAAYC,EAAWC,GAAa,CAAC35E,KAAK85E,YAAYF,EAAe,EAAGJ,GAAYx5E,KAAK85E,YAAYF,EAAeJ,EAAWA,EAAYC,GAAaz5E,KAAK85E,YAAYF,EAAeJ,EAAYC,EAAYD,EAAYC,EAAaC,GAAY15E,KAAK85E,YAAYF,EAAeJ,EAAYC,EAAaC,EAAWE,EAAc9mE,WAQ7Y,IAHA,IAAIinE,EAAU,KACVC,EAAc,EACdC,EAAYj6E,KAAKw4E,aAAe,EAAI,EAC/BplE,EAAI,EAAGA,EAAIymE,EAAS/mE,OAAQM,IAAK,CAItC,IAHA,IAAM8mE,EAAUL,EAASzmE,GACrB2E,EAAS,EACToiE,EAAgBp2E,OAAOq2E,UAClBnrC,EAAI,EAAGA,EAAIirC,EAAQzC,QAAQ3kE,OAAQm8B,IACxCl3B,GAAUmiE,EAAQzC,QAAQxoC,GACtBirC,EAAQzC,QAAQxoC,GAAKkrC,IACrBA,EAAgBD,EAAQzC,QAAQxoC,IAIxC,IAAI+mB,EAAO12D,KAAKqpB,IAAI5Q,EAASkiE,GACzBC,EAAQ1C,WAAW1kE,OAAS,IACxBonE,EAAQ1C,WAAW,GAAK0C,EAAQ1C,WAAW,IAAO0C,EAAQ1C,WAAW1kE,OAAS,GAAKonE,EAAQ1C,WAAW,GAAK0C,EAAQ1C,WAAW,IAAQ0C,EAAQ1C,WAAW1kE,OAAS,GAAKonE,EAAQ1C,WAAW,GAAK0C,EAAQ1C,WAAW,MAClNxhB,GAAQ,KAIZmkB,EAAgBpjD,IAChBi/B,GAAQ,MAGI,OAAZ+jB,GAAoB/jB,EAAOgkB,KAC3BD,EAAUG,EACVF,EAAchkB,GAItB,GAAgB,OAAZ+jB,EACA,OAMJ,IAHA,IAAI/3D,EAAQ,EACRqQ,EAAI,EAECjf,EAAI,EAAGA,EAAI2mE,EAAQvC,WAAW1kE,OAAQM,IAAK,CAChD,IAAIinE,EAAIN,EAAQvC,WAAWpkE,GACvBknE,EAAaP,EAAQtC,QAAQrkE,GAC7BmnE,EAAWv6E,KAAKw4E,aAChBgC,EAAW,KACf5C,EAAOt4E,KAAK+P,IAAIuoE,EAAMyC,EAAI,GAC1B,IAAK,IAAIprC,EAAI,EAAGA,EAAIorC,EAAGprC,IAAK,CACxB,IAAIwrC,EAAQb,EAAc53D,GACtB7S,EAAQ7P,KAAK8hE,MAAMqZ,EAAQH,GAC/BC,GAAYprE,EACZ,IAAIurE,EAAM16E,KAAKs4E,SAASt2D,GACpBi2D,EAAQ,EACF,IAAN7kE,IACA6kE,GAlWE,GAoWF7kE,IAAM2mE,EAAQvC,WAAW1kE,OAAS,IAClCmlE,GApWK,GAsWC,IAANhpC,IACAgpC,GA1WG,GA+WHhpC,IAAMorC,EAAI,IACVpC,GA/WI,EAiXAuC,EAAWE,GAGnBA,EAAIliE,IAAIy2B,EAAGA,EAAG77B,EAAGA,EAAGjE,EAAOmrE,EAAarB,EAAehB,GACvDj2D,IAEJw4D,EAASrrE,OAASorE,EAClBC,EAAStC,UAAYqC,EACrBloD,GAAKioD,EAGTt6E,KAAK84E,WAAa94E,KAAKw4E,aACvBx4E,KAAK+4E,YAAc1mD,EAAI4mD,OAxQvB,OAAQnmE,GACJ,KAAK,EACD,IAAM6nE,EAAY36E,KAAKs4E,SAAS,GAC1BsC,EAAY56E,KAAKs4E,SAAS,GAEhC,GAAoB,OAAhBa,GAAwBD,EAAqB,IAAMK,GAAmBoB,EAAUvlC,YAAcwlC,EAAUxlC,YAAc,GAAK,CAC3H,IAAMr9B,EAASzY,KAAKqF,MAAMrF,KAAKC,IAAIS,KAAKw4E,aAAemC,EAAUvlC,YAAa91C,KAAKC,IAAIS,KAAKw4E,aAAeoC,EAAUxlC,YAAa6jC,EAAgB,KAASA,EAC3J0B,EAAUniE,IAAI,EAAG,EAAG,EAAG,EAAGxY,KAAKw4E,aAAczgE,EAAQ8iE,GACrDD,EAAUpiE,IAAI,EAAG,EAAG,EAAG,EAAGxY,KAAKw4E,aAAczgE,EAAQ8iE,IAErD76E,KAAK84E,WAAa94E,KAAKw4E,aACvBx4E,KAAK+4E,YAAuB,EAAThhE,OAChB,GAAoB,OAAhBohE,GAAwC,OAAhBA,EAAsB,CACrD,IAAMhqE,EAAQnP,KAAKw4E,aAAe,EAC5BzgE,EAASzY,KAAKqF,MAAMrF,KAAKC,IAAI4P,EAAQwrE,EAAUvlC,YAAa91C,KAAKC,IAAI4P,EAAQyrE,EAAUxlC,YAAa6jC,KAAmBA,EAC7H0B,EAAUniE,IAAI,EAAG,EAAG,EAAG,EAAGrJ,EAAO4I,EAAQ8iE,IACzCD,EAAUpiE,IAAI,EAAG,EAAG,EAAG,EAAGrJ,EAAO4I,EAAQ+iE,IACzClD,EAAO,EAEP53E,KAAK84E,WAAa3pE,EAAQA,EAC1BnP,KAAK+4E,YAAchhE,MAChB,CACH,IAAIgjE,EAAcz7E,KAAK+P,IAAI,GAAMrP,KAAKw4E,aAAcl5E,KAAKqF,MAAO3E,KAAKw4E,aAAemC,EAAUvlC,aAAe,EAAMulC,EAAUvlC,YAAc,EAAMwlC,EAAUxlC,eACvJ4lC,EAAah7E,KAAKw4E,aAAeuC,EACrC,GAAIC,EAAajkD,EAAU,CACvB,IAAMi/B,GAAOj/B,EAAWikD,EACxBA,EAAajkD,EACbgkD,GAAe/kB,GAGnB,IAAMj+C,GAASzY,KAAKC,IAAI05E,EAAe35E,KAAKqF,MAAMrF,KAAKC,IAAIy7E,EAAaL,EAAUvlC,YAAa2lC,EAAcH,EAAUxlC,eAAiB6jC,EACxI0B,EAAUniE,IAAI,EAAG,EAAG,EAAG,EAAGwiE,EAAYjjE,GAAQ8iE,IAC9CD,EAAUpiE,IAAI,EAAG,EAAG,EAAG,EAAGuiE,EAAahjE,GAAQ+iE,IAC/ClD,EAAO,EAEP53E,KAAK84E,WAAakC,EAAaD,EAC/B/6E,KAAK+4E,YAAchhE,GAGvB,MAEJ,KAAK,EACD,IAAM4iE,GAAY36E,KAAKs4E,SAAS,GAC1BsC,GAAY56E,KAAKs4E,SAAS,GAC1B2C,GAAYj7E,KAAKs4E,SAAS,GAChC,GAAuB,MAAnBa,EAAY,GAChB,CACI,IAAM+B,GAAc57E,KAAKC,IAAoB,GAAhB05E,EAAqB35E,KAAKqF,MAAMi2E,GAAUxlC,YAAcp1C,KAAKw4E,cAAgByC,GAAU7lC,YAAcwlC,GAAUxlC,eACtI+lC,GAAelC,EAAgBiC,GAC/BE,GAAa97E,KAAK+P,IAAI0nB,EAAUz3B,KAAKC,IAAwB,GAApBS,KAAKw4E,aAAoBl5E,KAAKqF,MAAMrF,KAAKC,IAAI27E,GAAcD,GAAU7lC,YAAa+lC,GAAeP,GAAUxlC,gBAEpJimC,GAAY/7E,KAAKqF,MAAMrF,KAAKC,IAAI05E,EAAgB0B,GAAUvlC,YAAc4jC,EAAeh5E,KAAKw4E,aAAe4C,KACjHT,GAAUniE,IAAI,EAAG,EAAG,EAAG,EAAG6iE,GAAW,EAAKR,IAC1CD,GAAUpiE,IAAI,EAAG,EAAG,EAAG,EAAG4iE,GAAYD,GAAelC,EAAe6B,GACpEG,GAAUziE,IAAI,EAAG,EAAG,EAAG,EAAG4iE,GAAYF,GAAcjC,EAAe6B,IACnEG,GAAU/C,SAAWl4E,KAAKw4E,aAE1BmC,GAAUxC,eAAiB,CAAC+C,GAAcjC,EAAekC,GAAelC,GAKpE2B,GAAU1C,SAAWl4E,KAAKw4E,aAAe6C,GACzCJ,GAAU7C,eAAiBiD,GAE/Br7E,KAAKy4E,YAAa,EAClBb,EAAO,EAEP53E,KAAK84E,WAAauC,GAAYD,GAC9Bp7E,KAAK+4E,YAAc,MAGvB,CACI,IAAMuC,GAAch8E,KAAKqF,MAAMrF,KAAKC,IAAIS,KAAKw4E,aAAemC,GAAUvlC,YAA+B,IAAjB6jC,IAA0BA,EAC9G0B,GAAUniE,IAAI,EAAG,EAAG,EAAG,EAAGxY,KAAKw4E,aAAc8C,GAAaT,GAE1D,IAAM1rE,GAAQnP,KAAKw4E,aAAe,EAC5B2C,GAAe77E,KAAKC,IAAI05E,EAAgBqC,GAAah8E,KAAKqF,MAAMrF,KAAKC,IAAI4P,GAAQyrE,GAAUxlC,YAAajmC,GAAQ8rE,GAAU7lC,eAAiB6jC,EACjJ2B,GAAUpiE,IAAI,EAAG,EAAG,EAAG,EAAGrJ,GAAOgsE,GAAcN,GAC/CI,GAAUziE,IAAI,EAAG,EAAG,EAAG,EAAGrJ,GAAOgsE,GAAcL,IAC/ClD,EAAO,EAEP53E,KAAK84E,WAAa94E,KAAKw4E,aACvBx4E,KAAK+4E,YAAcuC,GAAcH,GAGrC,MAEJ,KAAK,EACD,IAAMR,GAAY36E,KAAKs4E,SAAS,GAC1BsC,GAAY56E,KAAKs4E,SAAS,GAC1B2C,GAAYj7E,KAAKs4E,SAAS,GAC1BiD,GAAYv7E,KAAKs4E,SAAS,GAChC,GAAuB,MAAnBa,EAAY,GAAY,CACxB,IAAMqC,GAAKl8E,KAAKqF,MAAMrF,KAAKC,IAAIS,KAAKw4E,aAAemC,GAAUvlC,YAA6B,IAAhB6jC,IAAyBA,EACnG0B,GAAUniE,IAAI,EAAG,EAAG,EAAG,EAAGxY,KAAKw4E,aAAcgD,GAAIX,GAE7C7C,EAAI14E,KAAKqF,MAAM3E,KAAKw4E,cAAgBoC,GAAUxlC,YAAc6lC,GAAU7lC,YAAcmmC,GAAUnmC,cAAlG,IACMqmC,GAAKn8E,KAAK+P,IAAI0nB,EAAUz3B,KAAKC,IAAwB,GAApBS,KAAKw4E,aAAoBR,EAAI4C,GAAUxlC,cACxEsmC,GAAKp8E,KAAK+P,IAAI/P,KAAK+P,IAAI0nB,EAA8B,IAApB/2B,KAAKw4E,cAAsBR,EAAIuD,GAAUnmC,aAC1EumC,GAAK37E,KAAKw4E,aAAeiD,GAAKC,GACpC1D,EAAI14E,KAAKC,IAAI05E,EAAgBuC,GAAIxD,GACjCA,GAAKiB,EACL2B,GAAUpiE,IAAI,EAAG,EAAG,EAAG,EAAGijE,GAAIzD,EAAG6C,GACjCI,GAAUziE,IAAI,EAAG,EAAG,EAAG,EAAGmjE,GAAI3D,EA3NzB,GA4NLuD,GAAU/iE,IAAI,EAAG,EAAG,EAAG,EAAGkjE,GAAI1D,EAAG8C,IACjClD,EAAO,EAEP53E,KAAK84E,WAAa94E,KAAKw4E,aACvBx4E,KAAK+4E,YAAcyC,GAAKxD,MACrB,CACGD,EAAIz4E,KAAK+P,IAAI0nB,EAAUz3B,KAAKqF,MAAMs0E,GAAiB,EAAM2B,GAAUxlC,YAAc,EAAM6lC,GAAU7lC,YAAc,EAAMmmC,GAAUnmC,eAArI,IACMomC,GAAKl8E,KAAKC,IAAI,IAAMD,KAAK+P,IAAIkkB,EAAWwkD,EAAI6C,GAAUxlC,aAAe6jC,GACrE2C,GAAKt8E,KAAKC,IAAI,IAAMD,KAAK+P,IAAIkkB,EAAWwkD,EAAIkD,GAAU7lC,aAAe6jC,GACrE4C,GAAK,EAAML,GAAKI,GAChBH,GAAKn8E,KAAKqF,MAAMrF,KAAKC,IAAI05E,EAAgB0B,GAAUvlC,YAAc4jC,EAAeh5E,KAAKw4E,aAAeT,IAE1G4C,GAAUniE,IAAI,EAAG,EAAG,EAAG,EAAGijE,GAAID,GAAKI,GAAKC,GAAIhB,IAC5CD,GAAUpiE,IAAI,EAAG,EAAG,EAAG,EAAGu/D,EAAGyD,GAAIV,GACjCG,GAAUziE,IAAI,EAAG,EAAG,EAAG,EAAGu/D,EAAG6D,GA5OzB,GA6OJX,GAAU/C,SAAWl4E,KAAKw4E,aAC1B+C,GAAU/iE,IAAI,EAAG,EAAG,EAAG,EAAGu/D,EAAG8D,GAAIf,IACjCS,GAAUrD,SAAWl4E,KAAKw4E,aAKtBoC,GAAU1C,SAAWl4E,KAAKw4E,aAAeiD,GACzCR,GAAU7C,eAAiBqD,GAC3BF,GAAUnD,eAAiBqD,GAE/Bd,GAAUxC,eAAiB,CAAEqD,GAAII,GAAIC,IACrC77E,KAAKy4E,YAAa,EAClBb,EAAO,EAEP53E,KAAK84E,WAAaf,EAAI0D,GACtBz7E,KAAK+4E,YAAcyC,GAAKI,GAAKC,U,sCAoI3BjmE,GAClB,IAAImiE,EAAI,EACJC,EAAI,EACJphE,EAAQ,GACZ,OAAQhB,EAAQc,QAAQ,UACpB,IAAK,eAAiB,IAAD,EACgBd,EAAQc,QAAjCC,EADS,EACTA,MAAO4P,EADE,EACFA,cACX5P,EACAC,EAAQD,EAAMC,MACP2P,GACP3P,EAAM5C,KAAKuS,GAGf,MAEJ,IAAK,eAAiB,IAAD,EAC2B3Q,EAAQc,QAA5CzT,EADS,EACTA,MAAO+U,EADE,EACFA,UAAWuO,EADT,EACSA,cAC1B,GAAItjB,EAAO,CAAC,IACAkM,EAAkBlM,EAAlBkM,MAAO4I,EAAW9U,EAAX8U,OACfnB,EAAM5C,KAAK,CAAE7E,QAAO4I,gBACbwO,EACP3P,EAAM5C,KAAKuS,GACJvO,GACPpB,EAAM5C,KAAKgE,GAGf,MAEJ,IAAK,kBAAoB,IAAD,EACiBpC,EAAQc,QAArCsB,EADY,EACZA,UAAWuO,EADC,EACDA,cACfA,EACA3P,EAAM5C,KAAKuS,GACJvO,EACPpB,EAAM5C,KAAKgE,GAEXpB,EAAM5C,KAAK,CAAE7E,MAAO,GAAI4I,OAAQ,KAO5C,IAAMiO,EAAYqyD,EAAgBpuD,aAAarT,EAAO,MAMtD,OALIoP,IACA+xD,EAAI/xD,EAAU7W,MACd6oE,EAAIhyD,EAAUjO,QAGX,CAAEggE,IAAGC,O,mCAGIphE,EAAOklE,EAAMC,GAC7B,IAAKnlE,IAAUA,EAAM9D,OAAQ,OAAO,KAIpC,IAFA,IAAIkpE,EAAW,EACXC,EAAW,KACN7oE,EAAI,EAAGA,EAAIwD,EAAM9D,OAAQM,IAAK,CAAC,IAAD,EACHwD,EAAMxD,GAAvB2kE,EADoB,EAC3B5oE,MAAkB6oE,EADS,EACjBjgE,OAElB,GAAIgkE,EAAW,CACX,IAAMG,EAAclE,GAAKD,EAAIA,EAAIC,IAC5BiE,GAAaH,EAAO,KAAOA,EAAOE,GAAYA,EAAWE,KAC1DF,EAAWE,EACXD,EAAWrlE,EAAMxD,QAGlB,CACH,IAAM8oE,EAAcnE,GAAKC,EAAID,EAAIC,IAC5BiE,GAAaH,EAAO,KAAOI,GAAeJ,GAAQE,EAAWE,KAC9DF,EAAWE,EACXD,EAAWrlE,EAAMxD,KAK7B,OAAO6oE,M,YCrcArrE,qBANf,SAAyB9P,GAAQ,IACrB0P,EAAM1P,EAAN0P,EAER,OAAO,yBAAKnP,UAAU,oBAAoBmP,EAAE,qB,OCejC2rE,OAjBf,SAAmBr7E,GAAQ,IACfs/B,EAA8Bt/B,EAA9Bs/B,OAAQ8E,EAAsBpkC,EAAtBokC,MAAO9mB,EAAetd,EAAfsd,IAAK1Y,EAAU5E,EAAV4E,MAE5B,OACI,yBACIrE,UAAWiN,IACP,YACA,CAAE,cAAe8xB,GACjB,CAAE,aAAc8E,GAChB,CAAE,WAAY9mB,IAElB1Y,MAAOA,KCOb02E,I,kNACF/7E,MAAQ,G,EAyDRk2E,iCAAmC,SAAA/zE,GAAW,IAAD,EACV,EAAK1B,MAA5BuP,EADiC,EACjCA,OAAQ2E,EADyB,EACzBA,WADyB,EAEP,EAAK3U,MAA/BiQ,EAFiC,EAEjCA,SAAUkmE,EAFuB,EAEvBA,YAEdlmE,IAEAD,IAAW7N,EAAO6N,QAAU2E,EAAW+W,KAAK,SAAA7sB,GAAC,OAAIA,IAAMsD,EAAOkiB,YAC1D8xD,EACA,EAAKz1E,SAAS,CAAEy1E,aAAa,EAAO6F,iBAAiB,GAAS,WAC1DjzE,WAAW,WACP,EAAKrI,SAAS,CAAEy1E,aAAa,EAAM6F,gBAAiBrnE,EAAWlC,OAAS,GAAKkC,EAAWA,EAAWlC,OAAS,KAAOtQ,EAAOkiB,aAC3H,KAGP,EAAK3jB,SAAS,CAAEy1E,aAAa,EAAM6F,gBAAiBrnE,EAAWlC,OAAS,GAAKkC,EAAWA,EAAWlC,OAAS,KAAOtQ,EAAOkiB,YAEvH8xD,GACP,EAAKz1E,SAAS,CAAEy1E,aAAa,EAAO6F,iBAAiB,M,EAI7DjU,8BAAgC,SAAA5lE,GAAW,IAAD,EACP,EAAK1B,MAA5BuP,EAD8B,EAC9BA,OAAQ2E,EADsB,EACtBA,WACKxS,EAAb8N,SAEJD,IAAW7N,EAAO6N,QAAU2E,EAAW+W,KAAK,SAAA7sB,GAAC,OAAIA,IAAMsD,EAAOkiB,aAC9D,EAAK3jB,SAAS,CAAEuP,SAAU0E,EAAW/V,MAAM,SAAAC,GAAC,OAAIsX,KAAa+9D,mBAAmBlkE,EAAQnR,Q,EAIhGu3E,6BAA+B,SAAAj0E,GACtB,EAAKnC,MAAMiQ,UAEhB,EAAKvP,SAAS,CAAEuP,UAAU,K,EAG9BoQ,uBAAyB,SAAAle,GAAW,IACxB2S,EAAwB3S,EAAxB2S,QAASC,EAAe5S,EAAf4S,WADc,EAEa,EAAKtU,MAAzCuP,EAFuB,EAEvBA,OAAQ2E,EAFe,EAEfA,WAAY1T,EAFG,EAEHA,YACNg7E,EAAoB,EAAKj8E,MAAvCk8E,aAER,GAAIlsE,IAAW8E,GACVH,EAAW+W,KAAK,SAAA7sB,GAAC,OAAIA,IAAMkW,IAAhC,CAEA,IAAMonE,EAAU,IAAInE,GACpBmE,EAAQC,UAAUznE,EAAWT,IAAI,SAAArV,GAAC,OAAIsX,KAAavM,IAAIoG,EAAQnR,KAAKoC,GAE/C,OACAg7E,EACjB,EAAKv7E,SAAS,CAAEw7E,aAFC,KAEaC,YAE9B,EAAKz7E,SAAS,CAAEy7E,c,EAIxB7F,gBAAkB,WAGd,IAAM/zC,EAAY33B,OAAO43B,eAAe0sB,WACxC,GAAK+jB,aAAiB1wC,GAAtB,CAJoB,MAQW,EAAK9hC,MAA5BuP,EARY,EAQZA,OAAQ2E,EARI,EAQJA,WAGhB,GAFqB,EAAK3U,MAAlBiQ,SAGJ,IAAK,IAAI8C,EAAI,EAAGA,EAAI4B,EAAWlC,OAAQM,IACnCmgE,aAAcljE,EAAQ2E,EAAW5B,IAAI,QAGzC,IAAK,IAAIA,EAAI,EAAGA,EAAI4B,EAAWlC,OAAQM,IACnCmgE,aAAcljE,EAAQ2E,EAAW5B,IAAI,K,qFA/H3B2I,EAAWC,EAAWqK,GAAc,IAC9CrR,EAAehV,KAAKc,MAApBkU,WAD6C,EAELhV,KAAKK,MAA7Ck8E,EAF6C,EAE7CA,aAAcjsE,EAF+B,EAE/BA,SAAUkmE,EAFqB,EAErBA,YAEhC,OAAKT,YAAmBh6D,EAAU/G,WAAYA,KAI1CgH,EAAUugE,eAAiBA,IAI3BvgE,EAAU1L,WAAaA,GAIvB0L,EAAUw6D,cAAgBA,M,0CAwB9BhgE,KAAarL,GAAG,iCAAkCnL,KAAKu2E,kCACvD//D,KAAarL,GAAG,8BAA+BnL,KAAKooE,+BAEpD5xD,KAAarL,GAAG,6BAA8BnL,KAAKy2E,8BACnDjgE,KAAarL,GAAG,uBAAwBnL,KAAK0gB,0B,6CAI7ClK,KAAalL,IAAI,iCAAkCtL,KAAKu2E,kCACxD//D,KAAalL,IAAI,8BAA+BtL,KAAKooE,+BAErD5xD,KAAalL,IAAI,6BAA8BtL,KAAKy2E,8BACpDjgE,KAAalL,IAAI,uBAAwBtL,KAAK0gB,0B,+BAgFxC,IAAD,EACsB1gB,KAAKc,MAA1B47E,EADD,EACCA,SAAUl7E,EADX,EACWA,OADX,EAE6FxB,KAAKc,MAA/FuP,EAFH,EAEGA,OAAQ2E,EAFX,EAEWA,WAAY1T,EAFvB,EAEuBA,YAAaq7E,EAFpC,EAEoCA,oBAAqBt+D,EAFzD,EAEyDA,UAAW2lC,EAFpE,EAEoEA,SAFpE,KAE8ExzC,EAU/ExQ,KAAKK,OARLk8E,EAJC,EAIDA,aACAjsE,EALC,EAKDA,SAEAwsC,GAPC,EAMD05B,YANC,EAOD15B,OAMI0/B,GAbH,EAQDzJ,SARC,EASD5sD,YATC,EAUDxgB,KAVC,EAWDE,IAEgB7F,KAAKK,MAAjBm8E,SACR,IAAKA,EACD,OAAO,KAGX,IAAKxnE,EAAWlC,OACZ,OAAO,KAGX,IAAI4R,EAAY1P,EAAWA,EAAWlC,OAAS,GACzC8C,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,gDAgBrB,IAxCK,IA0BGc,EAA0Ed,EAA1Ec,QAASynB,EAAiEvoB,EAAjEuoB,YAAa3W,EAAoD5R,EAApD4R,KAAMjQ,EAA8C3B,EAA9C2B,oBAAqBqlE,EAAyBhnE,EAAzBgnE,aAAczxD,EAAWvV,EAAXuV,OAEjEmqD,EAAan3C,IAAgBvf,YAAcvO,GAE3C6lE,EACF,kBAAC,GAAD,CACI70E,UAAU,cACVsB,IAAG,UAAK0N,EAAL,YAAeqU,EAAf,SACHrU,OAAQA,EACR2E,WAAYA,IAGdgU,EAAUmtD,aAAWvgE,GACvBrK,EAAO,KACF6H,EAAI,EAAGA,EAAI4B,EAAWlC,OAAQM,IAAK,CACxC,IAAMypE,EAAIrmE,KAAavM,IAAIoG,EAAQ2E,EAAW5B,IACxC5C,EAAIy+C,aAAQ4tB,EAAK7zD,EAAU,KAAOktD,EAAY1lE,GACpD,GAAIA,GAAKA,EAAEsC,OAAQ,CACf,GAAa,OAATvH,EAAe,CACfA,EAAO,KACP,MAEAA,EAAOiF,EACPkU,EAAY1P,EAAW5B,IAInC,IAAM0pE,EAAsB,OAATvxE,GAAiBA,EAAKuH,OAAS,EAC5CiqE,EACF,kBAAC,GAAD,CACI17E,UAAWiN,IAAW,YAAa,CAC/B,eAAgBwuE,IAEpBzsE,OAAQA,EACR2E,WAAYA,EACZqgE,YAAar1E,KAAKg9E,kBAIpBC,EAAcC,aAAmB7sE,EAAQqU,GACzCy4D,EAAY10D,QAAQlR,GACpB6lE,EAAgBz+D,aAActO,MAAakO,aAASlO,KAAYilE,GAChE+H,GAAaD,GAAiB/+D,GAAc4+D,GAAeE,EAE3DG,EAAY1+D,YAAcvO,GAC1BktE,EAAY5+D,aAActO,GAM5Bi+B,EAAO,KACX,GAAIouC,EACA,GAAIn+D,aAASlO,IAAWusE,EACpB,OAAQA,EAAaxF,OAAO,UACxB,IAAK,iCACD9oC,EAAO,kBAACC,GAAA,EAAD,CAAUrJ,OAAK,EAACmR,UAAWumC,EAAaxF,OAAOoG,YAAajtE,SAAUvQ,KAAKy9E,mBAClF,MAEJ,IAAK,2BACDnvC,EAAO,kBAACC,GAAA,EAAD,CAAUrJ,OAAK,EAACtV,OAAQgtD,EAAaxF,OAAOppD,eAAgBzd,SAAUvQ,KAAKy9E,mBAClF,MAEJ,IAAK,8BACDnvC,EAAO,kBAAC39B,EAAA,EAAD,CAAUu0B,OAAK,EAAC70B,OAAQusE,EAAaxF,OAAOjiE,QAAS5E,SAAUvQ,KAAK09E,wBAKnFpvC,EADOivC,EACA,kBAAC,GAAD,CAAWr4C,OAAK,IAChBo4C,EACA,kBAAC,GAAD,CAAWp4C,OAAK,IAChB/G,EACA,kBAAC,GAAD,CAAW+G,OAAK,IAChB/Z,EAAOjX,QACP,kBAACq6B,GAAA,EAAD,CAAUrJ,OAAK,EAACtV,OAAQzE,EAAOjX,QAAS3D,SAAUvQ,KAAKy9E,mBAEvD,kBAAC9sE,EAAA,EAAD,CAAUu0B,OAAK,EAAC70B,OAAQA,EAAQE,SAAUvQ,KAAK09E,mBAI9D,IAAMh4E,EAAQ,CAAEyJ,MAAOqtE,EAAQ1D,WAAa,EAAI,GAC1C6E,EAAkC,mBAArBjnE,EAAQ,UAAsD,qBAArBA,EAAQ,SAC9DknE,GAAed,IAAoC,qBAArBpmE,EAAQ,UAAwD,iBAArBA,EAAQ,UAAoD,iBAArBA,EAAQ,UAExHoV,EAAQ0wD,EAAQ3uD,SAAStZ,IAAI,SAAArV,GAAC,OAChC,kBAAC,GAAD,CACIyD,IAAKzD,EAAET,GACPmX,QAAS1W,EACTwS,SAAU8qE,EAAQjE,UAAUtuE,IAAI/K,GAChCoC,YAAaA,EACbE,OAAQA,MAGhB,OACI,6BACKwiD,GAAY,kBAAC,GAAD,CAASx8B,KAAMA,IAC5B,yBACInmB,UAAWiN,IAAW,UAAW,gBAAiB,CAC9C,kBAAmB+P,GAAaq+D,GAAYkB,EAC5C,iBAAkBtvC,EAClB,cAAegnC,EACf,mBAAoBhlE,EAEpB,sBAAuB+N,IAAcq+D,EACrC,iBAAkBr+D,IAAcq+D,EAChC,sBAAuBr+D,GAAaq+D,IAAakB,EACjD,8BAA+Bv/D,GAAaq+D,GAAYkB,EACxD,yBAA0BD,IAE9BE,YAAa79E,KAAKiJ,gBAClB60E,WAAY99E,KAAK+9E,eACjBxvE,YAAavO,KAAKuI,gBAClBkG,QAASzO,KAAK22E,gBACdqH,eAAgBh+E,KAAKi+E,mBACrBn3D,cAAe9mB,KAAKkmB,uBACnBy2D,GAAuB,kBAAC,GAAD,MACxB,yBAAKt7E,UAAU,gBACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAeA,UAAU,yBAE7B,yBAAKA,UAAWiN,IAAW,kBAAmB,CAAE,MAASwuC,KACpDxO,EACD,yBACIjtC,UAAWiN,IACP,kBAAmB,CACnB,iBAAkBqvE,EAClB,qBAAsBA,GAAcrI,IAExC5vE,MAAOA,GACNi4E,IAAgBt/D,IAAc++D,GAAkBH,IAC7C,yBAAK57E,UAAU,iBACVgd,IAAc4+D,GACX,kBAAC3xD,GAAA,EAAD,CAAeH,OAAQA,EAAQgsD,YAAayF,EAAcj4D,UAAQ,EAACiK,UAAQ,IAE9EquD,GAAe,kBAAC,GAAD,CAAS9F,YAAayF,KAG7CO,GACG,kBAAC,GAAD,CACI9sE,OAAQA,EACRqU,UAAWnN,EACX9I,QAASzO,KAAKk+E,mBAGtB,yBAAK78E,UAAWiN,IACZ,QACA,CAAE,gBAAiBwuE,GACnB,CAAE,cAAeO,KAEjB,yBAAKh8E,UAAU,gBAAgBqE,MAAO,CAAEyJ,MAAOqtE,EAAQ1D,aAClDhtD,IAGT,yBACIzqB,UAAWiN,IAAW,eAAgB,CAClC,sBAAwC,IAAjBiuE,EACvB,sBAAwC,IAAjBA,EACvB,sBAAwC,IAAjBA,KAE1BhxE,GAEJoyE,GAAcZ,GAEnB,yBAAK17E,UAAU,0BAEnB,yBAAKA,UAAU,0B,gDA7SHP,EAAOT,GAAQ,IACnCiB,EAAoCR,EAApCQ,YAAa+O,EAAuBvP,EAAvBuP,OAAQ2E,EAAelU,EAAfkU,WAE7B,GAAIA,IAAe3U,EAAMy1E,eAAgB,CACrC,IAAM0G,EAAU,IAAInE,GAGpB,OAFAmE,EAAQC,UAAUznE,EAAWT,IAAI,SAAArV,GAAC,OAAIsX,KAAavM,IAAIoG,EAAQnR,KAAKoC,GAE7D,CACHk7E,UACA1G,eAAgB9gE,GAIxB,OAAO,S,GAvCKrT,IAAMC,YAyV1Bw6E,GAAM9/D,aAAe,CACjBhb,YAAa68E,IACb9/D,WAAW,EACXq+D,UAAU,EACVC,qBAAqB,EACrByB,UAAU,GAGChC,UClWTiC,I,kNACFh+E,MAAQ,G,EA8DRk2E,iCAAmC,SAAA/zE,GAAW,IAAD,EACV,EAAK1B,MAA5BuP,EADiC,EACjCA,OAAQ2E,EADyB,EACzBA,WADyB,EAEP,EAAK3U,MAA/BiQ,EAFiC,EAEjCA,SAAUkmE,EAFuB,EAEvBA,YAEdlmE,IAEAD,IAAW7N,EAAO6N,QAAU2E,EAAW+W,KAAK,SAAA7sB,GAAC,OAAIA,IAAMsD,EAAOkiB,YAC1D8xD,EACA,EAAKz1E,SAAS,CAAEy1E,aAAa,EAAO6F,iBAAiB,GAAS,WAC1DjzE,WAAW,WACP,EAAKrI,SAAS,CAAEy1E,aAAa,EAAM6F,gBAAiBrnE,EAAWlC,OAAS,GAAKkC,EAAWA,EAAWlC,OAAS,KAAOtQ,EAAOkiB,aAC3H,KAGP,EAAK3jB,SAAS,CAAEy1E,aAAa,EAAM6F,gBAAiBrnE,EAAWlC,OAAS,GAAKkC,EAAWA,EAAWlC,OAAS,KAAOtQ,EAAOkiB,YAEvH8xD,GACP,EAAKz1E,SAAS,CAAEy1E,aAAa,EAAO6F,iBAAiB,M,EAI7DjU,8BAAgC,SAAA5lE,GAAW,IAAD,EACP,EAAK1B,MAA5BuP,EAD8B,EAC9BA,OAAQ2E,EADsB,EACtBA,WACKxS,EAAb8N,SAEJD,IAAW7N,EAAO6N,QAAU2E,EAAW+W,KAAK,SAAA7sB,GAAC,OAAIA,IAAMsD,EAAOkiB,aAC9D,EAAK3jB,SAAS,CACVuP,SAAU0E,EAAW/V,MAAM,SAAAC,GAAC,OAAIsX,KAAa+9D,mBAAmBlkE,EAAQnR,KACxEo/E,aAActpE,EAAWlC,OAAS,GAAK0D,KAAa+9D,mBAAmBlkE,EAAQ2E,EAAWA,EAAWlC,OAAS,O,EAK1H2jE,6BAA+B,SAAAj0E,GAC3B,EAAKzB,SAAS,CAAEuP,UAAU,EAAOguE,cAAc,K,EAGnD59D,uBAAyB,SAAAle,GAAW,IACxB2S,EAAwB3S,EAAxB2S,QAASC,EAAe5S,EAAf4S,WADc,EAEa,EAAKtU,MAAzCuP,EAFuB,EAEvBA,OAAQ2E,EAFe,EAEfA,WACMsnE,GAHS,EAEHh7E,YACc,EAAKjB,MAAvCk8E,cAER,GAAIlsE,IAAW8E,GACVH,EAAW+W,KAAK,SAAA7sB,GAAC,OAAIA,IAAMkW,IAAhC,CAEqB,OACAknE,EACjB,EAAKv7E,SAAS,CAAEw7E,aAFC,OAIjB,EAAK9jE,gB,EAIbk+D,gBAAkB,WAGd,IAAM/zC,EAAY33B,OAAO43B,eAAe0sB,WACxC,GAAK+jB,aAAiB1wC,GAAtB,CAJoB,MAQW,EAAK9hC,MAA5BuP,EARY,EAQZA,OAAQ2E,EARI,EAQJA,WAGhB,GAFqB,EAAK3U,MAAlBiQ,SAGJ,IAAK,IAAI8C,EAAI,EAAGA,EAAI4B,EAAWlC,OAAQM,IACnCmgE,aAAcljE,EAAQ2E,EAAW5B,IAAI,QAGzC,IAAK,IAAIA,EAAI,EAAGA,EAAI4B,EAAWlC,OAAQM,IACnCmgE,aAAcljE,EAAQ2E,EAAW5B,IAAI,K,qFAlI3B2I,EAAWC,EAAWqK,GAAc,IAC9CrR,EAAehV,KAAKc,MAApBkU,WAD6C,EAE0BhV,KAAKK,MAA5Ek8E,EAF6C,EAE7CA,aAAc+B,EAF+B,EAE/BA,aAAchuE,EAFiB,EAEjBA,SAAU+rE,EAFO,EAEPA,gBAAiB7F,EAFV,EAEUA,YAE/D,OAAKT,YAAmBh6D,EAAU/G,WAAYA,KAI1CgH,EAAUugE,eAAiBA,IAI3BvgE,EAAU1L,WAAaA,IAIvB0L,EAAUsiE,eAAiBA,IAI3BtiE,EAAUw6D,cAAgBA,GAI1Bx6D,EAAUqgE,kBAAoBA,Q,0CAqBlC7lE,KAAarL,GAAG,iCAAkCnL,KAAKu2E,kCACvD//D,KAAarL,GAAG,8BAA+BnL,KAAKooE,+BAEpD5xD,KAAarL,GAAG,6BAA8BnL,KAAKy2E,8BACnDjgE,KAAarL,GAAG,uBAAwBnL,KAAK0gB,0B,6CAI7ClK,KAAalL,IAAI,iCAAkCtL,KAAKu2E,kCACxD//D,KAAalL,IAAI,8BAA+BtL,KAAKooE,+BAErD5xD,KAAalL,IAAI,6BAA8BtL,KAAKy2E,8BACpDjgE,KAAalL,IAAI,uBAAwBtL,KAAK0gB,0B,+BA8ExC,IAAD,EACsB1gB,KAAKc,MAA1B47E,EADD,EACCA,SAAUl7E,EADX,EACWA,OADX,EAE6FxB,KAAKc,MAA/FuP,EAFH,EAEGA,OAAQ2E,EAFX,EAEWA,WAAY1T,EAFvB,EAEuBA,YAAaq7E,EAFpC,EAEoCA,oBAAqBt+D,EAFzD,EAEyDA,UAAW2lC,EAFpE,EAEoEA,SAFpE,KAE8ExzC,EAY/ExQ,KAAKK,OATLiQ,GALC,EAIDisE,aAJC,EAKDjsE,UACAguE,EANC,EAMDA,aAEAjC,GARC,EAOD7F,YAPC,EAQD6F,iBACAv/B,EATC,EASDA,MATC,EAUDi2B,SAVC,EAWD5sD,YAXC,EAYDxgB,KAZC,EAaDE,IAGJ,IAAKmP,EAAWlC,OACZ,OAAO,KAGX,IAAI4R,EAAY1P,EAAWA,EAAWlC,OAAS,GACzC8C,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,gDAgBrB,IAtCK,IAwBGc,EAA0Ed,EAA1Ec,QAASynB,EAAiEvoB,EAAjEuoB,YAAa3W,EAAoD5R,EAApD4R,KAAMjQ,EAA8C3B,EAA9C2B,oBAAqBqlE,EAAyBhnE,EAAzBgnE,aAAczxD,EAAWvV,EAAXuV,OAEjEmqD,EAAan3C,IAAgBvf,YAAcvO,GAE3C6lE,EACF,kBAAC,GAAD,CACI70E,UAAU,cACVsB,IAAG,UAAK0N,EAAL,YAAeqU,EAAf,SACHrU,OAAQA,EACR2E,WAAYA,IAGdgU,EAAUmtD,aAAWvgE,GACvBrK,EAAO,KACF6H,EAAI,EAAGA,EAAI4B,EAAWlC,OAAQM,IAAK,CACxC,IAAMypE,EAAIrmE,KAAavM,IAAIoG,EAAQ2E,EAAW5B,IACxC5C,EAAIy+C,aAAQ4tB,EAAK7zD,EAAU,KAAOktD,EAAY1lE,GACpD,GAAIA,GAAKA,EAAEsC,OAAQ,CACf,GAAa,OAATvH,EAAe,CACfA,EAAO,KACP,MAEAA,EAAOiF,EACPkU,EAAY1P,EAAW5B,IAInC,IAAM0pE,EAAsB,OAATvxE,GAAiBA,EAAKuH,OAAS,EAC5CiqE,EACF,kBAAC,GAAD,CACI17E,UAAWiN,IAAW,YAAa,CAC/B,eAAe,IAEnB+B,OAAQA,EACR2E,WAAYA,EACZqgE,YAAar1E,KAAKg9E,kBAIpBC,EAAcC,aAAmB7sE,EAAQqU,GACzCy4D,EAAY10D,QAAQlR,GACpB6lE,EAAgBz+D,aAActO,MAAakO,aAASlO,KAAYilE,GAChE+H,GAAaD,GAAiB/+D,GAAc4+D,GAAeE,EAE3DG,EAAY1+D,YAAcvO,GAC1BktE,EAAY5+D,aAActO,GAM5Bi+B,EAAO,KACX,GAAIouC,EACA,GAAIn+D,aAASlO,IAAWusE,EACpB,OAAQA,EAAaxF,OAAO,UACxB,IAAK,iCACD9oC,EAAO,kBAACC,GAAA,EAAD,CAAUrJ,OAAK,EAACmR,UAAWumC,EAAaxF,OAAOoG,YAAajtE,SAAUvQ,KAAKy9E,mBAClF,MAEJ,IAAK,2BACDnvC,EAAO,kBAACC,GAAA,EAAD,CAAUrJ,OAAK,EAACtV,OAAQgtD,EAAaxF,OAAOppD,eAAgBzd,SAAUvQ,KAAKy9E,mBAClF,MAEJ,IAAK,8BACDnvC,EAAO,kBAAC39B,EAAA,EAAD,CAAUu0B,OAAK,EAAC70B,OAAQusE,EAAaxF,OAAOjiE,QAAS5E,SAAUvQ,KAAK09E,wBAKnFpvC,EADOivC,EACA,kBAAC,GAAD,CAAWr4C,OAAK,IAChBo4C,EACA,kBAAC,GAAD,CAAWp4C,OAAK,IAChB/G,EACA,kBAAC,GAAD,CAAW+G,OAAK,IAChB/Z,EAAOjX,QACP,kBAACq6B,GAAA,EAAD,CAAUrJ,OAAK,EAACtV,OAAQzE,EAAOjX,QAAS3D,SAAUvQ,KAAKy9E,mBAEvD,kBAAC9sE,EAAA,EAAD,CAAUu0B,OAAK,EAAC70B,OAAQA,EAAQE,SAAUvQ,KAAK09E,mBAI9D,IACMC,EAAkC,mBAArBjnE,EAAQ,UAAsD,qBAArBA,EAAQ,SAC9DknE,GAAed,IAAoC,qBAArBpmE,EAAQ,UAAwD,iBAArBA,EAAQ,UAAoD,iBAArBA,EAAQ,UAExHoV,EAAQ9W,EAAWT,IAAI,SAAArV,GAAC,OAAIsX,KAAavM,IAAIoG,EAAQnR,KAAIqV,IAAI,SAAAsoE,GAAC,OAChE,kBAAC,GAAD,CACIl6E,IAAKk6E,EAAEp+E,GACPmX,QAASinE,EACTnrE,SAAU,KACVpQ,YAAaA,EACbE,OAAQA,MAGhB,OACI,6BACKwiD,GAAY,kBAAC,GAAD,CAASx8B,KAAMA,IAC5B,yBACInmB,UAAWiN,IAAW,UAAW,gBAAiB,yBAA0B,CACxE,kBAAmB+P,GAAaq+D,GAAYkB,EAC5C,iBAAkBtvC,EAClB,cAAegnC,EACf,mBAAoBhlE,EACpB,8BAA+BguE,EAE/B,iCAAkCjC,IAAoB/rE,EACtD,sBAAuB+N,IAAcq+D,EACrC,iBAAkBr+D,IAAcq+D,EAChC,sBAAuBr+D,GAAaq+D,IAAakB,EACjD,8BAA+Bv/D,GAAaq+D,GAAYkB,EACxD,yBAA0BD,IAE9BE,YAAa79E,KAAKiJ,gBAClB60E,WAAY99E,KAAK+9E,eACjBxvE,YAAavO,KAAKuI,gBAClBkG,QAASzO,KAAK22E,gBACdqH,eAAgBh+E,KAAKi+E,mBACrBn3D,cAAe9mB,KAAKkmB,uBACnBy2D,GAAuB,kBAAC,GAAD,MACxB,yBAAKt7E,UAAU,gBACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAeA,UAAU,yBAE7B,yBAAKA,UAAWiN,IAAW,kBAAmB,CAAE,MAASwuC,KACpDxO,EACD,yBACIjtC,UAAWiN,IACP,kBAAmB,CACf,iBAAkBqvE,EAClB,qBAAsBA,GAAcrI,IAE5C5vE,MAlDV,IAmDWi4E,IAAgBt/D,IAAc++D,GAAkBH,IAC7C,yBAAK57E,UAAU,iBACVgd,IAAc4+D,GACX,kBAAC3xD,GAAA,EAAD,CAAeH,OAAQA,EAAQgsD,YAAayF,EAAcj4D,UAAQ,EAACiK,UAAQ,IAE9EquD,GAAe,kBAAC,GAAD,CAAS9F,YAAayF,KAG7CO,GACG,kBAAC,GAAD,CACI9sE,OAAQA,EACRqU,UAAWnN,EACX9I,QAASzO,KAAKk+E,mBAGtB,yBAAK78E,UAAWiN,IACZ,QACA,iBACA,CAAE,iBAAiB,GACnB,CAAE,cAAe+uE,KAEjB,yBAAKh8E,UAAU,iBACVyqB,IAWR6xD,GAAcZ,GAEnB,yBAAK17E,UAAU,0BAEnB,yBAAKA,UAAU,0B,gDAzSHP,EAAOT,GACSS,EAApCQ,YAAoCR,EAAvBuP,OADsB,IACd2E,EAAelU,EAAfkU,WAE7B,OAAIA,IAAe3U,EAAMy1E,eAEd,CACHA,eAAgB9gE,GAIjB,S,GA5CarT,IAAMC,YA6VlCy8E,GAAc/hE,aAAe,CACzBhb,YAAa68E,IACb9/D,WAAW,EACXq+D,UAAU,EACVC,qBAAqB,EACrByB,UAAU,GAGCC,UCvSAE,I,mBA7EX,WAAYz9E,GAAQ,IAAD,uBACf,4CAAMA,KAeV09E,uBAAyB,SAAAh8E,GAAW,IACxBi8E,EAAevkD,KAAfukD,WAER,EAAK19E,SAAS,CAAE09E,gBAnBD,EAsBnBC,gBAAkB,SAAAj8E,GACdA,EAAM6B,iBACN7B,EAAM4B,mBAxBS,EA2BnBs6E,WAAa,SAAAl8E,GACTA,EAAM6B,iBACN7B,EAAM4B,kBACN3D,IAAgBgG,aAAa,CACzB,QAAS,uBACT8B,UAAU,IAGd,EAAK+0D,6BAA6B96D,EAAMm8E,aAAan6C,QAnCtC,EAsCnBo6C,gBAAkB,SAAAp8E,GACdA,EAAM6B,iBACN7B,EAAM4B,kBACN3D,IAAgBgG,aAAa,CACzB,QAAS,uBACT8B,UAAU,KA3CC,EA+CnB+0D,6BAA+B,SAAA94B,GACN,IAAjBA,EAAM3xB,QAEVpS,IAAgBgG,aAAa,CACzB,QAAS,wBACT+9B,WApDW,IAGPg6C,EAAevkD,KAAfukD,WAHO,OAKf,EAAKp+E,MAAQ,CAAEo+E,cALA,E,iFASfvkD,KAAS/uB,GAAG,uBAAwBnL,KAAKw+E,0B,6CAIzCtkD,KAAS5uB,IAAI,uBAAwBtL,KAAKw+E,0B,+BA6C1C,OADuBx+E,KAAKK,MAApBo+E,WAIJ,yBACIp9E,UAAU,oBACVy9E,YAAa9+E,KAAK0+E,gBAClBK,YAAa/+E,KAAK6+E,gBAClBG,OAAQh/E,KAAK2+E,YACb,yBAAKt9E,UAAU,6BACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,2BAAf,mBACA,yBAAKA,UAAU,8BAAf,mBAXQ,S,GA3DFM,IAAMC,Y,wCCoB9Bq9E,I,kNACFp+D,SAAW,WAAO,IAAD,EACwF,EAAK/f,MAAlGuP,EADK,EACLA,OAAQqU,EADH,EACGA,UAAW5M,EADd,EACcA,KAAmBonE,GADjC,EACoB59E,YADpB,EACiC49E,kBAAkBC,EADnD,EACmDA,sBAAuB74D,EAD1E,EAC0EA,UAEjF1Q,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,KAJR,IAMLc,EAAYd,EAAZc,QACR,IAAKA,EAAS,OAAO,KAPR,IASL+Y,EAAa/Y,EAAb+Y,SACR,IAAKA,EAAU,OAAO,KAVT,IAaT2vD,EAaA3vD,EAbA2vD,UACA/iE,EAYAoT,EAZApT,MACAqN,EAWA+F,EAXA/F,YAEA/S,GASA8Y,EAVAnO,IAUAmO,EATA9Y,OACAgT,EAQA8F,EARA9F,UACA1mB,EAOAwsB,EAPAxsB,MACAoe,EAMAoO,EANApO,MACApc,EAKAwqB,EALAxqB,SACA4qB,EAIAJ,EAJAI,WACAjG,EAGA6F,EAHA7F,WACAnpB,EAEAgvB,EAFAhvB,QACAic,EACA+S,EADA/S,KAGJ,GAAIjc,EACA,MAAO,CACH,KACA,kBAAC4+E,GAAA,EAAD,CACIhvE,OAAQA,EACRqU,UAAWA,EACXjkB,QAASA,EACT6lB,UAAWA,EACX9kB,OAAQC,KAAkB69E,WAKtC,GAAIzvD,EACA,MAAO,CACH,KACA,kBAAC0vD,GAAA,EAAD,CAAWlvE,OAAQA,EAAQqU,UAAWA,EAAWnD,UAAWsO,EAAYvJ,UAAWA,KAI3F,GAAIsD,EACA,MAAO,CACH,KACA,kBAAC41D,GAAA,EAAD,CAAWnvE,OAAQA,EAAQqU,UAAWA,EAAWoF,UAAWF,EAAYtD,UAAWA,KAI3F,GAAIjF,EACA,MAAO,CAAC,KAAM,kBAAC,KAAD,CAAOhR,OAAQA,EAAQqU,UAAWA,EAAWrD,MAAOA,EAAOiF,UAAWA,KAGxF,GAAIrhB,EACA,MAAO,CAAC,KAAM,kBAACqxE,GAAA,EAAD,CAAUjmE,OAAQA,EAAQqU,UAAWA,EAAWzf,SAAUA,EAAUqhB,UAAWA,KAGjG,GAAIqD,IACqBhD,YAAOgD,EAAUA,YAClBA,EAAU3R,WAC1B,MAAO,CACH,KACA,kBAACynE,GAAA,EAAD,CAAWC,SAAS,EAAMrvE,OAAQA,EAAQqU,UAAWA,EAAWiF,UAAWA,EAAWrD,UAAWA,KAK7G,GAAIrjB,GACIA,EAAM+U,UACN,MAAO,CAAC,KAAM,kBAACq+D,GAAA,EAAD,CAAOqJ,SAAS,EAAMrvE,OAAQA,EAAQqU,UAAWA,EAAWzhB,MAAOA,EAAOqjB,UAAWA,KAI3G,GAAI3P,EAAO,CACP,IAAMqP,EAAYmB,YAAQxQ,EAAMC,MAAOkB,GACjC6nE,GACQ,YAATjjE,GAA+B,UAATA,GAA6B,uBAATA,GAA0C,qBAATA,KAC3E0iE,GAAa/iE,GAASqN,GAAeA,EAAYne,KAAKuH,OAAS,IAChEkT,IACCA,EAAU7W,QAAU6W,EAAUjO,QAAUzY,KAAK+P,IAAI2W,EAAU7W,MAAO6W,EAAUjO,QAAUomE,KACrFyB,EAAkBD,KAAgBj2D,GAAeA,EAAYne,KAAKuH,OAAS,IAE3EpN,EACFi6E,GAAcC,EACR,CACIC,MAAO,QACPC,WAAY,GAEhB,GAEV,MAAO,CACHH,EACI,kBAACvJ,GAAA,EAAD,CACI90E,YAAas+E,EAAkBT,EAAwBD,EACvDx5E,MAAOA,EACP2K,OAAQA,EACRqU,UAAWA,EACX/N,MAAOA,EACP2P,UAAWA,IAEf,KACHq5D,EAAkH,KAArG,kBAACvJ,GAAA,EAAD,CAAOsJ,SAAS,EAAMrvE,OAAQA,EAAQqU,UAAWA,EAAW/N,MAAOA,EAAO2P,UAAWA,KAI3G,MAAO,CAAC,KAAM,O,EAGlBy5D,uB,sCAAyB,WAAMt9E,GAAN,yBAAAqO,EAAA,wDACrBrO,EAAM6B,iBACN7B,EAAM4B,kBAFe,EAIS,EAAKvD,MAA3BuP,EAJa,EAIbA,OAAQqU,EAJK,EAILA,UAEV9O,EAAUY,KAAavM,IAAIoG,EAAQqU,GANpB,yCAOA,MAPA,UASbhO,EAAYd,EAAZc,QATa,yCAUA,MAVA,UAYb+Y,EAAa/Y,EAAb+Y,SAZa,0CAaC,MAbD,QAiBrBw9C,GAFgBx9C,EAARnO,KAfa,0C,kIAoBX,IAAD,EACwBthB,KAAKc,MAA9BuP,EADC,EACDA,OAAQqU,EADP,EACOA,UAAWlU,EADlB,EACkBA,EAErBoF,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,KAJZ,IAMDc,EAAYd,EAAZc,QACR,IAAKA,EAAS,OAAO,KAPZ,IASD+Y,EAAa/Y,EAAb+Y,SACR,IAAKA,EAAU,OAAO,KAVb,IAYDuwD,EAAoCvwD,EAApCuwD,qBAAsBZ,EAAc3vD,EAAd2vD,UACxB11D,EAAuB+F,EAAvB/F,YAAarN,EAAUoT,EAAVpT,MAEnB,GAA6B,kBAAzBqN,EAAY,SACZA,EAAcqB,aAAiBrB,QAC5B,GAA2B,kBAAhBA,GAA4B01D,IAA0C,YAA5BA,EAAUhlE,eAA2D,cAA5BglE,EAAUhlE,eAAgC,OAIxG6lE,aAAwD,cAA5Bb,EAAUhlE,cAAgC,EAAI,EAAGsP,EAAa,IAAjGw2D,GAJ+G,EAInI30E,KAJmI,EAIzH+L,UAClBoS,EAAcqB,aAAiB,CAAE,QAAS,gBAAiBxf,KAAMme,EAAapS,SAAU4oE,IAG5F,IAAMC,EACF,oCACKf,GAAa,yBAAK/9E,UAAU,sBAAsB+9E,GAClD/iE,GAAS,yBAAKhb,UAAU,kBAAkBgb,GAC1CqN,GAAe,yBAAKroB,UAAU,wBAAwBqoB,IA7BtD,EAgCqC1pB,KAAK6gB,WAhC1C,mBAgCFu/D,EAhCE,KAgCeC,EAhCf,KAiCHC,EAAqBN,EAAuB,GAC9C,kBAACzkE,EAAA,EAAD,CACI+E,QAAQ,WACRhK,MAAM,UACN/G,QAAS,CACLgxE,gBAAiB,kBACjBvwE,SAAU,4BAEd4mB,WAAS,EACTnoB,QAASzO,KAAK+/E,uBACd1+E,UAAU,mBACV,kBAACm/E,GAAA,EAAD,KACI,0BAAM1+E,EAAE,w1BAEX0O,EAAE,gBAIX,OACI,oCACK4vE,EACAD,EACAE,EACAC,K,+BAKH,IACEvD,EAAS/8E,KAAKc,MAAdi8E,KAER,OACI,oCACI,yBAAK17E,UAAU,YACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,oBAAoBrB,KAAKm2E,eAE3C4G,O,GA7MKp7E,IAAMC,YA8N5Bq9E,GAAQ3iE,aAAe,CACnBxE,KAAMsP,IACN9lB,YAAa68E,IACbe,iBAAkBuB,IAClBtB,sBAAuBuB,KAGZ9vE,qBAAkBquE,IC5P3B0B,I,OAAiBh/E,IAAMi/E,cAAc,CACvCvwE,OAAQ,EACRqU,UAAW,KAGAi8D,M,WCgNAE,GD9MR,SAAqBj/E,GAAY,IAC9Bk/E,EAD6B,iLAErB,IAAD,OACL,OAAO,kBAACH,GAAeI,SAAhB,KAA0B,SAAAp4E,GAAK,OAAI,kBAAC/G,EAAD,eAAWyO,OAAQ1H,EAAQA,EAAM0H,OAAS,EAAGqU,UAAW/b,EAAOA,EAAM+b,UAAW,GAAO,EAAK5jB,cAH3G,GACJa,IAAMC,WAOrC,OAFAk/E,EAAiB1+E,YAAjB,sBAA8CC,YAAeT,GAA7D,KAEOk/E,ECsMID,C,2MAvMXxgF,MAAQ,CACJ4sB,SAAS,G,EAGbtpB,Y,sCAAc,WAAMlB,GAAN,+EAAAqO,EAAA,qDACVrO,EAAM6B,iBACN7B,EAAM4B,kBAFI,EAI0B,EAAKvD,MAAjCuP,EAJE,EAIFA,OAAQqU,EAJN,EAIMA,UAAWhI,EAJjB,EAIiBA,KAJjB,KAMFA,EAAK,SANH,OAOD,gCAPC,OAWD,qCAXC,OAYD,yCAZC,OA0FD,iDA1FC,QA+FD,qCA/FC,QAsID,yCAtIC,QA8JD,gCA9JC,8DAeM+J,EAAS/J,EAAT+J,KAEF7Q,EAAUY,KAAavM,IAAIoG,EAAQqU,GAjBvC,wDAoBMyG,EAAqCvV,EAArCuV,OAAQzU,EAA6Bd,EAA7Bc,QAASsqE,EAAoBprE,EAApBorE,gBACpBtqE,EArBH,wDAuBEuqE,EAAU,KACVC,EAAO,KACW,yCAAlBxkE,EAAK,SAzBP,oBA0BEwkE,EAAOxqE,EAAQwqE,KA1BjB,qDA6BED,EAAU,CAAE,QAAS,2BAA4BE,gBAAiBD,EAAKE,YA7BzE,wBA+BEH,EAAU,CAAE,QAAS,2BAA4Bx6D,QA/BnD,eAkCF,EAAK1lB,SAAS,CAAEksB,SAAS,IAlCvB,UAmCmBvsB,IAAgBC,KAAK,CACtC,QAAS,yBACTwU,QAAS9E,EACT+E,WAAYsP,EACZu8D,YACD/yD,QAAQ,WACP,EAAKntB,SAAS,CAAEksB,SAAS,MAzC3B,eAmCIpsB,EAnCJ,OA4CM0K,EAA0B1K,EAA1B0K,KAAM81E,EAAoBxgF,EAApBwgF,WAAY//D,EAAQzgB,EAARygB,IAEtBjF,EAAQ,GACRzG,IAEIyG,EADA2kE,EACQp5B,aAAgBo5B,EAAiB,MAEjC/mE,YAAa5J,GAAQ,IAGrCgM,EAAQA,GAASilE,KAAOC,UAAU,OAE9Bh2E,EACI81E,EACAG,aAAU,CACNnlE,QACAzG,QAASrK,EACTk2E,GAAIH,KAAOC,UAAU,QAGzBG,aAAan2E,EAAM,SAAAuK,GAAa,OAAI,SAAAC,GAChC,OACI,kBAACK,EAAA,EAAD,CACIzT,IAAI,QACJ0T,aAAW,QACXC,MAAM,UACNjV,UAAU,4BACVoN,QAAS,WAAQqH,EAAcC,KAC/B,kBAAC/G,EAAA,EAAD,UAKTsS,IACe,yCAAlB5E,EAAK,UACCkT,EAASoxD,GAAoC71D,EAAOjX,QACpDie,EAAOhe,KAAUlK,IAAI2lB,GAE3B+xD,aAAkBT,EAAM,CAAEtrE,UAAS0L,MAAKsO,SAAQzT,WAAYgW,GAAQA,EAAKyvD,eAEzEC,aAAiBvgE,EAAK,CAAEkI,UAAU,EAAOs4D,KAAK,EAAOC,cAAc,KApFzE,wEAgGMzgE,EAA0B5E,EAA1B4E,IAAK7iB,EAAqBie,EAArBje,GAAqBie,EAAjBslE,aAEjB,EAAKjhF,SAAS,CAAEksB,SAAS,IACrB8pB,GAAW,EAnGb,UAoGmBr2C,IAAgBC,KAAK,CACtC,QAAS,kBACTwU,QAAS9E,EACT+E,WAAYsP,EACZu9D,UAAWxjF,IACZ+V,MAAM,SAAAzF,GACLgoC,GAAW,IACZ7oB,QAAQ,WACP,EAAKntB,SAAS,CAAEksB,SAAS,MA5G3B,WAoGIpsB,EApGJ,QA+GEk2C,EA/GF,iBAgHE8qC,aAAiBvgE,EAAK,CAAEkI,UAAU,EAAOs4D,KAAK,EAAMC,cAAc,IAhHpE,6BAkHUlhF,EAAO,SAlHjB,OAmHW,qBAnHX,QAyHW,oCAzHX,gCAoHkBygB,EAAsBzgB,EAAtBygB,IAAK4gE,EAAiBrhF,EAAjBqhF,aAEbL,aAAiBvgE,EAAK,CAAEkI,UAAU,EAAOs4D,KAAMI,EAAcH,cAAc,IAtHrF,oCA0HkBzgE,EAAQzgB,EAARygB,IAGRpQ,QAAQu7B,IAAI,iBAAkB5rC,GAC9BshF,aAAoB7gE,EAAK,CAAEzgB,SAAQwP,SAAQqU,YAAW09D,SAAU3jF,IA9H1E,oEAwIM4jF,EAA2B3lE,EAA3B2lE,gBAAiB3oE,EAAUgD,EAAVhD,OAErB2oE,EA1IF,oBA2IQzsE,EAAUY,KAAavM,IAAIoG,EAAQqU,GA3I3C,wDA8IUyG,EAA4BvV,EAA5BuV,OAAQ61D,EAAoBprE,EAApBorE,gBACZpxD,EAASzE,EAAOjX,QACI,IAApB8sE,IACApxD,EAASoxD,GAGP7uD,EAAOhe,KAAUlK,IAAI2lB,GApJ7B,qDAuJE0yD,aAAQ,IAAD,OAAKnwD,EAAKhC,SAAV,YAAsBzW,IAvJ/B,mEAgKM4H,EAAQ5E,EAAR4E,IAERugE,aAAiBvgE,EAAK,CAAEkI,UAAU,EAAOs4D,KAAK,EAAMC,cAAc,IAlKhE,+D,8HAwKJ,IACEx2E,EAASvL,KAAKc,MAAdyK,KACA0hB,EAAYjtB,KAAKK,MAAjB4sB,QAER,OACI,kBAACtN,GAAA,EAAD,CAAUte,UAAU,kBAAkBue,QAAM,EAACnR,QAASzO,KAAK2D,aAClD4H,EACA0hB,GACG,kBAAC2Q,GAAD,CACIv8B,UAAU,2BACVs8B,QAAQ,mB,GAvLPh8B,IAAMC,YCOpB2gF,I,wLAjBD,IACEC,EAAQxiF,KAAKc,MAAb0hF,IACR,OAAKA,GACAA,EAAI1vE,OAGL,yBAAKzR,UAAU,gBACVmhF,EAAIjuE,IAAI,SAACrV,EAAGkU,GAAJ,OAAW,kBAAC,GAAD,CAAgBzQ,IAAKyQ,EAAG7H,KAAMrM,EAAEqM,KAAMmR,KAAMxd,EAAEwd,UALzD,S,GAHC/a,IAAMC,YCiDjB6gF,I,kNA/CXpiF,MAAQ,G,wEAqBE,IACEqiF,EAAW1iF,KAAKc,MAAhB4hF,OACA9sE,EAAY5V,KAAKK,MAAjBuV,QAER,IAAK8sE,EAAQ,OAAO,KACpB,GAAwB,8BAApBA,EAAO,SAA0C,OAAO,KALvD,IAOGC,EAASD,EAATC,KACR,OAAKA,EAAK7vE,OAGN,yBAAKzR,UAAU,gBACX,kBAAC,GAAeuhF,SAAhB,CAAyBj6E,MAAOiN,GAC3B+sE,EAAKpuE,IAAI,SAACrV,EAAGkU,GAAJ,OAAW,kBAAC,GAAD,CAAazQ,IAAKyQ,EAAGovE,IAAKtjF,QALlC,Q,gDA3BG4B,EAAOT,GAAQ,IACnCyd,EAA8Bzd,EAA9Byd,WAAYigB,EAAkB19B,EAAlB09B,cACZ1tB,EAAsBvP,EAAtBuP,OAAQqU,EAAc5jB,EAAd4jB,UAGhB,OAAI5G,IAAezN,GAAU0tB,IAAkBrZ,EACpC,CACH5G,WAAYzN,EACZ0tB,cAAerZ,EACf9O,QAAS,CACLvF,SACAqU,cAKL,S,GAnBW/iB,IAAMC,YCkC1BihF,G,YACF,WAAY/hF,GAAQ,IAAD,uBACf,4CAAMA,KAkGV21E,6BAA+B,SAAAj0E,GACtB,EAAKnC,MAAMiQ,UAEhB,EAAKvP,SAAS,CAAEuP,UAAU,KAtGX,EAyGnBwyE,2BAA6B,SAAAtgF,GAAW,IAAD,EACL,EAAK1B,MAA3BuP,EAD2B,EAC3BA,OAAQqU,EADmB,EACnBA,UACRo4B,EAAU,EAAKz8C,MAAfy8C,MAEJzsC,IAAW7N,EAAO6N,QAAUqU,IAAcliB,EAAOkiB,YAC7Co4B,EACA,EAAK/7C,SAAS,CAAE+7C,OAAO,GAAS,WAC5B1zC,WAAW,WACP,EAAKrI,SAAS,CAAE+7C,OAAO,KACxB,KAGP,EAAK/7C,SAAS,CAAE+7C,OAAO,MArHhB,EA0HnBy5B,iCAAmC,SAAA/zE,GAAW,IAAD,EACX,EAAK1B,MAA3BuP,EADiC,EACjCA,OAAQqU,EADyB,EACzBA,UADyB,EAEP,EAAKrkB,MAA/BiQ,EAFiC,EAEjCA,SAAUkmE,EAFuB,EAEvBA,YAEdlmE,IAEAD,IAAW7N,EAAO6N,QAAUqU,IAAcliB,EAAOkiB,UAC7C8xD,EACA,EAAKz1E,SAAS,CAAEy1E,aAAa,GAAS,WAClCptE,WAAW,WACP,EAAKrI,SAAS,CAAEy1E,aAAa,KAC9B,KAGP,EAAKz1E,SAAS,CAAEy1E,aAAa,IAE1BA,GACP,EAAKz1E,SAAS,CAAEy1E,aAAa,MA3IlB,EA+InBpO,8BAAgC,SAAA5lE,GAAW,IAAD,EACR,EAAK1B,MAA3BuP,EAD8B,EAC9BA,OAAQqU,EADsB,EACtBA,UACRpU,EAAa9N,EAAb8N,SAEJD,IAAW7N,EAAO6N,QAAUqU,IAAcliB,EAAOkiB,WACjD,EAAK3jB,SAAS,CAAEuP,WAAUkmE,aAAa,KApJ5B,EAwJnB91D,uBAAyB,SAAAle,GAAW,IACxB2S,EAAwB3S,EAAxB2S,QAASC,EAAe5S,EAAf4S,WADc,EAED,EAAKtU,MAA3BuP,EAFuB,EAEvBA,OAAQqU,EAFe,EAEfA,UACR63D,EAAiB,EAAKl8E,MAAtBk8E,aAEJlsE,IAAW8E,IACXuP,IAActP,IAEM2tE,aAAgB1yE,EAAQqU,KACxB63D,EACpB,EAAKx7E,SAAS,CAAEw7E,aAAcwG,aAAgB1yE,EAAQqU,KAEtD,EAAKjM,iBApKM,EAwKnBs8D,sBAAwB,SAAAvyE,GAAW,IACvB2S,EAAwB3S,EAAxB2S,QAASC,EAAe5S,EAAf4S,WADa,EAEA,EAAKtU,MAA3BuP,EAFsB,EAEtBA,OAAQqU,EAFc,EAEdA,UAEZrU,IAAW8E,GACXuP,IAActP,GAElB,EAAKqD,eA/KU,EAkLnBglE,iBAAmB,SAAA7tD,GACfhB,aAASgB,GAAQ,IAnLF,EAsLnB8tD,iBAAmB,SAAArtE,GACfsU,aAAStU,EAAQ,MAAM,IAvLR,EA0LnBsmE,gBAAkB,WACd,GAAK,EAAKqM,UAAV,CAEA,IAAMpgD,EAAY33B,OAAO43B,eAAe0sB,WACxC,GAAK+jB,aAAiB1wC,GAAtB,CAJoB,MAQU,EAAK9hC,MAA3BuP,EARY,EAQZA,OAAQqU,EARI,EAQJA,UAEVpU,GAAYkG,KAAa0yC,cAAc71C,IAA3B,iBAAyChD,EAAzC,sBAA6DqU,IAC/E6uD,aAAcljE,EAAQqU,EAAWpU,MArMlB,EAwMnB0sE,gBAAkB,SAAAjuE,GACdA,EAAEzK,iBACFyK,EAAE1K,kBAFiB,MAIW,EAAKvD,MAA3BuP,EAJW,EAIXA,OAAQqU,EAJG,EAIHA,UAEKlL,YAAgBnJ,GAEjColD,aAAaplD,EAAQqU,GAKFuvD,aAAsB5jE,EAAQqU,IAEjDG,aAAgBxU,EAAQ,CAACqU,KAvNd,EA2NnB4B,UAAY,SAAA7jB,GACJA,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAHO,MAMa,EAAKvD,MAA3BuP,EANS,EAMTA,OAAQqU,EANC,EAMDA,UAEhB4B,aAAUjW,EAAQqU,IAnOH,EAsOnBu5D,mBAAqB,WACjB,EAAKl9E,SAAS,CAAEy1E,aAAa,KAvOd,EA0OnBjuE,gBAAkB,WACd,EAAKy6E,WAAY,GA3OF,EA8OnB/5E,gBAAkB,WACd,EAAK+5E,WAAY,GA/OF,EAkPnBjF,eAAiB,WACb,EAAKkF,UAAW,GAnPD,EAsPnB/E,iBAAmB,WAAO,IAAD,EACS,EAAKp9E,MAA3BuP,EADa,EACbA,OAAQqU,EADK,EACLA,UAChBw+D,aAAU7yE,EAAQqU,IAxPH,EA2PnBwB,sBA3PmB,sCA2PK,WAAMzjB,GAAN,mBAAAqO,EAAA,wDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,oBAGc,EAAKhE,MAArB8lB,YANY,gBAShB,EAAKplB,SAAS,CAAEolB,aAAa,IATb,4BAWZ3P,KAAa0yC,cAAcpxC,KAAO,GAXtB,iDAeVnS,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QACZyqE,EACFtwE,EAAMuD,QAAmC,MAAzBvD,EAAMuD,OAAO0wE,SAAmBj0E,EAAMuD,OAAOsyD,KAAO71D,EAAMuD,OAAOsyD,KAAO,KAE5F,EAAKv3D,SAAS,CACVolB,aAAa,EACb4sD,WACAptE,OACAE,QAxBY,0CA3PL,wDAwRnBugB,uBAAyB,SAAA3jB,GACjBA,GACAA,EAAM4B,kBAGV,EAAKtD,SAAS,CAAEolB,aAAa,KA7Rd,MAGe,EAAKrlB,MAA3BuP,EAHO,EAGPA,OAAQqU,EAHD,EAGCA,UAHD,OAIf,EAAKrkB,MAAQ,CACTuV,QAASY,KAAavM,IAAIoG,EAAQqU,GAClC63D,aAAcwG,aAAgB1yE,EAAQqU,GACtCpU,UAAU,EACVkmE,aAAa,EACb15B,OAAO,EAEP32B,aAAa,EACb4sD,SAAU,KACVptE,KAAM,EACNE,IAAK,GAdM,E,mFAkBGkW,EAAWC,GAAY,IAAD,EAC8Chc,KAAKc,MAAnFuP,EADgC,EAChCA,OAAQqU,EADwB,EACxBA,UAAW6Y,EADa,EACbA,aAAco/C,EADD,EACCA,oBAAqBD,EADtB,EACsBA,SAAUr+D,EADhC,EACgCA,UADhC,EAE4Bre,KAAKK,MAAjE8lB,EAFgC,EAEhCA,YAAa7V,EAFmB,EAEnBA,SAAUkmE,EAFS,EAETA,YAAa15B,EAFJ,EAEIA,MAAOy/B,EAFX,EAEWA,aAEnD,OAAIxgE,EAAU1L,SAAWA,IAKrB0L,EAAU2I,YAAcA,IAKxB3I,EAAUwhB,eAAiBA,IAK3BxhB,EAAU4gE,sBAAwBA,IAKlC5gE,EAAU2gE,WAAaA,IAKvB3gE,EAAUsC,YAAcA,IAKxBrC,EAAUmK,cAAgBA,IAK1BnK,EAAU1L,WAAaA,IAKvB0L,EAAUw6D,cAAgBA,IAK1Bx6D,EAAU8gC,QAAUA,GAKpB9gC,EAAUugE,eAAiBA,a,0CAU/B/lE,KAAarL,GAAG,iCAAkCnL,KAAKu2E,kCACvD//D,KAAarL,GAAG,8BAA+BnL,KAAKooE,+BACpD5xD,KAAarL,GAAG,2BAA4BnL,KAAK8iF,4BACjDtsE,KAAarL,GAAG,6BAA8BnL,KAAKy2E,8BACnDjgE,KAAarL,GAAG,uBAAwBnL,KAAK0gB,wBAC7ClK,KAAarL,GAAG,sBAAuBnL,KAAK+0E,yB,6CAI5Cv+D,KAAalL,IAAI,iCAAkCtL,KAAKu2E,kCACxD//D,KAAalL,IAAI,8BAA+BtL,KAAKooE,+BACrD5xD,KAAalL,IAAI,2BAA4BtL,KAAK8iF,4BAClDtsE,KAAalL,IAAI,6BAA8BtL,KAAKy2E,8BACpDjgE,KAAalL,IAAI,uBAAwBtL,KAAK0gB,wBAC9ClK,KAAalL,IAAI,sBAAuBtL,KAAK+0E,yB,+BAgMvC,IACA2H,EAAa18E,KAAKc,MAAlB47E,SADD,EAE8E18E,KAAKc,MAAhF0P,EAFH,EAEGA,EAAGH,EAFN,EAEMA,OAAQqU,EAFd,EAEcA,UAAWi4D,EAFzB,EAEyBA,oBAAqBt+D,EAF9C,EAE8CA,UAAW2lC,EAFzD,EAEyDA,SAAUxiD,EAFnE,EAEmEA,OAFnE,EAYDxB,KAAKK,MARLk8E,EAJC,EAIDA,aACAjsE,EALC,EAKDA,SACAkmE,EANC,EAMDA,YACA15B,EAPC,EAODA,MACAi2B,EARC,EAQDA,SACA5sD,EATC,EASDA,YACAxgB,EAVC,EAUDA,KACAE,EAXC,EAWDA,IAKE+P,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,gDAjBhB,IAmBGc,EAAwFd,EAAxFc,QAASynB,EAA+EvoB,EAA/EuoB,YAAa3W,EAAkE5R,EAAlE4R,KAAMjQ,EAA4D3B,EAA5D2B,oBAAqBqlE,EAAuChnE,EAAvCgnE,aAAczxD,EAAyBvV,EAAzBuV,OAAQzT,EAAiB9B,EAAjB8B,aAEzE49D,EAAan3C,IAAgBvf,YAAcvO,GAC3C6lE,EACF,kBAAC,GAAD,CACI70E,UAAU,cACVsB,IAAG,UAAK0N,EAAL,YAAeqU,EAAf,SACHrU,OAAQA,EACRqU,UAAWA,IAGbq4D,EACF,kBAAC,GAAD,CACI17E,UAAWiN,IAAW,YAAa,CAC/B,cAAe60E,aAAa9yE,EAAQqU,KAExCrU,OAAQA,EACRqU,UAAWA,EACX2wD,YAAar1E,KAAKg9E,kBAIpBh0D,EAAUmtD,aAAWvgE,GACrBrK,EAAO0jD,aAAQr5C,EAAWoT,EAAU,KAAOktD,EAAY1lE,GACvDssE,EAAsB,OAATvxE,GAAiBA,EAAKuH,OAAS,EAC5CmqE,EAAcC,aAAmB7sE,EAAQqU,GACzCy4D,EAAY10D,QAAQlR,GACpB6lE,EAAgBz+D,aAActO,MAAakO,aAASlO,KAAYilE,IAAgBtjD,aAAY3hB,IAAWilE,EACvG+H,GAAaD,GAAiB/+D,GAAc4+D,GAAeE,EAC3Dv8D,EAAQC,aAASjL,EAAS5V,KAAKsmB,UAAW,CAAE+2D,WAAUP,aAAY5G,aAAY6G,SAC9EO,EAAY1+D,YAAcvO,GAC1BktE,EAAY5+D,aAActO,GAM5Bi+B,EAAO,KACX,GAAIouC,EACA,GAAIn+D,aAASlO,IAAWusE,EACpB,OAAQA,EAAaxF,OAAO,UACxB,IAAK,iCACD9oC,EAAO,kBAACC,GAAA,EAAD,CAAUrJ,OAAK,EAACmR,UAAWumC,EAAaxF,OAAOoG,YAAajtE,SAAUvQ,KAAKy9E,mBAClF,MAEJ,IAAK,2BACDnvC,EAAO,kBAACC,GAAA,EAAD,CAAUrJ,OAAK,EAACtV,OAAQgtD,EAAaxF,OAAOppD,eAAgBzd,SAAUvQ,KAAKy9E,mBAClF,MAEJ,IAAK,8BACDnvC,EAAO,kBAAC39B,EAAA,EAAD,CAAUu0B,OAAK,EAAC70B,OAAQusE,EAAaxF,OAAOjiE,QAAS5E,SAAUvQ,KAAK09E,wBAKnFpvC,EADOivC,EACA,kBAAC,GAAD,CAAWr4C,OAAK,IAChBo4C,EACA,kBAAC,GAAD,CAAWp4C,OAAK,IAChB/G,EACA,kBAAC,GAAD,CAAW+G,OAAK,IAChB/Z,EAAOjX,QACP,kBAACq6B,GAAA,EAAD,CAAUrJ,OAAK,EAACtV,OAAQzE,EAAOjX,QAAS3D,SAAUvQ,KAAKy9E,mBAEvD,kBAAC9sE,EAAA,EAAD,CAAUu0B,OAAK,EAAC70B,OAAQA,EAAQE,SAAUvQ,KAAK09E,mBAI9D,IAAMh4E,EAAQ09E,aAAgB/yE,EAAQqU,GAChCi5D,EAAkC,mBAArBjnE,EAAQ,UAAsD,qBAArBA,EAAQ,SAC9DknE,GAAed,IAAoC,qBAArBpmE,EAAQ,UAAwD,iBAArBA,EAAQ,UAAoD,iBAArBA,EAAQ,WAAgCgB,EAiB9J,OACI,6BACKssC,GAAY,kBAAC,GAAD,CAASx8B,KAAMA,IAC5B,yBACInmB,UAAWiN,IAAW,UAAW,CAC7B,kBAAmB+P,GAAaq+D,GAAYkB,EAC5C,iBAAkBtvC,EAClB,cAAegnC,EACf,mBAAoBhlE,EACpB,sBAAuBkmE,IAAgBlmE,EACvC,sBAAuB+N,IAAcq+D,EACrC,iBAAkBr+D,IAAcq+D,EAChC,sBAAuBr+D,GAAaq+D,IAAakB,EACjD,8BAA+Bv/D,GAAaq+D,GAAYkB,EACxD,yBAA0BD,IAE9BE,YAAa79E,KAAKiJ,gBAClB60E,WAAY99E,KAAK+9E,eACjBxvE,YAAavO,KAAKuI,gBAClBkG,QAASzO,KAAK22E,gBACdqH,eAAgBh+E,KAAKi+E,mBACrBn3D,cAAe9mB,KAAKkmB,uBACnBy2D,GAAuB,kBAAC,GAAD,MACxB,yBAAKt7E,UAAU,gBACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAeA,UAAU,yBAE7B,yBAAKA,UAAWiN,IAAW,kBAAmB,CAAE,MAASwuC,KACpDxO,EACD,6BACI,yBACIjtC,UAAWiN,IAAW,kBAAmB,CACrC,iBAAkBqvE,EAClB,qBAAsBA,GAAcrI,IAExC5vE,MAAOA,GACNi4E,IAAgBt/D,IAAc++D,GAAkBH,IAC7C,yBAAK57E,UAAU,iBACVgd,IAAc4+D,GACX,kBAAC3xD,GAAA,EAAD,CAAeH,OAAQA,EAAQgsD,YAAayF,EAAcj4D,UAAQ,EAACiK,UAAQ,IAE9EquD,GAAe,kBAAC,GAAD,CAAS9F,YAAayF,KAG7CO,GACG,kBAAC,GAAD,CACI9sE,OAAQA,EACRqU,UAAWnN,EACX9I,QAASzO,KAAKk+E,mBAGrBt9D,EACD,yBACIvf,UAAWiN,IAAW,eAAgB,CAClC,sBAAwC,IAAjBiuE,EACvB,sBAAwC,IAAjBA,EACvB,sBAAwC,IAAjBA,KAE1BhxE,GAEJyd,GACG,kBAAC,GAAD,CACI3Y,OAAQA,EACRqU,UAAWA,EACX4B,UAAWtmB,KAAKsmB,UAChBy2D,KAAM7G,IAGbyH,GAAcZ,GAElBrlE,GACG,kBAAC,GAAD,CACIrH,OAAQA,EACRqU,UAAWA,EACXg+D,OAAQhrE,KAIpB,yBAAKrW,UAAU,0BAEnB,yBAAKA,UAAU,sBAGvB,kBAAC,GAAD,CACIgP,OAAQA,EACRqU,UAAWA,EACXM,eAAgB,CAAEnf,MAAKF,QACvB+U,KAAMyL,EACNrL,QAAS9a,KAAKomB,uBACd2sD,SAAUA,EACVvxE,OAAQA,S,GApeNI,aAqftBihF,GAAQvmE,aAAe,CACnBihB,aAAc,KACdlf,WAAW,EACXq+D,UAAU,EACVC,qBAAqB,EACrB34B,UAAU,GASd,IAEepuC,GAFChF,YAAgB,CAAC,cAAe,SAAU,CAAEyyE,SAAS,GAArDzyE,CAA6DiyE,I,SC9hBvES,I,OAAiB,CACnBn0E,MAAO,GACP4I,OAAQ,GACRwrE,aAAc,MACdpuC,OAAQ,eAGNquC,G,YACF,WAAY1iF,GAAQ,IAAD,uBACf,4CAAMA,KAgDVy1E,iCAAmC,SAAA/zE,GAAW,IAAD,EACX,EAAK1B,MAA3BuP,EADiC,EACjCA,OAAQqU,EADyB,EACzBA,UADyB,EAEP,EAAKrkB,MAA/BiQ,EAFiC,EAEjCA,SAAUkmE,EAFuB,EAEvBA,YAEdlmE,IAEAD,IAAW7N,EAAO6N,QAAUqU,IAAcliB,EAAOkiB,UAC7C8xD,EACA,EAAKz1E,SAAS,CAAEy1E,aAAa,GAAS,WAClCptE,WAAW,WACP,EAAKrI,SAAS,CAAEy1E,aAAa,KAC9B,KAGP,EAAKz1E,SAAS,CAAEy1E,aAAa,IAE1BA,GACP,EAAKz1E,SAAS,CAAEy1E,aAAa,MAlElB,EAsEnByH,mBAAqB,WACjB,EAAKl9E,SAAS,CAAEy1E,aAAa,KAvEd,EA0EnBlwD,UAAY,SAAA7jB,GACJA,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAHO,MAMa,EAAKvD,MAA3BuP,EANS,EAMTA,OAAQqU,EANC,EAMDA,UAEhB4B,aAAUjW,EAAQqU,IAlFH,MAGe,EAAK5jB,MAA3BuP,EAHO,EAGPA,OAAQqU,EAHD,EAGCA,UAHD,OAIf,EAAKrkB,MAAQ,CACTuV,QAASY,KAAavM,IAAIoG,EAAQqU,GAClC8xD,aAAa,GANF,E,mFAUGz6D,EAAWC,GAAY,IAAD,EAC4Bhc,KAAKc,MAAjEuP,EADgC,EAChCA,OAAQqU,EADwB,EACxBA,UAAW6Y,EADa,EACbA,aAAco/C,EADD,EACCA,oBAAqBnsE,EADtB,EACsBA,EACtDgmE,EAAgBx2E,KAAKK,MAArBm2E,YAER,OAAIz6D,EAAUvL,IAAMA,IAIhBuL,EAAU1L,SAAWA,IAIrB0L,EAAU2I,YAAcA,IAIxB3I,EAAUwhB,eAAiBA,IAI3BxhB,EAAU4gE,sBAAwBA,GAIlC3gE,EAAUw6D,cAAgBA,Q,0CAQ9BhgE,KAAarL,GAAG,iCAAkCnL,KAAKu2E,oC,6CAIvD//D,KAAalL,IAAI,iCAAkCtL,KAAKu2E,oC,+BAuClD,IAAD,EACwDv2E,KAAKc,MAA1DuP,EADH,EACGA,OAAQqU,EADX,EACWA,UAAWi4D,EADtB,EACsBA,oBAAqB34B,EAD3C,EAC2CA,SACxCwyB,EAAgBx2E,KAAKK,MAArBm2E,YAEF5gE,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,KALhB,IAOGc,EAAkBd,EAAlBc,QAAS8Q,EAAS5R,EAAT4R,KACjB,IAAK9Q,EAAS,OAAO,KACrB,GAAyB,yBAArBA,EAAQ,SAAqC,OAAO,KATnD,IAWGC,EAAUD,EAAVC,MAEFpL,EAAOk4E,aAAyB7tE,GAAS,GAE/C,OACI,6BACKouC,GAAY,kBAAC,GAAD,CAASx8B,KAAMA,IAC5B,yBACInmB,UAAWiN,IAAW,kBAAmB,CAAE,sBAAuBkoE,IAClEwH,eAAgBh+E,KAAKi+E,oBACpBtB,GAAuB,kBAAC,GAAD,MACxB,yBAAKt7E,UAAU,2BACX,yBAAKA,UAAU,2BACX,6BAAMkK,KAGboL,GACG,kBAACy/D,GAAA,EAAD,CACI/lE,OAAQA,EACRqU,UAAWA,EACX/N,MAAOA,EACPrV,YAAa,GACboE,MAAO49E,GACPh9D,UAAWtmB,KAAKsmB,kB,GAxHf3kB,IAAMC,WAuInC4hF,GAAelnE,aAAe,CAC1B+B,WAAW,EACXq+D,UAAU,EACVC,qBAAqB,GAGzB,IAMelhE,GANCC,YACZuX,cACAriB,cACAsiB,cAGWzX,CAAQ+nE,ICjKjBE,I,mBACF,WAAY5iF,GAAQ,IAAD,uBACf,4CAAMA,KA0CV4oC,0BAA4B,SAAAlnC,GAAW,IAC3BmhF,EAAgBzpD,KAAhBypD,YAER,EAAK5iF,SAAS,CAAE4iF,iBA9CD,EAiDnBrsD,qBAAuB,SAAA90B,GAAW,IACV6N,EAAW7N,EAAvB+0B,WAER,EAAKx2B,SAAS,CAAEsP,YApDD,EAuDnBuzE,2BAA6B,SAAAphF,GAAW,IAC5BqhF,EAAiB3pD,KAAjB2pD,aAER,EAAK9iF,SAAS,CAAE8iF,kBA1DD,IAGPxzE,EAAsC6pB,KAAtC7pB,OAAQwzE,EAA8B3pD,KAA9B2pD,aAAcF,EAAgBzpD,KAAhBypD,YAHf,OAIf,EAAKtjF,MAAQ,CACTgQ,SACAwzE,eACAF,eAPW,E,mFAWG5nE,EAAWC,EAAWqK,GACxC,OAAIrK,EAAU3L,SAAWrQ,KAAKK,MAAMgQ,SAIhC2L,EAAU6nE,eAAiB7jF,KAAKK,MAAMwjF,eAItC7nE,EAAU2nE,cAAgB3jF,KAAKK,MAAMsjF,aAIrC5nE,EAAUvL,IAAMxQ,KAAKc,MAAM0P,M,0CAQ/B0pB,KAAS/uB,GAAG,qBAAsBnL,KAAKs3B,sBACvC4C,KAAS/uB,GAAG,2BAA4BnL,KAAK4jF,4BAC7C1pD,KAAS/uB,GAAG,0BAA2BnL,KAAK0pC,6B,6CAI5CxP,KAAS5uB,IAAI,qBAAsBtL,KAAKs3B,sBACxC4C,KAAS5uB,IAAI,2BAA4BtL,KAAK4jF,4BAC9C1pD,KAAS5uB,IAAI,0BAA2BtL,KAAK0pC,6B,+BAqBvC,IAAD,EACgB1pC,KAAKc,MAAlB0P,EADH,EACGA,EADH,KACM6D,MACmCrU,KAAKK,OAA3CgQ,EAFH,EAEGA,OAFH,EAEWwzE,aAFX,EAEyBF,YAC9B,OAAItzE,EAAe,KAIf,yBAAKhP,UAAU,eACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,oBAAoBmP,EAAE,qC,GAxE/B7O,IAAMC,YA+EjBgP,iBAAkB8yE,I,qBC7DlBI,I,wLAjBD,IACEr1E,EAAYzO,KAAKc,MAAjB2N,QAER,OACI,yBAAKpN,UAAU,sBACX,kBAAC+U,EAAA,EAAD,CAAY8J,eAAe,EAAM3R,YAAaE,GAC1C,kBAAC,KAAD,Y,GAPW9M,IAAMC,Y,UC0QtBmiF,I,mBArQX,WAAYjjF,GAAQ,IAAD,8BACf,4CAAMA,KAuBVkjF,iCAAmC,SAAAxhF,GAAW,IAClCwmC,EAASxmC,EAATwmC,KACMi7C,EAAgB,EAAK5jF,MAA3B2oC,KAER,IAAIi7C,GAAej7C,EAAKg5B,YAAciiB,EAAYjiB,UAAlD,CAEA,EAAKjhE,SAAS,CACVioC,KAAMy4B,KAAaz4B,KACnBld,MAAO,EAAKo4D,SAASziB,KAAaz4B,QAGtC,IAAMn0B,EAAQ7K,IAAU8K,WAChBmtD,EAAaj5B,EAAbi5B,SACRkiB,YAAoBtvE,EAAOotD,EAASA,YArCrB,EAwCnBmiB,gCAAkC,SAAA5hF,GAAW,IACjCwmC,EAASxmC,EAATwmC,KAUR,GARA,EAAKjoC,SAAS,CACVioC,OACAld,MAAO,EAAKo4D,SAASl7C,GACrBq7C,iBAAkB,EAClBphC,aAAa,EACbqhC,YAAY,IAGXt7C,EAAL,CAEA,IAAMn0B,EAAQ7K,IAAU8K,WAChBmtD,EAAaj5B,EAAbi5B,SACRkiB,YAAoBtvE,EAAOotD,EAASA,YAvDrB,EA0DnBprD,WAAa,SAAApW,GACc,EAAKJ,MAApBikF,YAEH7jF,GAELC,IAAgBgG,aAAa,CACzB,QAAS,0BACTjG,aAjEW,EAqEnB8jF,mBAAqB,SAAAC,GAAc,IACvB14D,EAAU,EAAKzrB,MAAfyrB,MAEFrrB,EAAUqrB,EAAM7O,KAAK,SAAA/d,GAAC,OAAIA,EAAEuB,QAAQhC,KAAO+lF,IACjD,GAAK/jF,EAAL,CAEA,IAAMoU,EAAQ7K,IAAU8K,WACxB2vE,YAAmB5vE,EAAOpU,EAAS,MAEnC,IAAIikF,EAAiB,EACjB,EAAKC,UAAY,EAAKA,SAASztE,UAC/BwtE,EAAiBplF,KAAK2O,MAAM,EAAK02E,SAASztE,QAAQzK,YAAcm4E,OAG5C,EAAKC,oBAAoBL,EAAW14D,EAAO44D,GACnD/kF,QAAQ,SAAAT,GACpBulF,YAAmB5vE,EAAO3V,EAAG,UArFlB,EAyFnB2lF,oBAAsB,SAACL,EAAWviB,EAAUyiB,GACxC,IAAKziB,EAAU,MAAO,GAEtB,IAAM6iB,EAAU,GACV9iE,EAAQigD,EAASttC,UAAU,SAAAz1B,GAAC,OAAIA,EAAEuB,QAAQhC,KAAO+lF,IACvD,IAAe,IAAXxiE,EAAc,MAAO,GAEzB,IAAMwgE,EAAMljF,KAAK2O,MAAM+T,EAAQ0iE,GACzBK,EAAS/iE,EAAQ0iE,EAEjBM,EAAUxC,EAAM,EAChByC,EAAUzC,EAAM,EAChB0C,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdJ,EAAQ9wE,KAAK0wE,EAAiBM,EAAUE,GAE5CJ,EAAQ9wE,KAAK0wE,EAAiBM,EAAUD,GACpCI,EAAaT,GACbI,EAAQ9wE,KAAK0wE,EAAiBM,EAAUG,IAI5CD,GAAc,GACdJ,EAAQ9wE,KAAK0wE,EAAiBlC,EAAM0C,GAEpCC,EAAaT,GACbI,EAAQ9wE,KAAK0wE,EAAiBlC,EAAM2C,GAGpCF,EAAU3lF,KAAK8lF,KAAKnjB,EAASnvD,OAAS4xE,KAClCQ,GAAc,GACdJ,EAAQ9wE,KAAK0wE,EAAiBO,EAAUC,GAE5CJ,EAAQ9wE,KAAK0wE,EAAiBO,EAAUF,GACpCI,EAAaT,GACbI,EAAQ9wE,KAAK0wE,EAAiBO,EAAUE,IAIzCL,EAAQvwE,IAAI,SAAAnB,GAAC,OAAI6uD,EAAS7uD,MAnIlB,EAsInB+1D,iBAAmB,SAAA1mE,GACf,IAAM+hF,EAAYzgF,OAAOtB,EAAMukC,cAAcmoB,QAAQq1B,WAC/C/jF,EAAU,EAAK4kF,WAAWb,GAC3B/jF,GAEA,EAAKuiF,YAEN,EAAKsC,qBAAuBd,IAC5B,EAAKc,mBAAqB,MAE9B,EAAKvkF,SAAS,CAAEN,YAChBC,IAAgBgG,aAAa,CACzB,QAAS,6BACTjG,YAEJ,EAAK8jF,mBAAmBC,KArJT,EAwJnBj8E,gBAAkB,SAAA9F,GACd,IAAM+hF,EAAYzgF,OAAOtB,EAAMukC,cAAcmoB,QAAQq1B,WAC/C/jF,EAAU,EAAK4kF,WAAWb,GAChC,GAAK/jF,EAAL,CAEA,EAAK6kF,mBAAqBd,EAC1B,IAAMxlF,EAAM0oB,KAAK1oB,MAqBjB,OAnBA,EAAK+B,SAAS,CAAEN,UAASuhE,UAAWhjE,EAAKikD,aAAa,EAAOqhC,YAAY,IACzEl7E,WAAW,WACe,EAAK/I,MAAnB2hE,YACUhjE,IACd,EAAK+B,SAAS,CAAEkiD,aAAa,EAAMqhC,YAAY,IAC/C5jF,IAAgBgG,aAAa,CACzB,QAAS,6BACTjG,cAGT,KAEH,EAAK8jF,mBAAmBC,GAExB,EAAKxB,WAAY,EACjB/9E,SAASiG,iBAAiB,UAAW,EAAK/C,eAE1C1F,EAAM6B,iBACN7B,EAAM4B,mBACC,IAnLQ,EAsLnB8D,cAAgB,WAEZ,EAAKpH,SAAS,CAAEN,QADA,KACSuhE,UAAW,EAAG/e,aAAa,IACpDviD,IAAgBgG,aAAa,CACzB,QAAS,6BACTjG,QAJY,OAMhB,EAAKuiF,WAAY,EACjB/9E,SAASoG,oBAAoB,UAAW,EAAKlD,gBA9L9B,EAiMnB+7E,SAAW,SAAAl7C,GACP,IAAMld,EAAQ,GACd,IAAKkd,EAAM,OAAOld,EAElB,IAAMy5D,EAAO,IAAIryE,IACT+uD,EAA4Bj5B,EAA5Bi5B,SAAUujB,EAAkBx8C,EAAlBw8C,cAgBlB,OAfIvjB,GACAA,EAASA,SAAStiE,QAAQ,SAAAT,GACtB4sB,EAAM9X,KAAK9U,GACXqmF,EAAK/sE,IAAItZ,EAAEuB,QAAQhC,GAAIS,EAAEuB,QAAQhC,MAGrC+mF,GACAA,EAAcvjB,SAAStiE,QAAQ,SAAAT,GACtBqmF,EAAKlyE,IAAInU,EAAEuB,QAAQhC,MACpBqtB,EAAM9X,KAAK9U,GACXqmF,EAAK/sE,IAAItZ,EAAEuB,QAAQhC,GAAIS,EAAEuB,QAAQhC,OAKtCqtB,GAnNP,EAAK64D,SAAWhjF,IAAM2Y,YAEtB,EAAKja,MAAQ,CACT2oC,KAAM,KACNld,MAAO,GACPu4D,iBAAkB,EAClBphC,aAAa,EACbqhC,YAAY,GAVD,E,iFAef7iB,KAAat2D,GAAG,gCAAiCnL,KAAKokF,iCACtD3iB,KAAat2D,GAAG,iCAAkCnL,KAAKgkF,oC,6CAIvDviB,KAAan2D,IAAI,gCAAiCtL,KAAKokF,iCACvD3iB,KAAan2D,IAAI,iCAAkCtL,KAAKgkF,oC,iCAoMjDQ,GAAY,IACX14D,EAAU9rB,KAAKK,MAAfyrB,MAEF25D,EAAe35D,EAAM6I,UAAU,SAAAz1B,GAAC,OAAIA,EAAEuB,QAAQhC,KAAO+lF,IAC3D,OAAyB,IAAlBiB,EAAsB35D,EAAM25D,GAAgB,O,+BAG7C,IAAD,SACyCzlF,KAAKK,MAA3C2oC,EADH,EACGA,KAAMld,EADT,EACSA,MAAOrrB,EADhB,EACgBA,QAASwiD,EADzB,EACyBA,YAC9B,IAAKja,EAAM,OAAO,KAClB,IAAKld,EAAO,OAAO,KACnB,IAAKA,EAAMhZ,OAAQ,OAAO,KAE1B,IAAMkc,EAAWlD,EAAMvX,IAAI,SAAArV,GAAC,OACxB,yBACImC,UAAU,0BACVsB,IAAKzD,EAAEuB,QAAQhC,GACfinF,kBAAiBxmF,EAAEuB,QAAQhC,GAC3BiH,MAAO,CAAEyJ,MAAOy1E,KAA2B7sE,OAAQ6sE,MACnDn2E,QAAS,kBAAM,EAAKoI,WAAW3X,IAC/B+P,aAAc,EAAKk6D,iBACnB56D,YAAa,EAAKhG,iBAClB,kBAAC82E,GAAA,EAAD,CACI18E,IAAKzD,EAAEuB,QAAQhC,GACf4C,UAAU,kCACVZ,QAASvB,EACTg+C,UAAU,EACVzzC,MAAM,EACNnI,YAAaqkF,KACbC,SAAO,EACPpkF,OAAQC,KAAkBokF,WAKtC,OACI,yBAAK5qE,IAAKjb,KAAK2kF,SAAUtjF,UAAU,mCAC9B2tB,EACAvG,QAAQhoB,IAAYwiD,GAAe,kBAAC7iD,GAAA,EAAD,CAAgBK,QAASA,S,GAhQlDkB,IAAMC,Y,oOCoBjC,IAAMkkF,GAAqBC,OAAOC,OAAO,CACrCC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,mBAAoB,qBACpBC,qBAAsB,uBACtBhc,KAAM,SAqnDKic,G,YAjnDX,WAAYxlF,GAAQ,IAAD,8BACf,4CAAMA,KA0LV2lE,wBAA0B,SAAAjkE,GAAW,IACzB2S,EAAmC3S,EAAnC2S,QAASC,EAA0B5S,EAA1B4S,WAAYuxD,EAAcnkE,EAAdmkE,UADG,EAEL,EAAK7lE,MAAxBuP,EAFwB,EAExBA,OAAQkJ,EAFgB,EAEhBA,OAChB,GAAIlJ,IAAW8E,GACVoE,EAEL,GAAIotD,EAAW,CACX,IAAM/wD,EAAUY,KAAavM,IAAIkL,EAASC,GAEpC6W,EAAO,EAAKC,QAAQhV,QAEtBqvE,EAAiB3wE,EAAQuoB,cAAgBqoD,aAAiB5wE,GAAWkwE,GAAmBG,iBAAmBH,GAAmBzb,KAC9Hp+C,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKoF,eAC3Ck1D,EAAiBT,GAAmBG,kBAGxC,IAAMQ,EAAW7wE,EAAQuoB,YAAc,CAAEuoD,mBAAmB,GAAU,GAEhEC,EAAU,CAAC/wE,GACjB,EAAKgxE,oBAAqB,EAC1B,EAAKC,OAAOF,EAASF,EAAU,WAC3B,EAAKG,oBAAqB,EAC1B,EAAKE,qBAAqBP,EAAgB,EAAKnlF,YAGnD,IAAMyT,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAO8xE,GAC3B,EAAK3mD,aAAa2mD,OACf,CACH,EAAKI,cAAc,CAAC3xE,IAEpB,IAAMwL,EAAQpK,KAAaqK,SAASxQ,GAChCuQ,IAAUA,EAAM6iD,OAAO3wD,QACvBqiD,iBA5NO,EAiOnBzyD,UAAY,SAAAD,KAjOO,EA4OnBukF,6BA5OmB,sCA4OY,WAAMxkF,GAAN,yBAAAsO,EAAA,yDACvB,EAAKm2E,iBADkB,iBAEfN,EAAY,EAAKtmF,MAAjBsmF,QAECvzE,EAAIuzE,EAAQ7zE,OAAS,EAJP,YAIUM,GAAK,GAJf,oBAKbwC,EAAU+wE,EAAQvzE,IACpBghE,aAAmBx+D,EAAQT,QAASS,EAAQnX,IAN7B,uBAOf+2D,aAAY5/C,EAAQT,QAASS,EAAQnX,IAPtB,0BAIkB2U,IAJlB,wCAcN1S,IAAgBC,KAAK,CACtC,QAAS,qBACTwU,QAAS,EAAKrU,MAAMuP,OACpBqJ,MAAO,GACPsU,eAAgB7Z,KAAUC,UAC1B6Z,gBAAiB,EACjB3D,OAAQ,EACRvW,MAAO,IACPwF,OAAQ,CAAE,QAAS,+BAtBI,QAcrB1Y,EAdqB,OAyBlBuS,EAAI,EAzBc,aAyBXA,EAAIvS,EAAOgtB,SAAS/a,QAzBT,oBA0BjB8C,EAAU/U,EAAOgtB,SAASza,IAC5BghE,aAAmBx+D,EAAQT,QAASS,EAAQnX,IA3BzB,wBA4BnB+2D,aAAY5/C,EAAQT,QAASS,EAAQnX,IA5BlB,2BAyBiB2U,IAzBjB,0DA5OZ,wDA+QnBwwE,2BA/QmB,sCA+QU,WAAMphF,GAAN,iBAAAsO,EAAA,wDACjBmb,EAASzpB,EAATypB,KADiB,oDAGH,iBAAlBA,EAAK,SAHgB,uDAKjB06D,EAAY,EAAKtmF,MAAjBsmF,UACOA,EAAQ7zE,OAAS,GANP,kEAQnB9I,IAAU2gC,OAAV,qBAAiB,oCAAA75B,EAAA,0DACW,EAAKhQ,MAA3BuP,EADW,EACXA,OAAQqU,EADG,EACHA,WACZrU,EAFe,sBAGToM,EAAOR,KAAUhS,IAAIoG,IAHZ,iBAKHqM,EAASD,EAATC,KALG,KAMHA,EAAK,SANF,OAOF,oBAPE,OAQF,mBARE,OAgBF,uBAhBE,QAwBF,uBAxBE,yCASGhc,IAAgBC,KAAK,CACvB,QAAS,oBACTuT,QAASwI,EAAKxI,QACdG,OAAO,IAZR,6DAiBG3T,IAAgBC,KAAK,CACvB,QAAS,uBACToc,eAAgBL,EAAKK,eACrB1I,OAAO,IApBR,6DAyBG3T,IAAgBC,KAAK,CACvB,QAAS,uBACT8c,cAAef,EAAKe,cACpBpJ,OAAO,IA5BR,4CAiCX,EAAKqpE,iBAAiBrtE,EAAQ,EAAGqU,EAAW,GAjCjC,2CARE,0CA/QV,wDA8TnBu2C,0BAA4B,SAAAz4D,GACJA,EAAZo+C,UAEJ,EAAKsmC,gBAAgBvnF,QAAQ,SAAAT,GAAC,OAAIA,MAClC,EAAKgoF,gBAAkB,KAlUZ,EAsUnBC,wBAA0B,SAAA3kF,GAAW,IACzB6N,EAAsB7N,EAAtB6N,OAAQqU,EAAcliB,EAAdkiB,UACR0iE,EAAiB,EAAK/mF,MAAtB+mF,aAER,GAAI,EAAKtmF,MAAMuP,SAAWA,EAA1B,CAIA,IAAMsoC,EAAWyuC,EAAat0E,OAAS,EAAIs0E,EAAaA,EAAat0E,OAAS,GAAK,KAC/E6lC,GAAYA,EAAStoC,SAAWA,GAAUsoC,EAASj0B,YAAcA,GAIrE0iE,EAAapzE,KAAK,CAAE3D,SAAQqU,gBAnVb,EAsVnB0nD,0BAA4B,SAAA5pE,GACxB,IAAMypB,EAAO,EAAKC,QAAQhV,QAEpBsiC,EAAmBvtB,EAAKK,aACxBoB,EAAgBzB,EAAKD,UAC3B,EAAKjrB,SAAS,CAAEsmF,cAAc,GAAQ,WAC9Bp7D,EAAKD,YAAc0B,IACnBzB,EAAKD,WAAa1sB,KAAKqpB,IAAI6wB,EAAmBvtB,EAAKK,kBA7V5C,EAkWnBg7D,0BAA4B,SAAAC,GACxB,IAAMt7D,EAAO,EAAKC,QAAQhV,QAE1B,EAAKsiC,iBAAmBvtB,EAAKK,aAC7B,EAAKoB,cAAgBzB,EAAKD,WAtWX,EAyWnBw7D,uBAAyB,SAAAD,GACrB,IAAMt7D,EAAO,EAAKC,QAAQhV,QAK1B,EAAKnW,SAAS,CAAEsmF,cAAc,GAAS,WAC/Bp7D,EAAKD,YAAc,EAAK0B,gBACxBzB,EAAKD,WAAa1sB,KAAKqpB,IAAI,EAAK6wB,iBAAmBvtB,EAAKK,kBAjXjD,EAsXnBm7D,wBAA0B,SAAAjlF,GACtB,EAAKzB,SAAS,CACV2mF,gBAAiBlxE,KAAa0yC,cAAcpxC,KAAO,KAxXxC,EA4XnB+iB,2BAA6B,SAAAr4B,GACN,EAAK1B,MAAhBuP,SAEO7N,EAAO6N,QAClB,EAAKtP,SAAS,CAAE+5B,aAAct4B,EAAOu4B,cAhY1B,EAoYnBra,uBAAyB,SAAAle,GAAW,IACxB6N,EAAW,EAAKvP,MAAhBuP,OACAs2E,EAAY,EAAKtmF,MAAjBsmF,QACAxxE,EAAwB3S,EAAxB2S,QAASC,EAAe5S,EAAf4S,WAEjB,GAAI/E,IAAW8E,IAEsC,IAAjDwxE,EAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAO2W,IAAoB,CACpD,IAAMQ,EAAUY,KAAavM,IAAIkL,EAASC,GAC1C,IAAKQ,EAAS,OAEd,IAAMf,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAO,CAACe,MAhZjB,EAoZnB+xE,6BAA+B,SAAAnlF,GAAW,IAC9BoT,EAA4BpT,EAA5BoT,QAASwnB,EAAmB56B,EAAnB46B,eAEjB,GADmB,EAAKt8B,MAAhBuP,SACOuF,EAAQT,QAAvB,CAaA,IAAMoxE,EAAiB3wE,EAAQuoB,YACzB2nD,GAAmBG,iBACnBH,GAAmBO,qBAEzB,EAAKuB,eAAexqD,EAAgBxnB,EAAS,WACrC2wE,IAAmBT,GAAmBO,sBACtC,EAAKS,qBAAqBP,EAAgB,EAAKnlF,UAGnD,EAAKymF,sBAGT,IAAMhzE,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAO,CAACe,IAC5B,EAAKoqB,aAAa,CAACpqB,MAlbJ,EAqbnBoL,mBAAqB,SAAAxe,GACjB,GAAK,EAAKykF,iBAAV,CAD2B,IAGnBrxE,EAAYpT,EAAZoT,QAER,GADmB,EAAK9U,MAAhBuP,SACOuF,EAAQT,QAGvB,GAAa,IADIS,EAAT4R,KACR,CAEA,IAAMyE,EAAO,EAAKC,QAAQhV,QAEtBqvE,EAAiB3wE,EAAQuoB,cAAgBqoD,aAAiB5wE,GAAWkwE,GAAmBG,iBAAmBH,GAAmBzb,KAC9Hp+C,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKoF,eAC3Ck1D,EAAiBT,GAAmBG,kBAGxC,IAAMQ,EAAW7wE,EAAQuoB,YAAc,CAAEuoD,mBAAmB,GAAU,GAEhEC,EAAU,CAAC/wE,GACjB,EAAKgxE,oBAAqB,EAC1B,EAAKkB,eAAenB,EAASF,EAAU,WACnC,EAAKG,oBAAqB,EAC1B,EAAKE,qBAAqBP,EAAgB,EAAKnlF,YAGnD,IAAMyT,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAO8xE,GAC3B,EAAK3mD,aAAa2mD,MAjdH,EAodnB5lE,uBAAyB,SAAAve,GAAW,IACxB6N,EAAW,EAAKvP,MAAhBuP,OACA8E,EAAuC3S,EAAvC2S,QAASslD,EAA8Bj4D,EAA9Bi4D,aAAcriD,EAAgB5V,EAAhB4V,YAC3B/H,IAAW8E,GAEVslD,GAEL,EAAKssB,cAAc3uE,IA3dJ,EA2pBnB2vE,sBA3pBmB,sCA2pBK,WAAOlnF,EAAQkT,GAAf,mBAAAjD,EAAA,qDACdk3E,EAAiB,EACnBC,EAAW,EAAKC,kBAAkBrnF,EAAQsnF,KAErC/0E,EAAI,EAJO,YAIJA,EAAI40E,IAAmBC,EAJnB,iCAKD,EAAK36D,aALJ,OAKhBzsB,EALgB,OAMhBonF,EAAW,EAAKC,kBAAkBrnF,EAAQsnF,KAN1B,OAI6B/0E,IAJ7B,yDA3pBL,0DAqqBnB80E,kBAAoB,SAACrnF,EAAQkT,GACzB,QAAKlT,KACAA,EAAOgtB,SAAS/a,QAEdjS,EAAOgtB,SAAS/a,QAAUiB,IAzqBlB,EA4qBnBuZ,WA5qBmB,qBA4qBN,4CAAAxc,EAAA,wDACDT,EAAW,EAAKvP,MAAhBuP,OACAs2E,EAAY,EAAKtmF,MAAjBsmF,QAFC,iBAGDz3C,EAHC,EAGDA,UAEH7+B,EALI,qDAML6+B,EAAUjiB,QANL,qDAQLiiB,EAAUk5C,oBARL,kCASQ,EAAKC,wBATb,oDAYHv6D,EAAgB64D,GAAWA,EAAQ7zE,OAAS,EAAI6zE,EAAQ,GAAGloF,GAAK,EAChEsV,EAAQ4yE,EAAQ7zE,OAASq1E,IAA2C,EAAtBA,IAA0BA,IAE1EtnF,EAAS,KACPynF,EAhBG,UAgBiBj4E,EAhBjB,YAgB2Byd,IAChC,EAAKy6D,aAAal1E,IAAIi1E,GAjBjB,iBAkBLznF,EAAS,EAAK0nF,aAAat+E,IAAlB,UAAyBoG,EAAzB,YAAmCyd,IAlBvC,+BAoBLohB,EAAUjiB,SAAU,EApBf,UAqBU,EAAKu7D,WAAWn4E,EAAQyd,EAAe,EAAG/Z,GACpDma,QAAQ,WACLghB,EAAUjiB,SAAU,IAvBvB,QAqBLpsB,EArBK,kBA2BLquC,IAAc,EAAKA,UA3Bd,0DA+BJruC,EAAOgtB,SAAS/a,QACjB,EAAKy1E,aAAa/vE,IAAI8vE,EAAgBznF,GAG1C2V,KAAa+X,SAAS1tB,EAAOgtB,UAC7BhtB,EAAOgtB,SAASm3C,UAEhB,EAAKyjB,WAAW5nF,EAAOgtB,SAAU,SAAAxtB,GACzBQ,EAAOgtB,SAAS/a,OAAS,IACzB,EAAKg0E,qBAAqBhB,GAAmBO,qBAAsB,EAAKjlF,UACxEgI,WAAW,WAAO,IACGs/E,EAAmB,EAAKroF,MAAjCsmF,QACJ+B,EAAe51E,QAAgC,EAAtBq1E,KACzB,EAAKpnF,SAAS,CACV4lF,QAAS+B,EAAe97D,MAAM,EAAyB,EAAtBu7D,QAG1C,MAEFtnF,EAAOgtB,SAAS/a,QACjB,EAAKu1E,0BAIPxzE,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAOhU,EAAOgtB,UAClC,EAAKmS,aAAan/B,EAAOgtB,UAzDhB,kBA2DFhtB,GA3DE,0CA5qBM,EA0uBnBwnF,sBA1uBmB,qBA0uBK,gDAAAv3E,EAAA,wDACZT,EAAW,EAAKvP,MAAhBuP,OACAs2E,EAAY,EAAKtmF,MAAjBsmF,QAFY,iBAGZz3C,EAHY,EAGZA,UAEH7+B,EALe,oDAOds4E,EAAe7vD,YAAgBzoB,GAPjB,oDAUhBuM,EAAWmB,KAAgBjB,YAAY6rE,GAVvB,kCAYC14D,YAAgB5f,GAZjB,QAYhBuM,EAZgB,kBAcfA,EAASmc,6BAdM,0DAkBpBmW,EAAUk5C,qBAAsB,EAlBZ,UAoBS1nF,IAAgBC,KAAK,CAC9C,QAAS,uBACToc,eAAgBH,EAASmc,+BAtBT,WAoBd6vD,EApBc,8DA0BhB15C,EAAUjiB,QA1BM,0DA4Bda,EAAgB64D,EAAQ7zE,OAAS,GAAK6zE,EAAQ,GAAGxxE,UAAYyzE,EAAenqF,GAAKkoF,EAAQ,GAAGloF,GAAK,EACjGsV,EAA0B,IAAlB+Z,EAA2C,EAAtBq6D,IAA0BA,IAE7Dj5C,EAAUjiB,SAAU,EA/BA,UAgCC,EAAKu7D,WAAWI,EAAenqF,GAAIqvB,EAAe,EAAG/Z,GACzEma,QAAQ,WACLghB,EAAUjiB,SAAU,IAlCJ,WAgCdpsB,EAhCc,OAqChBquC,IAAc,EAAKA,UArCH,0DAyCpB14B,KAAa+X,SAAS1tB,EAAOgtB,UAC7BhtB,EAAOgtB,SAASm3C,UAChB,EAAKyjB,WAAW5nF,EAAOgtB,SAAU,SAAAxtB,GACzBQ,EAAOgtB,SAAS/a,OAAS,GACzB,EAAKg0E,qBAAqBhB,GAAmBO,qBAAsB,EAAKjlF,UAG5E,EAAK2mF,sBAAsBlnF,EAAQkT,KAGjCc,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAOhU,EAAOgtB,UAClC,EAAKmS,aAAan/B,EAAOgtB,UArDL,kBAuDbhtB,GAvDa,0CA1uBL,EAoyBnBowC,eApyBmB,qBAoyBF,0CAAAngC,EAAA,wDACLT,EAAW,EAAKvP,MAAhBuP,OACAs2E,EAAY,EAAKtmF,MAAjBsmF,QAFK,iBAGLz3C,EAHK,EAGLA,UAEKjzB,KAAUhS,IAAIoG,GALd,qDAQT6+B,EAAUjiB,QARD,qDAST,EAAKg6D,iBATI,0DAWPn5D,EAAgB64D,GAAWA,EAAQ7zE,OAAS,EAAI6zE,EAAQA,EAAQ7zE,OAAS,GAAGrU,GAAK,EACjFsV,EAAQ4yE,EAAQ7zE,OAASq1E,IAA2C,EAAtBA,IAA0BA,IAE9Ej5C,EAAUjiB,SAAU,EAdP,UAeQ,EAAKu7D,WAAWn4E,EAAQyd,EAAwB,EAAR/Z,EAAWA,GACnEma,QAAQ,WACLghB,EAAUjiB,SAAU,IAjBf,WAePpsB,EAfO,OAoBTquC,IAAc,EAAKA,UApBV,0DAwBbkC,aAAwBvwC,EAAQ,EAAKR,MAAMsmF,SAE3CnwE,KAAa+X,SAAS1tB,EAAOgtB,UAC7BhtB,EAAOgtB,SAASm3C,UAChB,EAAK4hB,oBAAqB,EAC1B,EAAKkB,eAAejnF,EAAOgtB,SAAU,GAAI,WACrC,EAAK+4D,oBAAqB,EACtB/lF,EAAOgtB,SAAS/a,OAAS,GACzB1J,WAAW,WAAO,IACGs/E,EAAmB,EAAKroF,MAAjCsmF,QACJ+B,EAAe51E,OAA+B,EAAtBq1E,KACxB,EAAKpnF,SAAS,CACV4lF,QAAS+B,EAAe97D,MAAM87D,EAAe51E,OAA+B,EAAtBq1E,MACvD,WACC,EAAKrB,qBAAqBhB,GAAmBO,qBAAsB,EAAKjlF,aAGjF,KAILyT,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAOhU,EAAOgtB,UAClC,EAAKmS,aAAan/B,EAAOgtB,UA/CZ,kBAiDNhtB,GAjDM,0CApyBE,EAk6BnBgnF,kBAAoB,WAChB,IAAK,EAAKh6D,SAAU,OAAO,KAK3B,IAHA,IAAMA,EAAW,GACXg7D,EAAc,IAAI31E,IAClB4Y,EAAQg9D,YAAY,EAAK58D,QAAS,EAAK+sB,UACpC7lC,EAAI,EAAGA,EAAI0Y,EAAMhZ,OAAQM,IAAK,CACnC,IAAM21E,EAAiB,EAAKl7D,SAAS/B,EAAM1Y,IAC3C,GAAI21E,EAAgB,CAChB,IADgB,EACAA,EACkCjoF,MAA1CuP,EAFQ,EAERA,OAAQqU,EAFA,EAEAA,UAAW1P,EAFX,EAEWA,WAC3B,GAAI0P,EAAW,CACX,IAAM/hB,EAAG,UAAM0N,EAAN,YAAgBqU,GACzBmkE,EAAYrwE,IAAI7V,EAAKA,GACrBkrB,EAAS7Z,KAAK,CAAE3D,SAAQqU,mBACrB,GAAI1P,EACP,IAAK,IAAIi6B,EAAI,EAAGA,EAAIj6B,EAAWlC,OAAQm8B,IAAK,CACxC,IAAMtsC,EAAG,UAAM0N,EAAN,YAAgB2E,EAAWi6B,IACpC45C,EAAYrwE,IAAI7V,EAAKA,GACrBkrB,EAAS7Z,KAAK,CAAE3D,SAAQqU,UAAW1P,EAAWi6B,OAM9D,OAAK+5C,YAAU,EAAKC,UAAWJ,GASxB,MARHnoF,IAAgBgG,aAAa,CAAE,QAAS,6BAA8BmnB,SAAUg7D,IAGhF,EAAKI,UAAYJ,EAEVh7D,IAj8BI,EAu8BnBq7D,oBAAsB,SAAAC,GAAiB,IAAD,EACP,EAAKroF,MAAxBuP,EAD0B,EAC1BA,OACR,IAFkC,EAClBkJ,QAIM,OALY,eAI1BmU,cACR,CAOA,IAAM9M,EAAQpK,KAAaqK,SAASxQ,GACpC,GAAKuQ,GACAA,EAAM6iD,UACP7iD,EAAM6iD,OAAO3wD,QAAU,GAA3B,CAIA,IAFA,IAAM+a,EAAW,GACX/B,EAAQg9D,YAAY,EAAK58D,QAAS,EAAK+sB,UACpC7lC,EAAI,EAAGA,EAAI0Y,EAAMhZ,OAAQM,IAAK,CACnC,IAAM21E,EAAiB,EAAKl7D,SAAS/B,EAAM1Y,IAC3C,GAAI21E,EAAgB,CAChB,IADgB,EACAA,EACkCjoF,MAA1CuP,EAFQ,EAERA,OAAQqU,EAFA,EAEAA,UAAW1P,EAFX,EAEWA,WAC3B,GAAI0P,EACAmJ,EAAS7Z,KAAK,CAAE3D,SAAQqU,mBACrB,GAAI1P,EACP,IAAK,IAAIi6B,EAAI,EAAGA,EAAIj6B,EAAWlC,OAAQm8B,IACnCphB,EAAS7Z,KAAK,CAAE3D,SAAQqU,UAAW1P,EAAWi6B,MAM9D,GAAKphB,KACDA,EAAS/a,QAAU,GAAvB,CAMA,IAJA,IAAMs2E,EAAQv7D,EAAS,GAAGnJ,UACpB2kE,EAAQx7D,EAASA,EAAS/a,OAAS,GAAG4R,UAExCjmB,EAAK,EACA2U,EAAI,EAAGA,EAAIwN,EAAM6iD,OAAO3wD,OAAQM,IAAK,CAC1C,IAAMqwD,EAAS7iD,EAAM6iD,OAAOrwD,GAC5B,GAAIqwD,EAAOhlE,IAAM2qF,GAAS3lB,EAAOhlE,IAAM4qF,EAAO,CAC1C5qF,EAAKglE,EAAOhlE,GACZ,OAIR,IAAKA,EAAI,CACL,IAAM6qF,EAAc1oE,EAAM6iD,OAAO7iD,EAAM6iD,OAAO3wD,OAAS,GAAGrU,GACpD8qF,EAAc3oE,EAAM6iD,OAAO,GAAGhlE,GAEhC8qF,EAAcH,EACd3qF,EAAK8qF,EACED,EAAcD,IACrB5qF,EAAK6qF,GAxDqB,IA4D1B5hB,EAAiClxD,KAAjCkxD,cAAeL,EAAkB7wD,KAAlB6wD,cAEvB,GAAI5oE,KAAQ4oE,GAAiBA,EAAch3D,SAAWA,GAAUg3D,EAAc5oE,KAAOA,GAAK,CAGtF,GAAI0qF,GAAgBzhB,GAAiBA,EAAcr3D,SAAWA,GAAUq3D,EAAcjpE,GAAKA,EAEvF,OAIJiC,IAAgBgG,aAAa,CAAE,QAAS,mCAAoC2J,SAAQqU,UAAWjmB,SA9gCpF,EAohCnB+qF,2BAA6B,WAAO,IAAD,EACsB,EAAKnpF,MAAlDqmF,EADuB,EACvBA,kBAAmBU,EADI,EACJA,aAAcT,EADV,EACUA,QACnC16D,EAAO,EAAKC,QAAQhV,QAEtB+U,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKoF,aAAeC,KACtD,EAAK21D,kBAAoBP,IACrB,EAAKh5D,gBAAkBzB,EAAKD,WAAa,EAAK0B,eAAiB,EAAK+7D,cAAgB9C,EACpF,EAAK5lF,SAAS,CACV2lF,mBAAmB,EACnBU,aAAc,KAEVA,EAAat0E,QACrB,EAAK/R,SAAS,CACV2lF,mBAAmB,KAK1BA,GACD,EAAK3lF,SAAS,CAAE2lF,mBAAmB,IAI3C,EAAK+C,YAAc9C,GA3iCJ,EA8iCnBt5D,aAAe,WACX,IAAMpB,EAAO,EAAKC,QAAQhV,QASpBiyE,EAAe,EAAKz7D,cAAgBzB,EAAKD,UAE/C,EAAK67D,oBAEA,EAAK6B,2BACN,EAAKR,oBAAoBC,GAG7B,EAAKK,6BAEsB,OAAvB,EAAK97D,gBACDy7D,GAAgBl9D,EAAKD,WAAasF,MAClC,EAAKhE,cAGJ67D,GAAiBl9D,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKoF,aAAeC,MAC5E,EAAK2f,kBAIb,EAAKvjB,cAAgBzB,EAAKD,WA5kCX,EA+kCnB86D,qBAAuB,SAACP,EAAgBnlF,EAAUsQ,GAAc,IAAD,EAC7B,EAAK5Q,MADwB,KACnDuP,OADmD,EAC3CqU,UACkCtjB,GAAY,CAC1D4qB,UAAW,EACXqF,aAAc,EACd/E,aAAc,IALyC,EAEnDN,UAFmD,EAExCqF,aAFwC,EAE1B/E,aAejC,OAAQi6D,GACJ,KAAKT,GAAmBG,iBACpB,EAAK0D,iBACL,MAEJ,KAAK7D,GAAmBK,kBACpB,EAAKyD,kBACL,MAEJ,KAAK9D,GAAmBI,iBACpB,EAAK2D,iBACL,MAEJ,KAAK/D,GAAmBM,mBACpB,EAAK0D,iBAAiBp4E,GACtB,MAEJ,KAAKo0E,GAAmBO,qBACpB,EAAK0D,mBAAmB3oF,GACxB,MAEJ,KAAK0kF,GAAmBzb,QArnCb,EA2nCnB0f,mBAAqB,SAAA3oF,GAAa,IACtB4qB,EAA0C5qB,EAA1C4qB,UAAWqF,EAA+BjwB,EAA/BiwB,aACbpF,GAD4C7qB,EAAjBkrB,aACpB,EAAKJ,QAAQhV,SAY1B+U,EAAKD,UAAYA,GAAaC,EAAKoF,aAAeA,IAzoCnC,EAmpCnBw4D,eAAiB,WAiBb,IAjBoB,IAAD,EACW,EAAK/oF,MAA3BuP,EADW,EACXA,OACAs2E,GAFW,EACHjiE,UACI,EAAKrkB,MAAjBsmF,SACF16D,EAAO,EAAKC,QAAQhV,QAatB8yE,GAXS/tE,KAAUhS,IAAIoG,IAWZ,GACN+C,EAAI,EAAGA,EAAIuzE,EAAQ7zE,OAAQM,IAAK,CACrC,IAAI62E,EAAgB,EAAKC,SAASjgF,IAAImJ,GAClCqP,EAAOqpD,eAAqBme,GAChC,GAAIxnE,GACIwnE,EAAcnpF,MAAM67E,oBAAqB,CACzC1wD,EAAKD,UAAYvJ,EAAK0J,UAhBN,EAiBhB69D,GAAW,EACX,OAaPA,GACD,EAAKL,kBAzrCM,EA6rCnBG,iBAAmB,SAAAp4E,GAOf,IAP2B,IAEnBgT,EAAsBhT,EAAtBgT,UAAW4F,EAAW5Y,EAAX4Y,OACXq8D,EAAY,EAAKtmF,MAAjBsmF,QACF16D,EAAO,EAAKC,QAAQhV,QAGjB9D,EAAI,EAAGA,EAAIuzE,EAAQ7zE,OAAQM,IAAK,CACrC,IAAM62E,EAAgB,EAAKC,SAASjgF,IAAImJ,GAClCo7C,EAAOsd,eAAqBme,GAClC,GAAIz7B,GACIy7B,EAAcnpF,MAAM4jB,YAAcA,EAAW,CAC7CuH,EAAKD,UAAYwiC,EAAKriC,UAAY7B,GACvB,EACX,SA3sCG,EAitCnBs/D,gBAAkB,WAed,IAfqB,IAAD,EACU,EAAK9oF,MAA3BuP,EADY,EACZA,OAAQqU,EADI,EACJA,UACRiiE,EAAY,EAAKtmF,MAAjBsmF,QACF16D,EAAO,EAAKC,QAAQhV,QAWtB8yE,GAAW,EACN52E,EAAI,EAAGA,EAAIuzE,EAAQ7zE,OAAQM,IAAK,CACrC,IAAM62E,EAAgB,EAAKC,SAASjgF,IAAImJ,GAClCo7C,EAAOsd,eAAqBme,GAClC,GAAIz7B,IACIy7B,EAAcnpF,MAAM4jB,YAAcA,GAC/BulE,EAAcnpF,MAAMkU,aAAqE,IAAvDi1E,EAAcnpF,MAAMkU,WAAWmF,QAAQuK,IAAmB,CAC3FuH,EAAKK,aAAekiC,EAAKliC,aAEzBL,EAAKD,UAAYwiC,EAAKriC,UAGtBF,EAAKD,UAAYwiC,EAAKriC,UAAYF,EAAKK,aAAe,EAAMkiC,EAAKliC,aAAe,EAEpF09D,GAAW,EACX,OAKPA,GACD,EAAKtM,iBAAiBrtE,EAAQA,EAAQqU,EAAWA,IApvCtC,EAowCnBilE,eAAiB,WAAO,IAAD,EACW,EAAK7oF,MAC7BmrB,GAFa,EACX5b,OADW,EACHqU,UACH,EAAKwH,QAAQhV,SAUJ+U,EAAKoF,aAAepF,EAAKK,eACzBL,EAAKD,YACvBC,EAAKD,UAAYC,EAAKoF,aAAepF,EAAKK,eAlxC/B,EAsyCnBk8D,WAAa,SAACn4E,EAAQyd,EAAexD,EAAQvW,GAAW,IAC5CwF,EAAW,EAAKzY,MAAhByY,OAER,GAAIA,EAAQ,CACR,GAAsB,IAAlBuU,GAAkC,IAAXxD,GAAgBvW,IAAUo0E,IAAqB,CACtE,IAAMvnE,EAAQpK,KAAaqK,SAASxQ,GACpC,GAAIuQ,GAASA,EAAM6iD,QAAU7iD,EAAM6iD,OAAO3wD,OAAS,EAC/C,OAAOwB,QAAQ2xB,QAAQ,CACnB,QAAS,WACTpY,SAAS,aAAKjN,EAAM6iD,UAKhC,OAAO/iE,IAAgBC,KAAK,CACxB,QAAS,qBACTwU,QAAS9E,EACT4d,gBAAiBH,EACjBxD,SACAvW,QACAwF,SACAyU,eAAgB,KAChBtU,MAAO,OAIf,OAAOhZ,IAAgBC,KAAK,CACxB,QAAS,iBACTwU,QAAS9E,EACT4d,gBAAiBH,EACjBxD,SACAvW,WAr0CW,EAy0CnBo2E,cAz0CmB,qBAy0CH,oCAAAr5E,EAAA,uDACkB,EAAKhQ,MAA3BuP,EADI,EACJA,OAAQqU,EADJ,EACIA,UACRiiE,EAAY,EAAKtmF,MAAjBsmF,QAEFlqE,EAAOR,KAAUhS,IAAIoG,GAEvBs2E,EAAQ56D,KAAK,SAAA7sB,GAAC,OAAIA,EAAEiW,UAAY9E,GAAUnR,EAAET,KAAOimB,IAAcA,GAAajI,GAAQA,EAAKwe,aAAax8B,KAAOS,EAAET,KACjH,EAAKkrF,iBAEL,EAAKjM,iBAAiBrtE,EAAQA,EAAQqU,EAAWA,GATzC,yCAz0CG,EAs1CnB0lE,oBAAsB,SAAA3nF,GAClBA,EAAM6B,iBACN7B,EAAM4B,kBAFqB,IAInBgM,EAAW,EAAKvP,MAAhBuP,OACHg+C,YAAqBh+C,IAErB5N,EAAMm8E,cACNn8E,EAAMm8E,aAAayL,MAAMt+D,KAAK,SAAA7sB,GAAC,MAAU,UAANA,KAExCwB,IAAgBgG,aAAa,CACzB,QAAS,uBACT8B,UAAU,EACVo2E,aAAcn8E,EAAMm8E,gBAn2CT,EAu2CnB0L,sBAAwB,SAAA7nF,GAAU,IACtB2kF,EAAiB,EAAK/mF,MAAtB+mF,aAER,GAAIA,EAAat0E,OAAS,EAAG,CACzB,IAAMy3E,EAAYnD,EAAaoD,MAC/B,GAAID,EAAW,CAAC,IACJl6E,EAAsBk6E,EAAtBl6E,OAAQqU,EAAc6lE,EAAd7lE,UACZrU,IAAW,EAAKvP,MAAMuP,QACtBsU,aAAStU,EAAQqU,SAIzB,EAAKylE,iBAh3CT,EAAK5B,aAAe,IAAIr1E,IACxB,EAAKg8B,UAAY,CACb1nB,KAAM,IAAIE,KACVuF,SAAS,EACTC,WAAW,EACXk7D,qBAAqB,GAGzB,EAAK/nF,MAAQ,CACTyd,WAAY,EACZigB,cAAe,KACfspD,cAAc,EACdV,QAAS,GACT7rD,cAAc,EACd4sD,iBAAiB,EACjB+C,mBAAoB,EACpB/D,mBAAmB,EACnBU,aAAc,IAGlB,EAAKl7D,QAAUvqB,IAAM2Y,YACrB,EAAK2+B,SAAWt3C,IAAM2Y,YACtB,EAAKowE,oBAAsB/oF,IAAM2Y,YAEjC,EAAK4sE,gBAAkB,GACvB,EAAKgD,SAAW,IAAIh3E,IAEpB,EAAK20E,kBAAoBhkE,YAAS,EAAKgkE,kBAAmB,KAC1D,EAAKqB,oBAAsBrlE,YAAS,EAAKqlE,oBAAqB,KA/B/C,E,8EAkCD,IACN74E,EAAWrQ,KAAKc,MAAhBuP,OACAs2E,EAAY3mF,KAAKK,MAAjBsmF,QAEFlqE,EAAOR,KAAUhS,IAAIoG,GAC3B,IAAKoM,EAAM,OAAO,EALL,IAOLwe,EAAiBxe,EAAjBwe,aACR,OAAKA,GAEE0rD,EAAQ7zE,OAAS,GAAK6zE,EAAQA,EAAQ7zE,OAAS,GAAGrU,IAAMw8B,EAAax8B,K,8CAoBxDyC,EAAWC,GAC/B,IAAM8qB,EAAOjsB,KAAKksB,QAAQhV,QAGpB9V,EAAW,CACb4qB,UAH8CC,EAA1CD,UAIJqF,aAJ8CpF,EAA/BoF,aAKf/E,aAL8CL,EAAjBK,cASjC,OADAtsB,KAAKoB,SAAWA,EACTA,I,yCAGQF,EAAWC,EAAWC,GAAW,IAAD,EACjBpB,KAAKc,MAA3BuP,EADuC,EACvCA,OAAQqU,EAD+B,EAC/BA,UACc1kB,KAAKK,MAA3BqmF,kBAEK1mF,KAAKksB,QAAQhV,QAWtBhW,EAAUmP,SAAWA,GAAUnP,EAAUwjB,YAAcA,GACvD1kB,KAAK09E,iBAAiBrtE,EAAQnP,EAAUmP,OAAQqU,EAAWxjB,EAAUwjB,a,4CAIvD3I,EAAWC,GAAY,IAAD,EACVhc,KAAKc,MAA3BuP,EADgC,EAChCA,OAAQqU,EADwB,EACxBA,UADwB,EAEsD1kB,KAAKK,MAA3FgnF,EAFgC,EAEhCA,aAAcV,EAFkB,EAElBA,QAASn+E,EAFS,EAETA,SAAUsyB,EAFD,EAECA,aAAc4sD,EAFf,EAEeA,gBAAiBhB,EAFhC,EAEgCA,kBAExE,OAAI3qE,EAAU1L,SAAWA,IAKrB0L,EAAU2I,YAAcA,IAKxB1I,EAAU0qE,oBAAsBA,IAKhC1qE,EAAUqrE,eAAiBA,KAK1BsD,YAAc3uE,EAAU2qE,QAASA,KAKlC3qE,EAAUxT,WAAaA,IAKvBwT,EAAU8e,eAAiBA,GAK3B9e,EAAU0rE,kBAAoBA,U,0CASjB,IAAD,EACc1nF,KAAKc,MAA3BuP,EADQ,EACRA,OAAQqU,EADA,EACAA,UAChB1kB,KAAK09E,iBAAiBrtE,EAAQ,KAAMqU,EAAW,MAE/CwV,KAAS/uB,GAAG,0BAA2BnL,KAAKi7D,2BAC5C/gC,KAAS/uB,GAAG,2BAA4BnL,KAAK4jF,4BAC7C3nE,KAAU9Q,GAAG,2BAA4BnL,KAAK66B,4BAC9CrkB,KAAarL,GAAG,6BAA8BnL,KAAKynF,yBACnDjxE,KAAarL,GAAG,8BAA+BnL,KAAKynF,yBACpDjxE,KAAarL,GAAG,wBAAyBnL,KAAKmnF,yBAC9C3wE,KAAarL,GAAG,6BAA8BnL,KAAKgnF,8BACnDxwE,KAAarL,GAAG,mBAAoBnL,KAAKghB,oBACzCxK,KAAarL,GAAG,uBAAwBnL,KAAK+gB,wBAC7CvK,KAAarL,GAAG,uBAAwBnL,KAAK0gB,wBAC7ClK,KAAarL,GAAG,wBAAyBnL,KAAKymE,yBAC9CjwD,KAAarL,GAAG,6BAA8BnL,KAAK2nF,8BACnDnxE,KAAarL,GAAG,0BAA2BnL,KAAK2nF,8BAChDv9E,IAAYe,GAAG,0BAA2BnL,KAAKosE,2BAC/ChiE,IAAYe,GAAG,0BAA2BnL,KAAKsnF,2BAC/Cl9E,IAAYe,GAAG,uBAAwBnL,KAAKwnF,0B,6CAI5CttD,KAAS5uB,IAAI,0BAA2BtL,KAAKi7D,2BAC7C/gC,KAAS5uB,IAAI,2BAA4BtL,KAAK4jF,4BAC9C3nE,KAAU3Q,IAAI,2BAA4BtL,KAAK66B,4BAC/CrkB,KAAalL,IAAI,6BAA8BtL,KAAKynF,yBACpDjxE,KAAalL,IAAI,8BAA+BtL,KAAKynF,yBACrDjxE,KAAalL,IAAI,wBAAyBtL,KAAKmnF,yBAC/C3wE,KAAalL,IAAI,6BAA8BtL,KAAKgnF,8BACpDxwE,KAAalL,IAAI,mBAAoBtL,KAAKghB,oBAC1CxK,KAAalL,IAAI,uBAAwBtL,KAAK+gB,wBAC9CvK,KAAalL,IAAI,uBAAwBtL,KAAK0gB,wBAC9ClK,KAAalL,IAAI,wBAAyBtL,KAAKymE,yBAC/CjwD,KAAalL,IAAI,6BAA8BtL,KAAK2nF,8BACpDnxE,KAAalL,IAAI,0BAA2BtL,KAAK2nF,8BACjDv9E,IAAYkB,IAAI,0BAA2BtL,KAAKosE,2BAChDhiE,IAAYkB,IAAI,0BAA2BtL,KAAKsnF,2BAChDl9E,IAAYkB,IAAI,uBAAwBtL,KAAKwnF,0B,+EAsS1Bn3E,EAAQkuB,EAAgB7Z,EAAWopB,G,oHAChDrxB,EAAOR,KAAUhS,IAAIoG,GACrBu6E,EAAe3uE,KAAUhS,IAAIs0B,GAEnCv+B,KAAKkvC,UAAY,CACb1nB,KAAM,IAAIE,KACVuF,SAAS,EACTC,WAAW,EACXk7D,qBAAqB,GAEjBl5C,EAAclvC,KAAdkvC,UAERlvC,KAAK0tB,cAAgB,KACrB1tB,KAAKknF,gBAAkB,GAEjB2D,EAAiB,MAEnBpuE,E,wBACI8hB,IAAmBluB,GAAWrQ,KAAKc,MAAMyY,QACzC7Y,IAAgBC,KAAK,CACjB,QAAS,WACTwU,QAAS9E,IAIXqtB,GAAUhZ,GAAajI,EAAK8f,aAAe,EAC7CzO,EAAgB,EAChB4P,GAAUjhB,EAAKquE,2BACfh9D,EAAgBrR,EAAKquE,2BACdpmE,EACPoJ,EAAgBpJ,EACTmmE,IACP/8D,EAAgB+8D,EAAenmE,WAE7B4F,EAASoT,GAAUhZ,GAAammE,GAAkB,EAAI1C,IAAsB,EAC5Ep0E,EAAQ2pB,GAAUhZ,GAAammE,EAAiB,EAAI1C,IAAsBA,IAEhFj5C,EAAUjiB,SAAU,E,UACCjtB,KAAKwoF,WAAW/rE,EAAKhe,GAAIqvB,EAAexD,EAAQvW,GACpES,MAAM,SAAArD,GACH,MAAO,CACH,QAAS,WACT0c,SAAU,GACVO,YAAa,KAElBF,QAAQ,WACPghB,EAAUjiB,SAAU,I,WARlBpsB,E,OAWFquC,IAAclvC,KAAKkvC,U,sDAIvB14B,KAAa+X,SAAS1tB,EAAOgtB,UAC7BhtB,EAAOgtB,SAASm3C,UAEZylB,EAAqBzqF,KAAKK,MAAMoqF,mBAChCp6E,IAAWkuB,E,oBACXksD,EAAqB1mF,OAAOq2E,YACxB39D,GAAQA,EAAK8f,aAAe,G,iBACnBnpB,EAAIvS,EAAOgtB,SAAS/a,OAAS,E,aAAGM,GAAK,G,oBAClC3U,EAAOoC,EAAOgtB,SAASza,GAAvB3U,MAEHoC,EAAOgtB,SAASza,GAAG+qB,aACpB1/B,EAAKge,EAAKquE,4BACVrsF,EAAKgsF,G,iBAELA,EAAqBhsF,E,4DAPoB2U,I,wBAarDq3E,EAAqBA,IAAuB1mF,OAAOq2E,UAAY,EAAIqQ,E,QAGnElE,EAAiBT,GAAmBG,iBACpCvhE,EACA6hE,EAAiBT,GAAmBK,kBAC7BzoD,GAAU+sD,EACjBlE,EAAiBT,GAAmBI,iBAC7B2E,IACPtE,EAAiBT,GAAmBM,oBAGxCpmF,KAAK0pF,2BAA4B,EACjC1pF,KAAKgE,QAAQymF,EAAoB5pF,EAAOgtB,SAAU,WAC9C,EAAKi5D,qBAAqBP,EAAgB,EAAKnlF,SAAUypF,GACrDnmE,GACAqmE,aAAiB16E,EAAQqU,GAE7BhmB,sBAAsB,WAClB,EAAKgrF,2BAA4B,IAGrC,EAAK3B,sBAAsBlnF,EAAQkT,KAIjCc,EAAQ7K,IAAU8K,WACxB0Z,YAAoB3Z,EAAOhU,EAAOgtB,UAClC7tB,KAAKggC,aAAan/B,EAAOgtB,UAEzB9Y,YAAiBF,EAAO,CAACxE,IACzB26E,YAAiBn2E,EAAOxE,GAEpBkuB,IAAmBluB,GAAWrQ,KAAKc,MAAMyY,QAEzC0xE,YAAa56E,G,wBAGjB6+B,EAAUjiB,SAAU,EACpBjtB,KAAKgE,QAAQ,EAAG,GAAI,WAChBkrC,EAAUjiB,SAAU,I,QAIxBsR,IAAmBluB,GAAWrQ,KAAKc,MAAMyY,QACrCqxE,IACAlqF,IAAgBC,KAAK,CACjB,QAAS,YACTwU,QAASopB,IAGP2sD,EAAgBC,YAAiBnrF,KAAKoB,SAAUpB,KAAKi5C,WAErDrjC,EAAU5V,KAAK6tB,SAASq9D,EAAclpE,UAC9B,EACoBpM,EAAQ9U,MAA9BuP,EADC,EACDA,OAAQqU,EADP,EACOA,UAEhBzI,KAAUuR,kBAAkB+Q,EAAgB,CAAEluB,SAAQqU,YAAW4F,OAAQ4gE,EAAc5gE,W,+IAM1FuD,GACT,GAAKA,GACmB,IAApBA,EAAS/a,QACR+a,EAAS,GAAG1Y,QAAjB,CAEA,IAAMi2E,EAAa,WACf1qF,IAAgBC,KAAK,CACjB,QAAS,eACTwU,QAAS0Y,EAAS,GAAG1Y,QACrBiD,YAAayV,EAAStZ,IAAI,SAAArV,GAAC,OAAIA,EAAET,QAIrCwM,OAAOogF,SACPD,IAEAprF,KAAKknF,gBAAgBlzE,KAAKo3E,M,gDAIRv9D,GAEtB,IAAK,IAAIza,EAAIya,EAAS/a,OAAS,EAAGM,GAAK,EAAGA,IAAK,CAC3C,IAAIwC,EAAUiY,EAASza,GACvB,GAAIwC,GAAWA,EAAQc,QACnB,OAAQd,EAAQc,QAAQ,UACpB,IAAK,eAAiB,IAAD,EACD1W,KAAKsrF,gBAAgB11E,GADpB,mBACZnX,EADY,KAEjB,GAFiB,KAGHwrB,YAAarU,EAAQc,QAAQC,MAAMC,OACpC8uB,MACL17B,IAAUuhF,oBAAoB9sF,EAAImX,GAG1C,MAEJ,IAAK,iBAAmB,IAAD,EACH5V,KAAKwrF,kBAAkB51E,GADpB,mBACdnX,EADc,KAEnB,GAFmB,KAGLmX,EAAQc,QAAQjW,QAAQA,QACzBilC,MACL17B,IAAUuhF,oBAAoB9sF,EAAImX,O,8BAyMtD60E,EAAoB9D,EAAS7xD,GACjC90B,KAAKe,SAAS,CAAE0pF,qBAAoB9D,WAAW7xD,K,qCAGpC22D,EAAc71E,EAASkf,GAClC,GAAKlf,EAAL,CAKA,IAAI+wE,EAAO,aAAO3mF,KAAKK,MAAMsmF,SACvB3kE,EAAQ2kE,EAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOgtF,KAC/B,IAAXzpE,EACA2kE,EAAQl3C,OAAOztB,EAAO,EAAGpM,GAEzB+wE,EAAU3mF,KAAKK,MAAMsmF,QAGzB3mF,KAAKe,SAAS,CAAE4lF,WAAW7xD,QAZnBA,GAAUA,M,6BAef6xD,EAASF,EAAU3xD,GACC,IAAnB6xD,EAAQ7zE,OAKZ9S,KAAKe,SAAS,CACV4lF,QAASA,EAAQrtE,OAAOtZ,KAAKK,MAAMsmF,SAASv0D,KAAK,SAACthB,EAAGo7B,GACjD,OAAIp7B,EAAErS,GAAKytC,EAAEztC,IACD,EACDqS,EAAErS,GAAKytC,EAAEztC,GACT,EAGJ,KAEZq2B,GAdKA,GAAUA,M,iCAiBX6xD,EAAS7xD,GACO,IAAnB6xD,EAAQ7zE,OAKZ9S,KAAKe,SAAS,CACV4lF,QAASA,EAAQrtE,OAAOtZ,KAAKK,MAAMsmF,UACpC7xD,GANCA,GAAYA,M,qCASL6xD,EAASF,EAAU3xD,GACP,IAAnB6xD,EAAQ7zE,OAKZ9S,KAAKe,S,wVAAL,EACI4lF,QAAS3mF,KAAKK,MAAMsmF,QAAQrtE,OAAOqtE,IAChCF,GACJ3xD,GAPKA,GAAUA,M,oCAUR1c,EAAa0c,GAAW,IAC1B6xD,EAAY3mF,KAAKK,MAAjBsmF,QACR,GAAuB,IAAnBA,EAAQ7zE,OAAZ,CAKA,IAAMyB,EAAM,IAAIrB,IAAIkF,EAAY7D,IAAI,SAAArV,GAAC,MAAI,CAACA,EAAGA,MAC7Cc,KAAKe,SAAS,CAAE4lF,QAASA,EAAQptE,OAAO,SAAAra,GAAC,OAAKqV,EAAIlB,IAAInU,EAAET,OAAQq2B,QALxDA,GAAUA,M,uCA6dLlf,EAASiyD,EAAa6jB,EAASC,GAC5C,IAAK/1E,EAAS,OAAO,EADsC,IAGnDT,EAA8DS,EAA9DT,QAASqS,EAAqD5R,EAArD4R,KAAM2W,EAA+CvoB,EAA/CuoB,YAAahT,EAAkCvV,EAAlCuV,OAAiByxD,GAAiBhnE,EAA1Bc,QAA0Bd,EAAjBgnE,cAErD,QAAI8O,MAIAC,MAIA/sE,YAAczJ,IAKd0yD,IACC2e,aAAiB3e,IACmB,mBAAjCA,EAAYnxD,QAAQ,UACa,qBAAjCmxD,EAAYnxD,QAAQ,WACnBk1E,aAAazgE,EAAQ08C,EAAY18C,SAClCgT,IAAgB0pC,EAAY1pC,aAC3B5f,aAASpJ,KAAa02E,aAAkBjP,EAAc/U,EAAY+U,eACnEp1D,EAAOqgD,EAAYrgD,KAAOskE,S,sCAItBl2E,EAASiyD,EAAa6jB,GAClC,GAAIA,EACA,OAAO,EAGX,IAAMlkE,EAAO,IAAIE,KAAoB,IAAf9R,EAAQ4R,MACxBukE,EAAWlkB,EAAc,IAAIngD,KAAwB,IAAnBmgD,EAAYrgD,MAAeA,EAEnE,OACIA,EAAKsvD,gBAAkBiV,EAASjV,eAChCtvD,EAAKwkE,aAAeD,EAASC,YAC7BxkE,EAAKupD,YAAcgb,EAAShb,Y,+BAQ1B,IAAD,SACsB/wE,KAAKc,MAAxBuP,EADH,EACGA,OAAQkJ,EADX,EACWA,OADX,EAEqFvZ,KAAKK,MAAvFsmF,EAFH,EAEGA,QAAS8D,EAFZ,EAEYA,mBAAoB3vD,EAFhC,EAEgCA,aAAc4sD,EAF9C,EAE8CA,gBAAiBhB,EAF/D,EAE+DA,kBAMpE,GAFA1mF,KAAKkqF,SAASnmD,QAEVjJ,EACA96B,KAAK6tB,SAAW,SACb,CACH7tB,KAAK6tB,SAAW,GAChB,IAFG,kBAGC,IAAMjY,EAAU+wE,EAAQvzE,GAChB+B,EAAuDS,EAAvDT,QAAS82E,EAA8Cr2E,EAA9Cq2E,eAAgB/zE,EAA8BtC,EAA9BsC,IAAKxB,EAAyBd,EAAzBc,QAClCw1E,GAD2Dt2E,EAAhBuoB,aAC9B,GACjB,GAAuB,MAAnB8tD,GAA2B/zE,GAA6B,iBAArBxB,EAAQ,UAAoD,iBAArBA,EAAQ,UA8C/E,GAAuB,MAAnBu1E,IAA2B/zE,IAA6B,oBAArBxB,EAAQ,UAAuD,iBAArBA,EAAQ,UAA8B,CAE1H,IADA,IAAMy1E,EAAQ,CAACv2E,GACNq5B,EAAI77B,EAAI,EAAG67B,EAAI77B,EAAIg5E,KAAwBn9C,EAAI03C,EAAQ7zE,QACxD6zE,EAAQ13C,GAAGg9C,iBAAmBA,EADkCh9C,IAEhEk9C,EAAMn4E,KAAK2yE,EAAQ13C,IAM3B,GAAIk9C,EAAMr5E,OAAS,EAAG,CAClB,IAAM5T,EAAI0W,EACJiyD,EAAcz0D,EAAI,EAAIuzE,EAAQvzE,EAAI,GAAK,KACvCi5E,EAAcj5E,EAAI+4E,EAAMr5E,OAAS6zE,EAAQ7zE,OAAS6zE,EAAQvzE,EAAI+4E,EAAMr5E,QAAU,KAE9EkxC,EAAW,EAAKsoC,gBAAgBptF,EAAG2oE,EAAmB,IAANz0D,GAEhDu4E,EAAgBlB,IAAuBvrF,EAAET,GACzC8tF,IAAoBF,GAAc5B,IAAuB4B,EAAY5tF,GACrE4f,EAAY,EAAKmuE,iBAAiBttF,EAAG2oE,EAAmB,IAANz0D,EAASu4E,GAC3Dc,EAAgB,EAAKD,iBAAiBH,EAAantF,GAAG,EAAOqtF,GAE7D7P,GAAY2P,GACX7F,aAAiB6F,IACgB,mBAAjCA,EAAY31E,QAAQ,UACa,qBAAjC21E,EAAY31E,QAAQ,WACnBk1E,aAAa1sF,EAAEisB,OAAQkhE,EAAYlhE,SACnC5M,aAASrf,EAAEiW,WAAa02E,aAAkB3sF,EAAE09E,aAAcyP,EAAYzP,eACvE19E,EAAEi/B,cAAgBkuD,EAAYluD,aAC9BsuD,EAEP,EAAK5+D,SAAS7Z,KACV,kBAAC,GAAD,CACIrR,IAAG,kBAAawS,EAAb,2BAAuC82E,EAAvC,iBAA8DjoC,EAA9D,kBAAgF3lC,EAAhF,iBAAkGq+D,GACrGzhE,IAAK,SAAAyW,GAAE,OAAIy6D,EAAMxsF,QAAQ,SAACT,EAAG8iB,GAAY,EAAKkoE,SAAS1xE,IAAIpF,EAAI4O,EAAO0P,MACtErhB,OAAQ8E,EACRH,WAAYm3E,EAAM53E,IAAI,SAAArV,GAAC,OAAIA,EAAET,KAC7B4f,UAAWA,EACXq+D,SAAUA,EACVC,oBAAqBwP,EAAM53E,IAAI,SAAArV,GAAC,OAAIA,EAAET,KAAIstB,KAAK,SAAA7sB,GAAC,OAAIA,EAAET,KAAOgsF,IAC7DzmC,SAAUA,EACVxiD,OAAQ+X,EAAS,SAAW,UAEpCnG,GAAM+4E,EAAMr5E,OAAS,EACrBo5E,GAAa,QA1F+F,CAEhH,IADA,IAAMC,EAAQ,CAACv2E,GACNq5B,EAAI77B,EAAI,EAAG67B,EAAI77B,EAAIg5E,KAAwBn9C,EAAI03C,EAAQ7zE,QACxD6zE,EAAQ13C,GAAGg9C,iBAAmBA,EADkCh9C,IAEhEk9C,EAAMn4E,KAAK2yE,EAAQ13C,IAM3B,GAAIk9C,EAAMr5E,OAAS,EAAG,CAClB,IAAM5T,EAAI0W,EACJiyD,EAAcz0D,EAAI,EAAIuzE,EAAQvzE,EAAI,GAAK,KACvCi5E,EAAcj5E,EAAI+4E,EAAMr5E,OAAS6zE,EAAQ7zE,OAAS6zE,EAAQvzE,EAAI+4E,EAAMr5E,QAAU,KAE9EkxC,EAAW,EAAKsoC,gBAAgBptF,EAAG2oE,EAAmB,IAANz0D,GAEhDu4E,EAAgBlB,IAAuBvrF,EAAET,GACzC8tF,IAAoBF,GAAc5B,IAAuB4B,EAAY5tF,GACrE4f,EAAY,EAAKmuE,iBAAiBttF,EAAG2oE,EAAmB,IAANz0D,EAASu4E,GAC3Dc,EAAgB,EAAKD,iBAAiBH,EAAantF,GAAG,EAAOqtF,GAE7D7P,GAAY2P,GACX7F,aAAiB6F,IACgB,mBAAjCA,EAAY31E,QAAQ,UACa,qBAAjC21E,EAAY31E,QAAQ,WACnBk1E,aAAa1sF,EAAEisB,OAAQkhE,EAAYlhE,SACnC5M,aAASrf,EAAEiW,WAAa02E,aAAkB3sF,EAAE09E,aAAcyP,EAAYzP,eACvE19E,EAAEi/B,cAAgBkuD,EAAYluD,aAC9BsuD,EAEP,EAAK5+D,SAAS7Z,KACV,kBAAC,GAAD,CACIrR,IAAG,kBAAawS,EAAb,2BAAuC82E,EAAvC,iBAA8DjoC,EAA9D,kBAAgF3lC,EAAhF,iBAAkGq+D,GACrGzhE,IAAK,SAAAyW,GAAE,OAAIy6D,EAAMxsF,QAAQ,SAACT,EAAG8iB,GAAY,EAAKkoE,SAAS1xE,IAAIpF,EAAI4O,EAAO0P,MACtErhB,OAAQ8E,EACRH,WAAYm3E,EAAM53E,IAAI,SAAArV,GAAC,OAAIA,EAAET,KAC7B4f,UAAWA,EACXq+D,SAAUA,EACVC,oBAAqBwP,EAAM53E,IAAI,SAAArV,GAAC,OAAIA,EAAET,KAAIstB,KAAK,SAAA7sB,GAAC,OAAIA,EAAET,KAAOgsF,IAC7DzmC,SAAUA,EACVxiD,OAAQ+X,EAAS,SAAW,UAEpCnG,GAAM+4E,EAAMr5E,OAAS,EACrBo5E,GAAa,GAkDrB,IAAKA,EAAY,CAOb,IAAMhtF,EAAI0W,EACJiyD,EAAcz0D,EAAI,EAAIuzE,EAAQvzE,EAAI,GAAK,KACvCi5E,EAAcj5E,EAAIuzE,EAAQ7zE,OAAS,EAAI6zE,EAAQvzE,EAAI,GAAK,KAExD4wC,EAAW,EAAKsoC,gBAAgBptF,EAAG2oE,EAAmB,IAANz0D,GAElDypE,EAAI,KACR,GAAI2J,aAAiBtnF,GACjB29E,EACI,kBAAC,GAAD,CACIl6E,IAAG,kBAAazD,EAAEiW,QAAf,eAA6BjW,EAAET,GAA/B,iBAA0CulD,GAC7C/oC,IAAK,SAAAyW,GAAE,OAAI,EAAKw4D,SAAS1xE,IAAIpF,EAAGse,IAChCrhB,OAAQnR,EAAEiW,QACVuP,UAAWxlB,EAAET,GACbk+E,oBAAqB8N,IAAuBvrF,EAAET,GAC9CulD,SAAUA,EACVxiD,OAAQ+X,EAAS,SAAW,aAGjC,CACH,IAAMoyE,EAAgBlB,IAAuBvrF,EAAET,GACzC8tF,EAAoBF,GAAe5B,IAAuB4B,EAAY5tF,GACtE4f,EAAY,EAAKmuE,iBAAiBttF,EAAG2oE,EAAmB,IAANz0D,EAASu4E,GAC3Dc,EAAgB,EAAKD,iBAAiBH,EAAantF,GAAG,EAAOqtF,GAE7D7P,GAAY2P,GACX7F,aAAiB6F,IACgB,mBAAjCA,EAAY31E,QAAQ,UACa,qBAAjC21E,EAAY31E,QAAQ,WACnBk1E,aAAa1sF,EAAEisB,OAAQkhE,EAAYlhE,SACpC5M,aAASrf,EAAEiW,WAAa02E,aAAkB3sF,EAAE09E,aAAcyP,EAAYzP,eACtE19E,EAAEi/B,cAAgBkuD,EAAYluD,aAC9BsuD,EAEP5P,EACI,kBAAC,GAAD,CACIl6E,IAAG,kBAAazD,EAAEiW,QAAf,eAA6BjW,EAAET,GAA/B,iBAA0CulD,EAA1C,kBAA4D3lC,EAA5D,iBAA8Eq+D,GACjFzhE,IAAK,SAAAyW,GAAE,OAAI,EAAKw4D,SAAS1xE,IAAIpF,EAAGse,IAChCrhB,OAAQnR,EAAEiW,QACVuP,UAAWxlB,EAAET,GACb8+B,aAAcr+B,EAAEm+B,cAChBhf,UAAWA,EACXq+D,SAAUA,EACVC,oBAAqB8N,IAAuBvrF,EAAET,GAC9CulD,SAAUA,EACVxiD,OAAQ+X,EAAS,SAAW,SAKxC,EAAKsU,SAAS7Z,KAAK6oE,GA7JxB,KAEMzpE,EAAI,EAAGA,EAAIuzE,EAAQ7zE,OAAQM,IAAM,EAAjCA,GAgKb,OACI,yBACI/R,UAAWiN,IAAW,gBAAiB,CACnC,iCAAkCo5E,IAEtC5I,YAAa9+E,KAAKoqF,qBAClB,yBAAKnvE,IAAKjb,KAAKksB,QAAS7qB,UAAU,wBAAwBuxB,SAAU5yB,KAAKqtB,cACrE,yBAAKhsB,UAAU,sBACf,yBAAK4Z,IAAKjb,KAAKi5C,SAAU53C,UAAU,uBAC9BrB,KAAK6tB,WAGd,kBAAC,GAAD,CAAWxd,OAAQA,IACnB,kBAAC,GAAD,MACCq2E,GACG,kBAAC,GAAD,CAAkBzrE,IAAKjb,KAAK0qF,oBAAqBj8E,QAASzO,KAAKsqF,wBAEnE,kBAAC,GAAD,MACA,kBAAC,GAAD,U,gDAtjDoBxpF,EAAOT,GACnC,OAAIS,EAAMuP,SAAWhQ,EAAMyd,YAAchd,EAAM4jB,YAAcrkB,EAAM09B,cACxD,CACHjgB,WAAYhd,EAAMuP,OAClB0tB,cAAej9B,EAAM4jB,UACrBoW,cAAc,EACd4sD,iBAAiB,EACjB+C,mBAAoB3pF,EAAMuP,SAAWhQ,EAAMyd,WAAa,EAAIzd,EAAMoqF,mBAClE/D,kBACI5lF,EAAMuP,SAAWhQ,EAAMyd,aAAezd,EAAMqmF,mBAAqBrmF,EAAM+mF,aAAat0E,OAAS,GACjGs0E,aAActmF,EAAMuP,SAAWhQ,EAAMyd,WAAa,GAAKzd,EAAM+mF,cAI9D,S,GA9DYzlF,IAAMC,WC5B3B8qF,I,mBACF,WAAY5rF,GAAQ,IAAD,uBACf,4CAAMA,KAsCVigB,uBAAyB,SAAAve,GAAW,IACxB6N,EAAW,EAAKvP,MAAhBuP,OAER,GAAIA,IADgB7N,EAAZ2S,QACR,CAEA,IAAMyL,EAAQpK,KAAaqK,SAASxQ,GAC9Bs8E,EAAc/rE,GAASA,EAAM6iD,OAAO3wD,OAAS8N,EAAM6iD,OAAO3wD,OAAS,EAEzE,EAAK/R,SAAS,CACV4rF,kBAhDW,EAoDnBlmB,wBAA0B,SAAAjkE,GAAW,IACzB6N,EAAW,EAAKvP,MAAhBuP,OAER,GAAIA,IADgB7N,EAAZ2S,QACR,CAEA,IAAMyL,EAAQpK,KAAaqK,SAASxQ,GAC9Bs8E,EAAc/rE,GAASA,EAAM6iD,OAAO3wD,OAAS8N,EAAM6iD,OAAO3wD,OAAS,EAEzE,EAAK/R,SAAS,CACV4rF,kBA7DW,EAiEnBvkB,8BAAgC,SAAA5lE,GAC5B,EAAKzB,SAAS,CACV6rF,cAAep2E,KAAa0yC,cAAcpxC,QAnE/B,EAuEnB3U,YAAc,WACgB,EAAK9C,MAAvBusF,cACY,GAChB91E,eAGJq+C,gBA1EA,IAAMv0C,EAAQpK,KAAaqK,SAAS/f,EAAMuP,QAH3B,OAKf,EAAKhQ,MAAQ,CACTusF,cAAep2E,KAAa0yC,cAAcpxC,KAC1C60E,YAAa/rE,GAASA,EAAM6iD,OAAO3wD,OAAS8N,EAAM6iD,OAAO3wD,OAAS,GAPvD,E,mFAWGiJ,EAAWC,EAAWqK,GAAc,IAAD,EACdrmB,KAAKK,MAApCusF,EAD6C,EAC7CA,cAD6C,EAC9BD,YAEvB,OAAI3wE,EAAU4wE,gBAAkBA,IAI5B5wE,EAAU2wE,aACH,K,0CAOXn2E,KAAarL,GAAG,6BAA8BnL,KAAKooE,+BACnD5xD,KAAarL,GAAG,8BAA+BnL,KAAKooE,+BACpD5xD,KAAarL,GAAG,wBAAyBnL,KAAKymE,yBAC9CjwD,KAAarL,GAAG,uBAAwBnL,KAAK+gB,0B,6CAI7CvK,KAAalL,IAAI,6BAA8BtL,KAAKooE,+BACpD5xD,KAAalL,IAAI,8BAA+BtL,KAAKooE,+BACrD5xD,KAAalL,IAAI,wBAAyBtL,KAAKymE,yBAC/CjwD,KAAalL,IAAI,uBAAwBtL,KAAK+gB,0B,+BA4CxC,IACEvQ,EAAMxQ,KAAKc,MAAX0P,EADH,EAEkCxQ,KAAKK,MAApCusF,EAFH,EAEGA,cAAeD,EAFlB,EAEkBA,YAEnBtwE,EAAQ7L,EAAE,kBAOd,OANoB,IAAhBm8E,EACAtwE,EAAQ7L,EAAE,iBACHm8E,EAAc,IACrBtwE,EAAK,UAAMswE,EAAN,YAAqBn8E,EAAE,oBAI5B,yBAAKnP,UAAWiN,IAAW,iBAAkB,CAAE,2BAA4Bs+E,EAAgB,KACvF,kBAACx2E,EAAA,EAAD,CACI/U,UAAU,sCACVoN,QAASzO,KAAKmD,aACd,kBAAC,GAAD,OAEJ,yBAAK9B,UAAU,0BACX,kBAAC,GAAD,CAAe6wC,MAAO06C,IACtB,yBAAKvrF,UAAWiN,IAAW,gBAAiB,SACxC,0BAAMjN,UAAU,yBAAyBgb,U,GAtG9B1a,IAAMC,YAmH1BgP,iBAAkB87E,ICnH3BG,I,kNAEFxsF,MAAQ,G,EAyBRysF,yBAA2B,SAAAtqF,GACW,EAAK1B,MAA/BuP,SACW7N,EAAX6N,QAIR,EAAKtP,SAAS,CACVgsF,QAAQ,K,EAIhBC,0BAA4B,SAAAxqF,GACxB,EAAKzB,SAAS,CACVgsF,QAAQ,K,EAIhBE,e,qBAAiB,4BAAAn8E,EAAA,qDACLT,EAAW,EAAKvP,MAAhBuP,OAERqzD,aAAoBrzD,EAAQ,MAHf,yC,mFA1BbmG,KAAarL,GAAG,yBAA0BnL,KAAK8sF,0BAC/Ct2E,KAAarL,GAAG,0BAA2BnL,KAAKgtF,6B,6CAIhDx2E,KAAalL,IAAI,yBAA0BtL,KAAK8sF,0BAChDt2E,KAAalL,IAAI,0BAA2BtL,KAAKgtF,6B,+BA0B3C,IAAD,EACiBhtF,KAAKc,MAAnBuP,EADH,EACGA,OAAQG,EADX,EACWA,EAEhB,IADmBxQ,KAAKK,MAAhB0sF,OACK,OAAO,KAEpB,IAAMG,EAAgBlZ,YAAe3jE,GAAUG,EAAE,oBAAsBA,EAAE,sBAEzE,OACI,yBAAKnP,UAAU,mBACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,0BACX,kBAAC,GAAD,CAAsBgP,OAAQA,IAC9B,kBAAC,GAAD,CAAcA,OAAQA,EAAQkJ,OAAQ,CAAE,QAAS,gCACjD,kBAAC,GAAD,CAAek1B,QAASy+C,EAAe1qB,UAAWxiE,KAAKitF,uB,gDA5D3CnsF,EAAOT,GAAQ,IACnCyd,EAAezd,EAAfyd,WACAzN,EAAWvP,EAAXuP,OACR,OAAIyN,IAAezN,EACR,CACHyN,WAAYzN,EACZ08E,QAAQ,GAIT,S,GAdcprF,IAAMC,YAkFpBgP,iBAAkBi8E,I,0CCzE3BM,G,2MACF9sF,MAAQ,CACJ0mC,SAAU,M,EAGd6mB,gBAAkB,SAAAnrD,GACd,EAAKisB,WAAWjsB,EAAMukC,gB,EAG1BtY,WAAa,SAAAqY,GACT,EAAKhmC,SAAS,CAAEgmC,c,EAGpB5jC,YAAc,WACV,EAAKpC,SAAS,CAAEgmC,SAAU,Q,EAG9BtxB,eAAiB,WACb,EAAKtS,cADc,IAGXqN,EAAM,EAAK1P,MAAX0P,EAEFkF,EAAO,EAAK03E,gBAAgB3rB,KAAa4rB,YAC1C33E,IAEL7E,EAAK6E,GAEL,EAAKC,sBAAsBnF,EAAE,iB,EAGjC48E,gBAAkB,SAAAC,GACd,IAAKA,EAAY,MAAO,GADI,IAGpBt3C,EAASs3C,EAATt3C,KACR,IAAKA,EAAM,MAAO,GAElB,IAAM3lB,EAAoBpd,IAAY/I,IAAI,YAE1C,OAAQmmB,EAAoBA,EAAkBznB,MAAQ,yBAA2B,eAAiBotC,G,EAGtGpgC,sBAAwB,SAAAC,GAAY,IAAD,EACY,EAAK9U,MAAxC+U,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIzT,IAAI,QACJ0T,aAAW,QACXC,MAAM,UACNjV,UAAU,4BACVoN,QAAS,kBAAMqH,EAAcC,KAC7B,kBAAC/G,EAAA,EAAD,W,EAMhBs+E,YAAc,WACV,EAAKnqF,cAEL,IAAMuS,EAAO,EAAK03E,gBAAgB3rB,KAAa4rB,YAC/C,GAAK33E,EAAL,CAEAhV,IAAgBgG,aAAa,CACzB,QAAS,yBACT2mF,WAAY,OAGhB,IAAMt2E,EAAsB,CACxB,QAAS,mBACTxL,KAAM,CACF,QAAS,gBACTA,KAAMmK,EACN4B,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,GAGjBrC,aAAQuB,K,wEAGF,IAAD,EACoB/W,KAAKc,MAAtB0P,EADH,EACGA,EAAGnP,EADN,EACMA,UACH0lC,EAAa/mC,KAAKK,MAAlB0mC,SAER,OACI,oCACI,kBAAC3wB,EAAA,EAAD,CACI/U,UAAWA,EACXgV,aAAW,QACXqE,KAAM+N,QAAQse,GACdt4B,QAASzO,KAAK4tD,iBACd,kBAAC7a,GAAD,OAEJ,kBAAC9K,GAAA,EAAD,CACIxpC,GAAG,mBACHsoC,SAAUA,EACVrsB,KAAM+N,QAAQse,GACdmB,mBAAoB,KACpBC,sBAAoB,EACpBolD,qBAAqB,EACrBnlD,qBAAqB,EACrB9iB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhB1K,QAAS9a,KAAKmD,aACd,kBAACwiB,GAAA,EAAD,CAAUlX,QAASzO,KAAKyV,gBACpB,kBAACqK,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,eAE7B,kBAACmV,GAAA,EAAD,CAAUlX,QAASzO,KAAKstF,aACpB,kBAACxtE,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS5P,EAAE,0B,GA7Hb7O,IAAMC,WA4I3B6Z,GALCC,YACZ9K,cACA+K,IAGWF,CAAQ0xE,ICzIjBK,I,mBACF,WAAY1sF,GAAQ,IAAD,8BACf,4CAAMA,KAiDV2sF,iCAAmC,SAAAjrF,GAAW,IAClC6qF,EAAe5rB,KAAf4rB,WAER,EAAKtsF,SAAS,CAAEssF,gBArDD,EAwDnBK,6BAA+B,SAAAlrF,GAAW,IAC9B6qF,EAAe7qF,EAAf6qF,WAQR,GANA,EAAKtsF,SAAS,CAAEssF,cAAc,WAC1BjkF,WAAW,WACP,EAAKikB,gBACN,KAGHggE,EAAY,CACZ,IAAMx4E,EAAQ7K,IAAU8K,WACxB64E,YAAsB94E,EAAOw4E,KAnElB,EAuEnBlqF,YAAc,WACVzC,IAAgBgG,aAAa,CACzB,QAAS,yBACT2mF,WAAY,QA1ED,EA8EnBx6C,WAAa,WAAO,IACRw6C,EAAe,EAAKhtF,MAApBgtF,WACR,GAAKA,EAAL,CAFe,IAIPO,EAAiBP,EAAjBO,aAERltF,IAAgBC,KAAK,CACjB,QAAS,mBACTktF,OAAQR,EAAW5uF,GACnBmvF,cAAeA,IAGnB,EAAKzqF,gBA1FU,EA6FnBohF,mBAAqB,SAAAC,GAAc,IAGzB/jF,EAFiB,EAAKJ,MAApBgtF,WACAprB,SACiBhlD,KAAK,SAAA/d,GAAC,OAAIA,EAAEuB,QAAQhC,KAAO+lF,IACpD,GAAK/jF,EAAL,CAEA,IAAMoU,EAAQ7K,IAAU8K,WACxB2vE,YAAmB5vE,EAAOpU,EAAS,MAEX,EAAKokF,oBAAoBL,GACjC7kF,QAAQ,SAAAT,GACpBulF,YAAmB5vE,EAAO3V,EAAG,UAxGlB,EA4GnB2lF,oBAAsB,SAAAL,GAAc,IACxB6I,EAAe,EAAKhtF,MAApBgtF,WACR,IAAKA,EAAY,MAAO,GAFO,IAIvBprB,EAAaorB,EAAbprB,SACR,IAAKA,EAAU,MAAO,GAEtB,IAAM6iB,EAAU,GACV9iE,EAAQigD,EAASttC,UAAU,SAAAz1B,GAAC,OAAIA,EAAEuB,QAAQhC,KAAO+lF,IACvD,IAAe,IAAXxiE,EAAc,MAAO,GAEzB,IACMwgE,EAAMljF,KAAK2O,MAAM+T,EADE,GAEnB+iE,EAAS/iE,EAFU,EAInBgjE,EAAUxC,EAAM,EAChByC,EAAUzC,EAAM,EAChB0C,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdJ,EAAQ9wE,KAXS,EAWegxE,EAAUE,GAE9CJ,EAAQ9wE,KAba,EAaWgxE,EAAUD,GACtCI,EAdiB,GAejBL,EAAQ9wE,KAfS,EAeegxE,EAAUG,IAI9CD,GAAc,GACdJ,EAAQ9wE,KApBa,EAoBWwuE,EAAM0C,GAEtCC,EAtBqB,GAuBrBL,EAAQ9wE,KAvBa,EAuBWwuE,EAAM2C,GAGtCF,EAAU3lF,KAAK8lF,KAAKnjB,EAASnvD,OA1BR,KA2BjBoyE,GAAc,GACdJ,EAAQ9wE,KA5BS,EA4BeixE,EAAUC,GAE9CJ,EAAQ9wE,KA9Ba,EA8BWixE,EAAUF,GACtCI,EA/BiB,GAgCjBL,EAAQ9wE,KAhCS,EAgCeixE,EAAUE,IAI3CL,EAAQvwE,IAAI,SAAAnB,GAAC,OAAI6uD,EAAS7uD,MA3JlB,EAiMnBjL,cAAgB,WAEZ,EAAKpH,SAAS,CAAEN,QADA,OAEhBC,IAAgBgG,aAAa,CACzB,QAAS,6BACTjG,QAJY,OAMhB,EAAKuiF,WAAY,EACjB/9E,SAASoG,oBAAoB,UAAW,EAAKlD,gBAzM9B,EA4MnBghE,iBAAmB,SAAA1mE,GACf,IAAM+hF,EAAYzgF,OAAOtB,EAAMukC,cAAcmoB,QAAQq1B,WAC/C/jF,EAAU,EAAK4kF,WAAWb,GAC3B/jF,GAEA,EAAKuiF,YAEV,EAAKjiF,SAAS,CAAEN,YAChBC,IAAgBgG,aAAa,CACzB,QAAS,6BACTjG,YAEJ,EAAK8jF,mBAAmBC,KAxNT,EA2NnBj8E,gBAAkB,SAAA9F,GACd,IAAM+hF,EAAYzgF,OAAOtB,EAAMukC,cAAcmoB,QAAQq1B,WAC/C/jF,EAAU,EAAK4kF,WAAWb,GAChC,GAAK/jF,EAcL,OAZA,EAAKM,SAAS,CAAEN,YAChBC,IAAgBgG,aAAa,CACzB,QAAS,6BACTjG,YAEJ,EAAK8jF,mBAAmBC,GAExB,EAAKxB,WAAY,EACjB/9E,SAASiG,iBAAiB,UAAW,EAAK/C,eAE1C1F,EAAM6B,iBACN7B,EAAM4B,mBACC,GA5OQ,EA+OnBgpB,aAAe,WACX,IAAM3W,EAAU,EAAKo3E,WAAW52E,QAChC,GAAKR,EAAL,CAIA,IAAMq3E,EAAYr3E,EAAQ2a,aAAe3a,EAAQ4V,aAC3CN,EAAY+hE,GAAmC,IAAtBr3E,EAAQsV,UACjCgiE,EAAeD,GAAcr3E,EAAQsV,UAAYtV,EAAQ4V,eAAkB5V,EAAQ2a,aACnF9O,EAASwrE,GAAar3E,EAAQsV,UAAY,GAAMtV,EAAQsV,UAAYtV,EAAQ4V,aAAgB5V,EAAQ2a,aAE1G,EAAKtwB,SAAS,CACVirB,YACAgiE,eACAzrE,aA7PW,EAiQnB0rE,iBAAmB,SAAChnF,EAAQinF,GAAiB,IACjCh3E,EAAY,EAAK42E,WAAjB52E,QACR,IAAKA,EAAS,OAAO,EAErB,IAAMi3E,EAAcj3E,EAAQk3E,wBACtBvoF,EAAMqoF,EAAYroF,IAAMsoF,EAAYtoF,IACpCwoF,EAASH,EAAYG,OAASF,EAAYE,OAEhD,QAAIxoF,EAAMsoF,EAAYp2E,WAKlBs2E,GAAWF,EAAYp2E,SA3Q3B,EAAK+1E,WAAansF,IAAM2Y,YAExB,EAAKja,MAAQ,CACTgtF,WAAY5rB,KAAa4rB,WACzB7I,UAAW,EACXjiE,QAAQ,EACRyJ,WAAW,EACXgiE,cAAc,GAVH,E,mFAcGjyE,EAAWC,EAAWqK,GAAc,IAAD,EACYrmB,KAAKK,MAA9DgtF,EAD6C,EAC7CA,WAAY5sF,EADiC,EACjCA,QAAS8hB,EADwB,EACxBA,OAAQyJ,EADgB,EAChBA,UAAWgiE,EADK,EACLA,aAEhD,OAAIX,IAAerxE,EAAUqxE,aAIzB5sF,IAAYub,EAAUvb,UAItB8hB,IAAWvG,EAAUuG,SAIrByJ,IAAchQ,EAAUgQ,WAIxBgiE,IAAiBhyE,EAAUgyE,kB,0CAQ/BvsB,KAAat2D,GAAG,yBAA0BnL,KAAK0tF,8BAC/CjsB,KAAat2D,GAAG,6BAA8BnL,KAAKytF,oC,6CAInDhsB,KAAan2D,IAAI,yBAA0BtL,KAAK0tF,8BAChDjsB,KAAan2D,IAAI,6BAA8BtL,KAAKytF,oC,iCAwI7CjJ,GAAY,IACX6I,EAAertF,KAAKK,MAApBgtF,WACR,IAAKA,EAAY,OAAO,KAFN,IAIVprB,EAAaorB,EAAbprB,SAEFwjB,EAAexjB,EAASttC,UAAU,SAAAz1B,GAAC,OAAIA,EAAEuB,QAAQhC,KAAO+lF,IAC9D,OAAyB,IAAlBiB,EAAsBxjB,EAASwjB,GAAgB,O,+BAyFhD,IAAD,OACGj1E,EAAMxQ,KAAKc,MAAX0P,EADH,EAE4DxQ,KAAKK,MAA9DgtF,EAFH,EAEGA,WAAY5sF,EAFf,EAEeA,QAAS8hB,EAFxB,EAEwBA,OAAQyJ,EAFhC,EAEgCA,UAAWgiE,EAF3C,EAE2CA,aAChD,IAAKX,EAAY,OAAO,KAHnB,IAKGhxE,EAAkCgxE,EAAlChxE,MAAO4lD,EAA2BorB,EAA3BprB,SAAU2rB,EAAiBP,EAAjBO,aAEnB9hE,EAAQm2C,EAAS1tD,IAAI,SAAArV,GAAC,OACxB,yBACImC,UAAU,0BACVsB,IAAKzD,EAAEuB,QAAQhC,GACfinF,kBAAiBxmF,EAAEuB,QAAQhC,GAC3BwQ,aAAc,EAAKk6D,iBACnB56D,YAAa,EAAKhG,iBAClB,kBAAC82E,GAAA,EAAD,CACI18E,IAAKzD,EAAEuB,QAAQhC,GACf4C,UAAU,kCACVZ,QAASvB,EACTg+C,UAAU,EACVzzC,MAAM,EACNnI,YAAaqkF,KACbC,SAAO,EACPpkF,OAAQC,KAAkB6sF,YAC1BC,eAAgB,EAAKN,mBAEzB,yBAAK5sF,UAAU,iCAAiCnC,EAAEoB,UAI1D,OACI,kBAAC,IAAD,CACIe,UAAWiN,IACP,qBACA,CAAE,4BAA6BiU,GAC/B,CAAE,gCAAiCyJ,GACnC,CAAE,mCAAoCgiE,IAE1CtzE,MAAI,EACJC,QAASC,KACTC,mBAAoB,EACpBC,QAAS9a,KAAKmD,YACd4X,kBAAgB,gCAChBxL,QAAS,CAAE87C,MAAO,6BAClB,kBAAC,IAAD,CACIhqD,UAAWiN,IAAW,2BAA4B,CAAE,8BAA+Bma,QAAQhoB,KAC3F6yD,mBAAiB,GACjB,kBAACl9C,EAAA,EAAD,CACIC,aAAW,QACX5H,QAASzO,KAAKmD,aACd,kBAAC6L,EAAA,EAAD,OAEJ,kBAACqR,GAAA,EAAD,CAAYC,QAAQ,KAAK7hB,GAAG,gCAAgC4C,UAAU,sCAAsCkf,QAAM,GAC7GlE,GAEL,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CACIpB,IAAKjb,KAAK8tF,WACVv+E,QAAS,CAAE5F,KAAM2E,IAAW,kCAAmC,sBAC/DuvE,YAAa79E,KAAKiJ,gBAClB60E,WAAY99E,KAAK+9E,eACjBnrD,SAAU5yB,KAAKqtB,cACdvB,GAEL,kBAACxQ,EAAA,EAAD,CAAeja,UAAWiN,IAAW,6BAA8B,CAAE,8BAA+Bma,QAAQhoB,MACxG,kBAAC8a,EAAA,EAAD,CAAQla,UAAU,mCAAmC48C,kBAAgB,EAAC39B,QAAQ,YAAYhK,MAAOs3E,EAAe,YAAc,UAAWn/E,QAASzO,KAAK6yC,YACnIriC,EAAfo9E,EAAiB,iBAAsB,iBAG/C,kBAACxtF,GAAA,EAAD,CAAgBK,QAASA,S,GA7VXkB,IAAMC,YAqWtBgP,iBAAkB48E,ICzJlBgB,I,mBApNX,WAAY1tF,GAAQ,IAAD,8BACf,4CAAMA,KA6CV2tF,2BAA6B,SAAAjsF,GAAW,IAC5B28C,EAAc,EAAK9+C,MAAnB8+C,UACR,GAAKA,EAAL,CAFmC,IAI3Bl6C,EAAak6C,EAAbl6C,SACR,GAAKA,EAAL,CALmC,IAOjB8E,EAAS9E,EAAnBA,SACR,GAAK8E,EAAL,CARmC,IAU3B9C,EAAWzE,EAAXyE,OAER,GAAI8C,EAAKtL,KAAOwI,EAAhB,CAIA,GAAI,EAAKynF,cACL,GAAI,EAAKA,cAAcvvC,YAAcA,EAEjC,GADa,IAAIz3B,KAAS,EAAKgnE,cAAcrvF,KAClC,IAIP,YAHA+J,WAAW,WACP,EAAKqP,eACN,KAMf,EAAKA,mBA1EU,EA6EnBymC,oCAAsC,SAAA18C,GAAW,IACrC28C,EAAc,EAAK9+C,MAAnB8+C,UACR,GAAKA,EAAL,CAF4C,IAIpCl6C,EAAak6C,EAAbl6C,SACR,GAAKA,EAAL,CAL4C,IAOpC+S,EAAc/S,EAAd+S,UACR,GAAKA,EAAL,CAR4C,IAUpCjO,EAASiO,EAATjO,KACR,GAAKA,EAAL,CAX4C,IAapC9C,EAAWzE,EAAXyE,OAEJ8C,EAAKtL,KAAOwI,IAIhB,EAAKynF,cAAgB,CACjBvvC,YACA9/C,KAAM,IAAIqoB,MAEd,EAAKjP,oBApGU,EAuGnBk2E,6BAA+B,SAAAnsF,GAAW,IAC9B28C,EAAc38C,EAAd28C,UAER,EAAKuvC,cAAgB,CACjBvvC,YACA9/C,KAAM,IAAIqoB,MAEd,EAAK3mB,SAAS,CACVo+C,eA/GW,EAmHnByvC,oCAAsC,SAAApsF,GAClC,EAAKiW,eApHU,EAuHnB6e,qBAAuB,SAAA90B,GACnB,EAAKzB,SAAS,CACVsP,OAAQ7N,EAAO+0B,WACf7S,UAAWliB,EAAOorC,iBA1HP,EA8HnB+7C,eAAiB,WACb,EAAKkF,aAAalF,kBA/HH,EAkInBQ,cAAgB,WACZ,EAAK0E,aAAa1E,iBAnIH,EAsInBP,gBAAkB,WACd,EAAKiF,aAAajF,mBApIlB,EAAKvpF,MAAQ,CACTgQ,OAAQ6pB,KAAS0G,YACjBlc,UAAWwV,KAAS2T,eACpB++C,cAAe,EACfztC,UAAW,KACX2vC,aAAc,MARH,E,mFAYG/yE,EAAWC,GAAY,IAAD,EACgBhc,KAAKK,MAArDgQ,EADgC,EAChCA,OAAQqU,EADwB,EACxBA,UAAWkoE,EADa,EACbA,cAAeztC,EADF,EACEA,UAC1C,OAAInjC,EAAU3L,SAAWA,IAGrB2L,EAAU0I,YAAcA,IAGxB1I,EAAU4wE,gBAAkBA,GAG5B5wE,EAAUmjC,YAAcA,M,0CAQ5BjlB,KAAS/uB,GAAG,oCAAqCnL,KAAK4uF,qCACtD10D,KAAS/uB,GAAG,qBAAsBnL,KAAKs3B,sBACvCrb,KAAU9Q,GAAG,6BAA8BnL,KAAK2uF,8BAChD3kF,IAAUmB,GAAG,2BAA4BnL,KAAKyuF,4BAC9CzkF,IAAUmB,GAAG,oCAAqCnL,KAAKk/C,uC,6CAIvDhlB,KAAS5uB,IAAI,oCAAqCtL,KAAK4uF,qCACvD10D,KAAS5uB,IAAI,qBAAsBtL,KAAKs3B,sBACxCrb,KAAU3Q,IAAI,6BAA8BtL,KAAK2uF,8BACjD3kF,IAAUsB,IAAI,2BAA4BtL,KAAKyuF,4BAC/CzkF,IAAUsB,IAAI,oCAAqCtL,KAAKk/C,uC,+BA+FlD,IAAD,SAiCoCl/C,KAAKK,MAAtCgQ,EAjCH,EAiCGA,OAAQqU,EAjCX,EAiCWA,UAAWy6B,EAjCtB,EAiCsBA,UAEvBz5C,EAAQ,KACRkhB,EAAM,KACV,GAAIu4B,EAAW,CAAC,IACJl6C,EAAak6C,EAAbl6C,SACR,GAAIA,EAAU,CAAC,IACH+S,EAA8B/S,EAA9B+S,UAAqBjO,EAAS9E,EAAnBA,SACf8E,IACA6c,EAAMD,YAAO5c,KAGZ6c,GAAO5O,IACR4O,EAAMD,YAAO3O,EAAUjO,OAI/BrE,EAAQ,CACJqhB,gBAAiBH,EAAG,cAAUA,EAAV,KAAmB,MAM/C,OACI,yBAAKvlB,UAAU,iBAAiBqE,MAAOA,GACnC,yBAAKrE,UAAU,sBACf,yBAAKA,UAAU,0BACX,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQgP,OAAQA,IAChB,kBAAC,GAAD,CAAc4K,IAAK,SAAAA,GAAG,OAAK,EAAK4zE,aAAe5zE,GAAM5K,OAAQA,EAAQqU,UAAWA,IAChF,kBAAC,GAAD,CAAQrU,OAAQA,KAEpB,kBAAC,GAAD,CAAgBA,OAAQA,IACxB,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GA/MYzO,c,SCNtBmtF,I,OAAc,IAAI77E,KAElB87E,G,iLACQ,IAAD,EACwBhvF,KAAKc,MAA1BmuF,EADH,EACGA,aAAcriB,EADjB,EACiBA,GACtB,IAAKA,EAAI,OAAO,KAFX,IAIGsiB,EAAwBtiB,EAAxBsiB,YAAaC,EAAWviB,EAAXuiB,OACrB,GAAKD,EAAL,CAEAH,GAAYhrD,QACZ,IAAMqrD,EAASF,EAAY36E,IAAI,SAACrV,EAAG8iB,GAAJ,OAAc8qD,aAAa5tE,EAAG0tE,EAAI5qD,EAAO,SAAA/G,GAAS8zE,GAAYv2E,IAAItZ,EAAG+b,OAEpG,OACI,6BAASA,IAAKg0E,EAAcI,IAAKF,EAAS,MAAQ,OAC7CC,Q,GAbKztF,IAAM4rC,eA+Bb9xB,GAPCC,YACZuX,cACAq8D,KAKW7zE,CAAQuzE,ICvCRntF,gBACX,0BAAMC,EAAE,4bACR,QCCEytF,I,mBACF,WAAYzuF,GAAQ,IAAD,8BACf,4CAAMA,KAiCV6C,YAAc,SAAAlB,GACVA,EAAM4B,mBAnCS,EAsCnBgpB,aAAe,WACX,IAAM9K,EAAS,EAAKk4B,UAAUvjC,QAC9B,GAAKqL,EAAL,CAEA,IAAM1c,EAA2B,IAArB0c,EAAOyJ,WAAmBzJ,EAAO8O,aAAe9O,EAAO+J,aAC7D+hE,EAAS9rE,EAAOyJ,UAAYzJ,EAAO+J,eAAiB/J,EAAO8O,cAAgB9O,EAAO8O,aAAe9O,EAAO+J,aAE9G,EAAKvrB,SAAS,CACV8E,MACAwoF,aA5CJ,EAAKhuF,MAAQ,CACTwF,KAAK,EACLwoF,QAAQ,GAGZ,EAAK5zC,UAAY94C,IAAM2Y,YARR,E,mFAWGyB,EAAWC,EAAWqK,GAAc,IAC9C9a,EAASvL,KAAKc,MAAdyK,KAD6C,EAE7BvL,KAAKK,MAArBwF,EAF6C,EAE7CA,IAAKwoF,EAFwC,EAExCA,OAEb,OAAItyE,EAAUxQ,OAASA,IACnByQ,EAAUnW,MAAQA,GAClBmW,EAAUqyE,SAAWA,K,0CAMzBruF,KAAKqtB,iB,yCAGUnsB,EAAWC,EAAWC,GAAW,IACxCmK,EAASvL,KAAKc,MAAdyK,KAEJrK,EAAUqK,OAASA,GACnBvL,KAAKqtB,iB,+BAqBH,IACE9hB,EAASvL,KAAKc,MAAdyK,KADH,EAEmBvL,KAAKK,MAArBwF,EAFH,EAEGA,IAAKwoF,EAFR,EAEQA,OAEb,OACI,yBAAKhtF,UAAU,gBAAgBoN,QAASzO,KAAK2D,aACzC,yBACIsX,IAAKjb,KAAKy6C,UACVp5C,UAAWiN,IACP,oBACA,wBAAyB,CACrB,4BAA6BzI,EAC7B,+BAAgCwoF,EAChC,8BAA+BxoF,IAAQwoF,IAE/Cz7D,SAAU5yB,KAAKqtB,cACf,yBAAKhsB,UAAU,sBAAsBkK,S,GApE9B5J,IAAMC,YA+EjC2tF,GAAajzE,aAAe,GAEbizE,U,SCuKAC,G,YA7OX,WAAY1uF,GAAQ,IAAD,8BACf,4CAAMA,KA+DV2uF,+BAAiC,SAAAjtF,GAAW,IAChC6G,EAAc7G,EAAd6G,UACHA,IAEY,EAAKhJ,MAAd0J,KACCtL,KAAO4K,EAAUpC,QAE1BvG,IAAgBgG,aAAa,CACzB,QAAS,uCACTgQ,QAAS,SAzEE,EAwFnBm4D,wBAA0B,SAAArsE,GAAW,IACzByE,EAAWzE,EAAXyE,OADwB,EAER,EAAKnG,MAArB8f,EAFwB,EAExBA,MAAO9I,EAFiB,EAEjBA,KACP/N,EAAS,EAAK1J,MAAd0J,KAER,GAAIA,GAAQA,EAAKtL,KAAOwI,EAAQ,CAAC,IAAD,EAC+ByoF,YAAc9uE,EAAO9I,GADpD,mBACrB3I,EADqB,KACd4I,EADc,KACNhO,EADM,KACAs2D,EADA,KACU0O,EADV,KAG5B,EAAKhuE,SAAS,CACVoO,QACA4I,SACAhO,OACA6c,IAAKD,YAAO5c,GACZglE,oBACA1O,eAtGO,EA2GnBsvB,iCAAmC,SAAAntF,GAAW,IAClCyE,EAAWzE,EAAXyE,OACA+Q,EAAc,EAAK3X,MAAnB2X,UAEJA,GAAaA,EAAUjO,KAAKtL,KAAOwI,GACnC,EAAKwR,eA7GT,EAAKg1D,SAAW9rE,IAAM2Y,YAEtB,EAAKja,MAAQ,GALE,E,iFA+Cf2J,IAAUmB,GAAG,wBAAyBnL,KAAK6uE,yBAC3C7kE,IAAUmB,GAAG,wBAAyBnL,KAAK6uE,yBAC3C7kE,IAAUmB,GAAG,4BAA6BnL,KAAK6uE,yBAC/C7kE,IAAUmB,GAAG,iCAAkCnL,KAAK2vF,kCACpD3lF,IAAUmB,GAAG,qCAAsCnL,KAAK2vF,kCACxDvlF,IAAYe,GAAG,+BAAgCnL,KAAKyvF,kC,6CAIpDzlF,IAAUsB,IAAI,wBAAyBtL,KAAK6uE,yBAC5C7kE,IAAUsB,IAAI,wBAAyBtL,KAAK6uE,yBAC5C7kE,IAAUsB,IAAI,4BAA6BtL,KAAK6uE,yBAChD7kE,IAAUsB,IAAI,iCAAkCtL,KAAK2vF,kCACrD3lF,IAAUsB,IAAI,qCAAsCtL,KAAK2vF,kCACzDvlF,IAAYkB,IAAI,+BAAgCtL,KAAKyvF,kC,yCAgBtCvuF,EAAWC,EAAWC,GAAW,IACxCwlB,EAAQ5mB,KAAKK,MAAbumB,IAER,GAAIzlB,EAAUylB,MAAQA,EAAK,CACvB,IAAMrhB,EAASvF,KAAKytE,SAASv2D,QAC7B,IAAK3R,EAAQ,OAEbA,EAAOi/B,U,+BAgCL,IAAD,SAC2BxkC,KAAKc,MAA7B8f,EADH,EACGA,MAAOvJ,EADV,EACUA,QAASiK,EADnB,EACmBA,IACxB,IAAKV,EAAO,OAAO,KAFd,MAcD5gB,KAAKK,MATL8O,EALC,EAKDA,MACA4I,EANC,EAMDA,OACAhO,EAPC,EAODA,KACA6c,EARC,EAQDA,IACAy5C,EATC,EASDA,SACAroD,EAVC,EAUDA,UACAuO,EAXC,EAWDA,cACAqpE,EAZC,EAYDA,UACA7gB,EAbC,EAaDA,kBAEJ,IAAKhlE,EAAM,OAAO,KAElB,IAAMyc,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EopE,EAAelpE,YAAO3O,GAExBu3D,EAAapgE,EACbqgE,EAAcz3D,EACZ2gE,EAAQoX,IAA8BxwF,KAAK+P,IAAIkgE,EAAYC,GAC3DuI,EAAIxI,EAAaC,EAAcsgB,IAA8BxwF,KAAK2O,MAAMshE,EAAamJ,GACrFV,EAAIxI,EAAcD,EAAaugB,IAA8BxwF,KAAK2O,MAAMuhE,EAAckJ,GAC5FnJ,EAAawI,EACbvI,EAAcwI,EAEd,IAAIthE,EAAU,KACRlV,EAASolB,EAAM,4BAAQA,IAAKA,EAAKlK,KAAM2jD,IAAc,KACrD3wD,EAAQqgF,aAAS/3E,EAAWuO,EAAegpD,EAAYC,GAE7D,OAAQ5uD,EAAM,UACV,IAAK,QACDlK,EACI,yBAAKrV,UAAU,gCACX,kBAACuM,EAAA,EAAD,CACIqN,IAAKjb,KAAKytE,SACVpsE,UAAU,oCACV4F,OAAQ8C,EAAKtL,GACb0Q,MAAOogE,EACPx3D,OAAQy3D,EACRwgB,OAAQjhB,EAAqB8gB,GAAgBrpE,EAAW,KACxDhgB,OAAQ,WACJ,EAAKzF,SAAS,CAAE6uF,WAAW,MAG9BpuF,IAEHouF,IAAc7gB,GAAqBr/D,GAG7C,MAEJ,IAAK,YAaDgH,EACI,yBAAKrV,UAAU,gCACX,2BACI4Z,IAAKjb,KAAKytE,SACVpsE,UAAU,oCACVoN,QAASzO,KAAKiwF,mBACd9yC,MAAI,EACJ+zB,UAAQ,EACR/hE,MAAOogE,EACPx3D,OAAQy3D,EACRhpE,OAAQ,WACJ,EAAKzF,SAAS,CAAE6uF,WAAW,MAG9BpuF,IAEHouF,GAAalgF,GAGvB,MAEJ,QACIgH,EACI,yBAAKrV,UAAU,6BAA6BulB,IAAKA,EAAKkC,IAAI,GAAGra,QAASzO,KAAKiwF,qBAKvF,OACI,yBAAK5uF,UAAU,wBACVqV,GACCq4D,GAAqB,kBAACzvB,GAAA,EAAD,CAAcv1C,KAAMA,EAAMywC,OAAQ,IACxDnjC,KAAa64E,aAAY74E,EAAQ9L,QAAU2kF,aAAY74E,EAAQ84E,SAAW7uE,IACvE,kBAAC,GAAD,CACI/V,KACI,oCACI,kBAAC6kF,GAAA,EAAD,CAAS7kF,KAAM8L,EAAQ9L,KAAM4kF,OAAQ94E,EAAQ84E,SAC7C,kBAACrlE,GAAA,EAAD,CAAUxJ,IAAKA,W,gDApNXxgB,EAAOT,GAAQ,IACnCugB,EAA8B9f,EAA9B8f,MAAO9I,EAAuBhX,EAAvBgX,KAAuBhX,EAAjBuW,QAAiBvW,EAARwgB,IAE9B,GAAIV,IAAUvgB,EAAMgwF,UAAW,CAC3B,IAAMr4E,EAAYs4E,YAAmB1vE,GAC/B2F,EAAgBgqE,YAAuB3vE,GAFlB,EAI8B8uE,YAAc9uE,EAAO9I,GAJnD,mBAItB3I,EAJsB,KAIf4I,EAJe,KAIPhO,EAJO,KAIDs2D,EAJC,KAIS0O,EAJT,KAK3BhlE,EAAOC,IAAUC,IAAIF,EAAKtL,KAAOsL,EACjC,IAAI6c,EAAMD,YAAO5c,GAEjB,IAAK6c,GAAOmoD,EAAmB,CAAC,IACpB9rE,EAAU2d,EAAV3d,MACJA,IACA2jB,EAAG,6BAAyB7c,EAAKtL,GAA9B,iBAAyCsL,EAAK+N,KAA9C,sBAAgE7U,EAAMutF,YAIjF,MAAO,CACHH,UAAWzvE,EAEX6vE,MAAO,EACPb,WAAW,EACXzgF,QACA4I,SACAhO,OACA6c,MACAplB,OAjBS,KAkBTutE,oBACA1O,WACAroD,YACAuO,iBAIR,OAAO,S,GA5C6B5kB,IAAMC,WCuBnC8uF,I,kNAhCX/sF,YAAc,SAAAlB,GACVA,EAAM4B,kBADa,MAGW,EAAKvD,MAA3BkP,EAHW,EAGXA,SAAUvB,EAHC,EAGDA,QAEduB,GAEJvB,EAAQhM,I,wEAGF,IAAD,EACkDzC,KAAKc,MAApDkP,EADH,EACGA,SAAU2gF,EADb,EACaA,KAAMhiD,EADnB,EACmBA,SAAUttC,EAD7B,EAC6BA,UAAWqE,EADxC,EACwCA,MAEvCu3B,EAAK3uB,IACP0B,EAAW,+BAAiC,sBAC5C,CAAE2gF,KAAMA,GACRtvF,GAGJ,OACI,yBAAKA,UAAW47B,EAAIv3B,MAAOA,EAAO+I,QAASzO,KAAK2D,aAC3CgrC,O,GAtBehtC,IAAMC,YCwBvBgvF,I,wLAxBD,IAAD,EAC8B5wF,KAAKc,MAAhCub,EADH,EACGA,MAAOa,EADV,EACUA,SAAUxX,EADpB,EACoBA,MAEzB,OACI,yBAAKrE,UAAU,2BAA2BqE,MAAOA,GAC7C,yBAAKrE,UAAU,oCACX,8BAAOgb,GACNoM,QAAQvL,IACL,qCAEKA,S,GAXOvb,IAAMC,YC6B3BivF,I,kNAlCXltF,YAAc,SAAAlB,GACVA,EAAM4B,kBADa,MAGW,EAAKvD,MAA3B2N,EAHW,EAGXA,QAHW,EAGFuB,UAIjBvB,EAAQhM,I,wEAGF,IAAD,EAC0CzC,KAAKc,MAA5Cmf,EADH,EACGA,QAAS0uB,EADZ,EACYA,SAAU3+B,EADtB,EACsBA,SAAUqM,EADhC,EACgCA,MAErC,OACI,yBACIhb,UAAWiN,IAAW,6BAA8B,CAChD,qCAAsC2R,EACtC,sCAAuCjQ,IAE3CqM,MAAOA,EACP5N,QAASzO,KAAK2D,aACbgrC,O,GAtBqBhtC,IAAMC,YCStCkvF,G,2MACFzwF,MAAQ,G,EA4ER0wF,aAAe,SAAAvuF,GAAW,IACdyE,EAAW,EAAKnG,MAAhBmG,OACA8C,EAASvH,EAATuH,KAEJA,EAAKtL,KAAOwI,GAEZ8C,EAAKulC,MAAM0hD,0BACX,EAAKC,mB,EAIbpiB,wBAA0B,SAAArsE,GAAW,IACzByE,EAAW,EAAK5G,MAAhB4G,OAEJA,IAAWzE,EAAOyE,QAClB,EAAKlG,SAAS,CACViP,SAAU8gF,EAA0BI,aAAajqF,M,EAS7DtD,YAAc,SAAAlB,GACVA,EAAM4B,kBADa,IAGXoK,EAAY,EAAK3N,MAAjB2N,QACa,EAAKpO,MAAlB2P,UAGRvB,EAAQhM,I,kFA3FOvB,EAAWC,EAAWC,GACjCF,EAAU+F,SAAWjH,KAAKc,MAAMuP,QAChCrQ,KAAKixF,oB,wCAIM,IAAD,OAENhqF,EAAWjH,KAAKc,MAAhBmG,OAER,IADa+C,IAAU27B,QAAQ1+B,GAC/B,CAKA,IAAM8C,EAAOC,IAAUC,IAAIhD,GAC3B,GAAK8C,EAAL,CAVc,IAeNulC,EAAUvlC,EAAVulC,MACR,GAAKA,GACAA,EAAM0hD,yBAAX,CAGA,IAAMn8E,EAAQ7K,IAAU8K,WACxB9K,IAAUmnF,aAAat8E,EAAO9K,EAAM,KAAM,WAEtC,EAAKhJ,SAAS,CACViP,SAAU8gF,EAA0BI,aAAajqF,Y,0CAMzDjH,KAAKixF,kBAELjnF,IAAUmB,GAAG,aAAcnL,KAAK+wF,cAEhC/mF,IAAUmB,GAAG,4BAA6BnL,KAAK6uE,yBAC/C7kE,IAAUmB,GAAG,uBAAwBnL,KAAK6uE,yBAC1C7kE,IAAUmB,GAAG,2BAA4BnL,KAAK6uE,yBAC9C7kE,IAAUmB,GAAG,wBAAyBnL,KAAK6uE,yBAC3C7kE,IAAUmB,GAAG,uBAAwBnL,KAAK6uE,yBAC1C7kE,IAAUmB,GAAG,wBAAyBnL,KAAK6uE,2B,6CAI3C7kE,IAAUsB,IAAI,aAActL,KAAK+wF,cAEjC/mF,IAAUsB,IAAI,4BAA6BtL,KAAK6uE,yBAChD7kE,IAAUsB,IAAI,uBAAwBtL,KAAK6uE,yBAC3C7kE,IAAUsB,IAAI,2BAA4BtL,KAAK6uE,yBAC/C7kE,IAAUsB,IAAI,wBAAyBtL,KAAK6uE,yBAC5C7kE,IAAUsB,IAAI,uBAAwBtL,KAAK6uE,yBAC3C7kE,IAAUsB,IAAI,wBAAyBtL,KAAK6uE,2B,+BAsCtC,IAAD,EACgD7uE,KAAKc,MAAlDub,EADH,EACGA,MAAOsyB,EADV,EACUA,SAAoByiD,EAD9B,EACoBphF,SACjBA,EAAahQ,KAAKK,MAAlB2P,SAER,OACI,kBAAC,GAAD,CAAyBA,SAAUA,GAAYohF,EAAe/0E,MAAOA,EAAO5N,QAASzO,KAAK2D,aACrFgrC,GAAY,kBAAC,KAAD,U,gDAnHO7tC,EAAOT,GAAQ,IACnC4G,EAAWnG,EAAXmG,OAGR,OAAIA,IAFwB5G,EAApBgxF,gBAGG,CACHA,gBAAiBpqF,EACjBA,SACA+I,SAAU8gF,EAA0BI,aAAajqF,IAIlD,S,GAfyBtF,IAAMC,WAAxCkvF,GAkGKI,aAAe,SAAAjqF,GAClB,OAAQwhB,QAAQze,IAAU27B,QAAQ1+B,KAgC3B6pF,UClHTQ,I,mBACF,WAAYxwF,GAAQ,IAAD,8BACf,4CAAMA,KAsBV4B,UAAY,SAAAD,GACR,KAAImY,KAAai0B,OAAO/7B,OAAS,KAI7BrQ,EAAMqsC,YAAV,CALiB,MASS,EAAKzuC,MAAvB2hB,EATS,EASTA,MAAOotE,EATE,EASFA,OACf,IAAKA,EAAQ,OAAO,KACpB,IAAe,IAAXptE,EAAc,OAAO,KAEzB,IAAM2pD,EAAQyjB,EAAOptE,GACfpB,EAAQ2wE,aAAc5lB,GAC5B,GAAK/qD,EAAL,CAGA,OADgBne,EAARE,KAEJ,IAAK,SAID,OAHA,EAAKQ,cACLV,EAAM4B,uBACN5B,EAAM6B,iBAGV,IAAK,YAID,OAHA,EAAK4qE,aACLzsE,EAAM4B,uBACN5B,EAAM6B,iBAGV,IAAK,aAID,OAHA,EAAKktF,iBACL/uF,EAAM4B,uBACN5B,EAAM6B,iBAKqB,UAAnBsc,EAAM,UAElBlgB,IAAgBgG,aAAa,CAAE,QAAS,4BAA6BjE,aAhE1D,EA2FnB+uF,eAAiB,SAAA/uF,GACTA,GACAA,EAAM4B,kBAFY,MAKI,EAAKhE,MAAvB2hB,EALc,EAKdA,MAAOotE,EALO,EAKPA,OACTt9B,EAAY9vC,EAAQ,EAE1B,GAAK,EAAKyvE,iBAAiBzvE,EAAOotE,GAElC,OAAO,EAAKsC,UAAU5/B,IArGP,EA+GnBod,WAAa,SAAAzsE,GACLA,GACAA,EAAM4B,kBAFQ,MAKQ,EAAKhE,MAAvB2hB,EALU,EAKVA,MAAOotE,EALG,EAKHA,OACTt9B,EAAY9vC,EAAQ,EAE1B,GAAK,EAAK2vE,aAAa3vE,EAAOotE,GAE9B,OAAO,EAAKsC,UAAU5/B,IAzHP,EA4HnB4/B,UAAY,SAAA1vE,GAAU,IACVotE,EAAW,EAAK/uF,MAAhB+uF,OAER,QAAIptE,EAAQ,OACRA,GAASotE,EAAOt8E,UAEpB,EAAK/R,SACD,CACIihB,QACAyvE,iBAAkB,EAAKA,iBAAiBzvE,EAAOotE,GAC/CuC,aAAc,EAAKA,aAAa3vE,EAAOotE,KAI/CwC,YAA4B5vE,EAAOotE,IAC5B,KA3IQ,EA8InBjsF,YAAc,WACV0uF,aAA4B,MADZ,MAGU,EAAKxxF,MAAvB2hB,EAHQ,EAGRA,MAAOotE,EAHC,EAGDA,QACA,IAAXptE,GACA8vE,YAAkC9vE,EAAOotE,IAnJ9B,EAuJnBxqE,cAAgB,WAAO,IACXhE,EAAU,EAAK9f,MAAf8f,MAEF7J,EAAsBg7E,aAAqBnxE,EAAO,MACnD7J,GAELvB,aAAQuB,IA7JO,EAgKnBi7E,WAAa,WAAO,IACRpxE,EAAU,EAAK9f,MAAf8f,MAERqxE,YAAUrxE,EAAO,OAnKF,EAsKnBsxE,uBAAyB,SAAAzvF,GACrB,EAAK0vF,gBAAkB1vF,EAAMukC,eAvKd,EA0KnBorD,mBAAqB,SAAA3vF,GAAU,IACnB0vF,EADkB,eAClBA,gBACR,EAAKA,gBAAkB,KAEnB1vF,EAAMukC,gBAAkBmrD,GAE5B,EAAKhvF,eA7KL,EAAK9C,MAAQ,CACT2hB,OAAQ,EACRyvE,kBAAkB,EAClBE,cAAc,EACdvC,OAAQ,IAGZ,EAAKxkF,gBAAkB,IAAIG,IAAgB,EAAKrI,WAVjC,E,iFAcf1C,KAAKyT,cAEL/I,IAAgBC,IAAI3K,KAAK4K,mB,6CAIzBF,IAAgBI,OAAO9K,KAAK4K,mB,oCAgDjB,IAAD,EACY5K,KAAKc,MAAnB8rE,EADE,EACFA,GAAIhsD,EADF,EACEA,MAENwuE,EAASiD,aAAezlB,EAAI0lB,MAC5BtwE,EAAQotE,EAAOz6D,UAAU,SAAAz1B,GAAC,OAAIqyF,aAAcryF,KAAO0hB,IAEzD5gB,KAAKe,SAAS,CACVquF,SACAptE,QACAyvE,iBAAkBzxF,KAAKyxF,iBAAiBzvE,EAAOotE,GAC/CuC,aAAc3xF,KAAK2xF,aAAa3vE,EAAOotE,KAG3CwC,YAA4B5vE,EAAOotE,K,uCAGtBptE,EAAOotE,GACpB,OAAe,IAAXptE,GAEcA,EAAQ,EACPotE,EAAOt8E,S,mCAgBjBkP,EAAOotE,GAChB,OAAe,IAAXptE,GAEcA,EAAQ,GACN,I,+BAuEd,IAAD,EACehiB,KAAKc,MAAjBgX,EADH,EACGA,KAAMtH,EADT,EACSA,EADT,EAEqDxQ,KAAKK,MAAvD2hB,EAFH,EAEGA,MAAOotE,EAFV,EAEUA,OAAQuC,EAFlB,EAEkBA,aAAcF,EAFhC,EAEgCA,iBACrC,IAAKrC,EAAQ,OAAO,KACpB,IAAe,IAAXptE,EAAc,OAAO,KAEzB,IAAM2pD,EAAQyjB,EAAOptE,GACfpB,EAAQ2wE,aAAc5lB,GACtBt0D,EAAUk7E,aAAgB5mB,GAC1BrqD,EAAMkxE,aAAY7mB,GATnB,EAWyB+jB,YAAc9uE,EAAO9I,GAX9C,mBAWiB/N,GAXjB,gBAaDsS,EAAQ,GACW,UAAnBuE,EAAM,WACNvE,EAAQ7L,EAAE,gBAES,UAAnBoQ,EAAM,SACNvE,EAAQ7L,EAAE,eACgB,cAAnBoQ,EAAM,WACbvE,EAAQ7L,EAAE,cAEd,IAAMiiF,EAAWrD,EAAOt8E,OAExB,OACI,yBAAKzR,UAAWiN,IAAW,4BAA6B,yBACpD,yBAAKjN,UAAU,uBACX,kBAAC,GAAD,CACIgb,MAAOA,EACPa,SAAUu1E,EAAW,GAAKzwE,GAAS,EAAIs/D,KAAOoR,aAAa,KAAM1wE,EAAQ,EAAGywE,GAAY,KACxF/sF,MAAO,CAAEo6E,WAAY,OAEzB,kBAAC,GAAD,CAA2BzjE,MAAO7L,EAAE,QAASvJ,OAAQ8C,EAAKtL,GAAIgQ,QAASzO,KAAKgyF,aAC5E,kBAAC,GAAD,CAAyB31E,MAAO7L,EAAE,WAAY/B,QAASzO,KAAK4kB,eACxD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyBvI,MAAO7L,EAAE,SAAU/B,QAASzO,KAAKmD,aACtD,kBAAC6L,EAAA,EAAD,QAGR,yBAAK3N,UAAU,uBAAuBkN,YAAavO,KAAKkyF,uBAAwBzjF,QAASzO,KAAKoyF,oBAC1F,yBAAK/wF,UAAU,4BACX,kBAAC,GAAD,CAAmB2O,UAAW2hF,EAAchB,MAAI,EAACliF,QAASzO,KAAKkvE,YAC3D,kBAAC,GAAD,QAGR,yBAAK7tE,UAAU,+BACX,kBAAC,GAAD,CAA+Buf,MAAOA,EAAO9I,KAAMA,EAAMT,QAASA,EAASiK,IAAKA,KAEpF,yBAAKjgB,UAAU,6BACX,kBAAC,GAAD,CAAmB2O,UAAWyhF,EAAkBd,MAAI,EAACliF,QAASzO,KAAKwxF,gBAC/D,kBAAC,GAAD,CAAoB9rF,MAAO,CAAEs3B,UAAW,4B,GAvO/Br7B,IAAMC,YA2P5B6Z,GALCC,YACZ9K,cACA0+E,KAGW7zE,CAAQ61E,I,SC5PjBqB,I,mBACF,WAAY7xF,GAAQ,IAAD,8BACf,4CAAMA,KA0EV8xF,uCAAyC,SAAApwF,GAAW,IACxCkU,EAAYlU,EAAZkU,QACR,GAAKA,EAAL,CAF+C,IAOvCkK,EAAqClK,EAArCkK,MAAOvJ,EAA8BX,EAA9BW,QAASiK,EAAqB5K,EAArB4K,IAAKorD,EAAgBh2D,EAAhBg2D,YAEzB,EAAK5rE,MAAM4rE,cAAgBA,GAE/B,EAAK3rE,SAAS,CAAE6f,QAAOvJ,UAASiK,aAR5B,EAAKvgB,SAAS,CAAE6f,MAAO,KAAMvJ,QAAS,KAAMiK,IAAK,QA9EtC,EAyFnBuxE,6BAzFmB,sCAyFY,WAAMrwF,GAAN,yBAAAsO,EAAA,wDACnBwQ,EAAQ9e,EAAR8e,IACF3R,EAASmjF,KAAiBC,aAFL,EAGU,EAAKjyF,MAAlC4rE,EAHmB,EAGnBA,YAAkBsmB,EAHC,EAGN1xE,IAEjB3R,IAAW+8D,EALY,qDAOvBA,IAAeprD,EAAI2H,WAAW+pE,GAPP,oBAQjBC,EAAO,IAAI5pE,IAAI/H,GAAK2xE,KACtB3xE,EAAInH,QAAQ,OAASmH,EAAIxO,OAAS,EATf,wBAUnB,EAAKkZ,UAAU,UAVI,+BAaZinE,IAAQ,EAAKC,aAAaD,EAAM,UAbpB,mDAmB3BhmB,GAAgB3rD,GAnBW,0CAzFZ,wDA0MnB5e,UAAY,SAAAD,GACR,KAAImY,KAAai0B,OAAO/7B,OAAS,KAI7BrQ,EAAMqsC,YAIV,OAAQrsC,EAAME,KACV,IAAK,SAMD,GALAF,EAAM4B,kBACN5B,EAAM6B,iBAEY,EAAKjE,MAAfugB,MAIJ,YADAixE,aAA4B,MAIhC,EAAK1uF,gBA/NE,EAyOnBgwF,WAAa,WAAO,IAAD,EACgB,EAAK9yF,MAA5BwvE,EADO,EACPA,QADO,EACEke,UAEb,EAAK/hE,UAAU,UAIf6jD,EACAnvE,IAAgBgG,aAAa,CACzB,QAAS,gCAKjB,EAAKvD,eAvPU,EA0PnBkqB,aAAe,WACX,IAAMjgB,EAAU,EAAKgmF,iBAAiBl8E,QACtC,EAAKnW,SAAS,CACVgtF,UAAW3gF,EAAQ4e,UAAY,KAGnC,EAAK67D,qBA7PL,EAAKj9E,gBAAkB,IAAIG,IAAgB,EAAKrI,WAChD,EAAK2wF,WAAa1xF,IAAM2Y,YACxB,EAAK84E,iBAAmBzxF,IAAM2Y,YAE9B,EAAKja,MAAQ,GAEb,EAAKwnF,kBAAoBhkE,YAAS,EAAKgkE,kBAAmB,KAT3C,E,mFA2BG9rE,EAAWC,EAAWqK,GAAc,IAC9CqmD,EAAgB1sE,KAAKc,MAArB4rE,YAD6C,EAED1sE,KAAKK,MAAjD0tF,EAF6C,EAE7CA,UAAWle,EAFkC,EAElCA,QAASjvD,EAFyB,EAEzBA,MAAOvJ,EAFkB,EAElBA,QAASiK,EAFS,EAETA,IAE5C,OAAIorD,IAAgB3wD,EAAU2wD,cAI1BqhB,IAAc/xE,EAAU+xE,YAIxBle,IAAY7zD,EAAU6zD,UAItBjvD,IAAU5E,EAAU4E,QAIpBvJ,IAAY2E,EAAU3E,SAItBiK,IAAQtF,EAAUsF,U,0CAQtBthB,KAAKszF,SAAU,EACftzF,KAAKqtB,eACLrtB,KAAKuzF,cAAcvzF,KAAKc,MAAM6qE,MAAO,UAErCjhE,IAAgBC,IAAI3K,KAAK4K,iBACzBkoF,KAAiB3nF,GAAG,6BAA8BnL,KAAK6yF,8BACvDC,KAAiB3nF,GAAG,uCAAwCnL,KAAK4yF,0C,6CAIjE5yF,KAAKszF,SAAU,EACf5oF,IAAgBI,OAAO9K,KAAK4K,iBAC5BkoF,KAAiBxnF,IAAI,6BAA8BtL,KAAK6yF,8BACxDC,KAAiBxnF,IAAI,uCAAwCtL,KAAK4yF,0C,oCAuCxDjnB,EAAOx6C,GACjB,IAAKw6C,EAAO,OAAO,EAEnB,IAAKojB,GAAa,OAAO,EAEzB,IAAM9zE,EAAM8zE,GAAY9kF,IAAI0hE,GAC5B,IAAK1wD,EAAK,OAAO,EAEjB,IAAM7N,EAAU0+D,KAAS0nB,YAAYv4E,GACrC,OAAOjb,KAAKyzF,gBAAgBrmF,EAAS+jB,K,sCAGzB/jB,EAAS+jB,GACrB,IAAK/jB,EAAS,OAAO,EAErB,IAAMsmF,EAAU,GACZC,GAAW,EACXC,EAAiBxmF,EACrB,IACIwmF,EAAiBA,EAAe/6B,YAEI,YAA5B+6B,EAAev7B,SACfq7B,EAAQ1/E,KAAK4/E,GACsB,YAA5BA,EAAev7B,WACtBs7B,GAAW,GAGfA,GAAW,SAETA,GASV,OAPAD,EAAQ/zF,QAAQ,SAAAT,GAAC,OAAKA,EAAEwb,MAAO,IAE/BtN,EAAQ2sC,eAAe,CACnB4xB,MAAO,SACPx6C,cAGG,I,mCAGE8hE,EAAM9hE,GACf,IAAK8hE,EAAM,OAAO,EAElB,IAAM7lF,EAAUnI,SAASI,eAAe4tF,EAAKrjD,OAAO,IAEpD,OAAO5vC,KAAKyzF,gBAAgBrmF,EAAS+jB,K,gCAG/BA,GACN,IAAM/jB,EAAUpN,KAAKozF,iBAAiBl8E,QAEtC,OAAQia,GACJ,IAAK,SACDnF,GAAU5e,GACV,MAEJ,QACIA,EAAQ8jB,SAAS,CACbrrB,IAAK,EACLsrB,gB,yCAMGjwB,EAAWC,EAAWC,GAAW,IAAD,EACXpB,KAAKc,MAAjC4rE,EADuC,EACvCA,YAAoBprD,GADmB,EAC1BqqD,MAD0B,EACnBrqD,KAEtB2xE,EAAO,IAAI5pE,IAAI/H,GAAK2xE,KACtB/xF,EAAUwrE,cAAgBA,IACtBxrE,EAAUogB,MAAQA,EACdA,EAAInH,QAAQ,OAASmH,EAAIxO,OAAS,EAClC9S,KAAKgsB,UAAU,QACRinE,EACPjzF,KAAKkzF,aAAaD,EAAM,QAExBjzF,KAAKgsB,UAAU,QAGfinE,EACAjzF,KAAKkzF,aAAaD,EAAM,QAExBjzF,KAAKgsB,UAAU,UAIvBhsB,KAAKqtB,kB,oCAgCT+/C,aAAsB,Q,0CA8BtB,GAAKptE,KAAKszF,QAAV,CADgB,IAGR5mB,EAAgB1sE,KAAKc,MAArB4rE,YACR,GAAKA,EAAL,CAOA,IAXgB,IAMRwiB,EAAgBxiB,EAAhBwiB,YAEFE,EAAS,IAAIl8E,IACb4Y,EAAQg9D,YAAY9oF,KAAKozF,iBAAkBpzF,KAAKqzF,YAE7CjgF,EAAI,EAAGA,EAAI0Y,EAAMhZ,OAAQM,IAAK,CACnC,IAAMu4D,EAAQujB,EAAYpjE,EAAM1Y,IAChCg8E,EAAO52E,IAAImzD,EAAOA,GAEEkoB,aAAeloB,GACvBhsE,QAAQ,SAAAT,GAAC,OAAIkwF,EAAO52E,IAAItZ,EAAGA,KAG3CwB,IAAgBgG,aAAa,CACzB,QAAS,2BACT0oF,e,+BAIE,IACE1iB,EAAgB1sE,KAAKc,MAArB4rE,YADH,EAE+C1sE,KAAKK,MAAxC0tF,GAFZ,EAEGle,QAFH,EAEYke,WAAWntE,EAFvB,EAEuBA,MAAOvJ,EAF9B,EAE8BA,QAASiK,EAFvC,EAEuCA,IAC5C,OAAKorD,EAGD,kBAAConB,GAAA,EAAUlR,SAAX,CAAoBj6E,MAAO+jE,GACvB,yBAAKzxD,IAAKjb,KAAKozF,iBAAkB/xF,UAAU,iBAAiBuxB,SAAU5yB,KAAKqtB,cACvE,yBAAKhsB,UAAU,6BAA6BoN,QAASzO,KAAKmzF,YACtD,kBAAC,GAAD,CACI9xF,UAAU,6BACVqE,MAAO,CAAEma,WAAY,cACrBpR,QAASzO,KAAKmzF,YACd,kBAAC,GAAD,CACIztF,MAAO,CACH0c,WAAY,2BACZ4a,UAAW+wD,EAAY,gBAAkB,oBAKzD,yBAAK1sF,UAAU,iCACX,6BACI,kBAAC,GAAD,CAAS4Z,IAAKjb,KAAKqzF,eAG3B,yBAAKhyF,UAAU,+BACX,kBAAC,GAAD,CAAmBA,UAAU,8BAA8BoN,QAASzO,KAAKmD,aACrE,kBAAC6L,EAAA,EAAD,SAIX4R,GAAS,kBAAC,GAAD,CAAwBA,MAAOA,EAAO9I,KAAMi8E,IAAe18E,QAASA,EAASiK,IAAKA,KA7B3E,Q,gDAnRGxgB,EAAOT,GACnC,OAAIS,EAAM4rE,cAAgBrsE,EAAM2zF,gBACrB,CACHA,gBAAiBlzF,EAAM4rE,YACvBmD,QAASijB,KAAiBjjB,UAC1Bke,WAAW,EACXntE,MAAO,KACPvJ,QAAS,KACTiK,IAAK,MAIN,S,GAzBa3f,IAAMC,YAuUnBgP,iBAAkB+hF,IC7SlBsB,I,mBAvCX,WAAYnzF,GAAQ,qEACVA,I,sEAGA,IAAD,EACyBd,KAAKc,MAA3BuP,EADH,EACGA,OAAQqU,EADX,EACWA,UAEV9O,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,KAJhB,IAMG4R,EAAiB5R,EAAjB4R,KAAM2D,EAAWvV,EAAXuV,OAER+oE,EAAWpjB,aAAYtpD,GAEvB2sE,EAAchpE,EAAOjX,QAAU,kBAACq6B,GAAA,EAAD,CAAU3e,OAAQzE,EAAOjX,UAAc,kBAACvD,EAAA,EAAD,CAAUN,OAAQA,IAE9F,OACI,yBAAKhP,UAAU,cACX,yBAAKA,UAAU,sBACV8yF,EACD,yBAAK9yF,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAACiqB,GAAA,EAAD,CAAeH,OAAQA,KAE3B,yBAAK9pB,UAAU,uBACX,8BAAO6yF,W,GA1BXvyF,IAAMC,YCOxBwyF,I,mBACF,WAAYtzF,GAAQ,IAAD,8BACf,4CAAMA,KAyEV2uF,+BAAiC,SAAAjtF,GAAW,IAChC6G,EAAc7G,EAAd6G,UACHA,IAEY,EAAKhJ,MAAd0J,KACCtL,KAAO4K,EAAUpC,QAE1BvG,IAAgBgG,aAAa,CACzB,QAAS,iCACTgQ,QAAS,SAnFE,EAkGnBm4D,wBAA0B,SAAArsE,GAAW,IAAD,EACI,EAAK1B,MAAjCuP,EADwB,EACxBA,OAAQqU,EADgB,EAChBA,UAAW5M,EADK,EACLA,KAE3B,GAAIzH,IAAW7N,EAAO6N,QAAUqU,IAAcliB,EAAOkiB,UAAW,CAAC,IAAD,EACH2vE,YAAahkF,EAAQqU,EAAW5M,GAD7B,mBACvD3I,EADuD,KAChD4I,EADgD,KACxChO,EADwC,KAClCs2D,EADkC,KACxB0O,EADwB,KAG5DhlE,EAAOC,IAAUC,IAAIF,EAAKtL,KAAOsL,EACjC,IAAI6c,EAAMD,YAAO5c,IAEZ6c,GAAOmoD,GACJulB,aAAejkF,EAAQqU,KACvBkC,EAAG,6BAAyB7c,EAAKtL,GAA9B,iBAAyCsL,EAAK+N,KAA9C,sBAAgEuoD,IAI3E,EAAKt/D,SAAS,CACVoO,QACA4I,SACAhO,OACA6c,MACAplB,OAZS,KAaTutE,oBACA1O,eAxHO,EA6HnBsvB,iCAAmC,SAAAntF,GAAW,IAAD,EACX,EAAK1B,MAA3BuP,EADiC,EACjCA,OAAQqU,EADyB,EACzBA,UAEhB,GAAIrU,IAAW7N,EAAO6N,QAAUqU,IAAcliB,EAAOkiB,UAAW,CAC5D,IAAM1M,EAAYu8E,YAAkBlkF,EAAQqU,GAC5C,EAAK3jB,SAAS,CACViX,gBAnIO,EAwInB0I,uBAAyB,SAAAle,GAAW,IAAD,EACQ,EAAK1B,MAApCuP,EADuB,EACvBA,OAAQqU,EADe,EACfA,UAAW5M,EADI,EACJA,KAAMtH,EADF,EACEA,EACzB2E,EAAwB3S,EAAxB2S,QAASC,EAAe5S,EAAf4S,WAEjB,GAAI/E,IAAW8E,GAAWuP,IAActP,EAAY,CAChD,IAAMQ,EAAUY,KAAavM,IAAIoG,EAAQqU,GACnCnZ,EAAO0jD,aAAQr5C,EAAS,KAAMpF,GAFY,EAIW6jF,YAAahkF,EAAQqU,EAAW5M,GAJ3C,mBAIzC3I,EAJyC,KAIlC4I,EAJkC,KAI1BhO,EAJ0B,KAIpBs2D,EAJoB,KAIV0O,EAJU,KAK5CnoD,EAAMD,YAAO5c,IAEZ6c,GAAOmoD,GACJulB,aAAejkF,EAAQqU,KACvBkC,EAAG,6BAAyB7c,EAAKtL,GAA9B,iBAAyCsL,EAAK+N,KAA9C,sBAAgEuoD,IAI3E,EAAKt/D,SAAS,CACVoO,QACA4I,SACAhO,OACA6c,MACAplB,OAZS,KAaTutE,oBACA1O,WACA90D,WAjKO,EAsKnB0kF,mBAAqB,SAAAxtF,GACbA,GAAOA,EAAM4B,mBAvKF,EA0KnBV,YAAc,SAAAlB,GACVA,EAAM6B,iBACN7B,EAAM4B,kBAFa,IAKX7C,EAAW,EAAKnB,MAAhBmB,OACHA,GAELA,EAAOgzF,kBA/KP,EAAKn0F,MAAQ,GAEb,EAAKotE,SAAW9rE,IAAM2Y,YALP,E,iFAuDftQ,IAAUmB,GAAG,wBAAyBnL,KAAK6uE,yBAC3C7kE,IAAUmB,GAAG,wBAAyBnL,KAAK6uE,yBAC3C7kE,IAAUmB,GAAG,4BAA6BnL,KAAK6uE,yBAC/C7kE,IAAUmB,GAAG,iCAAkCnL,KAAK2vF,kCACpD3lF,IAAUmB,GAAG,qCAAsCnL,KAAK2vF,kCACxDn5E,KAAarL,GAAG,uBAAwBnL,KAAK0gB,wBAC7CtW,IAAYe,GAAG,+BAAgCnL,KAAKyvF,kC,6CAIpDzlF,IAAUsB,IAAI,wBAAyBtL,KAAK6uE,yBAC5C7kE,IAAUsB,IAAI,wBAAyBtL,KAAK6uE,yBAC5C7kE,IAAUsB,IAAI,4BAA6BtL,KAAK6uE,yBAChD7kE,IAAUsB,IAAI,iCAAkCtL,KAAK2vF,kCACrD3lF,IAAUsB,IAAI,qCAAsCtL,KAAK2vF,kCACzDn5E,KAAalL,IAAI,uBAAwBtL,KAAK0gB,wBAC9CtW,IAAYkB,IAAI,+BAAgCtL,KAAKyvF,kC,yCAgBtCvuF,EAAWC,EAAWC,GAAW,IACxCwlB,EAAQ5mB,KAAKK,MAAbumB,IAER,GAAIzlB,EAAUylB,MAAQA,EAAK,CACvB,IAAMrhB,EAASvF,KAAKytE,SAASv2D,QAC7B,IAAK3R,EAAQ,OAEbA,EAAOi/B,U,+BAyFL,IAAD,SACyBxkC,KAAKc,MAA3BuP,EADH,EACGA,OAAQqU,EADX,EACWA,UADX,EAcD1kB,KAAKK,MAXL8O,EAHC,EAGDA,MACA4I,EAJC,EAIDA,OACAhO,EALC,EAKDA,KACA6c,EANC,EAMDA,IACAmoD,EAPC,EAODA,kBACA1O,EARC,EAQDA,SACA90D,EATC,EASDA,KACAgb,EAVC,EAUDA,cACAvO,EAXC,EAWDA,UACAgR,EAZC,EAYDA,QACA4mE,EAbC,EAaDA,UAGJ,IAAK7lF,EAAM,OAAO,KAElB,IAAMyc,EAAUD,EAAgB,2BAA6BA,EAAcE,KAAO,KAC5EopE,EAAelpE,YAAO3O,EAAYA,EAAUjO,KAAO,MAEnD0qF,EAAUC,aAAerkF,EAAQqU,GACjCiwE,EAAUL,aAAejkF,EAAQqU,GACjCkwE,EAAcC,aAAmBxkF,EAAQqU,GAE3C6qD,EAAapgE,EACbqgE,EAAcz3D,EACZ2gE,EAAQoX,IAA8BxwF,KAAK+P,IAAIkgE,EAAYC,GAC3DuI,EAAIxI,EAAaC,EAAcsgB,IAA8BxwF,KAAK2O,MAAMshE,EAAamJ,GACrFV,EAAIxI,EAAcD,EAAaugB,IAA8BxwF,KAAK2O,MAAMuhE,EAAckJ,GAC5FnJ,EAAawI,EACbvI,EAAcwI,EAEd,IAAIthE,EAAU,KACRlV,EAASolB,EAAM,4BAAQA,IAAKA,EAAKlK,KAAM2jD,IAAc,KACrD3wD,EAAQqgF,aAAS/3E,EAAWuO,EAAegpD,EAAYC,GAE7D,GAAImlB,EACAj+E,EACI,yBAAKrV,UAAU,gCACX,kBAACuM,EAAA,EAAD,CACIqN,IAAKjb,KAAKytE,SACVpsE,UAAU,oCACV4F,OAAQ8C,EAAKtL,GACb0Q,MAAOogE,EACPx3D,OAAQy3D,EACRwgB,OAAQjhB,EAAqB8gB,GAAgBrpE,EAAW,KACxDhgB,OAAQ,WACJ,EAAKzF,SAAS,CAAE6uF,WAAW,MAG9BpuF,IAEHouF,IAAc7gB,GAAqBr/D,QAG1C,GAAIklF,EAePl+E,EACI,yBAAKrV,UAAU,gCACX,2BACI4Z,IAAKjb,KAAKytE,SACVpsE,UAAU,oCACVoN,QAASzO,KAAKiwF,mBACd9yC,MAAI,EACJ+zB,UAAQ,EACR/hE,MAAOogE,EACPx3D,OAAQy3D,EACRhpE,OAAQ,WACJ,EAAKzF,SAAS,CAAE6uF,WAAW,MAG9BpuF,IAEHouF,GAAalgF,QAGpB,GAAIsZ,GAAWA,EAAQ8rE,UAAW,CAAC,IACrBxzE,EAAQ0H,EAAnB8rE,UAEN,OAAQ9rE,EAAQo2D,WACZ,IAAK,OAGL,IAAK,aAGL,IAAK,UACD,MAEJ,IAAK,SACD99D,GAAG,kBAAerW,OAAOi9C,SAAS9+B,UAClC,MAEJ,IAAK,UACD9H,GAAO,mHACP,MAEJ,IAAK,QACDA,GAAO,uDAWf5K,EACI,yBAAKrV,UAAU,gCACX,4BAAQulB,IAAKtF,EAAKnS,MAAOogE,EAAYx3D,OAAQy3D,EAAaulB,YAAa,EAAGC,iBAAiB,EAAMC,UAAU,KAAKvvF,MAAO,CAAE8tD,WAAY,iBAI7I98C,EACI,yBAAKrV,UAAU,6BAA6BulB,IAAKA,EAAKkC,IAAI,GAAGra,QAASzO,KAAKiwF,qBAInF,OACI,oCACI,yBAAK5uF,UAAU,wBACVqV,GACCq4D,GAAqB,kBAACzvB,GAAA,EAAD,CAAcv1C,KAAMA,EAAMywC,OAAQ,KAE5DjvC,GAAQA,EAAKuH,OAAS,IAAM6hF,IAAYF,GAAW,kBAAC,GAAD,CAAclpF,KAAMA,Q,gDA3TpDzK,EAAOT,GAAQ,IACnCgQ,EAA+BvP,EAA/BuP,OAAQqU,EAAuB5jB,EAAvB4jB,UAAW5M,EAAYhX,EAAZgX,KAAMtH,EAAM1P,EAAN0P,EAEjC,GAAIH,IAAWhQ,EAAMyd,YAAc4G,IAAcrkB,EAAM09B,cAAe,CAClE,IAAM/lB,EAAYu8E,YAAkBlkF,EAAQqU,GACtC6B,EAAgB2uE,YAAsB7kF,EAAQqU,GAE9C9O,EAAUY,KAAavM,IAAIoG,EAAQqU,GACnCnZ,EAAO0jD,aAAQr5C,EAAS,KAAMpF,GAL8B,EAOT6jF,YAAahkF,EAAQqU,EAAW5M,GAPvB,mBAO7D3I,EAP6D,KAOtD4I,EAPsD,KAO9ChO,EAP8C,KAOxCs2D,EAPwC,KAO9B0O,EAP8B,KAQlEhlE,EAAOC,IAAUC,IAAIF,EAAKtL,KAAOsL,EACjC,IAAI6c,EAAMD,YAAO5c,GAWjB,OATK6c,GAAOmoD,GACJulB,aAAejkF,EAAQqU,KACvBkC,EAAG,6BAAyB7c,EAAKtL,GAA9B,iBAAyCsL,EAAK+N,KAA9C,sBAAgEuoD,IAOpE,CACHviD,WAAYzN,EACZ0tB,cAAerZ,EAEf+rE,MAAO,EACPb,WAAW,EACXzgF,QACA4I,SACAhO,OACA6c,MACAplB,OApBS,KAqBTutE,oBACA1O,WACA90D,OACAyM,YACAuO,gBACAyC,QAnBgBpT,EAAZc,QACA+Y,UAsBZ,OAAO,S,GApDkB9tB,IAAMC,YAgVxBgP,iBAAkBwjF,ICjT3Be,I,mBACF,WAAYr0F,GAAQ,IAAD,uBACf,4CAAMA,KAsFV4B,UAAY,SAAAD,GAAU,IACV4N,EAAW,EAAKvP,MAAhBuP,OACA42D,EAAqB,EAAK5mE,MAA1B4mE,iBAER,KAAIrsD,KAAai0B,OAAO/7B,OAAS,KAI7BrQ,EAAMqsC,YAAV,CAIA,IAAM5pC,EAAoBD,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,wBAGlG,OADgB3C,EAARE,KAEJ,IAAK,SAKD,OAHA,EAAKQ,cACLV,EAAM4B,uBACN5B,EAAM6B,iBAGV,IAAK,YACD,IAAKY,EAID,OAHA,EAAKssF,iBACL/uF,EAAM4B,uBACN5B,EAAM6B,iBAGV,MAEJ,IAAK,aACD,IAAKY,EAID,OAHA,EAAKgqE,aACLzsE,EAAM4B,uBACN5B,EAAM6B,iBAOFgwF,aAAejkF,EAAQ42D,IAEnCvmE,IAAgBgG,aAAa,CAAE,QAAS,4BAA6BjE,YApI1D,EAwInBie,uBAAyB,SAAAle,GAAW,IACxB2S,EAAkD3S,EAAlD2S,QAASC,EAAyC5S,EAAzC4S,WAAYof,EAA6BhyB,EAA7BgyB,YAAaC,EAAgBjyB,EAAhBiyB,YAClCpkB,EAAW,EAAKvP,MAAhBuP,OAFuB,EAGU,EAAKhQ,MAAtC4mE,EAHuB,EAGvBA,iBAAkBmuB,EAHK,EAGLA,WAE1B,GAAI/kF,IAAW8E,EAAf,CAEA,IAAMS,EAAUY,KAAavM,IAAIkL,EAASC,GAC1C,GAAKQ,EAAL,CAKA,GAHAy/E,YAAuB,CAACz/E,IAEL0/E,aAAe9gE,KAAiB8gE,aAAe7gE,GAClD,CACZ,GACI,EAAKkyD,QAAQ7zE,QAAU,IACtB,EAAKyiF,kBACF7gE,YAAQtf,EAAY,EAAKuxE,QAAQ,GAAGloF,GAAI,EAAKkoF,QAAQ,EAAKA,QAAQ7zE,OAAS,GAAGrU,KACpF,CAGE,IAFA,IAAI+2F,GAAW,EACX7O,EAAU,GACLvzE,EAAI,EAAGA,EAAI,EAAKuzE,QAAQ7zE,OAAQM,IACjC,EAAKuzE,QAAQvzE,GAAG3U,GAAK2W,EACrBuxE,EAAQ3yE,KAAK,EAAK2yE,QAAQvzE,KAErBoiF,IACDA,GAAW,EACX7O,EAAQ3yE,KAAK4B,IAEjB+wE,EAAQ3yE,KAAK,EAAK2yE,QAAQvzE,KAGlC,EAAKuzE,QAAUA,EAGnB,IAAM3kE,EAAQ,EAAK2kE,QAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOwoE,IACnD,EAAKlmE,SAAS,CACV4wF,aAAc,EAAKA,aAAa3vE,GAChCyvE,iBAAkB,EAAKA,iBAAiBzvE,GACxCozE,WAAYA,EAAa,IAKjC,IADuBE,aAAe9gE,IAAgB8gE,aAAe7gE,GAClD,CACf,IAAIghE,EAAa,EAAK9O,QAGtB,GAFA,EAAKA,QAAU,EAAKA,QAAQptE,OAAO,SAAAra,GAAC,OAAIA,EAAET,KAAO2W,IAE7C6xD,IAAqB7xD,EAAY,CACjC,IAAMsgF,EAAY,IAAIxiF,IACtBwiF,EAAUl9E,IAAIpD,EAAYA,GAE1B,EAAKugF,gBAAgBF,EAAYC,GACjC,EAAK30F,SAAS,CACVq0F,WAAY91F,KAAK+P,IAAI+lF,EAAa,EAAG,SAEtC,CACH,IAAMpzE,EAAQ,EAAK2kE,QAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOwoE,IACnD,EAAKlmE,SAAS,CACV4wF,aAAc,EAAKA,aAAa3vE,GAChCyvE,iBAAkB,EAAKA,iBAAiBzvE,GACxCozE,WAAY91F,KAAK+P,IAAI+lF,EAAa,EAAG,UArMlC,EA2MnBr0E,uBAAyB,SAAAve,GAAW,IACxB2S,EAAuC3S,EAAvC2S,QAASiD,EAA8B5V,EAA9B4V,YAAaqiD,EAAiBj4D,EAAjBi4D,aACtBpqD,EAAW,EAAKvP,MAAhBuP,OAFuB,EAGU,EAAKhQ,MAAtC4mE,EAHuB,EAGvBA,iBAAkBmuB,EAHK,EAGLA,WAE1B,GAAK36B,GACDpqD,IAAW8E,EAAf,CAEA,IAAMugF,EAAYt9E,EAAYinB,OAAO,SAACu2D,EAAaC,GAE/C,OADAD,EAAYp9E,IAAIq9E,EAAWA,GACpBD,GACR,IAAI1iF,KAEDuiF,EAAa,EAAK9O,QACpBmP,EAAeL,EAAW3iF,OAE9B,EAAK6zE,QAAU,EAAKA,QAAQptE,OAAO,SAAAra,GAAC,OAAKw2F,EAAUriF,IAAInU,EAAET,MACzDq3F,GAAgB,EAAKnP,QAAQ7zE,OAE7B,EAAK/R,SAAS,CAAEq0F,WAAY91F,KAAK+P,IAAI+lF,EAAaU,EAAc,KAE3D,EAAKnP,QAAQ7zE,OAKd4iF,EAAUriF,IAAI4zD,IACd,EAAK0uB,gBAAgBF,EAAYC,GALjCK,aAAsB,QAjOX,EA0OnB/0E,mBAAqB,SAAAxe,GAAW,IACpB6N,EAAW,EAAKvP,MAAhBuP,OADmB,EAEc,EAAKhQ,MAAtC4mE,EAFmB,EAEnBA,iBAAkBmuB,EAFC,EAEDA,WAElBx/E,EAAYpT,EAAZoT,QACR,GAAKA,GACA0/E,aAAe1/E,EAAQc,UAExBd,EAAQT,UAAY9E,GACnB,EAAKklF,iBAAV,CAEA,EAAK5O,QAAU,CAAC/wE,GAAS0D,OAAO,EAAKqtE,SACrC,IAAM3kE,EAAQ,EAAK2kE,QAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOwoE,IAEnD,EAAKlmE,SAAS,CACV4wF,aAAc,EAAKA,aAAa3vE,GAChCyvE,iBAAkB,EAAKA,iBAAiBzvE,GACxCozE,WAAYA,EAAa,MA3Pd,EA+PnBhoE,UAAY,SAAC/c,EAAQqU,GACjB,IAAM9O,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,KAFU,IAIvBc,EAAYd,EAAZc,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACH,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACH,QAAS,qCAGjB,QACI,OAAO,OAvRA,EA4RnBs/E,YA5RmB,qBA4RL,gDAAAllF,EAAA,0DACoB,EAAKhQ,MAA3BuP,EADE,EACFA,OAAQqU,EADN,EACMA,UAEVnL,EAAS,EAAK6T,UAAU/c,EAAQqU,GAElC7jB,EAAS,CACT,QAAS,WACTgtB,SAAU,GACVO,YAAa,IAEb7U,EAVM,gCAWS7Y,IAAgBC,KAAK,CAChC,QAAS,qBACTwU,QAAS9E,EACTqJ,MAAO,GACPsU,eAAgB,EAChBC,gBAAiBvJ,EACjB4F,QAAS2rE,IACTliF,MAAO,EAAIkiF,IACX18E,OAAQA,IAnBN,OAWN1Y,EAXM,iBAuBVuwC,aAAwBvwC,EAAQ,EAAK8lF,SACrCnwE,KAAa+X,SAAS1tB,EAAOgtB,UAE7B,EAAK84D,QAAU9lF,EAAOgtB,SACtB,EAAK0nE,iBAA8C,IAA3B10F,EAAOgtB,SAAS/a,OAEhCm0D,EAAqB,EAAK5mE,MAA1B4mE,iBACFjlD,EAAQ,EAAK2kE,QAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOwoE,IAEnD,EAAKlmE,SAAS,CACV4wF,aAAc,EAAKA,aAAa3vE,GAChCyvE,iBAAkB,EAAKA,iBAAiBzvE,MAG7B,IAAXA,EArCM,iBAsCN,EAAK2kE,QAAU,CAACnwE,KAAavM,IAAIoG,EAAQ42D,IACzCivB,YAA0B,EAAG,EAAKvP,SAvC5B,2BAyCNuP,YAA0Bl0E,EAAO,EAAK2kE,SAEhCptE,EAAS,EAAK6T,UAAU/c,EAAQqU,GA3ChC,mDA8CA+tE,EAAW,KACbvgD,EAAQ,EA/CN,IAAAphC,EAAA,qCAAAA,EAAA,qEAiDmBpQ,IAAgBC,KAAK,CACtC,QAAS,qBACTwU,QAAS9E,EACTqJ,MAAO,GACPsU,eAAgB,EAChBC,gBAAiB,EAAK04D,QAAQ7zE,OAAS,EAAI,EAAK6zE,QAAQ,GAAGloF,GAAK,EAChE6rB,QAAS,GACTvW,MAAO,IACPwF,OAAQA,IAzDV,OAiDI1Y,EAjDJ,OA2DFqxC,GAASrxC,EAAOgtB,SAAS/a,OAEzBs+B,aAAwBvwC,EAAQ,EAAK8lF,SACrCnwE,KAAa+X,SAAS1tB,EAAOgtB,UAE7B,EAAK84D,QAAU9lF,EAAOgtB,SAASvU,OAAO,EAAKqtE,SAC3C,EAAK4O,iBAA8C,IAA3B10F,EAAOgtB,SAAS/a,OAEhCm0D,EAAqB,EAAK5mE,MAA1B4mE,iBACFjlD,EAAQ,EAAK2kE,QAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOwoE,IAEnD,EAAKlmE,SAAS,CACV4wF,aAAc,EAAKA,aAAa3vE,GAChCyvE,iBAAkB,EAAKA,iBAAiBzvE,GACxCuzE,iBAAkB,EAAKA,iBACvBH,WAAYv0F,EAAOutB,cA1ErB,oDAgDE,EAAKmnE,oBAAoBrjD,EAAQugD,GAhDnC,uHA5RK,EA4WnBtvF,YAAc,WACV4yF,aAAsB,MADN,IAGR9uB,EAAqB,EAAK5mE,MAA1B4mE,iBACFjlD,EAAQ,EAAK2kE,QAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOwoE,KACpC,IAAXjlD,GACAm0E,YAAgCn0E,EAAO,EAAK2kE,UAlXjC,EAsXnBqL,WAAa,WAAO,IACR3hF,EAAW,EAAKvP,MAAhBuP,OACA42D,EAAqB,EAAK5mE,MAA1B4mE,iBAEFrxD,EAAUY,KAAavM,IAAIoG,EAAQ42D,GACzC,GAAKrxD,EAAL,CALe,IAOPc,EAAYd,EAAZc,QACR,GAAKA,EAAL,CAEA,IAAIkK,EAAQ,KACZ,OAAQlK,EAAQ,UACZ,IAAK,mBAGDkK,EAFsBlK,EAAdiT,UAGR,MAEJ,IAAK,yBAGD/I,EAFkBlK,EAAVC,MAGR,MAEJ,IAAK,kBAGDiK,EAFqBlK,EAAbzR,SAGR,MAEJ,IAAK,eAGD2b,EAFkBlK,EAAVC,MAGR,MAEJ,IAAK,cAAgB,IACT8Y,EAAa/Y,EAAb+Y,SACR,IAAKA,EAAU,OAFC,IAIR9F,EAAsC8F,EAAtC9F,UAAW1kB,EAA2BwqB,EAA3BxqB,SAAU0R,EAAiB8Y,EAAjB9Y,MAAO1T,EAAUwsB,EAAVxsB,MAEpC,GAAI0mB,EAAW,CACX/I,EAAQ+I,EACR,MAGJ,GAAI1kB,EAAU,CACV2b,EAAQ3b,EACR,MAGJ,GAAI0R,EAAO,CACPiK,EAAQjK,EACR,MAGJ,GAAI1T,EAAO,CACP2d,EAAQ3d,EACR,MAEJ,MAEJ,IAAK,eAGD2d,EAFkBlK,EAAVzT,MAOhBgvF,YAAUrxE,EAAOhL,MA7bF,EAgcnBgP,cAAgB,WAAO,IACXvU,EAAW,EAAKvP,MAAhBuP,OACA42D,EAAqB,EAAK5mE,MAA1B4mE,iBAERpiD,aAAgBxU,EAAQ,CAAC42D,KApcV,EAucnBniD,aAAe,WACX,EAAKsxE,oBAxcU,EA2cnB3E,iBAAmB,SAAAzvE,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP,EAAK2kE,QAAQ7zE,QA/cjB,EAkdnB0+E,eAAiB,SAAA/uF,GACTA,GACAA,EAAM4B,kBAFY,IAKd4iE,EAAqB,EAAK5mE,MAA1B4mE,iBAEFnV,EADQ,EAAK60B,QAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOwoE,IACzB,EAE1B,OAAO,EAAKyqB,UAAU5/B,EAAW,WACzBA,IAAc,EAAK60B,QAAQ7zE,OAAS,GACpC,EAAKujF,kBA7dE,EAkenBA,aAlemB,qBAkeJ,wCAAAvlF,EAAA,0DACmB,EAAKhQ,MAA3BuP,EADG,EACHA,OAAQqU,EADL,EACKA,UACRuiD,EAAqB,EAAK5mE,MAA1B4mE,iBAEF1tD,EAAS,EAAK6T,UAAU/c,EAAQqU,GAElC7jB,EAAS,CACT,QAAS,WACTgtB,SAAU,GACVO,YAAa,IAEb7U,EAXO,gCAYQ7Y,IAAgBC,KAAK,CAChC,QAAS,qBACTwU,QAAS9E,EACTqJ,MAAO,GACPsU,eAAgB,EAChBC,gBAAiBg5C,EACjB38C,OAAQ,EACRvW,MAAOkiF,IACP18E,OAAQA,IApBL,OAYP1Y,EAZO,cAwBXuwC,aAAwBvwC,EAAQ,EAAK8lF,SACrCnwE,KAAa+X,SAAS1tB,EAAOgtB,UAE7B,EAAK84D,QAAU,EAAKA,QAAQrtE,OAAOzY,EAAOgtB,UAEpC7L,EAAQ,EAAK2kE,QAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOwoE,IAEnD,EAAKlmE,SAAS,CACV4wF,aAAc,EAAKA,aAAa3vE,GAChCyvE,iBAAkB,EAAKA,iBAAiBzvE,GACxCozE,WAAYv0F,EAAOutB,cAlCZ,0CAleI,EAwgBnBujE,aAAe,SAAA3vE,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GA5gBL,EA+gBnBktD,WAAa,SAAAzsE,GACLA,GACAA,EAAM4B,kBAFQ,IAKV4iE,EAAqB,EAAK5mE,MAA1B4mE,iBAEFnV,EADQ,EAAK60B,QAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOwoE,IACzB,EAE1B,OAAO,EAAKyqB,UAAU5/B,EAAW,WACX,IAAdA,GACA,EAAKwkC,cA1hBE,EA+hBnBA,SA/hBmB,qBA+hBR,wCAAAxlF,EAAA,0DACuB,EAAKhQ,MAA3BuP,EADD,EACCA,OAAQqU,EADT,EACSA,UACRuiD,EAAqB,EAAK5mE,MAA1B4mE,iBAEF1tD,EAAS,EAAK6T,UAAU/c,EAAQqU,GAElC7jB,EAAS,CACT,QAAS,WACTgtB,SAAU,GACVO,YAAa,IAEb7U,EAXG,gCAYY7Y,IAAgBC,KAAK,CAChC,QAAS,qBACTwU,QAAS9E,EACTqJ,MAAO,GACPsU,eAAgB,EAChBC,gBAAiBg5C,EACjB38C,QAAS2rE,IACTliF,MAAOkiF,IAAoB,EAC3B18E,OAAQA,IApBT,OAYH1Y,EAZG,cAwBPuwC,aAAwBvwC,EAAQ,EAAK8lF,SACrCnwE,KAAa+X,SAAS1tB,EAAOgtB,UAE7B,EAAK0nE,iBAA8C,IAA3B10F,EAAOgtB,SAAS/a,OACxC,EAAK6zE,QAAU9lF,EAAOgtB,SAASvU,OAAO,EAAKqtE,SAErC3kE,EAAQ,EAAK2kE,QAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOwoE,IAEnD,EAAKlmE,SAAS,CACV4wF,aAAc,EAAKA,aAAa3vE,GAChCyvE,iBAAkB,EAAKA,iBAAiBzvE,GACxCuzE,iBAAkB,EAAKA,iBACvBH,WAAYv0F,EAAOutB,cApChB,0CA/hBQ,EAukBnBsjE,UAAY,SAAC1vE,EAAO8S,GAChB,QAAI9S,EAAQ,OACRA,GAAS,EAAK2kE,QAAQ7zE,UAE1B,EAAK/R,SACD,CACIkmE,iBAAkB,EAAK0f,QAAQ3kE,GAAOvjB,GACtCkzF,aAAc,EAAKA,aAAa3vE,GAChCyvE,iBAAkB,EAAKA,iBAAiBzvE,IAE5C8S,GAGJohE,YAA0Bl0E,EAAO,EAAK2kE,UAC/B,KArlBQ,EAwlBnBgP,gBAAkB,SAACF,EAAYC,GAK3B,IAL0C,IAClCzuB,EAAqB,EAAK5mE,MAA1B4mE,iBAEFjlD,EAAQyzE,EAAW9gE,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOwoE,IAC7CsvB,EAAS,EACJnjF,EAAI4O,EAAQ,EAAG5O,GAAK,EAAGA,IAC5B,GAAIsiF,IAAcA,EAAUriF,IAAIoiF,EAAWriF,GAAG3U,IAAK,CAC/C83F,EAASd,EAAWriF,GAAG3U,GACvB,MAGR,IAAK83F,EACD,IAAK,IAAInjF,EAAI4O,EAAQ,EAAG5O,EAAIqiF,EAAW3iF,OAAQM,IAC3C,GAAIsiF,IAAcA,EAAUriF,IAAIoiF,EAAWriF,GAAG3U,IAAK,CAC/C83F,EAASd,EAAWriF,GAAG3U,GACvB,MAKZ,GAAK83F,EAAL,CAEA,IAAMzkC,EAAY,EAAK60B,QAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAO83F,IAEvD,OAAO,EAAK7E,UAAU5/B,EAAW,WACX,IAAdA,EACA,EAAKwkC,WACExkC,IAAc,EAAK60B,QAAQ7zE,OAAS,GAC3C,EAAKujF,mBApnBE,EAynBnBD,iBAAmB,WACf,EAAKr1F,SAAS,CAAEy1F,0BAA0B,KA1nB3B,EA6nBnBC,kBAAoB,WAChB,EAAK11F,SAAS,CAAEy1F,0BAA0B,KA9nB3B,EAioBnB3jD,WAAa,WACT,EAAK9xC,SAAS,CAAEy1F,0BAA0B,IAD3B,IAGPnmF,EAAW,EAAKvP,MAAhBuP,OAHO,EAI4B,EAAKhQ,MAAxC4mE,EAJO,EAIPA,iBAAkByvB,EAJX,EAIWA,aAEpB9gF,EAAUY,KAAavM,IAAIoG,EAAQ42D,GACzC,GAAKrxD,EAAL,CAPe,IASPsP,EAA+DtP,EAA/DsP,6BAA8BC,EAAiCvP,EAAjCuP,8BACjBD,GAAgCC,IAGrDzkB,IAAgBC,KAAK,CACjB,QAAS,iBACTwU,QAAS9E,EACT+H,YAAa,CAAC6uD,GACd0vB,OAAQxxE,GAAgCuxE,MAlpB7B,EAspBnBE,yBAA2B,SAAAn0F,GACvB,EAAK1B,SAAS,CAAE21F,aAAcj0F,EAAMuD,OAAOia,WAvpB5B,EA0pBnB42E,mBAAqB,WAAO,IAGpBC,EAAiB,uBACrB,OAHuB,EAAKz2F,MAApBmzD,YAIJ,IAAK,uBACDsjC,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzB,EAAK/1F,SAAS,CACVyyD,WAAYsjC,KA9qBD,EAkrBnBzxB,eAAiB,SAACh1D,EAAQqU,GACtB,IAAM9O,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,OAAO,EAFe,IAI5Ba,EAA8Bb,EAA9Ba,iBAAkBC,EAAYd,EAAZc,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOD,IA9rBA,EAmsBnBy7E,uBAAyB,SAAAzvF,GACrB,EAAK0vF,gBAAkB1vF,EAAMukC,eApsBd,EAusBnBorD,mBAAqB,SAAA3vF,GAAU,IACnB0vF,EADkB,eAClBA,gBACR,EAAKA,gBAAkB,KAEnB1vF,EAAMukC,gBAAkBmrD,GAE5B,EAAKhvF,eA1sBL,EAAKyH,gBAAkB,IAAIG,IAAgB,EAAKrI,WAChD,EAAKikF,QAAU,GAJA,MAMe,EAAK7lF,MAA3BuP,EANO,EAMPA,OAAQqU,EAND,EAMCA,UAND,OAQf,EAAKrkB,MAAQ,CACTmzD,WAAY,uBACZ11C,WAAYzN,EACZ0tB,cAAerZ,EACfuiD,iBAAkBviD,EAClBitE,cAAc,EACdF,kBAAkB,EAClB+E,0BAA0B,EAC1BE,cAAc,GAhBH,E,mFAoBG36E,EAAWC,GAAY,IAAD,EACVhc,KAAKc,MAA3BuP,EADgC,EAChCA,OAAQqU,EADwB,EACxBA,UADwB,EAUpC1kB,KAAKK,MAPLmzD,EAHoC,EAGpCA,WACAyT,EAJoC,EAIpCA,iBACAuvB,EALoC,EAKpCA,yBACAjB,EANoC,EAMpCA,iBACA5D,EAPoC,EAOpCA,aACAF,EARoC,EAQpCA,iBACA2D,EAToC,EASpCA,WAGJ,OAAIp5E,EAAUw3C,aAAeA,IAIzBz3C,EAAU1L,SAAWA,IAIrB0L,EAAU2I,YAAcA,IAIxB1I,EAAUirD,mBAAqBA,IAI/BjrD,EAAU+6E,kBAAoBtF,IAI9Bz1E,EAAU21E,eAAiBA,IAI3B31E,EAAUu5E,mBAAqBA,IAI/Bv5E,EAAUo5E,aAAeA,GAIzBp5E,EAAUw6E,2BAA6BA,W,0CAQ3Cx2F,KAAKg2F,cAELtrF,IAAgBC,IAAI3K,KAAK4K,iBACzB4L,KAAarL,GAAG,uBAAwBnL,KAAK+gB,wBAC7CvK,KAAarL,GAAG,mBAAoBnL,KAAKghB,oBACzCxK,KAAarL,GAAG,uBAAwBnL,KAAK0gB,0B,6CAI7ChW,IAAgBI,OAAO9K,KAAK4K,iBAC5B4L,KAAalL,IAAI,uBAAwBtL,KAAK+gB,wBAC9CvK,KAAalL,IAAI,mBAAoBtL,KAAKghB,oBAC1CxK,KAAalL,IAAI,uBAAwBtL,KAAK0gB,0B,+BA4nBxC,IAAD,EACiB1gB,KAAKc,MAAnBuP,EADH,EACGA,OAAQG,EADX,EACWA,EADX,EAWDxQ,KAAKK,MARLmzD,EAHC,EAGDA,WACAyT,EAJC,EAIDA,iBACAuvB,EALC,EAKDA,yBACAE,EANC,EAMDA,aACAnB,EAPC,EAODA,iBACA5D,EARC,EAQDA,aACAF,EATC,EASDA,iBACA2D,EAVC,EAUDA,WAGApzE,GAAS,EACTozE,GAAcG,IACdvzE,EAAQhiB,KAAK2mF,QAAQhyD,UAAU,SAAAz1B,GAAC,OAAIA,EAAET,KAAOwoE,KAEjD,IAAMwrB,EAAWnzF,KAAK+P,IAAIrP,KAAK2mF,QAAQ7zE,OAAQsiF,GAGvCjwE,EADQ3O,KAAavM,IAAIoG,EAAQ42D,GACjC9hD,6BAEFigD,EAAe8O,aAAoB7jE,EAAQ42D,GAC3C5B,EAAiBrlE,KAAKqlE,eAAeh1D,EAAQ42D,GAE/C+vB,EAA4B,GAE5BA,EADA1C,aAAejkF,EAAQ42D,GACKz2D,EAAE,yBACvBqkF,aAAmBxkF,EAAQ42D,GACNz2D,EAAE,uBAEFA,EAAE,yBAElC,IAAMymF,EAAqBT,EACvB,kBAAC,IAAD,CACI77E,QAASC,KACTC,mBAAoB,EACpBH,KAAM87E,EACN17E,QAAS9a,KAAKy2F,kBACd17E,kBAAgB,qBAChB,kBAAC,IAAD,CAAatc,GAAG,qBAAqB+R,EAAE,YACvC,kBAAC,KAAD,KACI,kBAACyiC,GAAA,EAAD,KAAoB+jD,GACnB7xE,GACG,kBAAC27B,GAAA,EAAD,CACIhqB,MAAOtmB,EAAE,gBACTuwC,QACI,kBAAChhC,GAAA,EAAD,CAAUzJ,MAAM,UAAU3N,MAAM,YAAYiH,SAAU5P,KAAK42F,2BAE/D32E,QAASy2E,KAIrB,kBAACp7E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAASzO,KAAKy2F,kBAAmBngF,MAAM,WAC1C9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAASzO,KAAK6yC,WAAYv8B,MAAM,WACnC9F,EAAE,SAIf,KA9DC,EAgEmC6jF,YAAahkF,EAAQ42D,EAAkBiwB,KAhE1E,mBAgEiBntF,GAhEjB,gBAkEC9C,GAlED,KAkEU8C,EAAOA,EAAKtL,GAAK,GAC5B4d,EAAQ7L,EAAE,eASd,OARIkkF,aAAerkF,EAAQ42D,GACvB5qD,EAAQ,GACDi4E,aAAejkF,EAAQ42D,GAC9B5qD,EAAQ7L,EAAE,eACHqkF,aAAmBxkF,EAAQ42D,KAClC5qD,EAAQ7L,EAAE,cAIV,yBAAKnP,UAAWiN,IAAW,eAAgBklD,IACvC,yBAAKnyD,UAAU,uBACX,kBAAC,GAAD,CAAWgP,OAAQA,EAAQqU,UAAWuiD,IACtC,kBAAC,GAAD,CACI5qD,MAAOA,EACPa,SAAUu1E,EAAW,GAAKzwE,GAAS,EAAIs/D,KAAOoR,aAAa,KAAMD,EAAWzwE,EAAOywE,GAAY,OAEnG,kBAAC,GAAD,CAA2Bp2E,MAAO7L,EAAE,QAASvJ,OAAQA,EAAQ+I,SAAU0kF,aAAerkF,EAAQ42D,GAAmBx4D,QAASzO,KAAKgyF,aAC/H,kBAAC,GAAD,CACI31E,MAAO7L,EAAE,WACTR,UAAWq1D,EACX52D,QAASzO,KAAK4kB,eACd,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyBvI,MAAO7L,EAAE,UAAWR,UAAWo1D,EAAc32D,QAASzO,KAAK8kB,cAChF,kBAACe,GAAD,OAEJ,kBAAC,GAAD,CAAyBxJ,MAAO7L,EAAE,SAAU/B,QAASzO,KAAKmD,aACtD,kBAAC6L,EAAA,EAAD,QAGR,yBAAK3N,UAAU,uBAAuBkN,YAAavO,KAAKkyF,uBAAwBzjF,QAASzO,KAAKoyF,oBAC1F,yBAAK/wF,UAAU,4BACX,kBAAC,GAAD,CAAmB2O,UAAWyhF,EAAkBd,MAAI,EAACliF,QAASzO,KAAKwxF,gBAC/D,kBAAC,GAAD,QAIR,yBAAKnwF,UAAU,+BACX,kBAAC,GAAD,CACIgP,OAAQA,EACRqU,UAAWuiD,EACXnvD,KAAMo/E,IACNzoF,QAASzO,KAAKwxF,kBAItB,yBAAKnwF,UAAU,6BACX,kBAAC,GAAD,CAAmB2O,UAAW2hF,EAAchB,MAAI,EAACliF,QAASzO,KAAKkvE,YAC3D,kBAAC,GAAD,CAAoBxpE,MAAO,CAAEs3B,UAAW,uBAIpD,yBAAK37B,UAAU,wBACd41F,O,GA10BSt1F,IAAMC,YAq1BjBgP,iBAAkBukF,ICjxBlBgC,I,mBA1GX,WAAYr2F,GAAQ,IAAD,uBACf,4CAAMA,KA0CVs2F,uBAAyB,SAAA50F,GAAW,IAAD,EACL,EAAK1B,MAAvBuP,EADuB,EACvBA,OAAQsG,EADe,EACfA,MAEhB,GAAItG,IAAW7N,EAAO6N,QAAUsG,EAAMyH,IAAI3f,KAAO+D,EAAOyE,OAAQ,CAC5D,IAAM8C,EAAOC,IAAUC,IAAIzH,EAAOyE,SAAW,EAAK5G,MAAM0J,KACxD,EAAKhJ,SAAS,CACVgJ,WAjDO,EAsDnBstF,uBAAyB,SAAA70F,GAAW,IAAD,EACL,EAAK1B,MAAvBuP,EADuB,EACvBA,OAAQsG,EADe,EACfA,MAGhB,GAFe2c,YAAcjjB,KAEd7N,EAAOotB,QAAUjZ,EAAMyH,IAAI3f,KAAO+D,EAAOyE,OAAQ,CAC5D,IAAM8C,EAAOC,IAAUC,IAAIzH,EAAOyE,SAAW,EAAK5G,MAAM0J,KACxD,EAAKhJ,SAAS,CACVgJ,WA7DO,EAkEnBkmF,mBAAqB,SAAAxtF,GACbA,GAAOA,EAAM4B,kBADS,IAGlByW,EAAY,EAAKha,MAAjBga,QAERA,GAAWA,EAAQrY,IAvEJ,EA0EnB60F,iBAAmB,SAAA70F,GACXA,GAAOA,EAAM4B,kBADO,IAGhBkzF,EAAe,EAAKz2F,MAApBy2F,WAERA,GAAcA,EAAW90F,IA/EV,MAGW,EAAK3B,MAAvBuP,EAHO,EAGPA,OAAQsG,EAHD,EAGCA,MAEL5M,EAAS4M,EAAdyH,IALS,OAMfrU,EAAOC,IAAUC,IAAIF,EAAKtL,KAAOsL,EAEjC,EAAK1J,MAAQ,CACTyd,WAAYzN,EACZ6W,UAAWvQ,EACXxH,MAAOqoF,KACPz/E,OAAQy/E,KACRztF,KAAMA,GAbK,E,iFAkCfC,IAAUmB,GAAG,uBAAwBnL,KAAKo3F,wBAC1CptF,IAAUmB,GAAG,uBAAwBnL,KAAKq3F,0B,6CAI1CrtF,IAAUsB,IAAI,uBAAwBtL,KAAKo3F,wBAC3CptF,IAAUsB,IAAI,uBAAwBtL,KAAKq3F,0B,+BA0CrC,IACEttF,EAAS/J,KAAKK,MAAd0J,KACR,IAAKA,EAAM,OAAO,KAElB,IAAM27B,EAAO17B,IAAU27B,QAAQ57B,EAAKtL,KAAOsL,EAAK27B,KAC1C9e,EAAM5c,IAAUytF,WAAW/xD,GAEjC,OACI,yBAAKrkC,UAAU,uBAAuBoN,QAASzO,KAAKiwF,oBAChD,yBAAK5uF,UAAU,6BAA6BulB,IAAKA,EAAKkC,IAAI,GAAGra,QAASzO,KAAKs3F,mBAC3E,kBAACh4C,GAAA,EAAD,CAAcv1C,KAAMA,Q,gDA3EAjJ,EAAOT,GAAQ,IACnCgQ,EAAkBvP,EAAlBuP,OAAQsG,EAAU7V,EAAV6V,MAEhB,OAAItG,IAAWhQ,EAAMyd,YAAcnH,IAAUtW,EAAM6mB,UACxC,CACHpJ,WAAYzN,EACZ6W,UAAWvQ,EACXxH,MAAOqoF,KACPz/E,OAAQy/E,KACRztF,KAAM4M,EAAMyH,KAIb,S,GA/ByBzc,IAAMC,YC2B/B81F,G,iLA5BD,IAAD,EAC2B13F,KAAKc,MAA7BuP,EADH,EACGA,OAAQmX,EADX,EACWA,KAAM9hB,EADjB,EACiBA,MAEtB,OACI,yBAAKrE,UAAU,aAAaqE,MAAOA,GAC/B,yBAAKrE,UAAU,sBACX,kBAACsP,EAAA,EAAD,CAAUN,OAAQA,EAAQ6L,mBAAmB,IAC7C,yBAAK7a,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAACiqB,GAAA,EAAD,CAAeH,OAAQ,CAAE,QAAS,oBAAqBhW,QAAS9E,MAEnEmX,GACG,yBAAKnmB,UAAU,uBACX,8BAAOmmB,W,GAdR7lB,IAAMC,W,iOCqB/B+1F,G,YACF,WAAY72F,GAAQ,IAAD,uBACf,4CAAMA,KA6EVgzB,cAAgB,SAAArxB,GACZ,KAAImY,KAAai0B,OAAO/7B,OAAS,KAI7BrQ,EAAMqsC,YAIV,OAAQrsC,EAAME,KACV,IAAK,SAID,OAHA,EAAKQ,cACLV,EAAM6B,sBACN7B,EAAM4B,kBAGV,IAAK,YAID,OAHA,EAAK6qE,aACLzsE,EAAM4B,uBACN5B,EAAM6B,iBAGV,IAAK,aAID,OAHA,EAAKktF,iBACL/uF,EAAM4B,uBACN5B,EAAM6B,mBAvGC,EA6GnB0xF,YA7GmB,qBA6GL,8BAAAllF,EAAA,wDACFT,EAAW,EAAKvP,MAAhBuP,OAEHsO,aAActO,GAHT,iEAKW3P,IAAgBC,KAAK,CACtC,QAAS,uBACTuT,QAASof,YAAcjjB,GACvBia,OAAQ,EACRvW,MAAO,MATD,OAKJlT,EALI,OAYV,EAAK8lF,QAAU9lF,EAAO+2F,OACtB,EAAKrC,iBAA4C,IAAzB10F,EAAO+2F,OAAO9kF,OAExB,EAEd,EAAK/R,SAAS,CACVqqC,aAHU,EAIVumD,aAAc,EAAKA,aAJT,GAKVF,iBAAkB,EAAKA,iBALb,GAMV2D,WAAYv0F,EAAOutB,cAGvBypE,YAAiCxnF,EATnB,EASkC,EAAKs2E,SAxB3C,0CA7GK,EAwInBxjF,YAAc,WACVwtB,aAA6B,OAzId,EA4InBqhE,WAAa,WAAO,IACR3hF,EAAW,EAAKvP,MAAhBuP,OADO,EAEsB,EAAKhQ,MAAlC+qC,EAFO,EAEPA,aAAcgqD,EAFP,EAEOA,WAEhB34E,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,EAAL,CAEA,IAAIuF,GAAS,EACTozE,IACApzE,EAAQopB,GAGZ,IAAMz0B,EACFqL,EAAQ,GAAKA,EAAQ,EAAK2kE,QAAQ7zE,OAASglF,aAAgB,EAAKnR,QAAQ3kE,IAAU0W,YAAiBroB,GACvG,GAAKsG,GACAA,EAAMyH,IAAX,CAEA,IAAMrU,EAAOC,IAAUC,IAAI0M,EAAMyH,IAAI3f,KAAOkY,EAAMyH,IAC7CrU,GAELguF,YAAehuF,EAAMA,EAAKtL,GAAK,OAAQge,EAAM,kBAAMzS,IAAUguF,oBAAoB3nF,EAAQtG,EAAKtL,SAhK/E,EAmKnBmmB,cAAgB,WAAO,IACXvU,EAAW,EAAKvP,MAAhBuP,OADU,EAEmB,EAAKhQ,MAAlC+qC,EAFU,EAEVA,aAEJppB,GAAS,EAJK,EAEIozE,aAIlBpzE,EAAQopB,GAGZ,IAAI6sD,EAAY,KAGhB,GADkB,EAAKtR,SAAW3kE,GAAS,GAAKA,EAAQ,EAAK2kE,QAAQ7zE,OACtD,CACX,IAAM6D,EAAQmhF,aAAgB,EAAKnR,QAAQ3kE,IAC3C,IAAKrL,EAAO,OAFD,IAIA5M,EAAS4M,EAAdyH,IACN,IAAKrU,EAAM,OAEXkuF,EAAY,CACR,QAAS,cACTx5F,GAAIsL,EAAKtL,QAEV,CACH,IAAMy5F,EAAYx/D,YAAiBroB,GACnC,IAAK6nF,EAAW,OAFb,IAIUnuF,EAASmuF,EAAd95E,IACR,IAAKrU,EAAM,OAEX,IAAM27B,EAAO17B,IAAU27B,QAAQ57B,EAAKtL,IACpC,IAAKinC,EAAM,OAEXuyD,EAAY,CACR,QAAS,gBACTxxE,KAAMif,EACNqQ,KAAM,IAId,GAAKkiD,EAAL,CAEA,IAAMlhF,EAAsB,CACxB,QAAS,oBACTJ,MAAOshF,EACPjgF,UAAW,KACXC,uBAAwB,GACxB9I,MAAOqoF,KACPz/E,OAAQy/E,KACRngF,QAAS,CACL,QAAS,gBACT9L,KAAM,GACN+L,SAAU,MAEdY,IAAK,GAGT1C,aAAQuB,KA5NO,EA+NnB+N,aA/NmB,qBA+NJ,gDAAAhU,EAAA,wDACHT,EAAW,EAAKvP,MAAhBuP,OADG,EAOP,EAAKhQ,MAJL+qC,EAHO,EAGPA,aACAgqD,EAJO,EAIPA,WACAzD,EALO,EAKPA,aACAF,EANO,EAMPA,iBAGAzvE,GAAS,EACTozE,IACApzE,EAAQopB,GAGNz0B,EAAQqL,EAAQ,GAAKA,EAAQ,EAAK2kE,QAAQ7zE,OAASglF,aAAgB,EAAKnR,QAAQ3kE,IAAU0W,YAAiBroB,GAdtG,oDAiBH5R,EAAOkY,EAAPlY,GAjBG,oEAoBLiC,IAAgBC,KAAK,CACvB,QAAS,qBACTw3F,iBAAkB15F,IAtBX,WAyBX,EAAKkoF,QAAQl3C,OAAOztB,EAAO,GACtB,EAAK2kE,QAAQ7zE,OA1BP,wBA2BP,EAAK3P,cA3BE,8BA+BX,EAAKpC,SAAS,CACVq0F,WAAYA,EAAa,KAGzBzD,EAnCO,wBAoCD7/B,EAAY1mB,EAAe,EApC1B,kBAsCA,EAAKsmD,UAAU5/B,EAAW,CAAEsjC,WAAYA,EAAa,GAAK,WAC3C,IAAdtjC,GACA,EAAKwkC,cAxCN,YA6CP7E,EA7CO,wBA8CD3/B,EAAY1mB,EA9CX,kBAgDA,EAAKsmD,UAAU5/B,EAAW,CAAEsjC,WAAYA,EAAa,GAAK,WACzDtjC,IAAc,EAAK60B,QAAQ7zE,OAAS,GACpC,EAAKujF,kBAlDN,0CA/NI,EAuRnB5E,iBAAmB,SAAAzvE,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP,EAAK2kE,QAAQ7zE,QA3RjB,EA8RnB0+E,eAAiB,SAAA/uF,GACTA,GACAA,EAAM4B,kBAFY,IAMhBytD,EADmB,EAAKzxD,MAAtB+qC,aACyB,EAEjC,OAAO,EAAKsmD,UAAU5/B,EAAW,GAAK,WAC9BA,IAAc,EAAK60B,QAAQ7zE,OAAS,GACpC,EAAKujF,kBAxSE,EA6SnBA,aA7SmB,qBA6SJ,sBAAAvlF,EAAA,wHA7SI,EAiTnB6gF,aAAe,SAAA3vE,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GArTL,EAwTnBktD,WAAa,SAAAzsE,GACLA,GACAA,EAAM4B,kBAFQ,IAMZytD,EADmB,EAAKzxD,MAAtB+qC,aACyB,EAEjC,OAAO,EAAKsmD,UAAU5/B,EAAW,GAAK,WAChB,IAAdA,GACA,EAAKwkC,cAlUE,EAuUnBA,SAvUmB,qBAuUR,sBAAAxlF,EAAA,wHAvUQ,EA2UnB4gF,UAAY,SAAC1vE,EAAOo2E,EAAKtjE,GACrB,GAAI9S,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAAS,EAAK2kE,QAAQ7zE,OAAQ,OAAO,EAEzC,EAAK/R,S,wVAAL,EAEQqqC,aAAcppB,GACXo2E,EAHX,CAIQzG,aAAc,EAAKA,aAAa3vE,GAChCyvE,iBAAkB,EAAKA,iBAAiBzvE,KAE5C8S,GAX8B,IAc1BzkB,EAAW,EAAKvP,MAAhBuP,OAGR,OADAwnF,YAAiCxnF,EAAQ2R,EAAO,EAAK2kE,UAC9C,GAzVP,EAAKA,QAAU,GACf,EAAK/7E,gBAAkB,IAAIG,IAAgB,EAAK+oB,eAJjC,MAMY,EAAKhzB,MAAxBuP,EANO,EAMPA,OAAQpJ,EAND,EAMCA,OAND,OAQf,EAAK5G,MAAQ,CACTyd,WAAYzN,EACZgoF,WAAYpxF,EACZmkC,aAAc,EACdumD,cAAc,EACdF,kBAAkB,EAClB+E,0BAA0B,GAdf,E,mFAkBGz6E,EAAWC,GAAY,IAAD,EACVhc,KAAKc,MAA3BuP,EADgC,EAChCA,OAAQqU,EADwB,EACxBA,UADwB,EASpC1kB,KAAKK,MANLi4F,EAHoC,EAGpCA,cACA7G,EAJoC,EAIpCA,iBACAE,EALoC,EAKpCA,aACA4D,EANoC,EAMpCA,iBACAH,EAPoC,EAOpCA,WACAoB,EARoC,EAQpCA,yBAGJ,OAAIz6E,EAAU1L,SAAWA,IAIrB0L,EAAU2I,YAAcA,IAIxB1I,EAAUs8E,gBAAkBA,IAI5Bt8E,EAAU+6E,kBAAoBtF,IAI9Bz1E,EAAU21E,eAAiBA,IAI3B31E,EAAUu5E,mBAAqBA,IAI/Bv5E,EAAUo5E,aAAeA,GAIzBp5E,EAAUw6E,2BAA6BA,U,0CAO1B,IACTnmF,EAAWrQ,KAAKc,MAAhBuP,OACFsG,EAAQ+hB,YAAiBroB,GAC/BsoB,YAA8BtoB,EAAQ,CAACsG,IAEvC3W,KAAKg2F,YAAYr/E,GAEjBjM,IAAgBC,IAAI3K,KAAK4K,mB,6CAIzBF,IAAgBI,OAAO9K,KAAK4K,mB,+BAoRtB,IAAD,EACiB5K,KAAKc,MAAnBuP,EADH,EACGA,OAAQG,EADX,EACWA,EADX,EAODxQ,KAAKK,MAJL+qC,EAHC,EAGDA,aACAumD,EAJC,EAIDA,aACAF,EALC,EAKDA,iBACA2D,EANC,EAMDA,WAGApzE,GAAS,EACTozE,IACApzE,EAAQopB,GAGZ,IAAMmtD,EAAYv2E,GAAS,GAAKA,EAAQhiB,KAAK2mF,QAAQ7zE,OAC/C0lF,EAAeD,EAAYT,aAAgB93F,KAAK2mF,QAAQ3kE,IAAU,KAClEy2E,EAAkBD,EAAeA,EAAap6E,IAAM,KAEpDzH,GADmB8hF,EAAkBA,EAAgB/yD,MAAQ17B,IAAU27B,QAAQ8yD,EAAgBh6F,IAAM,MAC1E+5F,EAAe9/D,YAAiBroB,GAC3DqoF,EAAmBH,EAAYv4F,KAAK2mF,QAAQ3kE,GAAS,KAC9CjY,EAAS4M,EAAdyH,IACF2T,EAAOxT,aAASlO,GAEtB,OACI,yBAAKhP,UAAWiN,IAAW,eAAgB,yBACvC,yBAAKjN,UAAU,uBACX,kBAAC,GAAD,CAAkBgP,OAAQA,EAAQmX,KAAMmxE,aAAwBD,KAChE,kBAAC,GAAD,CACIr8E,MAAO7L,EAAE,eACT0M,SAAUk4E,EAAa,GAAKpzE,GAAS,EAAIs/D,KAAOoR,aAAa,KAAM1wE,EAAQ,EAAGozE,GAAc,OAEhG,yBAAK1vF,MAAO,CAAEyJ,MAAO,MACrB,kBAAC,GAAD,CAA2BkN,MAAO7L,EAAE,QAASvJ,OAAQ8C,EAAKtL,GAAIgQ,QAASzO,KAAKgyF,aAC5E,kBAAC,GAAD,CAA2B31E,MAAO7L,EAAE,WAAYvJ,OAAQ8C,EAAKtL,GAAIgQ,QAASzO,KAAK4kB,eAC3E,kBAAC,GAAD,OAEHmN,GACG,kBAAC,GAAD,CAAyB1V,MAAO7L,EAAE,UAAW/B,QAASzO,KAAK8kB,cACvD,kBAACe,GAAD,OAGR,kBAAC,GAAD,CAAyBxJ,MAAO7L,EAAE,SAAU/B,QAASzO,KAAKmD,aACtD,kBAAC6L,EAAA,EAAD,QAGR,yBAAK3N,UAAU,uBAAuBoN,QAASzO,KAAKwxF,gBAChD,yBAAKnwF,UAAU,4BACX,kBAAC,GAAD,CAAmB2O,UAAW2hF,EAAchB,MAAI,EAACliF,QAASzO,KAAKkvE,YAC3D,kBAAC,GAAD,QAIR,yBAAK7tE,UAAU,+BACX,kBAAC,GAAD,CAA2BgP,OAAQA,EAAQsG,MAAOA,EAAOmE,QAAS9a,KAAKmD,YAAao0F,WAAYv3F,KAAKwxF,kBAGzG,yBAAKnwF,UAAU,6BACX,kBAAC,GAAD,CAAmB2O,UAAWyhF,EAAkBd,MAAI,EAACliF,QAASzO,KAAKwxF,gBAC/D,kBAAC,GAAD,CAAoB9rF,MAAO,CAAEs3B,UAAW,4B,GA1ZnCr7B,IAAMC,WAuaxBgP,iBAAkB+mF,ICvYlBiB,I,yNA9CXz1F,YAAc,SAAAtC,GAAW,IACbia,EAAY,EAAKha,MAAjBga,QAERA,GAAWA,GAAQ,I,wEAGb,IAAD,OACGkS,EAAWhtB,KAAKc,MAAhBksB,OACR,IAAKA,EAAQ,OAAO,KAFf,IAIG3Q,EAA+B2Q,EAA/B3Q,MAAOzG,EAAwBoX,EAAxBpX,QAAS6rE,EAAez0D,EAAfy0D,GAAIvf,EAAWl1C,EAAXk1C,OAE5B,OACI,kBAAC,IAAD,CACIxnD,MAAM,EACNC,QAASC,KACTC,mBAAoB,EACpBC,QAAS9a,KAAKmD,YACdoM,QAAS,CAAE87C,MAAO,iBAClB,kBAAC,IAAD,KAAchvC,GACd,kBAAC,KAAD,KACI,kBAAC42B,GAAA,EAAD,KACKr9B,IAGT,kBAAC0F,EAAA,EAAD,KACM4mD,GACE,kBAAC3mD,EAAA,EAAD,CAAQ9M,QAAS,kBAAM,EAAKtL,aAAY,IAAQmT,MAAM,WACjD4rD,GAGPuf,GACE,kBAAClmE,EAAA,EAAD,CAAQ9M,QAAS,kBAAM,EAAKtL,aAAY,IAAOmT,MAAM,WAChDmrE,S,GAnCH9/E,IAAMC,YCK1Bi3F,G,2MACFx4F,MAAQ,G,EAqBRy4F,mBAAqB,WAAO,IAChBnC,EAAW,EAAKt2F,MAAhBs2F,OAER,EAAK51F,SAAS,CAAE41F,QAASA,K,wEAGnB,IAAD,EAC0B32F,KAAKc,MAA5BuP,EADH,EACGA,OAAQyK,EADX,EACWA,QAAStK,EADpB,EACoBA,EADpB,EAEuCxQ,KAAKK,MAAzC04F,EAFH,EAEGA,wBAAyBpC,EAF5B,EAE4BA,OAEjC,OACI,kBAAC,IAAD,CACIh8E,QAASC,KACTF,MAAM,EACNG,mBAAoB,EACpBC,QAAS,kBAAMA,GAAQ,EAAO67E,IAC9B57E,kBAAgB,uBAChB,kBAAC,IAAD,CAAatc,GAAG,uBAAuBiS,YAAkBL,GAAQ,EAAOG,IACxE,kBAAC,KAAD,KACI,yBAAKnP,UAAU,yBACX,kBAACsP,EAAA,EAAD,CAAUN,OAAQA,IAClB,6BACI,kBAAC4iC,GAAA,EAAD,CAAmBx0C,GAAG,6BAAtB,wCAIIs6F,GACI,kBAACj4C,GAAA,EAAD,CACIC,QACI,kBAAChhC,GAAA,EAAD,CAAUE,QAAS02E,EAAQ/mF,SAAU5P,KAAK84F,mBAAoBxiF,MAAM,YAExEwgB,MACInY,aAActO,GAAd,0BACyBK,YAAkBL,GAAQ,EAAOG,IACpD,yBAEV9K,MAAO,CAAEo6E,WAAY,QAO7C,kBAACxkE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAAS,kBAAMqM,GAAQ,EAAO67E,IAASrgF,MAAM,WAChD9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAAS,kBAAMqM,GAAQ,EAAM67E,IAASrgF,MAAM,WAC/C9F,EAAE,Y,gDAnES1P,EAAOT,GAAQ,IACnCgQ,EAAWvP,EAAXuP,OACAyN,EAAezd,EAAfyd,WAI8Bi7E,EAFzB98E,KAAUhS,IAAIoG,GAEnB8U,6BAER,OAAIrH,IAAezN,EACR,CACHyN,WAAYzN,EACZ0oF,0BACApC,OAAQoC,GAIT,S,GAnBkBp3F,IAAMC,WAmFxBgP,iBAAkBioF,IClF3BG,G,2MACF34F,MAAQ,G,EA+BRy4F,mBAAqB,WAAO,IAChBnC,EAAW,EAAKt2F,MAAhBs2F,OAER,EAAK51F,SAAS,CAAE41F,QAASA,K,wEAGnB,IAAD,EACsC32F,KAAKc,MAAxCuP,EADH,EACGA,OAAQ2E,EADX,EACWA,WAAY8F,EADvB,EACuBA,QAAStK,EADhC,EACgCA,EADhC,EAEuCxQ,KAAKK,MAAzC04F,EAFH,EAEGA,wBAAyBpC,EAF5B,EAE4BA,OAE3BzkD,EAAQl9B,EAAaA,EAAWlC,OAAS,EAE3C89C,EAAwBpgD,EAAJ,IAAV0hC,EAAgB,gCAAqC,+BAKnE,OAJIj9B,aAAa5E,KAAYuO,YAAcvO,KACvCugD,EAAwBpgD,EAAJ,IAAV0hC,EAAgB,oCAAyC,oCAInE,kBAAC,IAAD,CACIv3B,QAASC,KACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS,kBAAMA,GAAQ,EAAO67E,IAC9B57E,kBAAgB,uBAChB,kBAAC,IAAD,CAAatc,GAAG,uBAAuB6iF,KAAOoR,aAAa,sBAAuBpR,KAAO2X,mBAAmB,WAAY/mD,KACxH,kBAAC,KAAD,KACI,kBAACe,GAAA,EAAD,KACK2d,IAEF37C,aAAa5E,IAAW0oF,GACvB,kBAACj4C,GAAA,EAAD,CACIC,QAAS,kBAAChhC,GAAA,EAAD,CAAUE,QAAS02E,EAAQ/mF,SAAU5P,KAAK84F,mBAAoBxiF,MAAM,YAC7EwgB,MACInY,aAActO,GACRiC,EAAQ9B,EAAG,gBAAiBE,YAAkBL,GAAQ,EAAOG,IAC7DA,EAAE,mBAKxB,kBAAC8K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAAS,kBAAMqM,GAAQ,EAAO67E,IAASrgF,MAAM,WAChD9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAAS,kBAAMqM,GAAQ,EAAM67E,IAASrgF,MAAM,WAC/C9F,EAAE,Y,gDA1ES1P,EAAOT,GAAQ,IACnCgQ,EAAuBvP,EAAvBuP,OAAQ2E,EAAelU,EAAfkU,WACR8I,EAA+Bzd,EAA/Byd,WAAYg4D,EAAmBz1E,EAAnBy1E,eAEhBijB,GAA0B,EAJY,uBAK1C,YAAsB/jF,EAAtB,+CAAkC,CAAC,IAA1B0P,EAAyB,QACxB9O,EAAUY,KAAavM,IAAIoG,EAAQqU,GACzC,IAAK9O,EAAS,CACVmjF,GAA0B,EAC1B,MAEJ,IAAKnjF,EAAQuP,6BAA8B,CACvC4zE,GAA0B,EAC1B,QAbkC,kFAiB1C,OAAIj7E,IAAezN,GAAUylE,IAAmB9gE,EACrC,CACH8I,WAAYzN,EACZylE,eAAgB9gE,EAChB+jF,0BACApC,OAAQoC,GAIT,S,GA7BoBp3F,IAAMC,WA2F1BgP,iBAAkBooF,IC7F3BE,G,2MACFC,oBAAsB,SAAC9oF,EAAQG,GAC3B,IAAMiM,EAAOR,KAAUhS,IAAIoG,GAC3B,IAAKoM,EAAM,OAAO,KAClB,IAAKA,EAAKC,KAAM,OAAO,KAEvB,OAAQD,EAAKC,KAAK,UACd,IAAK,qBACD,MAAM,wCAAN,OAA+CD,EAAKJ,MAApD,KAEJ,IAAK,qBACD,IAAMwB,EAAaE,KAAgB9T,IAAIwS,EAAKC,KAAKe,eACjD,OAAII,EACOA,EAAW4qC,WAAX,iDACyChsC,EAAKJ,MAD9C,oDAEuCI,EAAKJ,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,MAAM,6CAAN,OAAoD3L,YAAkBL,GAAQ,EAAOG,GAArF,KAIR,OAAO,M,wEAGD,IAAD,EAC0BxQ,KAAKc,MAA5BuP,EADH,EACGA,OAAQyK,EADX,EACWA,QAAStK,EADpB,EACoBA,EAEzB,OACI,kBAAC,IAAD,CACImK,QAASC,KACTF,MAAM,EACNG,mBAAoB,EACpBC,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,uBAChB,kBAAC,IAAD,CAAatc,GAAG,uBAAuBiS,YAAkBL,GAAQ,EAAOG,IACxE,kBAAC,KAAD,KACI,yBAAKnP,UAAU,yBACX,kBAACsP,EAAA,EAAD,CAAUN,OAAQA,IAClB,kBAAC4iC,GAAA,EAAD,CAAmBx0C,GAAG,6BACjBuB,KAAKm5F,oBAAoB9oF,EAAQG,MAI9C,kBAAC8K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAAS,kBAAMqM,GAAQ,IAAQxE,MAAM,WACxC9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAAS,kBAAMqM,GAAQ,IAAOxE,MAAM,UAAUkF,WAAS,GAC1DhL,EAAE,a,GArDG7O,IAAMC,WAkErBgP,iBAAkBsoF,ICnE3BE,I,wLACQ,IAAD,EACgCp5F,KAAKc,MAAlCogF,EADH,EACGA,KAAMl0D,EADT,EACSA,OAAQlS,EADjB,EACiBA,QAAStK,EAD1B,EAC0BA,EAC/B,IAAK0wE,EAAM,OAAO,KAFb,IAIGtxD,EAAW5C,EAAX4C,OAER,OACI,kBAAC,IAAD,CACIlV,MAAM,EACNC,QAASC,KACTC,mBAAoB,EACpBC,QAAS,SAAA/L,GAAC,OAAI+L,EAAQ/L,GAAG,IACzBQ,QAAS,CAAE87C,MAAO,iBAClB,kBAAC,IAAD,KAAc76C,EAAE,YAChB,kBAAC,KAAD,KACI,kBAACyiC,GAAA,EAAD,KACKquC,KAAOoR,aAAa,yBAA0B9qC,aAAgBh4B,MAGvE,kBAACtU,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAAS,SAAAM,GAAC,OAAI+L,EAAQ/L,GAAG,IAAQuH,MAAM,WAC1C9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAAS,SAAAM,GAAC,OAAI+L,EAAQ/L,GAAG,IAAOuH,MAAM,WACzC9F,EAAE,a,GAzBE7O,IAAMC,YAuCpBgP,iBAAkBwoF,ICxC3BC,I,wLACQ,IAAD,EACuBr5F,KAAKc,MAAzBwgB,EADH,EACGA,IAAKxG,EADR,EACQA,QAAStK,EADjB,EACiBA,EACtB,OAAK8Q,EAGD,kBAAC,IAAD,CACI5G,MAAM,EACNC,QAASC,KACTC,mBAAoB,EACpBC,QAAS,SAAA/L,GAAC,OAAI+L,EAAQ/L,GAAG,IACzBQ,QAAS,CAAE87C,MAAO,iBAClB,kBAAC,IAAD,KAAc76C,EAAE,iBAChB,kBAAC,KAAD,KACI,kBAACyiC,GAAA,EAAD,KACKquC,KAAOoR,aAAa,gBAAiBpxE,KAG9C,kBAAChG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAAS,SAAAM,GAAC,OAAI+L,EAAQ/L,GAAG,IAAQuH,MAAM,WAC1C9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAAS,SAAAM,GAAC,OAAI+L,EAAQ/L,GAAG,IAAOuH,MAAM,WACzC9F,EAAE,WApBF,S,GAHG7O,IAAMC,YAqCnBgP,iBAAkByoF,IChC3BC,I,kNACFj5F,MAAQ,CACJk5F,QAAQ,EACRC,QAAQ,G,EAGZC,mBAAqB,WAAO,IAChBF,EAAW,EAAKl5F,MAAhBk5F,OAER,EAAKx4F,SAAS,CAAEw4F,QAASA,K,EAG7BG,mBAAqB,WAAO,IAChBF,EAAW,EAAKn5F,MAAhBm5F,OAER,EAAKz4F,SAAS,CAAEy4F,QAASA,K,wEAGnB,IAAD,EAC+Bx5F,KAAKc,MAAjCwgB,EADH,EACGA,IAAK0L,EADR,EACQA,OAAQlS,EADhB,EACgBA,QAAStK,EADzB,EACyBA,EAC9B,IAAK8Q,EAAK,OAAO,KAFZ,MAIsBthB,KAAKK,MAAxBk5F,EAJH,EAIGA,OAAQC,EAJX,EAIWA,OAER34F,EAAWmsB,EAAXnsB,OACR,IAAKA,EAAQ,OAAO,KAPf,IASG0oB,EAA8C1oB,EAA9C0oB,OAAQowE,EAAsC94F,EAAtC84F,YAAaC,EAAyB/4F,EAAzB+4F,qBAEzBC,EAAQvY,KAAOoR,aAAa,iBAAkBnpE,EAAQq+B,aAAgBzzC,KAAUC,YAC9E0lF,EAAY,GAClBD,EAAQ5iD,aAAwB4iD,EAAOC,GACvC,IAAMC,EACF,kBAACj5C,GAAA,EAAD,CACIC,QAAS,kBAAChhC,GAAA,EAAD,CAAUzJ,MAAM,UAAU2J,QAASs5E,EAAQ3pF,SAAU5P,KAAKy5F,qBACnE3iE,MAAO/L,aAAiB,CAAE,QAAS,gBAAiBxf,KAAMsuF,EAAOviF,SAAUwiF,GAAatpF,KAI5FwpF,EAAU,KACd,GAAIJ,EAAsB,CACtB,IAAIK,EAAQ3Y,KAAOoR,aAAa,iBAAkB3pC,aAAiB4wC,EAAanpF,IAC1E0pF,EAAY,GAClBD,EAAQhjD,aAAwBgjD,EAAOC,GACvCF,EACI,kBAACl5C,GAAA,EAAD,CACIC,QAAS,kBAAChhC,GAAA,EAAD,CAAUzJ,MAAM,UAAU2J,QAASu5E,EAAQ5pF,SAAU5P,KAAK05F,qBACnE5iE,MAAO/L,aAAiB,CAAE,QAAS,gBAAiBxf,KAAM0uF,EAAO3iF,SAAU4iF,GAAa1pF,KAKpG,OACI,kBAAC,IAAD,CACIkK,MAAM,EACNC,QAASC,KACTC,mBAAoB,EACpBC,QAAS,SAAA/L,GAAC,OAAI+L,EAAQ/L,GAAG,IACzBQ,QAAS,CAAE87C,MAAO,iBAClB,kBAAC,IAAD,KAAc76C,EAAE,iBAChB,kBAAC,KAAD,CAAe9K,MAAO,CAAE+uD,QAAS,OAAQC,cAAe,WACpD,kBAACzhB,GAAA,EAAD,KACKquC,KAAOoR,aAAa,gBAAiBpxE,IAEzCy4E,EACAC,GAEL,kBAAC1+E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAAS,SAAAM,GAAC,OAAI+L,EAAQ/L,GAAG,IAAQuH,MAAM,WAC1C9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAAS,SAAAM,GAAC,OAAI+L,EAAQ/L,GAAG,EAAM,CAAEwqF,SAAQC,YAAWljF,MAAM,WAC7D9F,EAAE,e,GAxEI7O,IAAMC,YAsFtBgP,iBAAkB0oF,ICxF3Ba,I,kNACF95F,MAAQ,G,EAiBRy4F,mBAAqB,WAAO,IAChBnC,EAAW,EAAKt2F,MAAhBs2F,OAER,EAAK51F,SAAS,CAAE41F,QAASA,K,wEAGnB,IAAD,EAC0B32F,KAAKc,MAA5BuP,EADH,EACGA,OAAQyK,EADX,EACWA,QAAStK,EADpB,EACoBA,EACjBmmF,EAAW32F,KAAKK,MAAhBs2F,OAEFl6E,EAAOR,KAAUhS,IAAIoG,GAC3B,IAAKoM,EAAM,OAAO,KAElB,IAAIlR,EAAO,GACX,OAAQkR,EAAKC,KAAK,UACd,IAAK,kBACL,IAAK,iBACDnR,EAAOiF,EAAE,uBACT,MAEJ,IAAK,qBACDjF,EAAOiF,EAAE,mBACT,MAEJ,IAAK,qBAEGjF,EADAqT,YAAcvO,GACPG,EAAE,0BAEFA,EAAE,mBAMrB,OACI,kBAAC,IAAD,CACImK,QAASC,KACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS,kBAAMA,GAAQ,EAAO67E,IAC9B57E,kBAAgB,gBAChB,kBAAC,IAAD,CAAatc,GAAG,gBAAgB+R,EAAE,YAClC,kBAAC,KAAD,KACI,kBAACyiC,GAAA,EAAD,KACK1nC,GAEL,oCAEQoT,aAActO,IACV,kBAACywC,GAAA,EAAD,CACIC,QACI,kBAAChhC,GAAA,EAAD,CAAUE,QAAS02E,EAAQ/mF,SAAU5P,KAAK84F,mBAAoBxiF,MAAM,YAExEwgB,MAAK,uBAAkBpmB,YAAkBL,GAAQ,EAAOG,QAM5E,kBAAC8K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAAS,kBAAMqM,GAAQ,EAAO67E,IAASrgF,MAAM,WAChD9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAAS,kBAAMqM,GAAQ,EAAM67E,IAASrgF,MAAM,WAC/C9F,EAAE,Y,gDA/ES1P,EAAOT,GAAQ,IACnCgQ,EAAsBvP,EAAtBuP,OAAQqU,EAAc5jB,EAAd4jB,UACR5G,EAA8Bzd,EAA9Byd,WAAYigB,EAAkB19B,EAAlB09B,cAEpB,OAAIjgB,IAAezN,GAAU0tB,IAAkBrZ,EACpC,CACH5G,WAAYzN,EACZylE,eAAgBpxD,EAChBiyE,QAASh4E,aAActO,IAIxB,S,GAfgB1O,IAAMC,YAgGtBgP,iBAAkBupF,I,UCtClBC,I,mBAnEX,WAAYt5F,GAAQ,IAAD,8BACf,4CAAMA,KAeVu5F,YAAc,WACV,IAAMr7F,EAAM,IAAI0oB,KACV4yE,EAAU,EAAKC,OAASv7F,EACxB2J,EAAQ,IAAO2xF,EAAU,EAAKx5F,MAAMgnC,QAAW,IAOrD,GALA,EAAK/mC,SAAS,CACVu5F,QAASA,EAAU,EAAIA,EAAU,EACjC3xF,MAAOA,EAAQ,IAAM,IAAMA,IAG3B3J,GAAO,EAAKu7F,QACR,EAAKC,QAAS,CACd9pB,cAAc,EAAK8pB,SACnB,EAAKA,QAAU,KAFD,IAINC,EAAc,EAAK35F,MAAnB25F,UACJA,GACAA,MA9BZ,EAAKp6F,MAAQ,CACTi6F,QAAS,EAAKx5F,MAAMgnC,QAAU,IAC9Bn/B,MAAO,GALI,E,iFAUf3I,KAAKnB,UAAY,IAAI6oB,KACrB1nB,KAAKu6F,OAASv6F,KAAKnB,UACnBmB,KAAKu6F,OAAOG,gBAAgB16F,KAAKu6F,OAAOI,kBAAoB36F,KAAKc,MAAMgnC,SACvE9nC,KAAKw6F,QAAUzkC,YAAY/1D,KAAKq6F,YAAa,O,6CA2BzCr6F,KAAKw6F,UACL9pB,cAAc1wE,KAAKw6F,SACnBx6F,KAAKw6F,QAAU,Q,+BAIb,IAAD,EACsBx6F,KAAKK,MAAxBsI,EADH,EACGA,MAAO2xF,EADV,EACUA,QAEf,OACI,yBAAKj5F,UAAU,sBACX,yBAAKA,UAAU,2BACX,kBAAC,KAAD,CAAYiV,MAAM,YAAYgkF,EAAU,KAAMM,YAElD,yBAAKv5F,UAAU,+BACX,kBAACw5F,GAAA,EAAD,CAAkB/iF,KAAM,GAAInP,MAAO,IAAMA,EAAO2X,QAAQ,iB,GAxD5C3e,IAAMC,YCMhCk5F,I,wLAEQ,IAAD,EAC6B96F,KAAKc,MAA/B4jB,EADH,EACGA,UAAW5J,EADd,EACcA,QAAStK,EADvB,EACuBA,EAEtBjF,EAAmBiF,EAAZkU,EAAc,oBAAyB,yBAEpD,OACI,kBAAC,IAAD,CACI/J,QAASC,KACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,gBAChB,kBAAC,IAAD,CAAatc,GAAG,gBAAgB+R,EAAE,YAClC,kBAAC,KAAD,KACI,kBAACyiC,GAAA,EAAD,KACK1nC,IAGT,kBAAC+P,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ9M,QAAS,kBAAMqM,GAAQ,IAAQxE,MAAM,WACxC9F,EAAE,WAEP,kBAAC+K,EAAA,EAAD,CAAQ9M,QAAS,kBAAMqM,GAAQ,IAAOxE,MAAM,WACvC9F,EAAE,a,GAzBM7O,IAAMC,YAuCxBgP,iBAAkBkqF,I,4jBCxB3BC,G,2MACF16F,MAAQ,CACJ8/B,UAAW,KACXrF,aAAc,KACd/V,eAAgB,KAChBi2E,WAAY,KACZ58D,aAAc,KACdwgC,MAAO,KACPq8B,aAAc,KACdC,cAAe,KACfC,gBAAiB,M,EA6BrBC,4BAA8B,SAAA54F,GAAW,IAC7B0+E,EAAiB1+E,EAAjB0+E,KAAMl0D,EAAWxqB,EAAXwqB,OAEVA,GAAUA,EAAO7Q,YACjB,EAAK++E,cAAgB,CAAEha,OAAMl0D,UAC7B,EAAKquE,uBAAuB,MAAM,IAElC,EAAKt6F,SAAS,CAAEm6F,cAAe,CAAEha,OAAMl0D,a,EAI/CsuE,2BAA6B,SAAA94F,GAAW,IAC5B8e,EAAgB9e,EAAhB8e,IAAK0L,EAAWxqB,EAAXwqB,OAETA,IAAWA,EAAO80D,KAClB,EAAKmZ,aAAe,CAAE35E,MAAK0L,UAC3B,EAAKuuE,sBAAsB,MAAM,IAEjC,EAAKx6F,SAAS,CAAEk6F,aAAc,CAAE35E,MAAK0L,a,EAI7CwuE,8BAAgC,SAAAh5F,GAAW,IAC/B8e,EAAgB9e,EAAhB8e,IAAK0L,EAAWxqB,EAAXwqB,OAEb,EAAKjsB,SAAS,CAAEo6F,gBAAiB,CAAE75E,MAAK0L,a,EAG5CyuE,uBAAyB,SAAAj5F,GAAW,IAAD,EACY,EAAK1B,MAAxC+U,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cACjBF,EAAoBpT,EAApBoT,QAASO,EAAW3T,EAAX2T,OAEjBN,EAAgBD,EAAS,CACrBI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQA,EAAOL,M,EAIvB4lF,oBAAsB,SAAAl5F,GAAW,IACrBwqB,EAAWxqB,EAAXwqB,OAER,EAAKjsB,SAAS,CAAE69D,MAAO,CAAE5xC,a,EAG7B2uE,2BAA6B,SAAAn5F,GAAW,IAC5B6N,EAAsB7N,EAAtB6N,OAAQqU,EAAcliB,EAAdkiB,UAEZnG,aAASlO,IACT,EAAK+tB,aAAe,CAChB/tB,SACAqU,aAEJ,EAAKk3E,4BAA2B,GAAM,IAEtC,EAAK76F,SAAS,CACVq9B,aAAc,CACV/tB,SACAqU,gB,EAMhBm3E,yBAA2B,SAAAr5F,GAAW,IAC1B6N,EAAsB7N,EAAtB6N,OAAQqU,EAAcliB,EAAdkiB,UAEZnG,aAASlO,IACT,EAAK2qF,WAAa,CACd3qF,SACAqU,aAEJ,EAAKo3E,0BAAyB,GAAM,IAEpC,EAAK/6F,SAAS,CACVi6F,WAAY,CACR3qF,SACAqU,gB,EAMhBq3E,6BAA+B,SAAAv5F,GAAW,IAC9B6N,EAAuB7N,EAAvB6N,OAAQ2E,EAAexS,EAAfwS,WAEhB,EAAKjU,SAAS,CACVgkB,eAAgB,CACZ1U,SACA2E,iB,EAKZy1B,wBAA0B,SAAAjoC,GAAW,IACzB6N,EAAW7N,EAAX6N,OAER,EAAKtP,SAAS,CAAEo/B,UAAY,CAAE9vB,a,EAGlCwqB,2BAA6B,SAAAr4B,GAAW,IAC5B6N,EAAW7N,EAAX6N,OAER,EAAKtP,SAAS,CAAE+5B,aAAe,CAAEzqB,a,EAGrC2rF,2BAA6B,SAACn7F,EAAQ81F,GAAY,IACtCnmF,EAAM,EAAK1P,MAAX0P,EAGR,GADyB,EAAKnQ,MAAtBy6B,eAGR,EAAK/5B,SAAS,CAAE+5B,aAAc,OAEzBj6B,GAAL,CAEA,IAAMwP,EAAS6pB,KAAS0G,YAClBhrB,EAAUpF,EAAE,sBACZyrF,EAAU,CACZ,QAAS,oBACT9mF,QAAS9E,EACT0yD,uBAAuB,EACvB4zB,UAGJ,EAAKhhF,sBAAsBtF,EAAQ,2BAA4BuF,EAAS,CAACqmF,M,EAG7EC,oBAAsB,SAAAr7F,GAAW,IACrBs/B,EAAc,EAAK9/B,MAAnB8/B,UACR,GAAKA,EAAL,CAF4B,IAIpB9vB,EAAW8vB,EAAX9vB,OACFoM,EAAOR,KAAUhS,IAAIoG,GAC3B,GAAKoM,IAEL,EAAK1b,SAAS,CAAEo/B,UAAW,OAEtBt/B,GAAL,CAEA,IAAM+U,EAAU,EAAKumF,yBAAyB9rF,GACxC2qC,EAAW,GACjB,OAAQv+B,EAAKC,KAAK,UACd,IAAK,qBACG0/E,YAAa/rF,IACb2qC,EAAShnC,KAAK,CAAE,QAAS,YAAamB,QAAS9E,IAEnD2qC,EAAShnC,KAAK,CAAE,QAAS,oBAAqBmB,QAAS9E,EAAQ0yD,uBAAuB,IAE1F,IAAK,qBACGs5B,YAAUhsF,GACV2qC,EAAShnC,KAAK,CACV,QAAS,sBACTmB,QAAS9E,EACT6D,QAASC,KAAUC,UACnB4uD,OAAQ,CACJ,QAAS,0BACTC,WAAW,KAGZm5B,YAAa/rF,IACpB2qC,EAAShnC,KAAK,CAAE,QAAS,YAAamB,QAAS9E,IAGvD,IAAK,kBACL,IAAK,iBACD2qC,EAAShnC,KAAK,CAAE,QAAS,oBAAqBmB,QAAS9E,EAAQ0yD,uBAAuB,IAI9F,EAAKptD,sBAAsBtF,EAAQ,wBAAyBuF,EAASolC,M,EAGzEshD,6BAA+B,SAACz7F,EAAQ81F,GAAY,IACxC5xE,EAAmB,EAAK1kB,MAAxB0kB,eACR,GAAKA,EAAL,CAF+C,IAIvC1U,EAAuB0U,EAAvB1U,OAAQ2E,EAAe+P,EAAf/P,WAEhB8B,eACA,EAAK/V,SAAS,CAAEgkB,eAAgB,OAE3BlkB,GAELH,IAAgBC,KAAK,CACjB,QAAS,iBACTwU,QAAS9E,EACT+H,YAAapD,EACb2hF,a,EAIRwF,yBAA2B,SAAA9rF,GAAW,IAC1BG,EAAM,EAAK1P,MAAX0P,EAEFiM,EAAOR,KAAUhS,IAAIoG,GAC3B,IAAKoM,EAAM,OAAOjM,EAAE,mBACpB,IAAKiM,EAAKC,KAAM,OAAOlM,EAAE,mBAEzB,OAAQiM,EAAKC,KAAK,UACd,IAAK,qBACD,OAAOlM,EAAE,mBAEb,IAAK,qBACD,IAAMqN,EAAaE,KAAgB9T,IAAIwS,EAAKC,KAAKe,eACjD,OAAII,EACOA,EAAW4qC,WAAa,eAAiB,aAG7Cj4C,EAAE,mBAEb,IAAK,kBACL,IAAK,iBACD,OAAOA,EAAE,mBAIjB,OAAOA,EAAE,oB,EAGbmF,sBAAwB,SAACtF,EAAQksF,EAAkB3mF,EAASolC,GAAc,IAC9DxqC,EAAM,EAAK1P,MAAX0P,EACR,GAAK+rF,EAAL,CAEA,IAAM55F,EAAG,UAAM45F,EAAN,mBAAiClsF,GACpC8F,EAAM,sCAAG,4BAAArF,EAAA,8DAEEsC,EAAI,EAFN,YAESA,EAAI4nC,EAASloC,QAFtB,gCAGGpS,IAAgBC,KAAKq6C,EAAS5nC,IAHjC,OAE8BA,IAF9B,sCAMP1S,IAAgBgG,aAAa,CAAE,QAAS61F,EAAkBlsF,SAAQ0qB,YAAY,IANvE,uEAAH,qDALyD,EAkB1B,EAAKj6B,MAAxC+U,EAlB6D,EAkB7DA,gBAAiBC,EAlB4C,EAkB5CA,cAEzBpV,IAAgBgG,aAAa,CAAE,QAAS61F,EAAkBlsF,SAAQ0qB,YAAY,IAC9E,IAAMhlB,EAAWF,EAAgBD,EAAS,CACtC4mF,SAAS,EACT75F,MACAuT,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACIzT,IAAI,WACJ2T,MAAM,UACNjV,UAAU,mBACV,kBAAC,GAAD,CACIymC,QAAS7xB,IACTwkF,UAAW,WACPtkF,IACAL,EAAcC,OAG1B,kBAACwF,EAAA,EAAD,CACI5Y,IAAI,OACJ2T,MAAM,UACNwB,KAAK,QACLrJ,QAAS,WA1BjB/N,IAAgBgG,aAAa,CAAE,QAAS61F,EAAkBlsF,SAAQ0qB,YAAY,IA4BlEjlB,EAAcC,KAEjBvF,EAAE,c,EAMnBsrF,yBAA2B,SAACj7F,EAAQ81F,GAAY,IACtCqE,EAAe,EAAK36F,MAApB26F,WAEN,GADAA,EAAaA,GAAc,EAAKA,WAChC,CAH2C,MAKbA,EAAtB3qF,EALmC,EAKnCA,OAAQqU,EAL2B,EAK3BA,UAEhB5N,eACA,EAAK/V,SAAS,CAAEi6F,WAAY,OAC5B,EAAKA,WAAa,KAEbn6F,GlLjVN,SAAoBwP,EAAQqU,GAA8D,IAAnD+3E,EAAkD,wDAArBC,EAAqB,wDAC5Fh8F,IAAgBC,KAAK,CACjB,QAAS,iBACTwU,QAAS9E,EACT+E,WAAYsP,EACZi4E,qBAAsBF,EACtBG,cAAeF,IkL6UfG,CAAiBxsF,EAAQqU,GAAW,GAAQiyE,K,EAGhDiF,2B,sCAA6B,WAAM/6F,GAAN,uBAAAiQ,EAAA,wDAEzBstB,GADMA,EAAiB,EAAK/9B,MAAtB+9B,eACyB,EAAKA,aAFX,oDAKjB/tB,GALiB,EAKK+tB,GAAtB/tB,OAAQqU,EALS,EAKTA,UAEhB5N,eACA,EAAK/V,SAAS,CAAEq9B,aAAc,OAC9B,EAAKA,aAAe,KAEfv9B,EAXoB,uDAarBmzE,YAAe3jE,GAbM,qBAcjBqU,EAdiB,kCAeXo4E,GAAmBzsF,EAAQqU,GAfhB,uCAiBjBywC,eAjBiB,UAmBX92B,GAAiBhuB,GAnBN,uCAsBrB8kD,eAEM1uC,EAAOxK,KAAUmrD,cAAc/2D,GAxBhB,UAyBf3P,IAAgBgG,aAAa,CAC/B,QAAS,gCACT2J,SACA82D,WAAW,MAAM1gD,EAAP,GAAgB,CAAEmhD,UAAU,MA5BrB,0C,wDAiC7Bm1B,oBAAsB,SAAAl8F,GAClB,EAAKE,SAAS,CAAE69D,MAAO,Q,EAG3B28B,sBAAwB,SAAC94F,EAAO5B,GAC5B,IAAMo6F,EAAe,EAAK56F,MAAM46F,cAAgB,EAAKA,aAKrD,GAHA,EAAKl6F,SAAS,CAAEk6F,aAAc,OAC9B,EAAKA,aAAe,KAEfp6F,EAAL,CANuC,IAQ/BygB,EAAiB25E,EAAjB35E,IAAK7S,EAAYwsF,EAAZxsF,QACb,GAAK6S,EAEL,GAAI7S,EACAA,EAAQhM,OACL,CACH,IAAM4qE,EAAYpiE,OAAOyP,OACzB2yD,EAAUC,OAAS,KACnBD,EAAUnlB,SAAW5mC,K,EAI7B+5E,uBAAyB,SAAC54F,EAAO5B,GAC7B,IAAMq6F,EAAgB,EAAK76F,MAAM66F,eAAiB,EAAKA,cAKvD,GAHA,EAAKn6F,SAAS,CAAEm6F,cAAe,OAC/B,EAAKA,cAAgB,KAEhBr6F,EAAL,CANwC,IAQhCqgF,EAAiBga,EAAjBha,KAAMl0D,EAAWkuE,EAAXluE,OACd,GAAKk0D,GACAl0D,EAAL,CAVwC,IAYhC1L,EAAiB0L,EAAjB1L,IAAK1L,EAAYoX,EAAZpX,QACR0L,GACA1L,GCxaN,SAA2B0L,EAAK1L,GACnC,IAAIonF,EAAoB,GACxB,IACIA,EAAoBt5D,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GACtE,MAAO10B,IAET,IAAMkuF,EAAWD,EAAkB,GAAKpnF,EAAQnX,IAC5Cw0F,EAAOgK,GAAsB,GAC7BC,EAAU,mBAAqBC,mBAAmB,+BACtD,IAAKF,EAAU,CAGX,IAFA,IAAMG,EAAQ,uDACRj0C,EAAQ,IAAIk0C,WAAW,GACpBjqF,EAAI,EAAGA,EAAI,GAAIA,IACpBnI,OAAOqyF,OAAOC,gBAAgBp0C,GAC9B8pC,GAAQmK,EAAMj0C,EAAM,GAAKi0C,EAAMtqF,QAGnCkqF,EAAkB,GAAKpnF,EAAQnX,IAAMw0F,EACrCzvD,aAAaI,QAAQ,WAAYF,KAAKG,UAAUm5D,IAEpDE,GAAWjK,EACX,IAAMjxE,EAAQV,EAAInH,QAAQ,KAC1B,GAAI6H,EAAQ,EACRV,GAAO,IAAM47E,MACV,CACH,IAAMM,EAAUl8E,EAAImJ,UAAU,EAAGzI,EAAQ,GACrCw7E,EAAQrjF,QAAQ,MAAQ,GAAKqjF,EAAQrjF,QAAQ,MAAQ,EACrDmH,GAAO,IAAM47E,EAETM,EAAQ1qF,OAAS,EACjBwO,GAAO,IAAM47E,EAEb57E,GAAO47E,EAKnB,IAAM7vB,EAAYpiE,OAAOyP,OACzB2yD,EAAUC,OAAS,KACnBD,EAAUnlB,SAAW5mC,EDmYjBm8E,CAAkBn8E,EAAK1L,M,EAG3B8nF,yB,sCAA2B,WAAOj7F,EAAOiY,EAAMmrB,GAApB,2BAAA/0B,EAAA,wDACfqqF,EAAoB,EAAK96F,MAAzB86F,gBACR,EAAKp6F,SAAS,CAAEo6F,gBAAiB,OAE5BzgF,EAJkB,oDAMfsS,EAAWmuE,EAAXnuE,OANe,oDASfnsB,EAAwCmsB,EAAxCnsB,OAAQwP,EAAgC2c,EAAhC3c,OAAQqU,EAAwBsI,EAAxBtI,UAAW09D,EAAap1D,EAAbo1D,SAC9BvhF,EAVkB,sDAYlBglC,EAAO0zD,OAZW,iBAanB,EAAK0B,aAAe,CAAE35E,IAAKzgB,EAAOygB,KAClC,EAAKi6E,sBAAsB94F,EAAOiY,GAdf,yCAgBGha,IAAgBC,KAAK,CACvC,QAAS,cACTwU,QAAS9E,EACT+E,WAAYsP,EACZu9D,UAAWG,EACXub,mBAAoB98F,EAAO+4F,sBAAwB/zD,EAAO2zD,SArB3C,QAgBbvmB,EAhBa,OAwBnB,EAAKgoB,aAAe,CAAE35E,IAAK2xD,EAAQ3xD,KACnC,EAAKi6E,sBAAsB94F,EAAOiY,GAzBf,0C,6IApYvBwf,KAAS/uB,GAAG,+BAAgCnL,KAAKyqC,yBACjDvQ,KAAS/uB,GAAG,kCAAmCnL,KAAK66B,4BACpDX,KAAS/uB,GAAG,6BAA8BnL,KAAK+7F,8BAC/C7hE,KAAS/uB,GAAG,yBAA0BnL,KAAK67F,0BAC3C3hE,KAAS/uB,GAAG,2BAA4BnL,KAAK27F,4BAC7CzhE,KAAS/uB,GAAG,oBAAqBnL,KAAK07F,qBACtCxhE,KAAS/uB,GAAG,uBAAwBnL,KAAKy7F,wBACzCvhE,KAAS/uB,GAAG,2BAA4BnL,KAAKs7F,4BAC7CphE,KAAS/uB,GAAG,4BAA6BnL,KAAKo7F,6BAC9ClhE,KAAS/uB,GAAG,8BAA+BnL,KAAKw7F,iC,6CAIhDthE,KAAS5uB,IAAI,+BAAgCtL,KAAKyqC,yBAClDvQ,KAAS5uB,IAAI,kCAAmCtL,KAAK66B,4BACrDX,KAAS5uB,IAAI,6BAA8BtL,KAAK+7F,8BAChD7hE,KAAS5uB,IAAI,yBAA0BtL,KAAK67F,0BAC5C3hE,KAAS5uB,IAAI,2BAA4BtL,KAAK27F,4BAC9CzhE,KAAS5uB,IAAI,oBAAqBtL,KAAK07F,qBACvCxhE,KAAS5uB,IAAI,uBAAwBtL,KAAKy7F,wBAC1CvhE,KAAS5uB,IAAI,2BAA4BtL,KAAKs7F,4BAC9CphE,KAAS5uB,IAAI,4BAA6BtL,KAAKo7F,6BAC/ClhE,KAAS5uB,IAAI,8BAA+BtL,KAAKw7F,iC,+BA2Y3C,IAAD,EAC8Hx7F,KAAKK,MAAhI8/B,EADH,EACGA,UAAWrF,EADd,EACcA,aAAc/V,EAD5B,EAC4BA,eAAgBi2E,EAD5C,EAC4CA,WAAY58D,EADxD,EACwDA,aAAcwgC,EADtE,EACsEA,MAAOq8B,EAD7E,EAC6EA,aAAcC,EAD3F,EAC2FA,cAAeC,EAD1G,EAC0GA,gBAC/G,GAAIh7D,EAAW,CAAC,IACJ9vB,EAAW8vB,EAAX9vB,OAER,OACI,kBAAC,GAAD,CACIA,OAAQA,EACRyK,QAAS9a,KAAKk8F,sBAEnB,GAAIphE,EAAc,CAAC,IACdzqB,EAAWyqB,EAAXzqB,OAER,OACI,kBAAC,GAAD,CACIA,OAAQA,EACRyK,QAAS9a,KAAKg8F,6BAEnB,GAAIj3E,EAAgB,CAAC,IAChB1U,EAAuB0U,EAAvB1U,OAAQ2E,EAAe+P,EAAf/P,WAEhB,OACI,kBAAC,GAAD,CACI3E,OAAQA,EACR2E,WAAYA,EACZ8F,QAAS9a,KAAKs8F,+BAEnB,GAAItB,EAAY,CAAC,IACZ3qF,EAAsB2qF,EAAtB3qF,OAAQqU,EAAcs2E,EAAdt2E,UAEhB,OACI,kBAAC,GAAD,CACIrU,OAAQA,EACRqU,UAAWA,EACX5J,QAAS9a,KAAK87F,2BAEnB,GAAI19D,EAAc,CAAC,IACd/tB,EAAsB+tB,EAAtB/tB,OAAQqU,EAAc0Z,EAAd1Z,UAEhB,OACI,kBAAC,GAAD,CACIrU,OAAQA,EACRqU,UAAWA,EACX5J,QAAS9a,KAAK47F,6BAEnB,GAAIh9B,EAAO,CAAC,IACP5xC,EAAW4xC,EAAX5xC,OAER,OACI,kBAAC,GAAD,CACIA,OAAQA,EACRlS,QAAS9a,KAAK+8F,sBAEnB,GAAI9B,EAAc,CAAC,IACd35E,EAAgB25E,EAAhB35E,IAAK0L,EAAWiuE,EAAXjuE,OAEb,OACI,kBAAC,GAAD,CACI1L,IAAKA,EACL0L,OAAQA,EACRlS,QAAS9a,KAAKu7F,wBAEnB,GAAIL,EAAe,CAAC,IACfha,EAAiBga,EAAjBha,KAAMl0D,EAAWkuE,EAAXluE,OAEd,OACI,kBAAC,GAAD,CACIk0D,KAAMA,EACNl0D,OAAQA,EACRlS,QAAS9a,KAAKq7F,yBAEnB,GAAIF,EAAiB,CAAC,IACjB75E,EAAgB65E,EAAhB75E,IAAK0L,EAAWmuE,EAAXnuE,OAEb,OACI,kBAAC,GAAD,CACI1L,IAAKA,EACL0L,OAAQA,EACRlS,QAAS9a,KAAK09F,2BAI1B,OAAO,S,GAjgBO/7F,IAAM4rC,eA0gBb9xB,GALCC,YACZC,IACA/K,cAGW6K,CAAQs/E,IE9gBjB6C,G,YACF,WAAY98F,GAAQ,IAAD,uBACf,4CAAMA,KA2CV2uF,+BAAiC,SAAAjtF,GAAW,IAChC6G,EAAc7G,EAAd6G,UAER,EAAKtI,SAAS,CACVsI,eAhDW,EAoDnB+tB,wBAA0B,SAAA50B,GAAW,IACzB6f,EAAiB7f,EAAjB6f,aAER,EAAKthB,SAAS,CAAEshB,kBAvDD,EA0DnBw7E,iCAAmC,SAAAr7F,GAAW,IAClCkU,EAAYlU,EAAZkU,QAER,EAAK3V,SAAS,CACV+8F,mBAAoBpnF,KA9DT,EAkEnBqnF,uBAAyB,SAAAv7F,GAAW,IACxB6N,EAA6B7N,EAA7B6N,OAAQqU,EAAqBliB,EAArBkiB,UAAWiK,EAAUnsB,EAAVmsB,MAE3B,EAAK+uD,iBAAiBrtE,EAAQqU,EAAWiK,IArE1B,EAwEnBqvE,uBAAyB,SAAAx7F,GAAW,IACxBotB,EAAkBptB,EAAlBotB,OAAQjB,EAAUnsB,EAAVmsB,MAEhB,EAAK8uD,iBAAiB7tD,EAAQjB,IA3Ef,EA8EnBigE,oCAAsC,SAAApsF,GAAW,IACrCy7F,EAAyB/jE,KAAzB+jE,qBAER,EAAKl9F,SAAS,CAAEk9F,0BAjFD,EAoFnBzwC,iCAAmC,SAAAhrD,GAAW,IAClCirD,EAAuBvzB,KAAvBuzB,mBAER,EAAK1sD,SAAS,CAAE0sD,wBAvFD,EA0FnBywC,wCAA0C,SAAA17F,GAAW,IACzC27F,EAA8BjkE,KAA9BikE,0BAER,EAAKp9F,SAAS,CAAEo9F,+BA7FD,EAgGnBC,sBAAwB,SAAA57F,GAAW,IACvBkc,EAASlc,EAATkc,KAER,EAAK3d,SAAS,CAAEo2E,YAAaz4D,KAnGd,EAsGnBg/D,iBAAmB,SAACrtE,GAA6C,IAArCqU,EAAoC,uDAAxB,KAAMiK,EAAkB,wDACtDzM,EAAgBgY,KAAS0G,YACzBy9D,EAAsBnkE,KAASC,aAC/B8sC,EAAmB/sC,KAAS2T,eAE9Blf,EACI0vE,IAAwBhuF,GACxB3P,IAAgBgG,aAAa,CACzB,QAAS,2BACT2J,WAOR6R,IAAkB7R,GAAUqU,GAAauiD,IAAqBviD,GAC9D,EAAK45E,iBAAiBpnF,QAAQ0yE,kBAC1BllE,GACAqmE,aAAiB16E,EAAQqU,IAEtBxC,IAAkB7R,GAAWqU,EAGpChkB,IAAgB6qC,UAAUl7B,EAAQqU,GAFlC,EAAK45E,iBAAiBpnF,QAAQizE,iBA5HnB,EAkInB1M,iBAlImB,sCAkIA,WAAO7tD,EAAQjB,GAAf,eAAA7d,EAAA,wDACV8e,EADU,iEAGIlvB,IAAgBC,KAAK,CACpC,QAAS,oBACTuT,QAAS0b,EACTvb,OAAO,IANI,OAGToI,EAHS,OASf,EAAKihE,iBAAiBjhE,EAAKhe,GAAI,KAAMkwB,GATtB,yCAlIA,wDAGf,EAAK2vE,iBAAmB38F,IAAM2Y,YAHf,IAKP2jF,EAAsF/jE,KAAtF+jE,qBAAsBxwC,EAAgEvzB,KAAhEuzB,mBAAoB0wC,EAA4CjkE,KAA5CikE,0BAA2B97E,EAAiB6X,KAAjB7X,aAL9D,OAOf,EAAKhiB,MAAQ,CACT49F,uBACAxwC,qBACA0wC,4BACA97E,eACA80D,YAAa,KACb2mB,mBAAoB,KACpBz0F,UAAW,MAdA,E,iFAmBf8K,KAAUhJ,GAAG,uBAAwBnL,KAAKg+F,wBAC1C/hF,KAAU9Q,GAAG,uBAAwBnL,KAAK+9F,wBAE1C7jE,KAAS/uB,GAAG,oCAAqCnL,KAAK4uF,qCACtD10D,KAAS/uB,GAAG,iCAAkCnL,KAAKwtD,kCACnDtzB,KAAS/uB,GAAG,wBAAyBnL,KAAKo3B,yBAC1C8C,KAAS/uB,GAAG,wCAAyCnL,KAAKk+F,yCAC1DhkE,KAAS/uB,GAAG,sBAAuBnL,KAAKo+F,uBACxCtL,KAAiB3nF,GAAG,iCAAkCnL,KAAK69F,kCAC3DzzF,IAAYe,GAAG,+BAAgCnL,KAAKyvF,kC,6CAIpDt7E,KAAU7I,IAAI,uBAAwBtL,KAAKg+F,wBAC3C/hF,KAAU3Q,IAAI,uBAAwBtL,KAAK+9F,wBAE3C7jE,KAAS5uB,IAAI,oCAAqCtL,KAAK4uF,qCACvD10D,KAAS5uB,IAAI,iCAAkCtL,KAAKwtD,kCACpDtzB,KAAS5uB,IAAI,wBAAyBtL,KAAKo3B,yBAC3C8C,KAAS5uB,IAAI,wCAAyCtL,KAAKk+F,yCAC3DhkE,KAAS5uB,IAAI,sBAAuBtL,KAAKo+F,uBACzCtL,KAAiBxnF,IAAI,iCAAkCtL,KAAK69F,kCAC5DzzF,IAAYkB,IAAI,+BAAgCtL,KAAKyvF,kC,+BAqG/C,IAAD,EASDzvF,KAAKK,MAPLy9F,EAFC,EAEDA,mBACAG,EAHC,EAGDA,qBACAxwC,EAJC,EAIDA,mBACA0wC,EALC,EAKDA,0BACAhnB,EANC,EAMDA,YACA9tE,EAPC,EAODA,UACAgZ,EARC,EAQDA,aAGJ,OACI,oCACI,yBACIhhB,UAAWiN,IAAW,OAAQ,CAC1B,aAAc+T,EACd,oBAAqB47E,KAEzB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAehjF,IAAKjb,KAAKs+F,mBACxBL,GAAwB,kBAAC,GAAD,OAE7B,kBAAC,GAAD,MACCH,GAAsB,kBAAC,GAAkBA,GACzCrwC,GAAsB,kBAAC,GAAgBA,GACvC0wC,GAA6B,kBAAC,GAAuBA,GACrDhnB,GAAe,kBAAC,GAAkBA,GAClC9tE,GAAa,kBAAC,EAAcA,Q,GA1KtB1H,IAAMC,WAkLvB6Z,GAAUC,YACZ6iF,IACAx8F,GAGW0Z,aAAQmiF","file":"static/js/3.47112bd0.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false, onlyForSelf = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification,\n        only_for_self: onlyForSelf\n    });\n}\n\nexport function unpinMessage(chatId, messageId) {\n    return TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n    });\n}\n\nexport function unpinAllMessages(chatId) {\n    return TdLibController.send({\n        '@type': 'unpinAllChatMessages',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        window._m = new Map();\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    window._m.set(chat_id, chat_id);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        window._chats = chats;\n        window._c = new Map((chats || []).map(i => [i, i]));\n        const ids = [];\n        window._m.forEach((value, key) => {\n            if (!window._c.has(key)) {\n                ids.push(key);\n            }\n        });\n        console.log('[vl] render', (chats || []).length, window._c.size, window._m.size, ids.length,\n            //ids.map(x => ChatStore.get(x))\n        );\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        await TdLibController.send({\n           '@type': 'toggleMessageSenderIsBlocked',\n            sender: { '@type': 'messageSenderUser', user_id: userId },\n            is_blocked: false\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height } = this.props;\n        const { from, to } = this.state;\n\n        // console.log('[c] render', [from, to, scrollDown]);\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{to}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    scrollDown: true,\n    height: 21\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                    { pinned.length > 1 && (\n                        <IconButton\n                            className='pinned-message-edit-button'\n                            aria-label='Edit'\n                            onClick={this.handleEditClick}\n                            onMouseDown={this.handleMouseDown}>\n                            <PlaylistEditIcon />\n                        </IconButton>\n                    )}\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Header.css';\n\nclass Header extends Component {\n    state = {\n        authorizationState: AppStore.getAuthorizationState(),\n        connectionState: AppStore.getConnectionState()\n    };\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <>\n                                <IconButton\n                                    className='header-right-second-button'\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\nimport PendingIcon from '../../../Assets/Icons/Pending';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { text, show_alert, url } = result;\n\n                let title = '';\n                if (message) {\n                    if (via_bot_user_id) {\n                        title = getUserFullName(via_bot_user_id, null);\n                    } else {\n                        title = getChatTitle(chatId, false);\n                    }\n                }\n                title = title || LStore.getString('Bot');\n\n                if (text) {\n                    if (show_alert) {\n                        showAlert({\n                            title,\n                            message: text,\n                            ok: LStore.getString('OK')\n                        });\n                    } else {\n                        showSnackbar(text, closeSnackbar => snackKey => {\n                            return (\n                                <IconButton\n                                    key='close'\n                                    aria-label='Close'\n                                    color='inherit'\n                                    className='notification-close-button'\n                                    onClick={() => { closeSnackbar(snackKey); }}>\n                                    <CloseIcon />\n                                </IconButton>\n                            )\n                        });\n                    }\n                } else if (url) {\n                    if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                        const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\n                        const user = UserStore.get(userId);\n\n                        showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n                    } else {\n                        showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// qwerty_bot\n                const { in_current_chat, query } = type;\n\n                if (in_current_chat){\n                    const message = MessageStore.get(chatId, messageId);\n                    if (!message) break;\n\n                    const { sender, via_bot_user_id } = message;\n                    let userId = sender.user_id;\n                    if (via_bot_user_id !== 0) {\n                        userId = via_bot_user_id;\n                    }\n\n                    const user = UserStore.get(userId);\n                    if (!user) break;\n\n                    setText(`@${user.username} ${query}`)\n                } else {\n\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { text } = this.props;\n        const { loading } = this.state;\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                    {text}\n                    {loading && (\n                        <PendingIcon\n                            className='keyboard-button-progress'\n                            viewBox='0 0 14 14'\n                        />\n                    )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle, isBadSelection, isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\nimport ReplyMarkup from './Markup/ReplyMarkup';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto') || reply_markup;\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {withBubble && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (history.some(x => x.chat_id === chatId && x.id === messageId || !messageId && chat && chat.last_message.id === x.id)) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                    <Footer chatId={chatId} />\n                </div>\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(false);\n    };\n\n    render() {\n        const { params } = this.props;\n        if (!params) return null;\n\n        const { title, message, ok, cancel } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default AlertDialog;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column'}}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { canPinMessages, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { clearSelection, closePinned, showOpenUrlAlert } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        this.setState({ alert: null });\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    render() {\n        const { leaveChat, clearHistory, deleteMessages, pinMessage, unpinMessage, alert, openUrlAlert, openGameAlert, requestUrlAlert } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}