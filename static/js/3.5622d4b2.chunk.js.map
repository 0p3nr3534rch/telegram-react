{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Actions.js","Utils/Game.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Utils/Text.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/CallEnd.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Components/Calls/GroupCallSettings.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","PinMessageDialog","prevMessageId","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","UnpinMessageDialog","LeaveVoiceChatDialog","discard","handleDiscardChange","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","onClientUpdateBlockSender","update","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","newWindow","window","opener","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","openGameInBrowser","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","on","off","PureComponent","enhance","compose","withSnackbar","DialogTitle","onFastUpdatingComplete","forceUpdate","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","classNames","Chat","handleClick","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Close","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","tabIndex","disableRipple","ListItemText","primary","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","onWindowResize","setSelection","supergroupMembers","photoAndVideo","document","audio","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","current","item","left","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","clamp","offsetWidth","setTimeout","handleFilterClick","createRef","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","ref","r","set","onMouseDown","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","stopPropagation","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","handleOpenContextMenu","contextMenu","clientX","top","clientY","handleCloseContextMenu","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","console","content","description","animation","video","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","filter","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","map","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","overScanCount","SharedMediaContent","items","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","container","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","addEventListener","removeEventListener","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","copy","navigator","clipboard","writeText","copyOld","element","successful","createElement","contentEditable","readOnly","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","getChatUsername","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","clientHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyDown","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","width","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","offset_order","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","remove","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","root","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","track","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","GroupCallTopPanel","onUpdateGroupCallParticipant","group_call_id","participant","call","groupCallId","groupCall","connection","CallStore","can_unmute_self","onUpdateGroupCall","group_call","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","currentGroupCall","connected","iceConnectionState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","changeMuted","showSnackbar","handleLeave","leaveGroupCall","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","Mic","MicOff","CallEnd","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","canManageVoiceChats","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessageBorder","drawRect","radius","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","getElementById","text1Element","text2Element","timingFunction","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","which","clickedPinned","handleMouseDown","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","max","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","player","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","muted","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","handleCopyLink","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","prevGroupCallId","GroupCallRecentParticipants","speakers","recent_speakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","handleMouseUp","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchRef","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","SCALE_BIG","SCALE_SMALL","SCALE_BIG_MIN","SCALE_SMALL_MIN","FORM_BIG_MAX","FORM_SMALL_MAX","LIGHT_GRADIENT_SIZE","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","result1","result2","LineBlobDrawable","pinnedTop","progressToPinned","lineTo","MUTE_BUTTON_STATE_UNMUTE","MUTE_BUTTON_STATE_MUTE","MUTE_BUTTON_STATE_CONNECTING","MUTE_BUTTON_STATE_MUTED_BY_ADMIN","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","alpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","newTime","lastUpdateTime","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","animated","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","Button","invokeDraw","handleBlur","raf","handleDevicePixelRatioChanged","devicePixelRatio","mounted","currentState","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","animateToAmplitude","animateAmplitudeDiff","canSwitchProgress","radialProgressView","switchProgress","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","clearRect","resetTransform","paintTmp","globalAlpha","scaleLight","drawCircle","setCurrentState","states","previousState","progressToState","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","matchMedia","generateInitBlob","setAmplitude","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButton","onClientUpdateOutputAmplitudeChange","buttonRef","is_muted","switchButtonState","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","closeGroupCallPanel","handleSendMessage","changeUserMuted","handleUnmute","participants","can_be_muted_for_all_users","can_be_unmuted_for_all_users","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","GroupCallParticipants","participantsMap","preloadContent","manageGroupCalls","AddMember","GroupCallSettings","openDeviceSelect","handleCloseDeviceSelect","onDeviceChange","enumerateDevices","devices","outputDeviceId","getOutputDeviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handlePanelClick","handleOpenDeviceSelect","handleSelectDevice","deviceId","setOutputDeviceId","outputDeviceInfo","outputString","inputAudioDeviceInfo","inputAudioString","rects","rx","ry","svg","GroupCallSettingsButton","Tune","GroupCallPanel","handleOpenSettings","GroupCall","onClientUpdateGroupCallFullScreen","fullscreen","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","windowDragging","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","oldLeft","oldTop","normalizePosition","startLeft","startTop","fullScreen","setPosition","pipParams","documentElement","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleFullScreen","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","exitFullscreen","requestFullscreen","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onDoubleClick","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.5622d4b2.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(result);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './LeaveVoiceChatDialog.css';\n\nclass LeaveVoiceChatDialog extends React.Component {\n    state = {\n        discard: false\n    };\n\n    handleDiscardChange = () => {\n        const { discard } = this.state;\n\n        this.setState({\n            discard: !discard\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { discard } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.getString('VoipGroupLeaveAlertText')}\n                    </DialogContentText>\n                    <FormControlLabel\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\n                        label={t('VoipGroupEndChat')}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\n                        {t('VoipGroupLeave')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nLeaveVoiceChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { clearSelection, closePinned } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { reportChat } from '../Actions/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null,\n        leaveVoiceChatAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n    }\n\n    onClientUpdateBlockSender = update => {\n        const { sender } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateLeaveVoiceChatAlert = update => {\n        const { params } = update;\n\n        this.setState({ leaveVoiceChatAlert: { params }});\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        const { alert } = this.state;\n        if (!alert) return;\n\n        const { params } = alert;\n        this.setState({ alert: null });\n\n        const { onResult } = params;\n        onResult && onResult(result);\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            event && event.preventDefault();\n\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\n        const { leaveVoiceChatAlert } = this.state;\n\n        this.setState({ leaveVoiceChatAlert: null });\n\n        const { params } = leaveVoiceChatAlert;\n        if (!params) return;\n\n        const { onResult } = params;\n\n        onResult && onResult(resultParams);\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert,\n            leaveVoiceChatAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        } else if (leaveVoiceChatAlert) {\n            const { params } = leaveVoiceChatAlert;\n\n            return (\n                <LeaveVoiceChatDialog\n                    params={params}\n                    onClose={this.handleLeaveVoiceChatContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {isPrivateChat(chatId) && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\n                                                </Typography>\n                                            }\n                                            secondary={t('Phone')}\n                                        />\n                                    </ListItem>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    onUpdateMessageSendAcknowledged = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ sendingState: null });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport {\n    STORAGE_CACHE_KEY,\n    STORAGE_CACHE_TEST_KEY,\n    STORAGE_CONTACTS_KEY,\n    STORAGE_CONTACTS_TEST_KEY,\n    STORAGE_FILES_KEY,\n    STORAGE_FILES_TEST_KEY,\n    STORAGE_FILTERS_KEY,\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\n} from '../Constants';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        const { useTestDC } = TdLibController.parameters;\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000, {\n            leading: false,\n            trailing: true\n        });\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove(this.cacheKey);\n                        CacheManager.remove(this.filesKey);\n                        if (this.cacheContacts) {\n                            CacheManager.remove(this.contactsKey);\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        const promises = [];\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n        // console.log('[f] cache.load', files);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[f] cache.parse', cache.files);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        // console.log('[cm] save');\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal');\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save(this.cacheKey, cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        const results = await Promise.all(promises);\n        await CacheManager.save(this.filesKey, results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save(this.contactsKey, contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save(this.filtersKey, this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\n\n        Promise.all(promises);\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport { openSupportChat } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n\n        openSupportChat();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        if (this.stub) return;\n\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source, stub = false) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        if (stub) {\n            return <DialogPlaceholder key={index} index={index} />\n        }\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        this.source = [];\n        this.stub = false;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                this.source = Array.from(Array(10));\n                this.stub = true;\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    cacheItems: PropTypes.array,\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\n\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current.cropper;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n        try {\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n            type = themeOptions.type;\n            primary = themeOptions.primary;\n        } catch {}\n\n        this.state = {\n            open: false,\n            type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        const type = event.target.value;\n\n        this.setState({ type });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                disableEnforceFocus={true}\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { isMacOS } from '../../../Utils/Common';\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false,\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    async handleSetOption(command) {\n        let value = false;\n        switch (command) {\n            case 'sendByCtrlEnter': {\n                value = true;\n                break;\n            }\n            case 'sendByEnter': {\n                value = false;\n                break;\n            }\n        }\n\n        await TdLibController.send({\n            '@type': 'setOption',\n            name: SEND_BY_CTRL_ENTER_KEY,\n            value: { '@type': 'optionValueBoolean', value }\n        });\n\n        this.setState({\n            sendByCtrlEnter: value\n        });\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Theme')} />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={!sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('SendByEnter')}\n                                secondary={t('NewLineByShiftEnter')}\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\n                                secondary={t('NewLineByEnter')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile || defaultPhoto) {\n            const photo = defaultPhotoFile\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputChatPhotoStatic', photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile || defaultPhoto) {\n                const photo = defaultPhotoFile\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        {/*<UpdatePanel />*/}\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter+cmd, enter+ctrl\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                } else {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\n    'CallEnd'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\n    'Mic'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\n    'MicOff'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { openGroupCallPanel } from '../../Actions/Call';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallTopPanel.css';\n\nclass GroupCallTopPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState === 'connected';\n        }\n\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { call, status, connected } = this.state;\n\n        if (nextState.call !== call) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.connected !== connected) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            // connected = connection && connection.iceConnectionState !== 'new' && connection.iceConnectionState !== 'connecting';\n        }\n\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState !== 'new' && connection.iceConnectionState !== 'connecting';\n        }\n\n        this.saveMessagesScrollPosition();\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.restoreMessagesScrollPosition(Boolean(call));\n        });\n    };\n\n    saveMessagesScrollPosition() {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const prevOffsetHeight = list.offsetHeight;\n            const prevScrollTop = list.scrollTop;\n\n            list.prevOffsetHeight = prevOffsetHeight;\n            list.prevScrollTop = prevScrollTop;\n        });\n    }\n\n    restoreMessagesScrollPosition(openPanel = true) {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const { prevScrollTop, prevOffsetHeight } = list;\n            if (list.scrollTop === prevScrollTop) {\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\n            }\n        });\n    }\n\n    handleMicrophone = async event => {\n        event.stopPropagation();\n\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeMuted(!CallStore.isMuted());\n        }\n    };\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenGroupCall = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        openGroupCallPanel();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { call, status, connected } = this.state;\n        if (!call) return null;\n\n        const { chatId } = call;\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\n\n        return (\n            <div className={classNames('group-call-top-panel',\n                {\n                    'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\n                    'group-call-top-panel-unmuted': connected && status === 'unmuted',\n                    'group-call-top-panel-connecting': !connected,\n\n                })}\n                onClick={this.handleOpenGroupCall}\n            >\n                <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\n                    {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\n                </IconButton>\n                <div className='group-call-top-panel-title'>\n                    {title}\n                </div>\n                <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\n                    <CallEndIcon fontSize='small' />\n                </IconButton>\n            </div>\n        )\n    }\n\n}\n\nGroupCallTopPanel.propTypes = {};\n\nexport default withTranslation()(GroupCallTopPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\n    'Block'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\n    'Phone'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BlockIcon from '../../Assets/Icons/Block';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport PhoneIcon from '../../Assets/Icons/Phone';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage, canSwitchBlocked, getChatSender, canManageVoiceChats } from '../../Utils/Chat';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n    };\n\n    handleStartGroupCall = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        showAlert({\n            title: LStore.getString('StartVoipChatTitle'),\n            message: LStore.getString('StartVoipChatAlertText'),\n            ok: LStore.getString('Start'),\n            cancel: LStore.getString('Cancel'),\n            onResult: async result => {\n                if (result){\n                    await CallStore.startGroupCall(chatId);\n                }\n            }\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked, voice_chat_group_call_id } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n        const manageVoiceChats = canManageVoiceChats(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\n                        <MenuItem onClick={this.handleStartGroupCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('StartVoipChat')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                <BlockIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height } = this.props;\n        const { from, to } = this.state;\n\n        // console.log('[c] render', [from, to, scrollDown]);\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{to}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    scrollDown: true,\n    height: 21\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                    {/*{ pinned.length > 1 && (*/}\n                    {/*    <IconButton*/}\n                    {/*        className='pinned-message-edit-button'*/}\n                    {/*        aria-label='Edit'*/}\n                    {/*        onClick={this.handleEditClick}*/}\n                    {/*        onMouseDown={this.handleMouseDown}>*/}\n                    {/*        <PlaylistEditIcon />*/}\n                    {/*    </IconButton>*/}\n                    {/*)}*/}\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.state = {\n            chatId,\n            pinned,\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState()\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    setPinnedState() {\n        const { chatId } = this.state;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({ pinned });\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({\n            chatId,\n            pinned\n        });\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handlePinClick = () => {\n        const { chatId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            pinned,\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <div className='header-right-buttons'>\n                                { pinned.length > 1 && (\n                                    <IconButton\n                                        aria-label='Pins'\n                                        onClick={this.handlePinClick}\n                                        onMouseDown={this.handleMouseDown}>\n                                        <PlaylistEditIcon />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport './GroupCallJoinPanelSubtitle.css';\n\nclass GroupCallJoinPanelSubtitle extends React.Component {\n    state = {\n        participantCount: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participantCount } = this.state;\n\n        if (nextState.participantCount !== participantCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            let participantCount = 0;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const { participant_count } = groupCall;\n                participantCount = participant_count;\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                participantCount\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== groupCallId) return;\n\n        let participantCount = 0;\n        const groupCall = CallStore.get(groupCallId);\n        if (groupCall) {\n            const { participant_count } = groupCall;\n            participantCount = participant_count;\n        }\n\n        this.setState({ participantCount });\n    };\n\n    render() {\n        const { t, participantsOnly } = this.props;\n        const { participantCount } = this.state;\n\n        return (\n            <div className='group-call-join-panel-subtitle'>\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\n            </div>\n        );\n    }\n\n}\n\nGroupCallJoinPanelSubtitle.propTypes = {\n    groupCallId: PropTypes.number,\n    participantsOnly: PropTypes.bool\n};\n\nGroupCallJoinPanelSubtitle.defaultProps = {\n    participantsOnly: false\n}\n\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from '../Tile/UserTile';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallRecentParticipants.css';\n\nfunction speakersEquals(lhs, rhs) {\n    if (lhs.length !== rhs.length) return false;\n\n    for (let i = 0; i < lhs.length; i++) {\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\n    }\n\n    return true;\n}\n\nclass GroupCallRecentParticipants extends React.Component {\n    state = {\n        speakers: []\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { speakers } = this.state;\n\n        if (!speakersEquals(nextState.speakers, speakers)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { id } = props;\n        const { prevId } = state;\n\n        if (prevId !== id) {\n            let speakers = [];\n            const groupCall = CallStore.get(id);\n            if (groupCall) {\n                const { recent_speakers } = groupCall;\n                speakers = recent_speakers;\n            }\n\n            return {\n                prevId: id,\n                speakers\n            };\n        }\n\n        return null;\n    }\n\n    loadContent(speakers) {\n        const store = FileStore.getStore();\n        loadUsersContent(store, speakers.map(x => x.user_id));\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.speakers);\n\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { id } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== id) return;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        if (!speakers.length) {\n            this.setState({ speakers });\n        } else {\n            this.loadContent(speakers);\n\n            setTimeout(() => {\n                this.setState({ speakers });\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        }\n    };\n\n    render() {\n        const { speakers } = this.state;\n        if (!speakers) return null;\n        if (!speakers.length) return null;\n\n        return (\n            <div className='group-call-recent-participants'>\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallRecentParticipants.propTypes = {\n    id: PropTypes.number\n};\n\nexport default GroupCallRecentParticipants;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './GroupCallJoinPanel.css';\n\nclass GroupCallJoinPanel extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            let groupCallId = 0;\n            if (chat) {\n                const { voice_chat_group_call_id } = chat;\n                groupCallId = voice_chat_group_call_id;\n            }\n\n            const { currentGroupCall } = CallStore;\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\n\n            return {\n                prevChatId: chatId,\n                groupCallId,\n                isCurrent\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { isCurrent, groupCallId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.groupCallId !== groupCallId) {\n            return true;\n        }\n\n        if (nextState.isCurrent !== isCurrent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    handleUpdateChatVoiceChat = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if ( chatId !== chat_id) return;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n\n        this.setState({\n            groupCallId: voice_chat_group_call_id\n        });\n    }\n\n    handleUpdateGroupCall = update => {\n        const { group_call } = update;\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\n\n        this.setState({\n            groupCallId: group_call ? group_call.id : 0\n        });\n    };\n\n    handleClientUpdateGroupCall = update => {\n        const { chatId } = this.props;\n\n        const { currentGroupCall } = CallStore;\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n        this.setState({ isCurrent });\n    };\n\n    handleJoin = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { voice_chat_group_call_id } = chat;\n        const groupCall = CallStore.get(voice_chat_group_call_id);\n        if (groupCall && groupCall.is_joined) return;\n\n        const muted = true;\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const { groupCallId, isCurrent } = this.state;\n        if (!groupCallId) return null;\n        if (isCurrent) return null;\n\n        return (\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\n                <div className='group-call-join-panel-content'>\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\n                </div>\n                <GroupCallRecentParticipants id={groupCallId}/>\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\n                    {t('VoipChatJoin')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nGroupCallJoinPanel.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallJoinPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, via_bot_user_id } = message;\n                let userId = sender.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {withBubble && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        const { prevScrollTop, prevOffsetHeight } = this;\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <div className='messages-list-top-panel'>\n                    <GroupCallJoinPanel chatId={chatId}/>\n                    <ActionBar chatId={chatId} />\n                </div>\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <GroupCallTopPanel/>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        messageIds.sort();\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const MAX_SPEED = 8.2;\nexport const MIN_SPEED = 0.8;\nexport const AMPLITUDE_SPEED = 0.33;\n\nexport const SCALE_BIG = 0.807;\nexport const SCALE_SMALL = 0.704;\n\nexport const SCALE_BIG_MIN = 0.878;\nexport const SCALE_SMALL_MIN = 0.926;\n\nexport const FORM_BIG_MAX = 0.6;\nexport const FORM_SMALL_MAX = 0.6;\n\nexport const GLOBAL_SCALE = 1;\n\nexport const FORM_BUTTON_MAX = 0;\n\nexport const GRADIENT_SPEED_MIN = 0.5;\nexport const GRADIENT_SPEED_MAX = 0.01;\n\nexport const LIGHT_GRADIENT_SIZE = 0.5;\n\nfunction rotateZ(x, y, angle, originX, originY) {\n    x -= originX;\n    y -= originY;\n\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\n\n    x = X + originX;\n    y = Y + originY;\n\n    return [x, y];\n}\n\nexport default class BlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.cubicBezierK = 1.0;\n        this.N = n;\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\n        this.radius = new Array(n);\n        this.angle = new Array(n);\n\n        this.radiusNext = new Array(n);\n        this.angleNext = new Array(n);\n        this.progress = new Array(n);\n        this.speed = new Array(n);\n\n        this.pointStart = new Array(4);\n        this.pointEnd = new Array(4);\n\n        for (let i = 0; i < this.N; i++) {\n            this.generateBlob(this.radius, this.angle, i);\n            this.generateBlob(this.radiusNext, this.angleNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, angle, i) {\n        const { maxRadius, minRadius, speed, N } = this;\n\n        const angleDif = 2 * Math.PI / N * 0.05;\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\n        for (let i = 0; i < N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                angle[i] = angleNext[i];\n                this.generateBlob(radiusNext, angleNext, i);\n            }\n        }\n    }\n\n    draw(cX, cY, canvas, paint) {\n        // console.log('[bd] draw', cX, cY, canvas, paint);\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\n\n            for (let i = 0; i < N; i++) {\n                const progress = this.progress[i];\n                const nextIndex = i + 1 < N ? i + 1 : 0;\n                const progressNext = this.progress[nextIndex];\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\n\n                pointStart[0] = cX;\n                pointStart[1] = cY - r1;\n                pointStart[2] = cX + l;\n                pointStart[3] = cY - r1;\n\n                this.mapPoints(pointStart, cX, cY, angle1);\n\n                pointEnd[0] = cX;\n                pointEnd[1] = cY - r2;\n                pointEnd[2] = cX - l;\n                pointEnd[3] = cY - r2;\n\n                this.mapPoints(pointEnd, cX, cY, angle2);\n\n                if (i === 0) {\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\n                    ctx.moveTo(pointStart[0], pointStart[1]);\n                }\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\n                ctx.bezierCurveTo(\n                    pointStart[2], pointStart[3],\n                    pointEnd[2], pointEnd[3],\n                    pointEnd[0], pointEnd[1]\n                );\n            }\n\n            // ctx.scale(1.0, 1.0);\n            // this.fillStyleFunc(ctx);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n    mapPoints(points, cX, cY, angle) {\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\n\n        points[0] = result1[0];\n        points[1] = result1[1];\n        points[2] = result2[0];\n        points[3] = result2[1];\n    }\n\n    generateInitBlob() {\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\n\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, angle, i);\n            this.generateBlob(radiusNext, angleNext, i);\n            progress[i] = 0;\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// const MIN_SPEED = 0.8;\n// const MAX_SPEED = 8.2;\n\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\n\nexport default class LineBlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.N = n;\n        this.radius = new Array(n + 1);\n\n        this.radiusNext = new Array(n + 1);\n        this.progress = new Array(n + 1);\n        this.speed = new Array(n + 1);\n\n        for (let i = 0; i <= n; i++) {\n            this.generateBlob(this.radius, i);\n            this.generateBlob(this.radiusNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, i) {\n        const { maxRadius, minRadius, speed } = this;\n\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    generateNextBlob() {\n        const { radius, radiusNext, progress, N } = this;\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, i);\n            this.generateBlob(radiusNext, i);\n            progress[i] = 0.0;\n        }\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext } = this;\n        for (let i = 0; i <= N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                this.generateBlob(radiusNext, i);\n            }\n        }\n    }\n\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n            ctx.moveTo(right, bottom);\n            ctx.lineTo(left, bottom);\n\n            const { radius, radiusNext, N } = this;\n            for (let i = 0; i <= N; i++) {\n                if (i === 0) {\n                    const progress = this.progress[i];\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.lineTo(left, y);\n                } else {\n                    const progress = this.progress[i - 1];\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\n                    const progressNext = this.progress[i];\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\n                    const x1 = (right - left) / N * (i - 1);\n                    const x2 = (right - left) / N * i;\n                    const cx = x1 + (x2 - x1) / 2;\n\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.bezierCurveTo(\n                        cx, y1,\n                        cx, y2,\n                        x2, y2\n                    );\n                    if (i === N) {\n                        ctx.lineTo(right, bottom);\n                    }\n                }\n            }\n\n            // ctx.scale(1.0, 1.0);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LineBlobDrawable from './LineBlobDrawable';\n\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\nexport const MUTE_BUTTON_STATE_MUTE = 1;\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\n\nexport class WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.6, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            gradient.addColorStop(0, '#00B1C0');\n            gradient.addColorStop(1, '#52CE5D');\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            gradient.addColorStop(0, '#2BCEFF');\n            gradient.addColorStop(1, '#0976E3');\n        } else {\n            gradient.addColorStop(0, '#8599aa');\n            gradient.addColorStop(1, '#8599aa');\n        }\n\n        return gradient;\n    }\n\n    update(height, width, dt, amplitude) {\n        // TODO: move gradient here\n    }\n}\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.resizing = false;\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0;\n        this.amplitude2 = 0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.prevState = null;\n        this.currentState = this.states[MUTE_BUTTON_STATE_MUTED_BY_ADMIN];\n        this.progressToState = 1.0;\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.right = 1260 * this.scale;\n        this.bottom = 63 * this.scale;\n    }\n\n    componentDidMount() {\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        window.addEventListener('resize', this.handleResize);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n        const topBar = document.getElementById('top-bar');\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n\n        this.canvas = document.getElementById('canvas');\n        this.lbd = new LineBlobDrawable(3);\n        this.lbd1 = new LineBlobDrawable(7);\n        this.lbd2 = new LineBlobDrawable(8);\n        this.setAmplitude(this.amplitude);\n\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        window.removeEventListener('resize', this.handleResize);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.bottom = 63 * this.scale;\n        const topBar = document.getElementById('top-bar');\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n    }\n\n    handleResize = () => {\n        if (this.resizeHandler) {\n            clearTimeout(this.resizeHandler);\n            this.resizeHandler = null;\n        }\n\n        this.resizing = true;\n        this.resizeCanvas();\n        this.resizeHandler = setTimeout(() => {\n            this.resizing = false;\n            this.invokeDraw();\n        }, 250);\n    }\n\n    resizeCanvas() {\n        const topBar = document.getElementById('top-bar');\n\n        this.scale = window.devicePixelRatio;\n        this.right = topBar.offsetWidth * this.scale;\n\n        this.forceUpdate();\n        this.invokeDraw();\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\n        if (!focused && !resizing) {\n            return;\n        }\n\n        // console.log('draw', [focused, resizing]);\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude += this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (this.animateToAmplitude !== this.amplitude2) {\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\n            if (this.animateAmplitudeDiff2 > 0) {\n                if (this.amplitude2 > this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude2 < this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (previousState) {\n            this.progressToState += dt / 250;\n            if (this.progressToState > 1) {\n                this.progressToState = 1;\n                this.previousState = null;\n            }\n        }\n\n        const top1 = 6 * this.amplitude2 * scale;\n        const top2 = 6 * this.amplitude2 * scale;\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        lbd.minRadius = 0;\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\n        lbd1.minRadius = 0;\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\n        lbd2.minRadius = 0;\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\n\n        lbd.update(this.amplitude, 0.3);\n        lbd1.update(this.amplitude, 0.7);\n        lbd2.update(this.amplitude, 0.7);\n\n        for (let i = 0; i < 2; i++) {\n            if (i === 0 && !previousState) {\n                continue;\n            }\n\n            let alpha = 1;\n            let state = null;\n            if (i === 0) {\n                alpha = 1 - this.progressToState;\n                state = previousState;\n                // previousState.setToPaint(paint);\n            } else {\n                alpha = previousState ? this.progressToState : 1;\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\n                state = currentState;\n                // currentState.setToPaint(paint);\n            }\n\n            const paint1 = ctx => {\n                ctx.globalAlpha = 0.3 * alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n            const paint = ctx => {\n                ctx.globalAlpha = i === 0? 1 : alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\n    }\n\n    render() {\n        const { left, right, top, bottom, scale } = this;\n\n        return(\n            <div id='top-bar' className='top-bar'>\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n            </div>\n        );\n    }\n}\n\nTopBar.propTypes = {};\n\nexport default TopBar;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BlobDrawable, {\n    AMPLITUDE_SPEED,\n    FORM_BIG_MAX,\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\n    SCALE_BIG,\n    SCALE_BIG_MIN,\n    SCALE_SMALL,\n    SCALE_SMALL_MIN\n} from './BlobDrawable';\nimport {\n    MUTE_BUTTON_STATE_CONNECTING,\n    MUTE_BUTTON_STATE_MUTE,\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\n    MUTE_BUTTON_STATE_UNMUTE\n} from './TopBar';\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\nclass OvershootInterpolator {\n    constructor(tension) {\n        this.mTension = tension;\n    }\n\n    getInterpolation(t) {\n        // _o(t) = t * t * ((tension + 1) * t + tension)\n        // o(t) = _o(t - 1) + 1\n        t -= 1.0;\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\n    }\n}\n\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\nclass DecelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n    }\n\n    getInterpolation(input) {\n        let result;\n        if (this.mFactor === 1.0) {\n            result = 1.0 - (1.0 - input) * (1.0 - input);\n        } else {\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\n        }\n        return result;\n    }\n}\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\nclass AccelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n        this.mDoubleFactor = 2 * this.mFactor;\n    }\n\n    getInterpolation(input) {\n        if (this.mFactor === 1.0) {\n            return input * input;\n        }\n\n        return Math.pow(input, this.mDoubleFactor);\n    }\n}\n\nclass WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    update(top, left, size, dt) {\n        // TODO: move gradient here\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\n\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.3, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#77E55C');\n            gradient.addColorStop(1, '#56C7FE');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#66D4FB');\n            gradient.addColorStop(1, '#539EF8');\n\n            return gradient;\n        } else {\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\n\n            gradient.addColorStop(0, '#2B333E');\n            gradient.addColorStop(1, '#2B333E');\n\n            return gradient;\n        }\n    }\n}\n\nclass RadialProgressView {\n    constructor() {\n        this.decelerateInterpolator = new DecelerateInterpolator();\n        this.accelerateInterpolator = new AccelerateInterpolator();\n\n        this.lineCap = 'round';\n        this.lineWidth = 3;\n        this.progressColor = '#1C93E3';\n        this.updateProgressPaint();\n\n        this.lastUpdateTime = 0;\n        this.radOffset = 0;\n        this.currentCircleLength = 0;\n        this.risingCircleLength = false;\n        this.currentProgressTime = 0;\n        this.useSelfAlpha = false;\n        this.drawingCircleLength = 0;\n\n        this.rotationTime = 2000;\n        this.risingTime = 500;\n        this.size = 0;\n\n        this.currentProgress = 0;\n        this.progressAnimationStart = 0;\n        this.progressTime = 0;\n        this.animatedProgress = 0;\n        this.circle = false;\n        this.circleProgress = 0;\n        this.noProgress = true;\n    }\n\n    setUseSelfAlpha = value => {\n        this.useSelfAlpha = value;\n    };\n\n    setAlpha = alpha => {\n        console.log('[rpv] setAlpha', alpha);\n    };\n\n    setNoProgress = value => {\n        this.noProgress = value;\n    };\n\n    setProgress = value => {\n        this.currentProgress = value;\n        if (this.animatedProgress > value) {\n            this.animatedProgress = value;\n        }\n\n        this.progressAnimationStart = this.animatedProgress;\n        this.progressTime = 0;\n    };\n\n    updateAnimation = () => {\n        const newTime = new Date();\n        let dt = newTime - this.lastUpdateTime;\n        if (dt > 17) {\n            dt = 17;\n        }\n        this.lastUpdateTime = newTime;\n\n        this.radOffset += 360 * dt / this.rotationTime;\n        let count = Math.trunc(this.radOffset / 360);\n        this.radOffset -= count * 360;\n\n        if (this.circle && this.circleProgress !== 1.0) {\n            this.circleProgress += 16 / 220;\n            if (this.circleProgress > 1.0) {\n                this.circleProgress = 1.0;\n            }\n        } else if (!this.circle && this.circleProgress !== 0.0) {\n            this.circleProgress -= 16 / 400;\n            if (this.circleProgress < 0) {\n                this.circleProgress = 0;\n            }\n        }\n\n        if (this.noProgress) {\n            if (this.circleProgress === 0) {\n                this.currentProgressTime += dt;\n                if (this.currentProgressTime >= this.risingTime) {\n                    this.currentProgressTime = this.risingTime;\n                }\n                if (this.risingCircleLength) {\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                } else {\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                }\n\n                if (this.currentProgressTime === this.risingTime) {\n                    if (this.risingCircleLength) {\n                        this.radOffset += 270;\n                        this.currentCircleLength = -266;\n                    }\n\n                    this.risingCircleLength = !this.risingCircleLength;\n                    this.currentProgressTime = 0;\n                }\n            } else {\n                if (this.risingCircleLength) {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                    this.currentCircleLength += 360 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                } else {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                    this.currentCircleLength -= 364 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                }\n            }\n        }\n        else {\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\n            if (progressDiff > 0) {\n                progressDiff += dt;\n                if (this.progressTime >= 200) {\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\n                    this.progressTime = 0;\n                } else {\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\n                }\n            }\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\n        }\n    };\n\n    setSize = size => {\n        this.size = size;\n    };\n\n    setStrokeWidth = value => {\n        this.lineWidth = value;\n        this.updateProgressPaint();\n    };\n\n    setProgressColor = color => {\n        this.progressColor = color;\n        this.updateProgressPaint();\n    };\n\n    updateProgressPaint() {\n        this.progressPaint = ctx => {\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineWidth) {\n                ctx.lineWidth = this.lineWidth;\n            }\n            if (this.progressColor) {\n                ctx.strokeStyle = this.progressColor;\n            }\n        };\n    }\n\n    toCircle = (toCircle, animated) => {\n        this.circle = toCircle;\n        if (!animated) {\n            this.circleProgress = this.circle ? 1.0 : 0.0;\n        }\n    }\n\n    draw = (canvas, cx, cy, scale = 1) => {\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(cx, cy);\n            ctx.scale(scale, scale);\n            ctx.beginPath();\n            if (!this.risingCircleLength) {\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\n                    this.currentCircleLength = 0;\n                }\n            }\n\n            const radStart = this.radOffset * Math.PI / 180;\n            this.drawingCircleLength = this.currentCircleLength;\n            const radLength = this.drawingCircleLength * Math.PI / 180;\n\n\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\n            this.progressPaint(ctx);\n            ctx.stroke();\n            ctx.restore();\n\n            this.updateAnimation();\n        }\n    }\n\n    isCircle = () => {\n        return Math.abs(this.drawingCircleLength) >= 360;\n    }\n}\n\nclass Button extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.radialPaint = ctx => { };\n        this.paint = ctx => { };\n        this.paintTmp = ctx => { };\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.switchProgress = 1;\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\n        this.prevState = null;\n        this.currentState = this.states[this.muteButtonState];\n        this.progressToState = 1.0;\n\n        this.showLightingProgress = 1.0;\n        this.showWavesProgress = 1.0;\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\n        this.colorsTmp = new Array(3);\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n\n        this.buttonDefaultRadius = 57;\n        this.buttonRadius = 52;\n        this.strokeWidth = 4;\n        this.invalidateColors = true;\n        this.radialProgressView = new RadialProgressView();\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\n        this.radialProgressView.setProgressColor('#28BAFF');\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n\n        this.canvas = document.getElementById('button-canvas');\n        this.tinyWaveDrawable = new BlobDrawable(9);\n        this.bigWaveDrawable = new BlobDrawable(12);\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.generateInitBlob();\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.generateInitBlob();\n\n        const color = '#66D4FB';\n        this.radialGradient = ctx => {\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\n            gradient.addColorStop(0, color + '32');\n            gradient.addColorStop(1, color + '00');\n\n            ctx.fillStyle = gradient;\n        };\n        this.radialPaint = this.radialGradient;\n\n        this.setAmplitude(this.amplitude);\n\n        // console.log('[button] componentDidMount draw');\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n        this.forceUpdate();\n    }\n\n    fillColors(stateId, colorsToSet) {\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\n            colorsToSet[0] = '#66D4FB';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\n            colorsToSet[0] = '#7DDCAA';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            colorsToSet[0] = '#766EE9';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else {\n            colorsToSet[0] = '#1C2229';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        }\n    }\n\n    strToHex(n) {\n        let s = n.toString(16);\n        if (s.length === 1) {\n            s = '0' + s;\n        }\n        return s;\n    }\n\n    blendARGB(color1, color2, ratio) {\n        if (color1.length <= 7) {\n            color1 += 'FF';\n        }\n        if (color2.length <= 7) {\n            color2 += 'FF';\n        }\n        const c1 = {\n            r: parseInt(color1.substr(1, 2), 16),\n            g: parseInt(color1.substr(3, 2), 16),\n            b: parseInt(color1.substr(5, 2), 16),\n            a: parseInt(color1.substr(7, 2), 16),\n        };\n        const c2 = {\n            r: parseInt(color2.substr(1, 2), 16),\n            g: parseInt(color2.substr(3, 2), 16),\n            b: parseInt(color2.substr(5, 2), 16),\n            a: parseInt(color2.substr(7, 2), 16),\n        };\n\n        const inverseRatio = 1 - ratio;\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\n\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        if (!this.focused) {\n            return;\n        }\n        // console.log('[button] draw');\n        const { currentState, prevState, left, top, right, bottom } = this;\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        let canSwitchProgress = true;\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, true);\n            if (!this.radialProgressView.isCircle()) {\n                canSwitchProgress = false;\n            }\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, false);\n        }\n\n        if (canSwitchProgress) {\n            if (this.switchProgress !== 1) {\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.switchProgress += dt / 100;\n                } else {\n                    this.switchProgress += dt / 180;\n                }\n\n                if (this.switchProgress >= 1.0) {\n                    this.switchProgress = 1.0;\n                    this.prevState = null;\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        this.radialProgressView.toCircle(false, true);\n                    }\n                }\n                this.invalidateColors = true;\n            }\n\n            if (this.invalidateColors && currentState) {\n                this.invalidateColors = false;\n                let lightingColor;\n                if (prevState) {\n                    this.fillColors(prevState.stateId, this.colorsTmp);\n                    const oldLight = this.colorsTmp[0];\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    const newLight = this.colorsTmp[0];\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\n                } else {\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    lightingColor = this.colorsTmp[0];\n                }\n                if (this.currentLightColor !== lightingColor) {\n                    this.radialGradient = ctx => {\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\n\n                        gradient.addColorStop(0, lightingColor + '3C');\n                        gradient.addColorStop(1, lightingColor + '00');\n\n                        ctx.fillStyle = gradient;\n                    };\n                    this.currentLightColor = lightingColor;\n                }\n            }\n\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\n            }\n\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                this.showWavesProgress -= dt / 180;\n                if (this.showWavesProgress < 0) {\n                    this.showWavesProgress = 0;\n                }\n            } else {\n                if (showWaves && this.showWavesProgress !== 1) {\n                    this.showWavesProgress += dt / 350;\n                    if (this.showWavesProgress > 1) {\n                        this.showWavesProgress = 1;\n                    }\n                } else if (!showWaves && this.showWavesProgress !== 0) {\n                    this.showWavesProgress -= dt / 350;\n                    if (this.showWavesProgress < 0) {\n                        this.showWavesProgress = 0;\n                    }\n                }\n            }\n\n            if (showLighting && this.showLightingProgress !== 1) {\n                this.showLightingProgress += dt / 350;\n                if (this.showLightingProgress > 1) {\n                    this.showLightingProgress = 1;\n                }\n            } else if (!showLighting && this.showLightingProgress !== 0) {\n                this.showLightingProgress -= dt / 350;\n                if (this.showLightingProgress < 0) {\n                    this.showLightingProgress = 0;\n                }\n            }\n        }\n\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\n\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.resetTransform();\n\n        const cx = this.cx;\n        const cy = this.cy;\n\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\n            let progress;\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                progress = this.switchProgress;\n                this.paint = prevState.shader;\n            } else {\n                progress = 1.0 - this.switchProgress;\n                this.paint = currentState.shader;\n            }\n\n            this.paintTmp = ctx => {\n                ctx.fillStyle = '#2B333E';\n            }\n\n            let paint = ctx => {\n                this.paint(ctx, left, top, right, bottom);\n            };\n\n            ctx.globalAlpha = 1.0;\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n\n            ctx.globalAlpha = 0.3;\n            // big wave\n            ctx.save();\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n            ctx.restore();\n\n            // small wave\n            ctx.save();\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n            ctx.restore();\n\n            ctx.globalAlpha = 1.0;\n            if (canSwitchProgress) {\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                paint = ctx => {\n                    ctx.fillStyle = '#28BAFF';\n                };\n                if (progress !== 0) {\n                    ctx.globalAlpha = progress;\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                }\n            }\n            ctx.globalAlpha = 1.0;\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\n            if  (!canSwitchProgress) {\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n            }\n            ctx.restore();\n        } else {\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                ctx.globalAlpha = 1.0;\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n                if (i === 1) {\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n                }\n\n                ctx.globalAlpha = 0.3 * alpha;\n                // big wave\n                ctx.save();\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n                ctx.restore();\n\n                // small wave\n                ctx.save();\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n                ctx.restore();\n            }\n\n            // button\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                if (i === 0) {\n                    ctx.globalAlpha = 1.0;\n                } else {\n                    ctx.globalAlpha = alpha;\n                }\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\n\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n                }\n            }\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(cx, cy);\n        ctx.scale(scale, scale);\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        paint && paint(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    updateMuteButton = (stateId, animated) => {\n        const { muteButtonState } = this;\n        if (muteButtonState === stateId && animated) {\n            return;\n        }\n\n        // TODO: add text animation\n\n        if (animated) {\n            this.muteButtonState = stateId;\n        } else {\n            this.muteButtonState = stateId;\n        }\n        this.updateMuteButtonState(animated);\n    }\n\n    updateMuteButtonState (animated) {\n        const { states, currentState, muteButtonState } = this;\n\n        if (states[muteButtonState] !== currentState) {\n            this.prevState = currentState;\n            this.currentState = states[muteButtonState];\n            if (!this.prevState || !animated) {\n                this.switchProgress = 1.0;\n                this.prevState = null;\n            } else {\n                this.switchProgress = 0.0;\n            }\n        }\n\n        if (!animated) {\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\n            }\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\n        }\n    }\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\n    }\n\n    render() {\n        const { children, onClick } = this.props;\n        const { left, right, top, bottom, scale } = this;\n\n        return (\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-14px)' }}>\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n                <div style={{\n                    position: 'absolute',\n                    background: 'transparent',\n                    width: 104,\n                    height: 104,\n                    borderRadius: '50%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    left: '50%',\n                    top: '50%',\n                    marginLeft: -52,\n                    marginTop: -38,\n                    cursor: 'pointer'\n                }} onClick={onClick}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nButton.propTypes = {};\n\nexport default Button;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from './Button';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallMicButton.css';\n\nclass GroupCallMicButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.buttonRef = React.createRef();\n        const { currentGroupCall: call } = CallStore;\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState === 'connected';\n        }\n\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: true\n        };\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateOutputAmplitudeChange', this.onClientUpdateOutputAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateOutputAmplitudeChange', this.onClientUpdateOutputAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onClientUpdateOutputAmplitudeChange = update => {\n        const { value } = update;\n\n        this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\n    };\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id, is_muted } = participant\n        if (user_id !== UserStore.getMyId()) return;\n\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState !== 'new' && connection.iceConnectionState !== 'connecting';\n        }\n\n        this.setState({\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState !== 'new' && connection.iceConnectionState !== 'connecting';\n        }\n\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    };\n\n    handleClick = () => {\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            // showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n            //     return (\n            //         <IconButton\n            //             key='close'\n            //             aria-label='Close'\n            //             color='inherit'\n            //             className='notification-close-button'\n            //             onClick={() => { closeSnackbar(snackKey); }}>\n            //             <CloseIcon />\n            //         </IconButton>\n            //     )\n            // });\n        } else {\n            CallStore.changeMuted(!CallStore.isMuted());\n        }\n    };\n\n    // handleClick = () => {\n    //     this.setState({\n    //         animated: !this.state.animated\n    //     })\n    // };\n\n    render() {\n        const { status, connected, animated } = this.state;\n\n        return (\n            <div className='group-call-mic-button-wrapper' >\n                {animated ? (\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </Button>\n                ) : (\n                    <div className={classNames('group-call-mic-button',\n                        {\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-unmuted': connected && status === 'unmuted',\n                            'group-call-connecting': !connected,\n                        })}\n                         onClick={this.handleClick}\n                    >\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nGroupCallMicButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallMicButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanelButtons.css'\n\nclass GroupCallPanelButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState === 'connected';\n        }\n\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            // connected = connection && connection.iceConnectionState !== 'new' && connection.iceConnectionState !== 'connecting';\n        }\n\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState !== 'new' && connection.iceConnectionState !== 'connecting';\n        }\n\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n    render() {\n        const { children } = this.props;\n        const { status, connected } = this.state;\n\n        return (\n            <div className={classNames('group-call-panel-buttons', {\n                'group-call-connecting': !connected,\n                'group-call-muted': connected && status === 'muted',\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\n                'group-call-unmuted': connected && status === 'unmuted',\n            })}>\n                {children}\n            </div>\n        );\n    }\n}\n\nGroupCallPanelButtons.propTypes = {};\n\nexport default GroupCallPanelButtons;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\n    'MicOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\n    'MicOffOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport MicIcon from '../../Assets/Icons/MicOutlined';\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\nimport UserTile from '../Tile/UserTile';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getUserFullName } from '../../Utils/User';\nimport { openUser } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallParticipant.css';\n\nclass GroupCallParticipant extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId, userId } = this.props;\n        const { group_call_id, participant } = update;\n        if (groupCallId !== group_call_id) return;\n        if (!participant) return;\n\n        const { user_id } = participant;\n        if (userId !== user_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleOpenProfile = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, true);\n        closeGroupCallPanel();\n    };\n\n    handleSendMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, false);\n        closeGroupCallPanel();\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, true);\n    };\n\n    handleUnmute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, false);\n    };\n\n    render() {\n        const { groupCallId, userId, t } = this.props;\n        const { contextMenu, left, top } = this.state;\n        const participants = CallStore.participants.get(groupCallId) || new Map();\n        const participant = participants.get(userId);\n        if (!participant) return null;\n\n        const { is_speaking, is_muted, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users, order } = participant;\n        console.log('[part] render', participant);\n\n        return (\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\n                <UserTile userId={userId}/>\n                <div className='group-call-participant-content'>\n                    <div className='group-call-participant-content-title'>\n                        {/*{userId}*/}\n                        {getUserFullName(userId)}\n                    </div>\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\n                        {/*{order}*/}\n                        {is_speaking ? t('Speaking') : t('Listening')}\n                    </div>\n                </div>\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': is_muted && !can_unmute_self, 'participant-speaking': is_speaking })}>\n                    {!is_muted ? <MicIcon /> : <MicOffIcon />}\n                </div>\n\n                <Popover\n                    classes={{\n                        paper: 'group-call-participant-menu-root'\n                    }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        { can_be_unmuted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleUnmute}>\n                                <ListItemText primary={t('VoipGroupUnmute')} />\n                            </MenuItem>\n                        )}\n                        { can_be_muted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleMute}>\n                                <ListItemText primary={t('VoipGroupMute')} />\n                            </MenuItem>\n                        )}\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleOpenProfile}>\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\n                        </MenuItem>\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleSendMessage}>\n                            <ListItemText primary={t('SendMessage')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n\n}\n\nGroupCallParticipant.propTypes = {\n    userId: PropTypes.number,\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipant);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport GroupCallParticipant from './GroupCallParticipant';\nimport { loadUsersContent } from '../../Utils/File';\nimport { orderCompare } from '../../Utils/Common';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallParticipants.css';\nimport { canManageVoiceChats } from '../../Utils/Chat';\n\nclass GroupCallParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            participants: []\n        };\n\n        this.participantsMap = new Map();\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const participants = Array.from(CallStore.participants.get(groupCallId).values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n            return {\n                prevGroupCallId: groupCallId,\n                participants: participants.map(x => x.user_id)\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.preloadContent();\n\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId } = this.props;\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        if (group_call_id !== groupCallId) return;\n\n        const participants = Array.from(CallStore.participants.get(groupCallId).values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n        const { order, user_id } = participant;\n        if (order !== '0') {\n            this.participantsMap.set(user_id, user_id);\n            this.loadContent();\n\n            // wait 500 ms for profile photo\n            setTimeout(() => {\n                this.setState({\n                    participants: participants.map(x => x.user_id)\n                });\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        } else {\n            this.setState({\n                participants: participants.map(x => x.user_id)\n            });\n        }\n    };\n\n    preloadContent = () => {\n        const { participants } = this.state;\n        if (!participants) return;\n        if (!participants.length) return;\n\n        participants.forEach(x => {\n            this.participantsMap.set(x, x);\n        });\n        this.loadContent();\n    };\n\n    loadContent = () => {\n        const { participantsMap } = this;\n        if (!participantsMap) return;\n        if (!participantsMap.size) return;\n\n        this.participantsMap = new Map();\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, Array.from(participantsMap.keys()));\n    }\n\n    render() {\n        const { t, groupCallId } = this.props;\n        const { participants } = this.state;\n\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        const manageGroupCalls = canManageVoiceChats(chatId);\n\n        return (\n            <div className='group-call-participants'>\n                { manageGroupCalls && (\n                    <div className='group-call-participants-invite'>\n                        <AddMemberIcon/>\n                        <div className='group-call-participants-invite-text'>\n                            {t('VoipGroupInviteMember')}\n                        </div>\n                    </div>\n                )}\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallParticipants.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipants);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport { copy } from '../../Utils/Text';\nimport { getChatUsername } from '../../Utils/Chat';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport './GroupCallSettings.css';\n\nclass GroupCallSettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                const { onClose } = this.props;\n                const { openDeviceSelect } = this.state;\n                if (openDeviceSelect) {\n                    this.handleCloseDeviceSelect();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n\n                onClose && onClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput');\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput');\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput');\n\n            return {\n                prevGroupCallId: groupCallId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        CallStore.devices = devices;\n\n        const outputDeviceId = CallStore.getOutputDeviceId();\n        const output = (devices || []).filter(x => x.kind === 'audiooutput');\n\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput');\n\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput');\n\n        this.setState({\n            devices,\n            outputDeviceId,\n            output,\n            inputAudioDeviceId,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo\n        });\n    };\n\n    handleOutputChange = event => {\n        const outputDeviceId = event.target.value;\n\n        this.setState({ outputDeviceId });\n    }\n\n    handlePanelClick = event => {\n        event.stopPropagation();\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { currentGroupCall } = CallStore;\n\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    handleOpenDeviceSelect = async type => {\n        this.setState({\n            openDeviceSelect: { type }\n        });\n    };\n\n    handleCloseDeviceSelect = () => {\n        this.setState({\n            openDeviceSelect: null\n        });\n    };\n\n    handleSelectDevice = (type, deviceId) => {\n        this.handleCloseDeviceSelect();\n\n        switch (type) {\n            case 'output': {\n                CallStore.setOutputDeviceId(deviceId);\n                this.setState({\n                    outputDeviceId: deviceId\n                });\n                break;\n            }\n            case 'inputAudio': {\n                break;\n            }\n            case 'inputVideo': {\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const {\n            inputAudioDeviceId,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo,\n            outputDeviceId,\n            output,\n            openDeviceSelect\n        } = this.state;\n\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\n\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\n\n        const { currentGroupCall } = CallStore;\n\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\n\n        if (openDeviceSelect) {\n            const { type } = openDeviceSelect;\n            let items = [];\n            let deviceId = null;\n            switch (type) {\n                case 'output': {\n                    items = output;\n                    deviceId = outputDeviceId;\n                    break;\n                }\n                case 'inputAudio': {\n                    items = inputAudio;\n                    deviceId = inputAudioDeviceId;\n                    break;\n                }\n                case 'inputVideo': {\n                    items = inputVideo;\n                    deviceId = inputVideoDeviceId;\n                    break;\n                }\n            }\n\n            return (\n                <div className='group-call-settings-device-select'>\n                    <div className='group-call-settings-panel' onClick={this.handlePanelClick}>\n                        <div className='group-call-settings-panel-header'>\n                            <div className='group-call-panel-caption'>\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\n                            </div>\n                        </div>\n                        <div className='group-call-settings-panel-content'>\n                            {items.map(x => (\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\n                                    <div className='group-call-settings-panel-item-title'>{x.label}</div>\n                                </div>\n                            ))}\n                        </div>\n                        <div className='group-call-settings-panel-buttons'>\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\n                                {t('OK')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        let d = '';\n        const rects = [];\n        for (let i = 0; i < 35; i++) {\n            const x = i * 8;\n            rects.push(<rect key={i} x={x} y={0} height={18} width={3} fill='currentColor' rx={1} ry={1} strokeWidth={0}/>);\n        }\n\n        const svg = (\n            <svg className='waveform-bars' viewBox='0 0 275 18' style={{ width: 275, height: 18, color: '#91979E', padding: '10px 22px' }}>\n                {rects}\n            </svg>\n        );\n\n        return (\n            <>\n                <div className='group-call-settings'>\n                    <div className='group-call-settings-panel' onClick={this.handlePanelClick}>\n                        <div className='group-call-settings-panel-header'>\n                            <div className='group-call-panel-caption'>\n                                <div className='group-call-title'>{t('Settings')}</div>\n                            </div>\n                        </div>\n                        <div className='group-call-settings-panel-content'>\n                            <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\n                                <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\n                                <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\n                            </div>\n\n                            <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\n                                <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\n                                <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\n                            </div>\n                            {svg}\n\n                            { username && (\n                                <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\n                                    {t('VoipGroupCopyInviteLink')}\n                                </div>\n                            )}\n                        </div>\n                        <div className='group-call-settings-panel-buttons'>\n                            <div className='group-call-settings-panel-done' onClick={onClose}>\n                                {t('Done')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nGroupCallSettings.propTypes = {\n    groupCallId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallSettings);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\n    'Tune'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TuneIcon from '../../Assets/Icons/Tune';\nimport './GroupCallSettingsButton.css';\n\nclass GroupCallSettingsButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='group-call-settings-button' onClick={onClick}>\n                <TuneIcon />\n            </div>\n        );\n    }\n}\n\nGroupCallSettingsButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallSettingsButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getChatTitle } from '../../Utils/Chat';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\nimport Button from './Button';\n\nclass GroupCallPanel extends React.Component {\n    state = {\n        openSettings: false\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const { openSettings } = this.state;\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\n                    </div>\n                    <div style={{ width: 48 }}/>\n                </div>\n                <div className='group-call-panel-participants scrollbars-hidden'>\n                    <GroupCallParticipants groupCallId={groupCallId}/>\n                </div>\n                <GroupCallPanelButtons>\n                    <GroupCallMicButton/>\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onClick={this.handleLeave}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('Leave')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nGroupCallPanel.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GroupCallPanel from './GroupCallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupCall.css';\n\nclass GroupCall extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('group-call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('group-call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('group-call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    setPosition() {\n        const element = document.getElementById('group-call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('group-call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { groupCallId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='group-call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <GroupCallPanel groupCallId={groupCallId}/>\n            </div>\n        )\n    }\n}\n\nGroupCall.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCall;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport Actions from './Actions';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport GroupCall from './Calls/GroupCall';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport PipPlayer from './Player/PipPlayer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport CallStore from '../Stores/CallStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            groupCallId: 0\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdateGroupCallPanel = update => {\n        const { opened } = update;\n        const { currentGroupCall } = CallStore;\n\n        this.setState({\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            groupCallId,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n                {groupCallId && <GroupCall groupCallId={groupCallId}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}