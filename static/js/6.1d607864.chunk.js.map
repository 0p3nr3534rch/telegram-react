{"version":3,"sources":["Components/Tile/DialogTitleControl.js","Components/Tile/DialogStatusControl.js","Components/Tile/ChatControl.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/Dialog/ShareStickerSetButton.js","Components/Dialog/StickerSetDialog.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Dialog/ChatInfoDialog.js","Components/ColumnMiddle/DialogDetails.js"],"names":["DialogTitleControl","onFastUpdatingComplete","update","_this","forceUpdate","onUpdateChatTitle","chatId","props","chat_id","nextProps","nextState","this","t","ChatStore","on","removeListener","_this$props","showSavedMessages","title","getChatTitle","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","React","Component","defaultProps","withTranslation","DialogStatusControl","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onUpdateUserStatus","chat","get","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","x","user_id","setState","subtitle","getChatSubtitleWithoutTyping","id","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","state","prevChatId","_this$state","UserStore","SupergroupStore","classes","_this$state2","react_default","classNames","statusAccentSubtitle","statusSubtitle","withStyles","theme","color","palette","text","secondary","primary","dark","withTheme","ChatControl","handleClick","onSelect","_this$props2","onTileSelect","showStatus","onClick","ChatTileControl","Components_Tile_DialogStatusControl","NotificationTimer","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","handleTimer","now","Date","seconds","expire","value","timeout","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","_material_ui_core_es_Typography_Typography__WEBPACK_IMPORTED_MODULE_6__","toFixed","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","size","variant","menuAnchorOrigin","vertical","horizontal","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","concat","is_channel","getChatShortTitle","onClose","other","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_15___default","assign","transitionDuration","aria-labelledby","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_14___default","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_17___default","_Tile_ChatTileControl__WEBPACK_IMPORTED_MODULE_22__","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_18___default","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_13___default","autoFocus","ClearHistoryDialog","MainMenuButton","_this2","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","handleButtonClick","event","anchorEl","currentTarget","handleMenuClose","handleChatInfo","setTimeout","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","result","ApplicationStore","getChatId","request","@type","remove_from_chat_list","handleScheduledAction","handleLeave","openDelete","handleLeaveContinue","message","getLeaveChatNotification","isPrivateChat","clientUpdateType","key","action","_ref","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","TdLibController","send","clientUpdate","inProgress","finish","stop","apply","arguments","_this2$props","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_9___default","_Additional_NotificationTimer__WEBPACK_IMPORTED_MODULE_23__","removeScheduledAction","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","Fragment","aria-owns","aria-haspopup","menuIconButton","aria-label","_material_ui_icons_MoreVert__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_Menu__WEBPACK_IMPORTED_MODULE_11___default","open","Boolean","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","anchorOrigin","transformOrigin","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_12___default","enhance","compose","margin","withSnackbar","UserStatusControl","userId","user","status","getUserStatus","isUserOnline","prevUserId","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","UserControl","fullName","getUserFullName","UserTileControl","Components_Tile_UserStatusControl","ChatDetailsHeader","backButton","info","isChannelChat","IconButton_default","leftIconButton","ArrowBack_default","rightIconButton","Close_default","NotificationsListItem","isMuted","ListItem_default","button","listItem","handleSetChatNotifications","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","NotificationsControl","padding","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","handleSelectChat","has","getGroupsInCommon","loadChatContents","store","FileStore","getStore","loadChatsContent","getGroupChatMembers","map","loadUsersContent","getChatFullInfo","asyncToGenerator","regenerator_default","abrupt","isMeChat","getChatUserId","offset_chat_id","limit","sent","hasGroupsInCommon","chat_ids","length","handleUsernameHint","username","getChatUsername","telegramUrlOption","OptionStore","usernameLink","copy","close","handlePhoneHint","_this$props3","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","current","scrollTop","handleOpenViewer","photo","setProfileMediaViewerContent","handleOpenChat","_this$props4","popup","openChat","getContentHeight","clientHeight","createRef","Map","prevProps","prevState","list","scrollHeight","offsetHeight","snapshot","console","log","_this$props5","_this$props6","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","ref","bio","getChatBio","isMe","users","forEach","member","set","push","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","handleSelectUser","content","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","disabled","Photo_default","withSaveRef","closeIconButton","nested","spacing","unit","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","chatIds","then","_this3","minHeight","chats","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","minWidth","ChatInfo","onClientUpdateChatId","nextChatId","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","height","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","force","_x","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","borderColor","right-column","borderStyle","HeaderCommand","handleCancel","handleDelete","canBeDeletedForAllUsers","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","MessageStore","selectedItems","values","Symbol","iterator","done","_ref2","messageId","can_be_deleted_for_all_users","err","return","openDeleteDialog","revoke","handleDeleteContinue","messageIds","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref4","message_ids","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","can_be_forwarded","canBeReplied","canSendMessages","Button_default","buttonLeft","buttonRight","Dialog_default","DialogTitle_default","DialogContent_default","DialogContentText_default","FormControlLabel_default","control","Checkbox_default","DialogActions_default","objectSpread","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateAuthorizationState","authorizationState","authorization_state","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","replace","getAuthorizationState","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","headerStatusAccentTitle","messageSearchIconButton","Search_default","searchIconButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","_this$state3","handleDragStart","handleDragEnd","_this$state4","getVolumeIcon","VolumeOff_default","fontSize","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","e","onMouseLeave","position","background","iconButton","visibility","zIndex","root","marginTop","borderWidth","Slider_default","container","slider","min","max","onDragStart","onDragEnd","display","default","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getDurationString","Math","floor","getTimeString","duration","timeString","Playlist","scrollToActive","listRef","assertThisInitialized","item","itemRefMap","node","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","handleScroll","messages","clear","onScroll","slice","reverse","el","getMedia","openMedia","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","file","src","getMediaSrc","onClientUpdateMediaBlob","web_page","audio","voice_note","video_note","voice","video","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","getSrc","handleEnded","moveNext","handleVideoEnded","handleClose","handleTimeUpdate","timestamp","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","index","findIndex","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","nextContext","getMediaTitle","dateHint","getDateHint","date","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","width","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","preventDefault","stopPropagation","handleDrop","setDragging","handleAttachDocumentComplete","dataTransfer","files","handleDragLeave","i","document","name","data","onSendInternal","uploadFile","callback","invokeScheduledAction","reply_to_message_id","input_message_content","t0","alert","JSON","stringify","_x2","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","sender_user_id","openUser","message_id","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","element","placement","main","grey","&[x-placement*=\"bottom\"] $arrow","top","left","&::before","&[x-placement*=\"top\"] $arrow","bottom","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","right","marginRight","MessageStatus","handleUpdateMessageSend","bind","handleUpdateChatReadOutbox","sendingState","unread","payload","old_message_id","newMessageId","sending_state","last_read_outbox_message_id","stateClassName","unreadSeparator","WebPage","getContent","displaySmallSize","displaySize","site_name","description","url","animation","sticker","accentColorDark","Sticker","VoiceNote","voiceNote","VideoNote","videoNote","Audio","Document","thumbnail","Animation","Video","photoSize","getSize","sizes","smallPhoto","float","Photo","accentBackgroundLight","PHOTO_SIZE","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","accentStyles","Message","onClientUpdateClearSelection","selected","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","mouseDown","window","getSelection","toString","selectMessage","handleDateClick","_this$props7","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","_this$props10","showUnreadSeparator","contextMenu","_this$props11","views","edit_date","forward_info","getText","webPage","getWebPage","media","getUnread","senderUserId","getSenderUserId","tile","messageClassName","message-selected","messageSelected","messageHighlighted","onMouseOver","onMouseOut","onMouseDown","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","MessageAuthor","Components_Message_Forward","Reply","Message_Media_WebPage","messageAuthorColor","backgroundColor","@keyframes highlighted","from","to","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","ShareStickerSetButton","handleMenuClick","handleOpen","handleCopyLink","link","getStickersLink","StickerStore","stickerSet","handleShare","MoreVert_default","Menu_default","MenuItem_default","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","handleDone","is_installed","set_id","loadPreviewContent","stickerId","stickers","loadStickerContent","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","target","dataset","addEventListener","handleMouseUp","removeEventListener","emojis","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","blur","emoji","stickerIndex","join","dialogRoot","paper","paperRoot","dialogTitleRoot","disablePointerEvents","disableTypography","typographyRoot","Dialog_ShareStickerSetButton","shareButtonRoot","contentRoot","STICKER_PREVIEW_DISPLAY_SIZE","flexWrap","maxHeight","flexDirection","alignItems","flexGrow","flexShrink","pointerEvents","StickersHint","hint","onClientUpdateStickersHint","loadStickersContent","handleSend","mouseDownStickerId","stickersPerRow","showPreview","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","prevOffsetHeight","prevScrollTop","playerOpened","abs","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","scrollBehavior","onClientUpdateClearHistory","history","loadMessageContents","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","is_outgoing","replaceMessage","viewMessages","onUpdateNewMessage","completed","insertAfter","filterMessages","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","onLoadNext","_callee2","fromMessageId","sessionId","_context2","loading","loadMigratedHistory","onLoadMigratedHistory","from_message_id","offset","finally","setItems","insertBefore","filter","_callee3","supergroupId","basicGroupChat","_context3","getSupergroupId","upgraded_from_basic_group_id","onLoadPrevious","_callee4","_context4","last_message","suppressHandleScroll","suppressHandleScrollOnSelectChat","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","canSendFiles","prevMessageId","separatorMessageId","throttle","previousChatId","previousMessageId","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","slicedToArray","getPhotoSize","blob","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","isServiceMessage","Components_Message_ServiceMessage","Components_Message_Message","showTitle","messages-list-selection-active","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ChatInfoDialog","handleClientUpdateDialogChatId","containerRoot","chatInfoRoot","DialogDetails","onUpdateChatDetailsVisibility","nextMessageId","messagesList","getMessageId","selectedCount","isChatDetailsVisible","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","innerRef","Footer","Components_Dialog_StickerSetDialog","Components_Dialog_ChatInfoDialog"],"mappings":"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","file":"static/js/6.1d607864.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { getChatTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitleControl.css';\n\nclass DialogTitleControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return <div className='dialog-title'>{title}</div>;\n    }\n}\n\nDialogTitleControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitleControl.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitleControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatusControl.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogStatusControl from './DialogStatusControl';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        onSelect(chat);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTileControl chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatusControl chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from './UserTileControl';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n        if (!onSelect) return;\n\n        onSelect(user);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTileControl userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '../ColumnMiddle/MainMenuButton';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        console.log('chatDetailsListRef', this.chatDetailsListRef);\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        console.log(\n            `[ChatDetails] componentDidUpdate before chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        console.log(\n            `[ChatDetails] componentDidUpdate after chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        ApplicationStore.setProfileMediaViewerContent({ chatId: chatId });\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleSelectUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {!isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    <Divider />\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chat => {\n        const { popup } = this.props;\n\n        openChat(chat.id);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && (\n                        <>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                        </>\n                    )}\n                    <span\n                        className={classNames('header-status-title', {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id, true);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorDark)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTileControl from '../Tile/UserTileControl';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getDate,\n    getDateHint,\n    getText,\n    getMedia,\n    getUnread,\n    getSenderUserId,\n    getWebPage,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { contextMenu, selected, highlighted } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messagePoll': {\n                this.forceUpdate();\n                break;\n            }\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { contextMenu, left, top, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, edit_date, reply_to_message_id, forward_info } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n        const senderUserId = getSenderUserId(message);\n\n        const tile = senderUserId ? (\n            <UserTileControl userId={senderUserId} onSelect={this.handleSelectUser} />\n        ) : (\n            <ChatTileControl chatId={chatId} onSelect={this.handleSelectChat} />\n        );\n\n        const messageClassName = classNames(\n            'message',\n            { 'message-selected': selected },\n            { [classes.messageSelected]: selected },\n            // { 'message-highlighted': highlighted && !selected },\n            { [classes.messageHighlighted]: highlighted && !selected }\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {!forward_info && <MessageAuthor chatId={chatId} openChat userId={senderUserId} openUser />}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            <div className='message-meta'>\n                                <span>&nbsp;</span>\n                                {views > 0 && (\n                                    <>\n                                        <i className='message-views-icon' />\n                                        <span className='message-views'>\n                                            &nbsp;\n                                            {views}\n                                            &nbsp; &nbsp;\n                                        </span>\n                                    </>\n                                )}\n                                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                                <a className='message-date' onClick={this.handleDateClick}>\n                                    <span title={dateHint}>{date}</span>\n                                </a>\n                            </div>\n                        </div>\n                        {Boolean(reply_to_message_id) && <Reply chatId={chatId} messageId={reply_to_message_id} />}\n                        {media}\n                        <div className='message-text'>{text}</div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className='service-message-content'>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText inset primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText inset primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_PREVIEW_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport StickerStore from '../../Stores/StickerStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, emojis, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n        const emoji = stickerIndex !== -1 ? emojis[stickerIndex].emojis.join(' ') : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('Remove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && (\n                    <div className='sticker-set-dialog-preview'>\n                        <div className='sticker-set-dialog-preview-emoji'>{emoji}</div>\n                        <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n                    </div>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_PREVIEW_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\nimport DialogContent from '../Dialog/StickerSetDialog';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    state = {\n        hint: null,\n        stickerId: 0\n    };\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickersHint', this.onClientUpdateStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickersHint', this.onClientUpdateStickersHint);\n    }\n\n    onClientUpdateStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({ hint, stickerId: 0 });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        if (!sticker) return;\n        if (this.mouseDownStickerId !== sticker.sticker.id) return;\n        console.log('Match.sendSticker', sticker);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { hint } = this.state;\n        const { stickers: result } = hint;\n        const { stickers } = result;\n\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId, stickers, 8);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ stickerId, timestamp: now, showPreview: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, stickerId, showPreview } = this.state;\n        if (!hint) return null;\n\n        const { stickers } = hint;\n        if (!stickers) return null;\n\n        const { stickers: items } = stickers;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                {/*<div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>*/}\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n        const emoji = stickerIndex !== -1 ? sticker.emoji : null;\n\n        return (\n            <div\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && (\n                    <div className='sticker-set-dialog-preview'>\n                        {/*<div className='sticker-set-dialog-preview-emoji'>{emoji}</div>*/}\n                        <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { debounce, throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { highlightMessage } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        this.insertAfter(this.filterMessages(history), scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChat.id\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.NONE);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, scrollBehavior, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), scrollBehavior: scrollBehavior }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        this.updateItemsInView();\n\n        const list = this.listRef.current;\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.suppressHandleScroll) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScroll');\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScrollOnSelectChat');\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive } = this.state;\n\n        console.log(`MessagesList.render clearHistory=${clearHistory}`, history);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) =>\n                  isServiceMessage(x) ? (\n                      <ServiceMessage\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  ) : (\n                      <Message\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showTitle\n                          sendingState={x.sending_state}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  )\n              );\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: 1\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport ChatInfoDialog from '../Dialog/ChatInfoDialog';\nimport StickerSetDialog from '../Dialog/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n"],"sourceRoot":""}