{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Assets/Icons/Saved.js","Assets/Icons/DeletedAccount.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Actions/Chat.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/Archive.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/Main.js","Components/ColumnLeft/Settings/EditProfile.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Assets/Icons/Share.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","transform","stroke","strokeWidth","strokeLinejoin","fill","cx","cy","r","OnlineStatus","onUpdateUserStatus","update","userId","user_id","user","UserStore","get","online","isUserOnline","getChatUserId","chatId","on","off","size","borderSize","style","width","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","onUpdateChatPhoto","chat_id","photo","store","FileStore","getStore","loadChatContent","onUpdateChatTitle","handleSelect","event","onSelect","stopPropagation","handleLoad","nextProps","nextState","ChatStore","showOnline","showSavedMessages","small","dialog","big","t","isDeletedPrivateChat","classNames","onClick","pointer","DeletedAccount","fontSize","isMeChat","chat","letters","getChatLetters","src","getSrc","tileLoaded","tileColor","Math","abs","onLoad","draggable","alt","isPrivateChat","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","text","element","document","createElement","value","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","select","execCommand","console","error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","a","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","x","catch","e","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","link","key","message","handleScheduledAction","action","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton","aria-label","color","removeScheduledAction","Close","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","forEach","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerHTML","innerText","handleSearchKeyDown","keyCode","preventDefault","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","searchResultsMap","filteredResults","foundChats","open","onClose","aria-labelledby","aria-describedby","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","handleClick","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","isChannelChat","setChatChatList","chatList","chat_list","toggleChatIsPinned","isPinned","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","is_marked_as_unread","toggleChatNotificationSettings","isMuted","notification_settings","isChatMuted","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","use_default_mute_for","mute_for","getChatCounters","photoCounter","return_local","count","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Notifications","onUpdateChatNotificationSettings","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","users","member","items","sort","y","getUserStatusOrder","wordWrap","Divider","toUpperCase","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","contextMenu","left","clientX","clientY","handleRevokeChange","handleCloseDelete","handleDeleteContinue","showOpenMessage","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","Popover","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","transitionDuration","DialogContentText","FormControlLabel","control","Checkbox","label","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","Error","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","SharedDocuments","SharedLink","nextContext","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","charAt","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","video","duration","isBlurred","THUMBNAIL_BLURRED_SIZE_90","getDurationString","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","file","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","classes","Archive","openArchive","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","DialogBadge","unread_count","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","last_message","getLastMessageDate","is_outgoing","Dialog","previousChatId","canPinChats","canTogglePin","canToggleArchive","canSetChatChatList","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","pinnedSum","reduce","handlePin","handleArchive","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","forceRead","force_read","viewMessages","hidden","isLastPinned","isSelected","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","sin","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","window","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","target","isVisibleItem","overScanCount","renderIdsList","addEventListener","item","removeEventListener","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","min","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","onUpdateAuthorizationState","authorizationState","authorization_state","loadFirstSlice","isAuthorizationReady","initDB","saveCache","onSaveCache","onUpdateChatOrder","order","newChatIds","status","AppStore","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","max","CHAT_SLICE_LIMIT","replace","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","from","oldChatIds","handleCloseArchive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","children","Search","concatSearchResults","results","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewGroup","handleContacts","handleArchived","handleSaved","handleSettings","handleHelp","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Saved","Help","aria-owns","aria-haspopup","SearchInput","blur","handleInput","inputRef","onFocus","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","ANIMATION_DURATION_100MS","SidebarPage","Slide","direction","mountOnEnter","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","focused","RadioGroup","name","Radio","root","withTheme","Main","handleAppearance","themePickerRef","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","TextField","defaultValue","General","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","settings","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","PrivacySecurity","openActiveSessions","handleBlockedUsers","opened","closeActiveSessions","sessionsCount","usersCount","role","undefined","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","setFullInfo","manager","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","reset","cache","contacts","CacheManager","remove","onClientUpdate","addTdLibListener","removeTdLibListener","saveChatsInternal","load","files","parseCache","archiveChats","basicGroups","supergroups","options","setDataUrl","OutputTypingManager","updateChatChatList","option","archiveChatIds","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","deleteDataUrl","EventEmitter","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","user_ids","getUserFullName","localeCompare","throttle","CacheStore","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","getArchiveTitle","archive","chatsOrder","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateOpenContacts","openContacts","onClientUpdateCloseContacts","onClientUpdateOpenSettings","openSettings","meChatId","onClientUpdateCloseSettings","onClientUpdateOpenArchive","onClientUpdateCloseArchive","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","header","dialogsHeaderRef","setInitQuery","scrollToTop","visible","handleSaveCache","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","container","paper","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","disabled","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","now","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","hint","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onDone","handleCancel","onCancel","textRef","urlRef","display","flexDirection","margin","autoComplete","prevOpen","ReplyTile","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","getEntities","readImageSize","photoWidth","photoHeight","altKey","ctrlKey","metaKey","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","click","handleEditMediaComplete","getMediaFromFile","media","setFormattedText","formattedText","nodes","getNodes","getRangeAt","floor","random","getRandomInt","setBlob","has_stickers","accept","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","InputBox","selectionChangeListener","newMessageRef","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","inputContent","editedMessage","editMessageText","editMessageCaption","attachPhotoRef","handleAttachPhotoComplete","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","is_downloading_completed","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","handleDoneEditMedia","editMessageMedia","StickerStore","performance","match","emojiRegex","exec","timestamp","stickers","isMediaEditing","isTextMessage","Suspense","fallback","multiple","Done","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","selectedItems","deleteMessages","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","code","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","searchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","zIndex","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","audio","video_note","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onSendInternal","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","animation","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","copyLink","tagName","handleReply","replyMessage","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","editMessage","handleUnvote","cancelPollAnswer","handleConfirmStopPoll","confirmStopPoll","handleStopPoll","stopPoll","handleCloseConfirm","showUnreadSeparator","showTail","fitSize","getFitSize","edit_date","forward_info","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","getMessageStyle","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canBeSelected","hasSelectedMessage","canBeEdited","canMessageBeEdited","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","getSticker","mouseDownStickerId","handleMouseUp","dict","foundStickers","stickerIndex","data-sticker-id","autoplay","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","STICKER_SET","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","page_blocks","Paragraph","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","onClientUpdateDocumentThumbnailBlob","onClientUpdateDocumentBlob","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","remote","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","every","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","getBlobUrl","thumbnailBlob","videoWidth","videoHeight","scale","handleContentClick","onVolumeChange","loop","FileProgress","prevMedia","getViewerFile","getViewerThumbnail","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","hasPreviousMedia","hasNextMedia","handlePrevious","getInputMediaContent","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","scrollIntoView","Provider","alignItems","transition","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","updateAnimationData","isLottieMessage","getAnimationData","animationData","getMediaFile","getMediaPreviewFile","changeSpeed","lottieRef","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","MediaViewer","deleteConfirmationOpened","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaInfo","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/5.710a21d5.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(3.000000, 0.600000)'>\n        <path\n            d='M9,0 C13.9705627,-9.13077564e-16 18,4.02943725 18,9 L18,23 L18,23 L15,20 L12,23 L9,20 L6,23 L3,20 L0,23 L0,9 C-6.08718376e-16,4.02943725 4.02943725,9.13077564e-16 9,0 Z'\n            stroke='currentColor'\n            strokeWidth='1.5'\n            strokeLinejoin='round'\n            fill='none'\n        />\n        <circle cx='5' cy='9' r='2' />\n        <circle cx='13' cy='9' r='2' />\n    </g>,\n    'DeletedAccount'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_4', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function copy(text) {\n    let element;\n\n    try {\n        element = document.createElement('textarea');\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.select();\n\n        const successful = document.execCommand('copy');\n        if (!successful) {\n            console.error('unable to copy using execCommand');\n        }\n    } catch {\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport { isChatMuted } from '../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\n\nexport async function getChat(chatId) {\n    const chat = TdLibController.send({\n        '@type': 'getChat',\n        chat_id: chatId\n    });\n    ChatStore.set(chat);\n\n    return chat;\n}\n\nexport function setChatChatList(chatId, chatList) {\n    TdLibController.send({\n        '@type': 'setChatChatList',\n        chat_id: chatId,\n        chat_list: chatList\n    });\n}\n\nexport function toggleChatIsPinned(chatId, isPinned) {\n    TdLibController.send({\n        '@type': 'toggleChatIsPinned',\n        chat_id: chatId,\n        is_pinned: isPinned\n    });\n}\n\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\n    TdLibController.send({\n        '@type': 'toggleChatIsMarkedAsUnread',\n        chat_id: chatId,\n        is_marked_as_unread: isMarkedAsUnread\n    });\n}\n\nexport function toggleChatNotificationSettings(chatId, isMuted) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return;\n\n    const isMutedPrev = isChatMuted(chatId);\n    if (isMutedPrev === isMuted) {\n        return;\n    }\n\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n    const newNotificationSettings = {\n        ...chat.notification_settings,\n        use_default_mute_for: false,\n        mute_for: muteFor\n    };\n\n    TdLibController.send({\n        '@type': 'setChatNotificationSettings',\n        chat_id: chatId,\n        notification_settings: newNotificationSettings\n    });\n}\n\nexport async function getChatCounters(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const promises = [];\n\n    const photoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterPhoto' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(photoCounter);\n\n    const videoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVideo' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(videoCounter);\n\n    const documentCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterDocument' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(documentCounter);\n\n    const audioCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterAudio' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(audioCounter);\n\n    const urlCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterUrl' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(urlCounter);\n\n    const voiceAndVideoNoteCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(voiceAndVideoNoteCounter);\n\n    return await Promise.all(promises);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.left !== left) {\n            return true;\n        }\n\n        if (nextState.top !== top) {\n            return true;\n        }\n\n        if (nextState.openDeleteDialog !== openDeleteDialog) {\n            return true;\n        }\n\n        if (nextState.revoke !== revoke) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <div className='shared-link' onContextMenu={this.handleContextMenu}>\n                <div className={classNames('shared-link-photo', tileColor)}>\n                    {title.charAt(0)}\n                    {photo && (\n                        <Photo\n                            displaySize={90}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                            showProgress={false}\n                            style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                        />\n                    )}\n                </div>\n                <div className='shared-link-content'>\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {content}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage, t } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default withTranslation()(SharedPhoto);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { getDurationString, getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage, t } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className='shared-video-wrapper'>\n                    <div\n                        className={classNames('shared-video-content', {\n                            'media-blurred': isBlurred,\n                            'media-mini-blurred': !thumbSrc && isBlurred\n                        })}\n                        style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                    />\n                    <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default withTranslation()(SharedVideo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (!voiceNote) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className='shared-voice-note' onContextMenu={this.handleContextMenu}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                    <div className='voice-note-meta'>\n                        <AudioAction\n                            chatId={chatId}\n                            messageId={messageId}\n                            duration={duration}\n                            file={file}\n                            title={`${dateString}, `}\n                        />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        // console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        // console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Archive.css';\nimport { openArchive } from '../../Actions/Client';\n\nclass Archive extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { title, theme } = this.props;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.title !== title) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openArchive();\n        }\n    };\n\n    render() {\n        const { t, title } = this.props;\n\n        return (\n            <div\n                ref={this.dialog}\n                className='dialog'\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}>\n                <div className='dialog-wrapper'>\n                    <div className='chat-tile'>\n                        <div className='archive-tile-background tile-photo'>\n                            <div className='tile-saved-messages'>\n                                <ArchiveIcon fontSize='default' />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>\n                                <span className='dialog-title-span'>{t('ArchivedChats')}</span>\n                            </div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>{title}</div>\n                            {/*{unread_count > 0 && (*/}\n                            {/*    <div className={classNames('dialog-badge-muted', 'dialog-badge')}>*/}\n                            {/*        <span className='dialog-badge-text'>{unread_count}</span>*/}\n                            {/*    </div>*/}\n                            {/*)}*/}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nArchive.propTypes = {\n    title: PropTypes.string\n};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount,\n    showChatUnreadMessageIcon\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMessageIcon = false; //showChatUnreadMessageIcon(chatId);\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMessageIcon && <i className='dialog-badge-unread' />}\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadMessageIcon && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport { canSetChatChatList, isChatArchived, isChatMuted, isChatSecret, isChatUnread, isPrivateChat } from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        if (hidden) return null;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(isSelected ? 'dialog-active' : 'dialog', { 'item-selected': isSelected })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Archive from '../Tile/Archive';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport { scrollTop } from '../../Utils/DOM';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat || !chat.chat_list || chat.chat_list['@type'] !== type) {\n            return;\n        }\n\n        const newChatIds = [];\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId()) {\n                TdLibController.setChatId(0);\n                AppStore.changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (chats.length > 0) {\n                const existingChat = chats.find(x => x === chat_id);\n                if (!existingChat) {\n                    // const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                    // if (orderCompare(minChatOrder, chat.order) === 1) {\n                    //     console.log('[dl] onUpdate return 3', type);\n                    //     return;\n                    // }\n                    newChatIds.push(chat_id);\n                }\n            } else {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        // console.log('[dl] onUpdate reorderChats', type, chatIds, newChatIds);\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass Archive extends React.Component {\n    handleCloseArchive = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCloseArchive'\n        });\n    };\n\n    render() {\n        const { t, innerListRef, items, cacheItems } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleCloseArchive}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem button className='recently-found-chat' onClick={onClick} onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './SectionHeader.css';\n\nfunction SectionHeader(props) {\n    const { command, onClick, children } = props;\n\n    return (\n        <div className='section-header'>\n            <div className='section-header-title'>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenContacts'\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenSettings',\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    render() {\n        const { t, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    <SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n\n                element.innerText = null;\n                onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                event.stopPropagation();\n                event.target.blur();\n                onClose();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus } = this.props;\n\n        return (\n            <div className='search-input'>\n                {/*<SearchIcon />*/}\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_100MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch, text } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            const searchInput = this.searchInputRef.current;\n            if (openSearch) {\n                setTimeout(() => {\n                    if (searchInput) {\n                        searchInput.focus();\n                    }\n                }, ANIMATION_DURATION_100MS);\n            } else {\n                searchInput.innerText = null;\n            }\n        }\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch } = this.props;\n\n        let content = null;\n        let showClose = false;\n        if (openSearch) {\n            showClose = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton showClose={showClose} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport './SidebarPage.css';\n\nfunction SidebarPage({ children, open }) {\n    return (\n        <Slide direction='right' in={open} mountOnEnter unmountOnExit>\n            <div className='sidebar-page'>{children}</div>\n        </Slide>\n    );\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport PhotoIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Appearance')} />\n                    </ListItem>\n                    <ThemePicker ref={this.themePickerRef} />\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport SidebarPage from '../SidebarPage';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        // console.log('[un] render', hasError, usernameLabel);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            showTitle={false}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={null}\n                        />\n                    </div>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            You can choose a username on Telegram. If you do, other people will be able to find you by\n                            this username and contact you without knowing your phone number. You can use a-z, 0-9 and\n                            underscores. Minimum length is 5 characters.\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport './General.css';\n\nclass General extends React.Component {\n    render() {\n        const { t, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content' />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    handleBlockedUsers = () => {\n        const { users } = this.state;\n        if (!users) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlockedUsersPage',\n            opened: true,\n            users\n        });\n    };\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.handleBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openActiveSessions}>\n                    <ActiveSessions sessions={sessions} onClose={this.closeActiveSessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        console.log('[perf] Settings.componentDidMount');\n        this.loadContent();\n    }\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCloseSettings'\n        });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile}>\n                    <EditProfile chatId={chatId} onClose={this.closeEditProfile} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral}>\n                    <General chatId={chatId} onClose={this.closeGeneral} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications}>\n                    <Notifications chatId={chatId} onClose={this.closeNotifications} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity}>\n                    <PrivacySecurity onClose={this.closePrivacySecurity} />\n                </SidebarPage>\n                <SidebarPage open={openLanguage}>\n                    <Language onClose={this.closeLanguage} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.cache = null;\n        this.contacts = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        CacheManager.remove('contacts');\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        const [cache, files] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n        // console.log('[cm] getChats result', this.cache);\n        if (!this.cache) return null;\n\n        this.parseCache(this.cache);\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n\n        (files || []).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).forEach(x => {\n            delete x.OutputTypingManager;\n\n            ChatStore.set(x);\n            if (x.photo) {\n                if (x.photo.small) FileStore.set(x.photo.small);\n                if (x.photo.big) FileStore.set(x.photo.big);\n            }\n            if (x.chat_list) {\n                ChatStore.updateChatChatList(x.id, x.chat_list);\n            }\n            if (x.last_message) {\n                MessageStore.set(x.last_message);\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n        chats.concat(archiveChats).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCloseContacts'\n        });\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    render() {\n        const { items, searchItems } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <SearchInput\n                        inputRef={this.searchInputRef}\n                        onChange={this.handleSearch}\n                        onClose={this.handleClose}\n                    />\n                </div>\n                <div className='contacts-content'>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        const { isChatDetailsVisible } = AppStore;\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            isChatDetailsVisible,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.isChatDetailsVisible !== isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateOpenSettings', this.onClientUpdateOpenSettings);\n        ChatStore.on('clientUpdateCloseSettings', this.onClientUpdateCloseSettings);\n        ChatStore.on('clientUpdateOpenArchive', this.onClientUpdateOpenArchive);\n        ChatStore.on('clientUpdateCloseArchive', this.onClientUpdateCloseArchive);\n        ChatStore.on('clientUpdateOpenContacts', this.onClientUpdateOpenContacts);\n        ChatStore.on('clientUpdateCloseContacts', this.onClientUpdateCloseContacts);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateOpenSettings', this.onClientUpdateOpenSettings);\n        ChatStore.off('clientUpdateCloseSettings', this.onClientUpdateCloseSettings);\n        ChatStore.off('clientUpdateOpenArchive', this.onClientUpdateOpenArchive);\n        ChatStore.off('clientUpdateCloseArchive', this.onClientUpdateCloseArchive);\n        ChatStore.off('clientUpdateOpenContacts', this.onClientUpdateOpenContacts);\n        ChatStore.off('clientUpdateCloseContacts', this.onClientUpdateCloseContacts);\n    }\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateOpenContacts = async update => {\n        this.setState({ openContacts: true });\n    };\n\n    onClientUpdateCloseContacts = update => {\n        this.setState({ openContacts: false });\n    };\n\n    onClientUpdateOpenSettings = update => {\n        this.setState({ openSettings: true, meChatId: update.chatId });\n    };\n\n    onClientUpdateCloseSettings = update => {\n        this.setState({ openSettings: false });\n    };\n\n    onClientUpdateOpenArchive = update => {\n        this.setState({ openArchive: true });\n    };\n\n    onClientUpdateCloseArchive = update => {\n        this.setState({ openArchive: false });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div\n                    className={classNames('dialogs', {\n                        'dialogs-third-column': isChatDetailsVisible\n                    })}>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={200}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleClose}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (AppStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => AppStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            const key = 'disallow_multiple_answers';\n            const message = t('PollQuizOneRightAnswer');\n            const action = null;\n\n            this.handleScheduledAction(key, message, action);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={messageId || editMessageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { getEntities, getMedia, getNodes } from '../../Utils/Message';\nimport { readImageSize } from '../../Utils/Common';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, open } = this.props;\n        if (open && open !== prevProps.open) {\n            this.file = null;\n            this.media = null;\n\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return;\n\n            const { content } = message;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (!text && !caption) return;\n\n            setTimeout(() => {\n                const element = this.captionRef.current;\n                if (!element) return;\n\n                if (text) {\n                    this.setFormattedText(text);\n                } else if (caption) {\n                    this.setFormattedText(caption);\n                } else {\n                    element.innerText = null;\n                }\n\n                focusInput(element);\n            }, 0);\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, onDone } = this.props;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        let content = null;\n        if (this.file) {\n            readImageSize(this.file, result => {\n                content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: result.name, data: result },\n                    width: result.photoWidth,\n                    height: result.photoHeight,\n                    caption\n                };\n                onDone(null, content);\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId,\n                    messageId: 0\n                });\n            });\n            this.file = null;\n        } else {\n            onDone(caption, null);\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, onCancel } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateEditMessage',\n            chatId,\n            messageId: 0\n        });\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.file = file;\n            this.getMediaFromFile(file, result => {\n                this.media = result;\n                this.forceUpdate();\n            });\n        });\n\n        element.value = '';\n    };\n\n    getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    getMediaFromFile(file, callback) {\n        if (!file) {\n            callback(null);\n        }\n\n        if (file.type.startsWith('image')) {\n            readImageSize(file, result => {\n                const fileId = -this.getRandomInt(1, 1000000);\n                FileStore.setBlob(fileId, result);\n\n                callback({\n                    '@type': 'messagePhoto',\n                    photo: {\n                        '@type': 'photo',\n                        has_stickers: false,\n                        minithumbnail: null,\n                        sizes: [\n                            {\n                                '@type': 'photoSize',\n                                photo: { '@type': 'file', id: fileId },\n                                width: result.photoWidth,\n                                height: result.photoHeight\n                            }\n                        ]\n                    }\n                });\n            });\n        } else {\n            callback(null);\n        }\n    }\n\n    render() {\n        const { classes, chatId, messageId, open, t } = this.props;\n        if (!open) return null;\n\n        const { defaultText, defaultUrl, openEditUrl } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const media = getMedia({ content: this.media }) || getMedia(message, null);\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    <IconButton\n                        disableRipple={true}\n                        aria-label={t('Edit')}\n                        className='edit-media-dialog-edit-button'\n                        size='small'\n                        onClick={this.handleEditMedia}>\n                        <EditIcon fontSize='inherit' />\n                    </IconButton>\n                    <input\n                        ref={this.editMediaRef}\n                        className='inputbox-attach-button'\n                        type='file'\n                        accept='image/*'\n                        onChange={this.handleEditMediaComplete}\n                    />\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Edit')}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    open: PropTypes.bool\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia: messageId !== 0 && isEditedMedia(chatId, messageId)\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    this.focusInput();\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateEditMessage',\n            chatId,\n            messageId: 0\n        });\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        innerHTML = innerHTML.replace(/<div><br><\\/div>/gi, '<br>');\n        innerHTML = innerHTML.replace(/<div>/gi, '<br>');\n        innerHTML = innerHTML.replace(/<\\/div>/gi, '');\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText, result => {});\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        const files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        const files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        } else if (replyToMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.setState({ files });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    async editMessageMedia(content, callback) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        // console.log('[em] editMessageMedia send', content);\n        const result = await TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n\n        callback(result);\n    }\n\n    async editMessageCaption(caption, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        const result = await TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n\n        callback(result);\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleDoneEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content, () => {});\n            return;\n        }\n\n        this.editMessageCaption(caption, () => {});\n    };\n\n    closeEditMediaDialog() {\n        this.setState(\n            {\n                openEditMedia: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    onDone={this.handleDoneEditMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        {t('Undo')}\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport { clearSelection, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        AppStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId)\n                                        ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                        : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = AppStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragParams } = this.state;\n\n        return (\n            <>\n                {dragParams && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport Button from '@material-ui/core/Button';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Popover from '@material-ui/core/Popover';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getMedia,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    canMessageBeEdited,\n    isMessagePinned,\n    isMetaBubble,\n    canMessageBeUnvoted,\n    canMessageBeClosed\n} from '../../Utils/Message';\nimport { canPinMessages, canSendMessages, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    forwardMessages,\n    replyMessage,\n    editMessage,\n    clearSelection,\n    deleteMessages\n} from '../../Actions/Client';\nimport { copy } from '../../Utils/Text';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { getFitSize, getSize } from '../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            confirmStopPoll: false,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches, confirmStopPoll } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('Message.shouldComponentUpdate true theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.confirmStopPoll !== confirmStopPoll) {\n            // console.log('Message.shouldComponentUpdate true confirmStopPoll');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId } = this.props;\n\n        clearSelection();\n        this.handleCloseContextMenu(event);\n\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId } = this.props;\n\n        clearSelection();\n        this.handleCloseContextMenu(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId } = this.props;\n\n        this.handleCloseContextMenu(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId } = this.props;\n\n        clearSelection();\n        this.handleCloseContextMenu(event);\n\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId } = this.props;\n\n        this.handleCloseContextMenu(event);\n\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId } = this.props;\n\n        this.handleCloseContextMenu(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    getMessageStyle(chatId, messageId) {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n                if (!animation) return null;\n\n                const { width, height, thumbnail } = animation;\n\n                const size = { width, height } || thumbnail;\n                if (!size) return null;\n\n                const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n                if (!fitSize) return null;\n\n                return { width: fitSize.width };\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n                if (!photo) return null;\n\n                const size = getSize(photo.sizes, PHOTO_SIZE);\n                if (!size) return null;\n\n                const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n                if (!fitSize) return null;\n\n                return { width: fitSize.width };\n            }\n            case 'messageVideo': {\n                const { video } = content;\n                if (!video) return null;\n\n                const { thumbnail, width, height } = video;\n\n                const size = { width, height } || thumbnail;\n                if (!size) return null;\n\n                const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\n                if (!fitSize) return null;\n\n                return { width: fitSize.width };\n            }\n        }\n\n        return null;\n    }\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleCopyLink = event => {\n        const { copyLink } = this.state;\n\n        this.handleCloseContextMenu(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top,\n            confirmStopPoll\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = this.getMessageStyle(chatId, messageId);\n\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeForwarded = message.can_be_forwarded;\n        const canBeDeleted = message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': is_outgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && is_outgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {copyLink && <MenuItem onClick={this.handleCopyLink}>{t('CopyLink')}</MenuItem>}\n                            {canBeReplied && <MenuItem onClick={this.handleReply}>{t('Reply')}</MenuItem>}\n                            {canBePinned && (\n                                <MenuItem onClick={this.handlePin}>{isPinned ? t('Unpin') : t('Pin')}</MenuItem>\n                            )}\n                            {canBeSelected && <MenuItem onClick={this.handleSelect}>{t('Select')}</MenuItem>}\n                            {canBeForwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                            {canBeEdited && <MenuItem onClick={this.handleEdit}>{t('Edit')}</MenuItem>}\n                            {canBeDeleted && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>}\n                            {canBeUnvoted && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                            {canBeClosed && <MenuItem onClick={this.handleConfirmStopPoll}>{t('StopPoll')}</MenuItem>}\n                        </MenuList>\n                    </Popover>\n                    <Dialog\n                        transitionDuration={0}\n                        open={confirmStopPoll}\n                        onClose={this.handleCloseConfirm}\n                        aria-labelledby='form-dialog-title'>\n                        <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleCloseConfirm} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleStopPoll} color='primary'>\n                                {t('Stop')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        // document.addEventListener('keydown', this.onKeyDown, false);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        // document.removeEventListener('keydown', this.onKeyDown, false);\n\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateEditMessage',\n                        chatId: message.chat_id,\n                        messageId: message.id\n                    });\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId: message.chat_id,\n                    messageId: message.id\n                });\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = AppStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.object\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getViewerFile, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, thumbnailWidth, thumbnailHeight, thumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { getViewerFile, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { setInstantViewViewerContent } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    state = {\n        index: -1,\n        hasPreviousMedia: false,\n        hasNextMedia: false,\n        blocks: []\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\nimport { scrollTop } from '../../Utils/DOM';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\n// const Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n            this.setState({\n                width,\n                height,\n                file,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            file,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}