{"version":3,"sources":["Stores/StickerStore.js","Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["store","StickerStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","reset","stickerSet","hint","onUpdate","update","authorization_state","sticker_set_ids","_this$stickerSet","id","is_installed","some","x","assign","emit","onClientUpdate","timestamp","foundStickers","stickers","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","EventEmitter","window","sticker","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","send","@type","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","build","maxSnack","MAX_SNACK","displayName","concat","getDisplayName","ForwardTargetChat","_this$props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","forward-target-chat-selected","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","asyncToGenerator","regenerator_default","mark","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","wrap","_context","prev","next","getPublicMessageLink","offset_order","offset_chat_id","limit","push","user_id","UserStore","getMyId","force","Promise","all","map","catch","e","sent","slicedToArray","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","message","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","Components_Tile_UserStatusControl","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","Tile_DialogTitle","Components_Tile_DialogStatus","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","ArrowBack_default","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItem_default","button","listItem","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","variant","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Fragment","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","getGroupChatMembers","loadUsersContent","getChatFullInfo","isMeChat","getChatUserId","hasGroupsInCommon","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","popup","setProfileMediaViewerContent","handleOpenChat","_this$props5","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","list","scrollHeight","offsetHeight","_this$props6","_this$props7","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","bio","getChatBio","isMe","users","member","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","disabled","Photo_default","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","_this3","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","minWidth","ChatInfo","onClientUpdateChatId","nextChatId","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleSelectUser","_ref","_x","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","showOnline","PureComponent","userStatusRoot","right","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","root","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","backgroundColor","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","messageId","previousMessageId","chatSearch","selectedMessageId","sender_user_id","date","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Boolean","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","messages","Date","query","el","includes","splice","top","recentlyFound","startsWith","substr","USERNAME_LENGTH_MIN","from_message_id","offset","offset_date","offset_message_id","setItems","toConsumableArray","keys","topPromise","recentlyFoundPromise","_ref4","category","error","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","stopPropagation","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","total_count","_callee4","_context4","loading","filterMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","onMouseDown","default","ThemePicker","target","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","transitionDuration","DialogContent_default","FormControl_default","formControl","FormLabel_default","focused","RadioGroup_default","name","group","FormControlLabel_default","control","Radio_default","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","vertical","horizontal","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","core_Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","anchorOrigin","MenuItem_default","aria-owns","aria-haspopup","menuIconButton","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","handleKeyDown","handleKeyUp","searchInput","handlePaste","handleInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icon","icons_Search_default","openIcon","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","AttachFile_default","transformOrigin","canSendPhotos","canSendDocuments","InsertDriveFile_default","canSendPolls","Poll_default","focusNode","node","toEnd","undefined","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","handleDelete","option","onDelete","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","PollStore","now","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","index","findIndex","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","Components_Popup_CreatePollOption","canAddOption","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","onClientUpdatePhotoBlob","fileId","src","getSrc","isBlurred","isBlurredThumbnail","isVideoNote","hasVideoNote","reply-tile-photo-round","reply-tile-photo-loading","media-blurred","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","title","getTitle","getReplyPhotoSize","accentBackgroundLight","Components_Tile_ReplyTile","accentColorMain","replyContentSubtitle","accentStyles","InputBoxHeader","Reply_default","replyIcon","Components_Message_Reply","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","__webpack_require__","bind","InputBoxControl","onClientUpdateStickerSend","item","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","element","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","file","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","getSize","PHOTO_SIZE","is_downloading_completed","updatePhotoBlob","clearDraft","callback","invokeScheduledAction","newChatDraftMessage","t0","alert","JSON","stringify","_x2","_x3","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","_x4","_this$state3","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Popup_CreatePollDialog","DialogContentText_default","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","Components_ColumnMiddle_InputBoxControl","is_member","can_send_messages","is_channel","ColumnMiddle_NotificationsCommandControl","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress_default","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","handleCancel","canBeDeletedForAllUsers","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","selectedItems","values","Symbol","iterator","done","can_be_deleted_for_all_users","err","return","openDeleteDialog","revoke","handleDeleteContinue","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","_this$state4","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","Slider_default","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getDurationString","Math","floor","getTimeString","duration","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","getMedia","openMedia","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","web_page","audio","voice_note","video_note","voice","video","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","toLocaleDateString","day","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","left","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","Meta","editDate","onDateClick","views","meta","& a","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","old_message_id","newMessageId","last_read_outbox_message_id","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","description","url","animation","Sticker","VoiceNote","voiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","emojiMatches","getEmojiMatches","handleSelection","mouseDown","selectMessage","handleDateClick","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","_this$props9","openReply","_this$props10","_this$props11","showUnreadSeparator","showTitle","contextMenu","_this$props12","edit_date","forward_info","webPage","getWebPage","media","getUnread","messageClassName","message-selected","messageSelected","messageHighlighted","Components_Message_Meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","MessageAuthor","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","loadMessageContents","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","_extends","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","d","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","ArrowDownward_default","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","abs","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","onUpdateNewMessage","completed","newState","scrollDownVisible","insertPrevious","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","_message$props","children","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","onLoadNext","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","finally","insertNext","supergroupId","basicGroupChat","getSupergroupId","upgraded_from_basic_group_id","last_message","filterDuplicateMessages","prevHistory","_ref5","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","prevMessageId","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","getPhotoSize","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","m","isServiceMessage","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","set_id","dialogTitleRoot","disablePointerEvents","Popup_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_ColumnMiddle_Footer","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","getSenderUserId","dateHint","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","isLottieMessage","getMediaFile","getAnimationData","resolve","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","loop","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","FileProgress","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","new_content","old_content","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"yIA4GMA,EAAQ,gBAlGV,SAAAC,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAQJI,MAAQ,WACJP,EAAKQ,WAAa,KAClBR,EAAKS,KAAO,MAXFT,EAcdU,SAAW,SAAAC,GACP,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrBC,EAAwBD,EAAxBC,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACDZ,EAAKO,QAKb,MAEJ,IAAK,6BAA8B,IACvBM,EAAoBF,EAApBE,gBACR,GAAIb,EAAKQ,WAAY,KAAAM,EACYd,EAAKQ,WAA1BO,EADSD,EACTC,GAAIC,EADKF,EACLE,aACRA,IAAiBH,EAAgBI,KAAK,SAAAC,GAAC,OAAIA,IAAMH,MACjDf,EAAKQ,WAAaP,OAAOkB,OAAO,GAAInB,EAAKQ,WAAY,CAAEQ,cAAeA,KAI9EhB,EAAKoB,KAAK,6BAA8BT,KAtCtCX,EA8CdqB,eAAiB,SAAAV,GACb,OAAQA,EAAO,UACX,IAAK,0BACDX,EAAKoB,KAAK,0BAA2BT,GACrC,MAEJ,IAAK,gCAAiC,IAC1BF,EAASE,EAATF,KAERT,EAAKS,KAAOA,EAEZT,EAAKoB,KAAK,gCAAiCT,GAC3C,MAEJ,IAAK,iCAAkC,IAC3BF,EAASE,EAATF,KAEJT,EAAKS,MAAQT,EAAKS,KAAKa,YAAcb,EAAKa,YAC1CtB,EAAKS,KAAOR,OAAOkB,OAAO,GAAInB,EAAKS,KAAM,CAAEc,cAAed,EAAKe,YAGnExB,EAAKoB,KAAK,iCAAkCT,GAC5C,MAEJ,IAAK,yBAA0B,IACnBH,EAAeG,EAAfH,WAERR,EAAKQ,WAAaA,EAElBR,EAAKoB,KAAK,yBAA0BT,GACpC,MAEJ,IAAK,iCACDX,EAAKoB,KAAK,iCAAkCT,KA/E1CX,EAuFdyB,iBAAmB,WACfC,IAAgBC,YAAY,SAAU3B,EAAKU,UAC3CgB,IAAgBC,YAAY,eAAgB3B,EAAKqB,iBAzFvCrB,EA4Fd4B,oBAAsB,WAClBF,IAAgBG,eAAe,SAAU7B,EAAKU,UAC9CgB,IAAgBG,eAAe,eAAgB7B,EAAKqB,iBA3FpDrB,EAAKO,QAELP,EAAKyB,mBACLzB,EAAK8B,gBAAgBC,KANX/B,6BADSgC,iBAoG3BC,OAAOC,QAAUpC,EACFA,sHChGTqC,qNACFC,MAAQ,CACJC,MAAO,KACPC,iBAAkB,QAiCtBC,kBAAoB,SAAAL,GAAW,IAEnBnB,EADkBmB,EAAlBA,QACAnB,GAERW,IAAgBc,KAAK,CACjBC,QAAS,mBACTP,QAAS,CAAEO,QAAS,cAAe1B,QACpC2B,KAAK,SAAAC,GACA3C,EAAK4C,MAAMV,UAAYA,GACvBlC,EAAK6C,SAAS,CACVR,MAAOM,EAAOG,OAAOC,KAAK,4FA1BvBC,EAAWC,EAAWC,GAAU,IACvChB,EAAY/B,KAAKyC,MAAjBV,QAEJA,GAAWA,IAAYc,EAAUd,SACjC/B,KAAKoC,kBAAkBL,+CAIX,IACRA,EAAY/B,KAAKyC,MAAjBV,QAEJA,GACA/B,KAAKoC,kBAAkBL,oCAoBtB,IACGA,EAAY/B,KAAKyC,MAAjBV,QACAG,EAAUlC,KAAKiC,MAAfC,MAER,OAAKH,EAGDiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBjB,GACxCc,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASrB,QAASA,EAASsB,YAAaC,OAL3B,wDAlDOb,EAAOR,GAAO,IAClCF,EAAYU,EAAZV,QACAI,EAAqBF,EAArBE,iBAER,OAAIJ,GAAWI,EACJ,CACHA,iBAAkBJ,EAClBG,MAAO,MAIR,YAjBcqB,IAAMC,YAuEpBxB,g9CC1DAyB,MAff,SAAmCC,GAAkB,IAC3CC,EAD2C,SAAAC,GAAA,SAAAD,IAAA,OAAA7D,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA2D,GAAA7D,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA6D,GAAAK,MAAAhE,KAAAiE,YAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAA6D,EAAAC,GAAA9D,OAAAqE,EAAA,EAAArE,CAAA6D,EAAA,EAAAS,IAAA,SAAAC,MAAA,WAGzC,OACIC,EAAArB,EAAAC,cAACqB,EAAA,iBAAD,CAAkBC,SAAUC,KACxBH,EAAArB,EAAAC,cAACQ,EAAqB1D,KAAKyC,YALMkB,EAAA,CACdJ,IAAMC,WAWzC,OAFAG,EAAqBe,YAArB,6BAAAC,OAAgEC,YAAelB,GAA/E,KAEOC,qKCKLkB,2LACO,IAAAC,EAC2C9E,KAAKyC,MAA7CsC,EADHD,EACGC,QAASC,EADZF,EACYE,OAAQC,EADpBH,EACoBG,SAAUC,EAD9BJ,EAC8BI,SAE7BC,EAAaC,YAAkBJ,GAAQ,GAE7C,OACIV,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,sBAAuB,CAAEC,+BAAgCL,IAC/EM,QAASL,GACTZ,EAAArB,EAAAC,cAAA,OAAKC,UAAU,4BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,KAErBC,GAAYX,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,gCAAiCN,EAAQU,UACjFnB,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IACP,2BACAJ,EAAWF,EAAQW,aAAeX,EAAQY,kBAGlDrB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mCAEnBmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,6BAA6BgC,WAvB5B5B,IAAMC,YAmCvBoC,MAjDA,SAAAC,GAAK,MAAK,CACrBJ,OAAQ,CACJK,YAAaD,EAAME,QAAQC,QAAQC,MAEvCP,aAAc,CACVQ,UAAW,oBAAsBL,EAAME,QAAQC,QAAQC,KACvDR,OAAQ,aAAeI,EAAME,QAAQI,WAAWC,OAEpDT,eAAgB,CACZO,UAAW,iBAAmBL,EAAME,QAAQC,QAAQC,KACpDR,OAAQ,2BAuCkB,CAAEY,WAAW,GAAhCT,CAAwCf,mBCvDnDyB,EAAgB,KAwCpB,SAASC,EAAiBC,GACtB,IAAKA,EAAQ,OAAO,EADU,IAGtBnC,EAAUmC,EAAVnC,MACR,QAAKA,GAEkB,OAAhBA,EAAMA,MAGjB,SAASoC,EAAiBC,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1B,IAAMC,EAAgBC,IAAYC,IAAI,oBAChCC,EAAkBF,IAAYC,IAAI,8BAExC,KAD0BP,EAAiBK,IAAkBL,EAAiBQ,IACtD,OAAO,KAE/BT,EAAgBA,GAvyBV,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIR,EAAMC,OAAQO,IAAK,CACnC,IAAIZ,EAAca,IAAIT,EAAMQ,IAGxB,OAAO,KAFPD,GAAUX,EAAcQ,IAAIJ,EAAMQ,IAM1C,MAAkB,KAAXD,EAAgB,KAAOA,EAGlC,IAAIG,EAAa,KAwCjB,SAASC,EAAcX,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1BS,EAAaA,GAznC,IAAIE,EAAWD,IAAIT,EAAMQ,IAGrB,OAAO,KAFPD,GAAUG,EAAWN,IAAIJ,EAAMQ,IAMvC,MAAkB,KAAXD,EAAgB,KAAOA,wDClF5BK,uBACF,SAAAA,EAAY7E,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAsH,IACfzH,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAwH,GAAAnH,KAAAH,KAAMyC,KAmBV8E,YApBmBzH,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAoBL,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvI,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVzI,EAAK0I,uBAECX,EAAW,GACXC,EAAkBtG,KAAgBc,KAAK,CACzCC,QAAS,WACTkG,aAAc,sBACdC,eAAgB,EAChBC,MAAO,MAEXd,EAASe,KAAKd,GAERC,EAAuBvG,KAAgBc,KAAK,CAC9CC,QAAS,oBACTsG,QAASC,KAAUC,UACnBC,OAAO,IAEXnB,EAASe,KAAKb,GAjBJM,EAAAE,KAAA,EAmB2BU,QAAQC,IAAIrB,EAASsB,IAAI,SAAAnI,GAAC,OAAIA,EAAEoI,MAAM,SAAAC,GAAC,OAAI,UAnBtE,OAAArB,EAAAK,EAAAiB,KAAArB,EAAAlI,OAAAwJ,EAAA,EAAAxJ,CAAAiI,EAAA,GAmBHE,EAnBGD,EAAA,GAmBIE,EAnBJF,EAAA,GAqBVnI,EAAK6C,SAAS,CACV6G,QAAStB,EAAMuB,SACftB,cAAeA,IAGbvI,EAAQ8J,KAAUC,WACxBC,YAAiBhK,EAAOsI,EAAMuB,UA3BpB,yBAAApB,EAAAwB,SAAAjC,MApBK9H,EAkDnB0I,qBAlDmBzI,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAkDI,SAAAmC,IAAA,IAAA/E,EAAAE,EAAA8E,EAAAtH,EAAA,OAAAiF,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UAAAxD,EACYjF,EAAK4C,MAA5BuC,EADWF,EACXE,OAAQ8E,EADGhF,EACHgF,WACX9E,EAFc,CAAA+E,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,oBAGdF,EAHc,CAAAC,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,sBAIfF,EAAWnD,OAAS,GAJL,CAAAoD,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,oBAKdC,YAAajF,GALC,CAAA+E,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,oBAMdE,YAAgBlF,GANF,CAAA+E,EAAAzB,KAAA,gBAAAyB,EAAAC,OAAA,yBAAAD,EAAAzB,KAAA,GAQE/G,KAAgBc,KAAK,CACtCC,QAAS,uBACT6H,QAASnF,EACToF,WAAYN,EAAW,GACvBO,WAAW,IAZI,QAQb7H,EARauH,EAAAV,KAenBxJ,EAAK6C,SAAS,CACV4H,kBAAmB9H,IAhBJ,yBAAAuH,EAAAH,SAAAC,MAlDJhK,EAsEnB0K,YAAc,WACVhJ,KAAgBiJ,aAAa,CACzBlI,QAAS,sBACTmI,KAAM,QAzEK5K,EA6EnB6K,eAAiB,WAAM,IACXC,EAAM9K,EAAK4C,MAAXkI,EACAL,EAAsBzK,EAAKoC,MAA3BqI,kBAER,GAAKA,GACAA,EAAkBM,KAAvB,CAEA,IAAMxG,EAAG,aAAAO,OAAgB2F,EAAkBM,MACrCC,EAAUF,EAAE,cAGlBG,IAAKR,EAAkBM,MAEvB/K,EAAKkL,sBAAsB3G,EAAKyG,EAJjB,QAtFAhL,EA6FnBkL,sBAAwB,SAAC3G,EAAKyG,EAASG,GACnC,GAAK5G,EAAL,CAD8C,IAAA6G,EAGTpL,EAAK4C,MAAlCyI,EAHsCD,EAGtCC,gBAAiBnG,EAHqBkG,EAGrBlG,QACzB,GAAKmG,EAAL,CAIIC,IAAiBC,mBAAmBhH,EAAKiH,IAAqC,IAAsBL,IAEpGE,EAAgBL,EAAS,CACrBS,iBAAkBD,IAClBL,OAAQ,CACJ1G,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACImB,IAAI,QACJoH,aAAW,QACXC,MAAM,UACNtI,UAAW4B,EAAQ2G,MACnBnG,QAAS,kBAAM4F,IAAiBQ,sBAAsBvH,KACtDE,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,aAhHDpD,EAuHnBgM,oBAAsB,SAAC7G,EAAQ8E,GAC3B,GAA0B,IAAtBA,EAAWnD,OAAc,OAAO,KAEpC,IAAMkE,EAAUiB,KAAahF,IAAI9B,EAAQ8E,EAAW,IACpD,IAAKe,EAAS,OAAO,KAJqB,IAMlCkB,EAA8BlB,EAA9BkB,iBAAkBC,EAAYnB,EAAZmB,QAC1B,IAAKD,GAAyC,2BAArBC,EAAQ,SAAuC,KAC5DC,EAAUD,EAAVC,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DC,EAAUD,EAAVC,MACR,GAAIA,GAASA,EAAMvF,OACf,OAAOuF,EAAMA,EAAMvF,OAAS,GAIpC,OAAO,MAxIQ9G,EA2InBsM,WAAa,WACTtM,EAAK0K,cADU,IAAA6B,EAGiCvM,EAAK4C,MAA7CuC,EAHOoH,EAGPpH,OAAQ8E,EAHDsC,EAGCtC,WAAYuC,EAHbD,EAGaC,UAAWzB,EAHxBwB,EAGwBxB,KACvC,GAAK5F,GAAW8E,GAAeA,GAAeuC,GAAczB,EAA5D,CAEA,IAAM0B,EAAOzM,EAAK0M,aAAa1M,EAAK2M,WAAWC,SAE/C5M,EAAK6M,YAAYC,QAAQ,SAAAC,GACrB,GAAIhC,EAyCA,OAxCI0B,GACA/K,KAAgBc,KAAK,CACjBC,QAAS,cACT6H,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB3K,QAAS,mBACTgK,KAAM,CACFhK,QAAS,gBACTgK,KAAMA,EACNY,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,UAKzB7L,KAAgBc,KAAK,CACjBC,QAAS,cACT6H,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB3K,QAAS,mBACTgK,KAAM,CACFhK,QAAS,gBACTgK,KAAM1B,EACNsC,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,KAOzB,IAAMC,EAAOhB,GAAaxM,EAAKgM,oBAAoB7G,EAAQ8E,GAC3D,GAAIuD,EAAJ,CAAU,IACEC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,OAAQtB,EAAUoB,EAAVpB,MAEvB1K,KAAgBc,KAAK,CACjBC,QAAS,cACT6H,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB3K,QAAS,oBACT2J,MAAO,CACH3J,QAAS,cACT1B,GAAIqL,EAAMrL,IAEd4M,UAAW,KACXC,uBAAwB,GACxBH,MAAOA,EACPC,OAAQA,EACRG,QAAS,CACLpL,QAAS,gBACTgK,KAAMA,EACNY,SAAU,MAEdS,IAAK,UAObrB,GACA/K,KAAgBc,KAAK,CACjBC,QAAS,cACT6H,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB3K,QAAS,mBACTgK,KAAM,CACFhK,QAAS,gBACTgK,KAAMA,EACNY,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,KAKzB7L,KAAgBc,KAAK,CACjBC,QAAS,kBACT6H,QAASyC,EACTgB,aAAc5I,EACd6I,YAAa/D,EACbgD,uBAAuB,EACvBC,iBAAiB,EACjBe,UAAU,QA7PHjO,EAkQnBkO,sBAAwB,SAAA/I,GAChBnF,EAAK6M,YAAYvF,IAAInC,GACrBnF,EAAK6M,YAAYsB,OAAOhJ,GAExBnF,EAAK6M,YAAYuB,IAAIjJ,EAAQA,GAGjCkJ,QAAQC,IAAItO,EAAK6M,aAEjB7M,EAAKuO,eA3QUvO,EA8QnB0M,aAAe,SAAA8B,GACX,IAAMC,EAAYD,EAAIC,UAChBC,EAAYF,EAAIE,UAMtB,OAJID,GAA2B,OAAdA,GAAsBC,IAA4B,SAAdA,GAAsC,oBAAdA,KACzEF,EAAIE,UAAY,IAGbD,GAtRQzO,EAyRnB2O,oBAAsB,SAAAC,GACI,KAAlBA,EAAMC,SACND,EAAME,kBA3RK9O,EA+RnB+O,kBAAoB,WAAM,IAAAC,EACahP,EAAKoC,MAAhCsH,EADcsF,EACdtF,QAASrB,EADK2G,EACL3G,cAEXqG,EAAY1O,EAAKiP,UAAUrC,QAAQ8B,WACrCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC1O,EAAKiP,UAAUrC,QAAQ8B,UAAY,IAGvC,IAAMD,EAAYzO,EAAK0M,aAAa1M,EAAKiP,UAAUrC,SAASsC,OAC5D,GAAKT,EAAL,CAKA,IAAMU,EAAY3H,EAAciH,GAC1BW,EAAexI,EAAiB6H,GAMhCY,GAJchH,EACd,CAACA,EAActH,IAAI+D,OAAO4E,EAAQ4F,OAAO,SAAApO,GAAC,OAAIA,IAAMmH,EAActH,MAAKuO,OAAO,SAAApO,GAAC,OAAIqO,YAAgBrO,KACnGwI,GAE4B4F,OAC9B,SAAApO,GAAC,OACGlB,EAAKwP,cAActO,EAAGuN,IACrBU,GAAanP,EAAKwP,cAActO,EAAGiO,IACnCC,GAAgBpP,EAAKwP,cAActO,EAAGkO,KAG/CpP,EAAK6C,SAAS,CAAE4M,WAAYhB,EAAWY,cAAeA,SAlBlDrP,EAAK6C,SAAS,CAAE4M,WAAY,KAAMJ,cAAe,MAzStCrP,EA8TnB0P,kBAAoB,SAAAd,GAChB,IAAMe,EAAYf,EAAMgB,cAAcC,QAAQ,cAC1CF,IACAf,EAAME,iBACNgB,SAASC,YAAY,cAAc,EAAOJ,KAlU/B3P,EAsUnBgQ,mBAAqB,WACjB,IAAMtB,EAAY1O,EAAK2M,WAAWC,QAAQ8B,WACtCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC1O,EAAK2M,WAAWC,QAAQ8B,UAAY,KAzUzB1O,EA6UnBiQ,mBAAqB,SAAArB,GACjB,IAAMe,EAAYf,EAAMgB,cAAcC,QAAQ,cAC1CF,IACAf,EAAME,iBACNgB,SAASC,YAAY,cAAc,EAAOJ,KAjV/B3P,EAqVnBwP,cAAgB,SAACrK,EAAQsK,GAAe,IAC5B3E,EAAM9K,EAAK4C,MAAXkI,EACAzC,EAAkBrI,EAAKoC,MAAvBiG,cAER,GAAIA,GAAiBlD,IAAWkD,EAActH,KAE2B,KADvDmP,YAAa/K,GAAQ,EAAM2F,IAAM,IACrCqF,oBAAoBC,QAAQX,EAAWY,eAC7C,OAAO,EAKf,OAAsE,KADvDH,YAAa/K,GAAQ,EAAO2F,IAAM,IACtCqF,oBAAoBC,QAAQX,EAAWY,iBAKsB,KADvDhG,YAAgBlF,IAAW,IAC/BgL,oBAAoBC,QAAQX,EAAWY,gBAtWrCrQ,EA6WnBsQ,eAAiB,WACbC,WAAW,WACHvQ,EAAKiP,UAAUrC,SACC5M,EAAKiP,UAAUrC,QAEvB4D,SAEb,MAjXHxQ,EAAKoC,MAAQ,CACTsH,QAAS,GACTrB,cAAe,MAGnBrI,EAAKiP,UAAYvL,IAAM+M,YACvBzQ,EAAK2M,WAAajJ,IAAM+M,YAExBzQ,EAAK6M,YAAc,IAAI1F,IAXRnH,mFAefG,KAAKuH,cAELvH,KAAKmQ,kDAsWA,IAAAI,EAAAvQ,KAAAwQ,EACkBxQ,KAAKyC,MAApBsC,EADHyL,EACGzL,QAAS4F,EADZ6F,EACY7F,EADZ8F,EAE4EzQ,KAAKiC,MAA9EsH,EAFHkH,EAEGlH,QAAS+F,EAFZmB,EAEYnB,WAAYJ,EAFxBuB,EAEwBvB,cAAehH,EAFvCuI,EAEuCvI,cAAeoC,EAFtDmG,EAEsDnG,kBAMrDrC,GAJcC,EACd,CAACA,EAActH,IAAI+D,OAAO4E,EAAQ4F,OAAO,SAAApO,GAAC,OAAIA,IAAMmH,EAActH,MAAKuO,OAAO,SAAApO,GAAC,OAAIqO,YAAgBrO,KACnGwI,GAEoBL,IAAI,SAAAnI,GAAC,OAC3BuD,EAAArB,EAAAC,cAACwN,EAAD,CACItM,IAAKrD,EACLiE,OAAQjE,EACRkE,SAAUsL,EAAK7D,YAAYvF,IAAIpG,GAC/BmE,SAAU,kBAAMqL,EAAKxC,sBAAsBhN,QAI7C4P,GAAczB,GAAiB,IAAIhG,IAAI,SAAAnI,GAAC,OAC1CuD,EAAArB,EAAAC,cAACwN,EAAD,CACItM,IAAKrD,EACLiE,OAAQjE,EACRkE,SAAUsL,EAAK7D,YAAYvF,IAAIpG,GAC/BmE,SAAU,kBAAMqL,EAAKxC,sBAAsBhN,QAInD,OACIuD,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACI4N,MAAI,EACJC,QAAS9Q,KAAKuK,YACdwG,kBAAgB,uBAChBC,mBAAiB,6BACjB7N,UAAW4B,EAAQkM,QACnB3M,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,wBAAwB+J,EAAE,gBAC1CrG,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAK8O,UACVlO,GAAG,wBACHwQ,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa3G,EAAE,UACf4G,UAAWvR,KAAKwO,oBAChBgD,QAASxR,KAAK4O,kBACd6C,QAASzR,KAAKuP,oBAElBjL,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,2BAC5CxB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBAAuB8E,GACrCqH,GACGhL,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQ2M,WAAY,+BAAgCf,IAGtF3Q,KAAK0M,YAAYW,KAAO,GACrB/I,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAKwM,WACV5L,GAAG,yBACHwQ,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa3G,EAAE,gBACf6G,QAASxR,KAAK6P,mBACd4B,QAASzR,KAAK8P,qBAGtBxL,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKuK,YAAakB,MAAM,WACpCd,EAAE,WAEN3K,KAAK0M,YAAYW,KAAO,GACrB/I,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKmM,WAAYV,MAAM,UAAUoG,WAAS,GACtDlH,EAAE,UAGT3K,KAAK0M,YAAYW,MAAQ/C,GACvBhG,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAK0K,eAAgBe,MAAM,WACvCd,EAAE,sBAhcHpH,IAAMC,YAqdnBsO,GANCC,YACZnM,IAleW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChB4L,MAAO,CACHuG,QAASpM,EAAMqM,QAAQC,KAAO,GAElClB,OAAQ,CACJxF,MAAO5F,EAAME,QAAQuG,KAAKtG,SAE9BoM,cAAe,CACXH,QAAS,EACTI,QAAS,OACTC,SAAU,YAEdZ,WAAY,CACRvL,WAAYN,EAAME,QAAQI,WAAWC,QAEtCmM,YAAY1M,KAmdI,CAAEQ,WAAW,IAChCmM,cACAC,eAGWX,CAAQxK,iPCpfjBoL,uBACF,SAAAA,EAAYjQ,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA0S,IACf7S,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA4S,GAAAvS,KAAAH,KAAMyC,KA0DVkQ,mBAAqB,SAAAnS,GAAU,IACnBoS,EAAW/S,EAAK4C,MAAhBmQ,OACFC,EAAOhK,KAAU/B,IAAI8L,GAEvBA,IAAWpS,EAAOoI,SAClB/I,EAAK6C,SAAS,CAAEoQ,OAAQC,aAAcF,GAAOG,SAAUC,aAAaJ,MAhEzD,IAGPD,EAAW/S,EAAK4C,MAAhBmQ,OACFC,EAAOhK,KAAU/B,IAAI8L,GAJZ,OAMf/S,EAAKoC,MAAQ,CACTiR,WAAYN,EACZE,OAAQC,aAAcF,GACtBG,SAAUC,aAAaJ,IATZhT,qFA4BGsT,EAAWC,GAAW,IAAAtO,EACd9E,KAAKyC,MAAvBmQ,EADgC9N,EAChC8N,OAAQ/M,EADwBf,EACxBe,MADwBgJ,EAEX7O,KAAKiC,MAA1B6Q,EAFgCjE,EAEhCiE,OAAQE,EAFwBnE,EAExBmE,SAEhB,OAAIG,EAAUtN,QAAUA,IAIpBsN,EAAUP,SAAWA,IAIrBQ,EAAUN,SAAWA,GAIrBM,EAAUJ,WAAaA,gDAQ3BnK,KAAUwK,GAAG,mBAAoBrT,KAAK2S,mEAItC9J,KAAUnH,eAAe,mBAAoB1B,KAAK2S,qDAY7C,IACG5N,EAAY/E,KAAKyC,MAAjBsC,QADH0L,EAEwBzQ,KAAKiC,MAA1B6Q,EAFHrC,EAEGqC,OAAQE,EAFXvC,EAEWuC,SAEhB,OACI1O,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,iBAAkBN,EAAQuO,mBAA3BxT,OAAAyT,GAAA,EAAAzT,CAAA,CACjB0T,eAAgBR,GACfjO,EAAQ0O,yBAA2BT,KAEvCF,sDAjEmBrQ,EAAOR,GACnC,GAAIQ,EAAMmQ,SAAW3Q,EAAMiR,WAAY,KAC3BN,EAAWnQ,EAAXmQ,OACFC,EAAOhK,KAAU/B,IAAI8L,GAE3B,MAAO,CACHM,WAAYN,EACZE,OAAQC,aAAcF,GACtBG,SAAUC,aAAaJ,IAI/B,OAAO,YA1BiBtP,IAAMC,YAqFvBoC,OA9FA,SAAAC,GAAK,MAAK,CACrByN,mBAAoB,CAChB7H,MAAO5F,EAAME,QAAQuG,KAAKoH,WAE9BD,yBAA0B,CACtBhI,MAAO5F,EAAME,QAAQC,QAAQ2N,KAAO,gBAyFV,CAAEtN,WAAW,GAAhCT,CAAwC8M,ICpDxCkB,sNApCXC,YAAc,WAAM,IAAA/O,EACajF,EAAK4C,MAA1BmQ,EADQ9N,EACR8N,OAAQ1N,EADAJ,EACAI,SACXA,GAELA,EAAS0N,yFARSO,EAAWC,GAC7B,OAAOD,EAAUP,SAAW5S,KAAKyC,MAAMmQ,wCAUlC,IACGA,EAAW5S,KAAKyC,MAAhBmQ,OACFC,EAAOhK,KAAU/B,IAAI8L,GAErBkB,EAAWC,aAAgBlB,GAEjC,OACIvO,EAAArB,EAAAC,cAAA,OAAKC,UAAU,OAAOoC,QAASvF,KAAK6T,aAChCvP,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBACXmB,EAAArB,EAAAC,cAAC8Q,GAAA,EAAD,CAAUpB,OAAQA,IAClBtO,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBAAgB2Q,IAEnCxP,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAC+Q,GAAD,CAAmBrB,OAAQA,eA3B7BrP,IAAMC,gDCW1B0Q,uBACF,SAAAA,EAAYzR,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAkU,IACfrU,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAoU,GAAA/T,KAAAH,KAAMyC,KA8DVkQ,mBAAqB,SAAAnS,GAAU,IACnBwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,GACAA,EAAKE,KAAV,CAEA,IAAIC,GAAiB,EACrB,OAAQH,EAAKE,KAAK,UACd,IAAK,qBACD,IAAME,EAAWC,KAAgBC,YAAYN,EAAKE,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAA7T,GAAC,OAAIA,EAAE6H,UAAYpI,EAAOoI,YAE3D0L,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACGH,EAAKE,KAAKzL,UAAYpI,EAAOoI,UAC7B0L,GAAiB,GASzBA,GACAzU,EAAKyU,eAAeH,KAnGTtU,EAuGnByU,eAAiB,SAAAH,GACbtU,EAAK6C,SAAS,CACVmS,SAAUC,YAA6BX,EAAKvT,IAC5CoS,SAAU+B,YAAkCZ,EAAKvT,OA1GtCf,EA8GnBmV,qBAAuB,SAAAxU,GAAU,IACrBwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,KAGDA,EAAKE,MACmB,oBAAvBF,EAAKE,KAAK,UAAyD,mBAAvBF,EAAKE,KAAK,UACvDF,EAAKE,KAAKzL,UAAYpI,EAAOoI,SAE7B/I,EAAKyU,eAAeH,KAxHTtU,EA4HnBoV,2BAA6B,SAAAzU,GAAU,IAC3BwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBlU,EAAOkU,gBAEpC7U,EAAKyU,eAAeH,IAtITtU,EA0InBqV,2BAA6B,SAAA1U,GAAU,IAC3BwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkB3U,EAAO2U,eAEnCtV,EAAKyU,eAAeH,IApJTtU,EAwJnBuV,mBAAqB,SAAA5U,GAAU,IACnBwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBlU,EAAO6U,YAAYzU,IAEhDf,EAAKyU,eAAeH,IAlKTtU,EAsKnByV,mBAAqB,SAAA9U,GAAU,IACnBwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkB3U,EAAO+U,WAAW3U,IAE9Cf,EAAKyU,eAAeH,IAhLT,IAGPnP,EAAWnF,EAAK4C,MAAhBuC,OAHO,OAKfnF,EAAKoC,MAAQ,CACTuT,WAAYxQ,EACZ6P,SAAUC,YAA6B9P,GACvCgO,SAAU+B,YAAkC/P,IARjCnF,qFA0BGsT,EAAWC,GAAW,IAChCpO,EAAWhF,KAAKyC,MAAhBuC,OADgC6J,EAET7O,KAAKiC,MAA5B4S,EAFgChG,EAEhCgG,SAAU7B,EAFsBnE,EAEtBmE,SAElB,OAAIG,EAAUnO,SAAWA,IAIrBoO,EAAUyB,WAAaA,GAIvBzB,EAAUJ,WAAaA,+CAQ3BnK,KAAUwK,GAAG,mBAAoBrT,KAAK2S,oBACtC6B,KAAgBnB,GAAG,mBAAoBrT,KAAKoV,oBAC5CK,KAAgBpC,GAAG,mBAAoBrT,KAAKsV,oBAC5CzM,KAAUwK,GAAG,qBAAsBrT,KAAKgV,sBACxCR,KAAgBnB,GAAG,2BAA4BrT,KAAKiV,4BACpDQ,KAAgBpC,GAAG,2BAA4BrT,KAAKkV,2EAIpDrM,KAAUnH,eAAe,mBAAoB1B,KAAK2S,oBAClD6B,KAAgB9S,eAAe,mBAAoB1B,KAAKoV,oBACxDK,KAAgB/T,eAAe,mBAAoB1B,KAAKsV,oBACxDzM,KAAUnH,eAAe,qBAAsB1B,KAAKgV,sBACpDR,KAAgB9S,eAAe,2BAA4B1B,KAAKiV,4BAChEQ,KAAgB/T,eAAe,2BAA4B1B,KAAKkV,6DAwH3D,IACGnQ,EAAY/E,KAAKyC,MAAjBsC,QADH0L,EAE0BzQ,KAAKiC,MAA5B4S,EAFHpE,EAEGoE,SAAU7B,EAFbvC,EAEauC,SAElB,OACI1O,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IACP,gBACA2N,EAAWjO,EAAQ2Q,qBAAuB3Q,EAAQ4Q,iBAErDd,sDAlLmBpS,EAAOR,GACnC,GAAIQ,EAAMuC,SAAW/C,EAAMuT,WAAY,KAC3BxQ,EAAWvC,EAAXuC,OAER,MAAO,CACHwQ,WAAYxQ,EACZ6P,SAAUC,YAA6B9P,GACvCgO,SAAU+B,YAAkC/P,IAIpD,OAAO,YAxBYzB,IAAMC,YAqMlBoC,OA9MA,SAAAC,GAAK,MAAK,CACrB8P,eAAgB,CACZlK,MAAO5F,EAAME,QAAQuG,KAAKoH,WAE9BgC,qBAAsB,CAClBjK,MAAO5F,EAAME,QAAQC,QAAQ2N,KAAO,gBAyMV,CAAEtN,WAAW,GAAhCT,CAAwCsO,IChNjD0B,uBACF,SAAAA,EAAYnT,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA4V,IACf/V,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA8V,GAAAzV,KAAAH,KAAMyC,KAaVoR,YAAc,WAAM,IAAA/O,EACajF,EAAK4C,MAA1BuC,EADQF,EACRE,OAAQE,EADAJ,EACAI,SACXA,GAELA,EAASF,IAlBMnF,qFAUGsT,EAAWC,GAC7B,OAAOD,EAAUnO,SAAWhF,KAAKyC,MAAMuC,wCAUlC,IAAAiG,EAC2DjL,KAAKyC,MAA7DuC,EADHiG,EACGjG,OAAQ6Q,EADX5K,EACW4K,aAAcC,EADzB7K,EACyB6K,WAAYC,EADrC9K,EACqC8K,kBAE1C,OACIzR,EAAArB,EAAAC,cAAA,OAAKC,UAAU,OAAOoC,QAASvF,KAAK6T,aAChCvP,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,EAAQE,SAAU2Q,EAAcE,kBAAmBA,IACrEzR,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBACXmB,EAAArB,EAAAC,cAAC8S,GAAA,EAAD,CAAahR,OAAQA,EAAQ+Q,kBAAmBA,KAEnDD,IAAeC,GACZzR,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAC+S,GAAD,CAAcjR,OAAQA,eAnC5BzB,IAAMC,YAqDhCoS,GAAYM,aAAe,CACvBH,mBAAmB,EACnBD,YAAY,GAGDF,+BC/CTO,uBACF,SAAAA,EAAY1T,GAAQ,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAmW,GAAArW,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAqW,GAAAhW,KAAAH,KACVyC,0EAGD,IAAAqC,EACwD9E,KAAKyC,MAA1DsC,EADHD,EACGC,QAASC,EADZF,EACYE,OAAQ2F,EADpB7F,EACoB6F,EAAGyL,EADvBtR,EACuBsR,WAAY7Q,EADnCT,EACmCS,QAASuL,EAD5ChM,EAC4CgM,QAE7CrG,EAAOE,EAAE,YAOb,OANI0L,YAAcrR,GACdyF,EAAOE,EAAE,QACF2L,YAActR,KACrByF,EAAOE,EAAE,gBAITrG,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACViT,GACG9R,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQwR,eAAgBhR,QAASuL,GACpDxM,EAAArB,EAAAC,cAACsT,GAAAvT,EAAD,OAGRqB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCAAoCoC,QAASA,GACxDjB,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAyBsH,KAE3C2L,GACE9R,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQ0R,gBAAiBlR,QAASuL,GACrDxM,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,eA3BQM,IAAMC,YAwCvBsO,GALCC,YACZS,cACA5M,IA9CW,CACX2Q,eAAgB,CACZG,OAAQ,qBAEZD,gBAAiB,CACbC,OAAQ,sBAyCO,CAAErQ,WAAW,IAGrByL,CAAQqE,2GCqCRQ,eAvFX,SAAAA,EAAYlU,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA2W,IACf9W,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA6W,GAAAxW,KAAAH,KAAMyC,KAyCVmU,iCAAmC,SAAApW,GAAU,IACjCwE,EAAWnF,EAAK4C,MAAhBuC,OACR,GAAKxE,EAAO2J,SACR3J,EAAO2J,UAAYnF,EAAvB,CAEA,IAAMmP,EAAOC,KAAUtN,IAAItG,EAAO2J,SAC7BgK,GAELtU,EAAK6C,SAAS,CAAEmU,QAASC,YAAY3C,OAlDtBtU,EAqDnBkX,kCAAoC,SAAAvW,GAAU,IAClCwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,EAEL,OAAQ3T,EAAOwW,MAAM,UACjB,IAAK,sCAC0B,uBAAvB7C,EAAKE,KAAK,UAA4D,uBAAvBF,EAAKE,KAAK,UACzDxU,EAAK6C,SAAS,CAAEmU,QAASC,YAAY3C,KAEzC,MAEJ,IAAK,wCAC0B,oBAAvBA,EAAKE,KAAK,UAAyD,mBAAvBF,EAAKE,KAAK,UACtDxU,EAAK6C,SAAS,CAAEmU,QAASC,YAAY3C,OAnElCtU,EA0EnBoX,2BAA6B,WACzBpX,EAAK6C,SAAS,CAAEmU,SAAUhX,EAAKoC,MAAM4U,UACrChX,EAAKqX,wCA5EUrX,EA+EnBsX,4BAA8B,WAAM,IACxBnS,EAAWnF,EAAK4C,MAAhBuC,OACA6R,EAAYhX,EAAKoC,MAAjB4U,QAERO,aAA+BpS,EAAQ6R,IAnFxB,IAGP7R,EAAWvC,EAAXuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACrB6R,EAAUC,YAAY3C,GALb,OAOftU,EAAKoC,MAAQ,CACTuT,WAAYxQ,EACZ6R,QAASA,GAGbhX,EAAKqX,qCAAuCG,aACxCxX,EAAKsX,4BACLG,KAdWzX,mFAiCfuU,KAAUf,GAAG,iCAAkCrT,KAAK4W,kCACpDzL,IAAiBkI,GAAG,kCAAmCrT,KAAK+W,kFAI5D3C,KAAU1S,eAAe,iCAAkC1B,KAAK4W,kCAChEzL,IAAiBzJ,eAAe,kCAAmC1B,KAAK+W,sFArB5CtU,EAAOR,GACnC,GAAIQ,EAAMuC,SAAW/C,EAAMuT,WAAY,KAC3BxQ,EAAWvC,EAAXuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACrB6R,EAAUC,YAAY3C,GAE5B,MAAO,CACHqB,WAAY/S,EAAMuC,OAClB6R,QAASA,GAGjB,OAAO,YA9BoBtT,IAAMC,WCYnC+T,eACF,SAAAA,EAAY9U,GAAQ,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAuX,GAAAzX,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAyX,GAAApX,KAAAH,KACVyC,0EAGD,IAAAqC,EACkB9E,KAAKyC,MAApBsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EACTkM,EAAY7W,KAAKiC,MAAjB4U,QAER,OACIvS,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAKiX,4BACxD3S,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KAAgB4T,EAAwCvS,EAAArB,EAAAC,cAAC0U,GAAA3U,EAAD,MAA9BqB,EAAArB,EAAAC,cAAC2U,GAAA5U,EAAD,OAC1BqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAC/BtN,EAAE,oBAIfrG,EAAArB,EAAAC,cAACgV,GAAAjV,EAAD,KACIqB,EAAArB,EAAAC,cAACiV,GAAAlV,EAAD,CAAQwI,MAAM,UAAU2M,SAAUpY,KAAKiX,2BAA4BoB,SAAUxB,aApB7DF,IAgCrB7E,GALCC,YACZS,cACA5M,IAnCW,CACX8R,SAAU,CACNzF,QAAS,cAiCM,CAAE5L,WAAW,IAGrByL,CAAQyF,wFC3BjBe,eACF,SAAAA,EAAY7V,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAsY,IACfzY,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAwY,GAAAnY,KAAAH,KAAMyC,KAoBV8V,gBAAkB,WACd1Y,EAAK6C,SAAS,CAAE8V,UAAW3Y,EAAKoC,MAAMuW,YAtBvB3Y,EAyBnB4Y,kBAAoB,WAChB,IAAMC,EAAgBvN,IAAiBwN,YAC/B3T,EAAWnF,EAAK4C,MAAhBuC,OACJ0T,IAAkB1T,GAGlBzD,KAAgBqX,UAAU5T,IA/BfnF,EAmCnBgZ,YAAc,WAAM,IACR7T,EAAWnF,EAAKoC,MAAhB+C,OAEFmP,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,GACAA,EAAKE,KAAV,CALgB,IAORzL,EAAYuL,EAAKE,KAAjBzL,QACHA,GAELrH,KAAgBc,KAAK,CACjBC,QAASwW,aAAclQ,GAAW,cAAgB,YAClDA,QAASA,MA/CE,IAGP5D,EAAWnF,EAAK4C,MAAhBuC,OAHO,OAIfnF,EAAKoC,MAAQ,CACTuT,WAAYxQ,EACZwT,UAAU,GANC3Y,wEAmDV,IAAAiF,EAC0B9E,KAAKyC,MAA5BkI,EADH7F,EACG6F,EAAG3F,EADNF,EACME,OAAQD,EADdD,EACcC,QACXyT,EAAaxY,KAAKiC,MAAlBuW,SAEFrE,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,OAAO,KAElB,IAAM4E,EAAUC,YAAYhU,GACxBiU,GAAY,GACXF,GAAW5E,EAAKE,OACjB4E,EAAYH,aAAc3E,EAAKE,KAAKzL,UAExC,IAAMsQ,EAAWC,YAAanU,GACxBoU,EAAY9C,YAActR,GAEhC,OACIV,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAKuY,iBACxDjU,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACoW,GAAArW,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAC/BtN,EAAE,WAId6N,EAAWlU,EAAArB,EAAAC,cAACqW,GAAAtW,EAAD,MAAiBqB,EAAArB,EAAAC,cAACsW,GAAAvW,EAAD,OAEjCqB,EAAArB,EAAAC,cAACuW,GAAAxW,EAAD,CAAUyW,GAAIlB,EAAUmB,QAAQ,OAAOC,eAAa,GAChDtV,EAAArB,EAAAC,cAAC2W,GAAA5W,EAAD,CAAM6W,UAAU,MAAMC,gBAAc,IAC9BhB,GACEzU,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAKyY,mBACxDnU,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+W,OAAK,EACLhU,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAC/BtN,EAAE,mBAKnBrG,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAK6Y,aACxDvU,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+W,OAAK,EACLhU,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAM,YAAYuM,QAAQ,UAAUC,QAAM,GACrCtN,EAAZsO,EAAc,UAAe,qBAOrDF,GAAWG,GACR5U,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,UAChCpT,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+W,OAAK,EACLhU,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAM,YAAYuM,QAAQ,UAAUC,QAAM,GACrCtN,EAAZyO,EAAc,eAAoB,kBAMtDL,IAAYG,GACT5U,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,UAChCpT,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+W,OAAK,EACLhU,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAM,YAAYuM,QAAQ,UAAUC,QAAM,GACjDtN,EAAE,wEAnHXlI,EAAOR,GACnC,OAAIQ,EAAMuC,SAAW/C,EAAMuT,WAChB,CACHA,WAAY/S,EAAMuC,OAClBwT,UAAU,GAIX,YAnBYjV,IAAMC,WAgJlBsO,GALCC,YACZS,cACA5M,IAnJW,CACX8R,SAAU,CACNzF,QAAS,cAiJM,CAAE5L,WAAW,IAGrByL,CAAQwG,aCtGjB2B,uBACF,SAAAA,EAAYxX,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAia,IACfpa,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAma,GAAA9Z,KAAAH,KAAMyC,KA4FVwS,2BAA6B,SAAAzU,GACzB,IAAM2T,EAAOC,KAAUtN,IAAIjH,EAAK4C,MAAMuC,QACjCmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBlU,EAAOkU,iBAEpC7U,EAAKqa,mBAELra,EAAKuO,gBAxGMvO,EA4GnBqV,2BAA6B,SAAA1U,GACzB,IAAM2T,EAAOC,KAAUtN,IAAIjH,EAAK4C,MAAMuC,QACjCmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkB3U,EAAO2U,eAEnCtV,EAAKuO,eArHMvO,EAyHnBmV,qBAAuB,SAAAxU,GACnB,IAAM2T,EAAOC,KAAUtN,IAAIjH,EAAK4C,MAAMuC,QACjCmP,KAGDA,EAAKE,MACmB,oBAAvBF,EAAKE,KAAK,UAAyD,mBAAvBF,EAAKE,KAAK,UACvDF,EAAKE,KAAKzL,UAAYpI,EAAOoI,SAE7B/I,EAAKuO,gBAlIMvO,EAsInB8S,mBAAqB,SAAAnS,GACbX,EAAK8U,QAAQxN,IAAI3G,EAAOoI,UACxB/I,EAAKuO,eAxIMvO,EA4InBqa,iBAAmB,WACfra,EAAK4U,cAEL5U,EAAKsa,oBAELta,EAAKua,oBAjJUva,EAoJnBua,iBAAmB,WAAM,IACbpV,EAAWnF,EAAK4C,MAAhBuC,OAEFrF,EAAQ8J,KAAUC,WAExBC,YAAiBhK,EAAO,CAACqF,IACzB,IAAM2P,EAAU0F,YAAoBrV,GAAQkE,IAAI,SAAAnI,GAAC,OAAIA,EAAE6H,UACvD0R,YAAiB3a,EAAOgV,IA3JT9U,EA8JnB4U,YAAc,WAAM,IACRzP,EAAWnF,EAAK4C,MAAhBuC,OAERuV,YAAgBvV,IAjKDnF,EAoKnBsa,kBApKmBra,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAoKC,SAAAC,IAAA,IAAA3C,EAAAxC,EAAA,OAAAiF,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACRtD,EAAWnF,EAAK4C,MAAhBuC,QAEQgU,YAAYhU,GAHZ,CAAAoD,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,qBAMHwQ,YAASxV,GANN,CAAAoD,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBAAA5B,EAAAE,KAAA,EASK/G,KAAgBc,KAAK,CACtCC,QAAS,oBACTsG,QAAS6R,YAAczV,GACvByD,eAAgB,EAChBC,MAAO,IAbK,OASVlG,EATU4F,EAAAiB,KAgBhBxJ,EAAK6C,SAAS,CAAEgY,kBAAmBlY,EAAOgH,SAAS7C,OAAS,IAhB5C,yBAAAyB,EAAAwB,SAAAjC,MApKD9H,EAuLnB8a,mBAAqB,WAAM,IAAA7V,EACDjF,EAAK4C,MAAnBkI,EADe7F,EACf6F,EAAG3F,EADYF,EACZE,OACL4V,EAAW1Q,YAAgBlF,GACjC,GAAK4V,EAAL,CAEA,IAAMC,EAAoBhU,IAAYC,IAAI,YACpCgU,EAAeD,EAAoBA,EAAkBxW,MAAQ,wBAEnEyG,IAAKgQ,EAAeF,GAEpB,IAAMxW,EAAG,GAAAO,OAAMK,EAAN,kBACH6F,EAAUF,EAAE,cAGlB9K,EAAKkL,sBAAsB3G,EAAKyG,EAFjB,QAnMAhL,EAwMnBkL,sBAAwB,SAAC3G,EAAKyG,EAASG,GACnC,GAAK5G,EAAL,CAD8C,IAAA6G,EAGTpL,EAAK4C,MAAlCyI,EAHsCD,EAGtCC,gBAAiBnG,EAHqBkG,EAGrBlG,QACzB,GAAKmG,EAAL,CAIIC,IAAiBC,mBAAmBhH,EAAKiH,IAAqC,IAAsBL,IAEpGE,EAAgBL,EAAS,CACrBS,iBAAkBD,IAClBL,OAAQ,CACJ1G,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACImB,IAAI,QACJoH,aAAW,QACXC,MAAM,UACNtI,UAAW4B,EAAQ2G,MACnBnG,QAAS,kBAAM4F,IAAiBQ,sBAAsBvH,KACtDE,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,aA3NDpD,EAkOnBkb,gBAAkB,WAAM,IAAA3O,EACEvM,EAAK4C,MAAnBkI,EADYyB,EACZzB,EAAG3F,EADSoH,EACTpH,OACLgW,EAAcC,YAAmBjW,GACvC,GAAKgW,EAAL,CAEAlQ,IAAKoQ,aAAkBF,IAEvB,IAAM5W,EAAG,GAAAO,OAAMK,EAAN,eACH6F,EAAUF,EAAE,eAGlB9K,EAAKkL,sBAAsB3G,EAAKyG,EAFjB,QA3OAhL,EAgPnBsb,kBAAoB,WAChBtb,EAAKub,mBAAmB3O,QAAQ4O,UAAY,GAjP7Bxb,EAoPnByb,iBAAmB,WAAM,IAAA9K,EACK3Q,EAAK4C,MAAvBuC,EADawL,EACbxL,OAAQuW,EADK/K,EACL+K,MACVpH,EAAOC,KAAUtN,IAAI9B,GACtBmP,GACAA,EAAKlI,QAEVuP,aAA6B,CAAExW,OAAQA,IAEnCuW,GACAha,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACT0C,OAAQ,MA/PDnF,EAoQnB4b,eAAiB,WAAM,IAAAC,EACO7b,EAAK4C,MAAvBuC,EADW0W,EACX1W,OAAQuW,EADGG,EACHH,MAEhBI,aAAS3W,EAAQ,MAAM,GAEnBuW,GACAha,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACT0C,OAAQ,KA5QDnF,EAiRnB+b,eAAiB,SAAAhJ,GACbiJ,aAASjJ,GAAQ,IAlRF/S,EAqRnBic,iBAAmB,WACf,OAAKjc,EAAKub,mBAEHvb,EAAKub,mBAAmB3O,QAAQsP,aAFF,GAnRrClc,EAAKub,mBAAqB7X,IAAM+M,YAHjB,IAKPtL,EAAWnF,EAAK4C,MAAhBuC,OALO,OAOfnF,EAAK8U,QAAU,IAAI3N,IACnBnH,EAAKoC,MAAQ,CACTuT,WAAYxQ,EACZ0V,mBAAmB,GAVR7a,uFAyBKgD,EAAWC,GAAW,IAClCkC,EAAWhF,KAAKyC,MAAhBuC,OAEFgX,EAAOhc,KAAKob,mBAAmB3O,QAC7B4O,EAA0CW,EAA1CX,UAAWY,EAA+BD,EAA/BC,aAAcC,EAAiBF,EAAjBE,aAC3BnZ,EAAW,CACbsY,UAAWA,EACXY,aAAcA,EACdC,aAAcA,GAOlB,OAJAhO,QAAQC,IAAR,gDAAAxJ,OACoDK,EADpD,eAAAL,OACwE0W,EADxE,kBAAA1W,OACkGsX,EADlG,kBAAAtX,OAC+HuX,IAGxHnZ,gDAGWoQ,EAAWC,GAAW,IAAA+I,EACdnc,KAAKyC,MAAvBuC,EADgCmX,EAChCnX,OAAQa,EADwBsW,EACxBtW,MACR6U,EAAsB1a,KAAKiC,MAA3ByY,kBAER,OAAIvH,EAAUnO,SAAWA,IAIrBmO,EAAUtN,QAAUA,GAIpBuN,EAAUsH,oBAAsBA,8CAOrB7X,EAAWC,EAAWC,GAAU,IACvCiC,EAAWhF,KAAKyC,MAAhBuC,OACJnC,EAAUmC,SAAWA,GACrBhF,KAAKka,mBAGT,IAAM8B,EAAOhc,KAAKob,mBAAmB3O,QAC7B4O,EAA0CtY,EAA1CsY,UAAWY,EAA+BlZ,EAA/BkZ,aAA+BlZ,EAAjBmZ,aAC7BrZ,EAAUmC,SAAWA,EACrBgX,EAAKX,UAAYA,GAAaW,EAAKC,aAAeA,GAElDD,EAAKX,UAAY,8CAKrBrb,KAAKka,mBAELrR,KAAUwK,GAAG,mBAAoBrT,KAAK2S,oBACtC9J,KAAUwK,GAAG,qBAAsBrT,KAAKgV,sBACxCR,KAAgBnB,GAAG,2BAA4BrT,KAAKiV,4BACpDQ,KAAgBpC,GAAG,2BAA4BrT,KAAKkV,2EAIpDrM,KAAUnH,eAAe,mBAAoB1B,KAAK2S,oBAClD9J,KAAUnH,eAAe,qBAAsB1B,KAAKgV,sBACpDR,KAAgB9S,eAAe,2BAA4B1B,KAAKiV,4BAChEQ,KAAgB/T,eAAe,2BAA4B1B,KAAKkV,6DAiM3D,IAAA3E,EAAAvQ,KAAAoc,EAWDpc,KAAKyC,MATLkI,EAFCyR,EAEDzR,EACAxH,EAHCiZ,EAGDjZ,UACA6B,EAJCoX,EAIDpX,OACAD,EALCqX,EAKDrX,QACAsX,EANCD,EAMDC,kBACAC,EAPCF,EAODE,qBACAf,EARCa,EAQDb,MACAnF,EATCgG,EASDhG,WACAtF,EAVCsL,EAUDtL,QAEI4J,EAAsB1a,KAAKiC,MAA3ByY,kBAEFvG,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EACD,OACI7P,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBACXmB,EAAArB,EAAAC,cAACqZ,GAAD,CAAmBzL,QAASA,IAC5BxM,EAAArB,EAAAC,cAAA,OAAKiO,IAAKnR,KAAKob,mBAAoBjY,UAAU,uBAKzD,IAAMyX,EAAW1Q,YAAgBlF,GAC3BgW,EAAcC,YAAmBjW,GACjCwX,EAAMC,YAAWzX,GACjB+T,EAAUC,YAAYhU,GACtB0X,EAAOlC,YAASxV,GAEhB2P,EAAU0F,YAAoBrV,GAC9B2X,EAAQ,GACd3c,KAAK2U,QAAU,IAAI3N,IACnB2N,EAAQhI,QAAQ,SAAAiQ,GACZ,IAAM/J,EAAOhK,KAAU/B,IAAI8V,EAAOhU,SAC9BiK,IACAtC,EAAKoE,QAAQ1G,IAAI4E,EAAKjS,GAAIiS,EAAKjS,IAC/B+b,EAAMhU,KAAKkK,MAInB,IAGMgK,EAHcF,EAAMG,KAAK,SAAC/b,EAAGgc,GAC/B,OAAOC,aAAmBD,GAAKC,aAAmBjc,KAE5BmI,IAAI,SAAA2J,GAAI,OAC9BvO,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUtT,IAAKyO,EAAKjS,IACpD0D,EAAArB,EAAAC,cAAC+Z,GAAD,CAAarK,OAAQC,EAAKjS,GAAIsE,SAAUqL,EAAKqL,oBAI7C3P,EAAUkI,EAAVlI,MAEFD,EACF1H,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACqZ,GAAD,CACIvX,OAAQA,EACRoR,WAAYA,EACZtF,QAASA,EACTvL,QAASvF,KAAKmb,oBAElB7W,EAAArB,EAAAC,cAAA,OAAKiO,IAAKnR,KAAKob,mBAAoBjY,UAAU,qBACzCmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,qBACXmB,EAAArB,EAAAC,cAACga,GAAD,CACIlY,OAAQA,EACR8Q,WAAYyF,EACZxF,mBAAoBwF,EACpB1F,aAAc5J,EAAQjM,KAAKsb,iBAAmB,SAGpDV,GAAYI,GAAewB,IACzBlY,EAAArB,EAAAC,cAAC2W,GAAA5W,EAAD,KACK2X,GACGtW,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAK2a,oBACxDrW,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACia,GAAAla,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAC/B2C,MAMpBI,GACG1W,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAK+a,iBACxDzW,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACka,GAAAna,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAC/BiD,aAAkBF,QAO1CwB,GACGlY,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUE,UAAW4B,EAAQ2S,UACzBpT,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACma,GAAApa,EAAD,CAAkBE,UAAU,4BAEhCmB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QAASwW,EACTc,MAAO,CAAEC,WAAY,WAAYC,SAAU,kBAM/DlZ,EAAArB,EAAAC,cAACua,GAAAxa,EAAD,MACAqB,EAAArB,EAAAC,cAAC2W,GAAA5W,EAAD,MACMyZ,GAAQpY,EAAArB,EAAAC,cAACwa,GAAD,CAAuB1Y,OAAQA,IACxC+T,GAAWzU,EAAArB,EAAAC,cAACya,GAAD,CAAc3Y,OAAQA,IACjCuW,IAAUxC,GACPzU,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAKyb,gBACxDnX,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+W,OAAK,EACLhU,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAM,UAAUuM,QAAQ,UAAUC,QAAM,GAC/CtN,EAAE,eAAeiT,oBAOxClB,GAAQpY,EAAArB,EAAAC,cAACua,GAAAxa,EAAD,MACVqB,EAAArB,EAAAC,cAAC2W,GAAA5W,EAAD,KACIqB,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACoG,UAAQ,EAAC1a,UAAW4B,EAAQ2S,SAAUnS,QAAS8W,GAC5D/X,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAAC4a,GAAA7a,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAC/BtN,EAAE,mBAKlB+P,GACGpW,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAAS+W,GACnDhY,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+W,OAAK,EACLhU,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAC/BtN,EAAE,uBAO1BkS,EAAMlW,OAAS,GACZrC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACua,GAAAxa,EAAD,MACAqB,EAAArB,EAAAC,cAAC2W,GAAA5W,EAAD,KAAO4Z,MAO3B,OAAOtB,EAAQjX,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KAAGrN,GAAc1H,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,eAAgBlC,IAAa6I,sDArb5DvJ,EAAOR,GACnC,OAAIQ,EAAMuC,SAAW/C,EAAMuT,WAChB,CACHA,WAAY/S,EAAMuC,OAClB0V,mBAAmB,GAIpB,YAvBWnX,IAAMC,YAwdjBsO,GARCC,YACZgM,cACAvL,cACA5M,IAleW,SAAAC,GAAK,MAAK,CACrBmY,gBAAiB,CACbtH,OAAQ,qBAEZuH,OAAQ,GAGRvS,MAAO,CACHuG,QAASpM,EAAMqM,QAAQC,KAAO,GAElCuF,SAAU,CACNzF,QAAS,eAudM,CAAE5L,WAAW,IAChCoM,eACAyL,cAGWpM,CAAQmI,IC9gBjBkE,uBACF,SAAAA,EAAY1b,GAAQ,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAme,GAAAre,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAqe,GAAAhe,KAAAH,KACVyC,0EAGD,IAAAqC,EACwB9E,KAAKyC,MAA1BsC,EADHD,EACGC,QAAS+L,EADZhM,EACYgM,QAEjB,OACIxM,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACXmB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQqZ,eAAgB7Y,QAASuL,GACpDxM,EAAArB,EAAAC,cAACsT,GAAAvT,EAAD,OAEJqB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,qCACXmB,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAhB,6BAdeI,IAAMC,YAyB1BoC,OA/BA,CACXwY,eAAgB,CACZ1H,OAAQ,sBA6BD9Q,CAAmBuY,IC1B5BE,uBACF,SAAAA,EAAY5b,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAqe,IACfxe,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAue,GAAAle,KAAAH,KAAMyC,KA0BV6b,aAAe,SAAAtZ,GAAU,IACbuW,EAAU1b,EAAK4C,MAAf8Y,MAERI,aAAS3W,GAELuW,GACAha,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACT0C,OAAQ,KAhChBnF,EAAKoC,MAAQ,CACTsH,QAAS,IAJE1J,mFAQC,IAAA0Q,EAAAvQ,KACRgF,EAAWhF,KAAKyC,MAAhBuC,OAEF4N,EAAS6H,YAAczV,GACxB4N,GAELrR,KAAgBc,KAAK,CACjBC,QAAS,oBACTsG,QAASgK,EACTnK,eAAgB,EAChBC,MAAO,MACRnG,KAAK,SAAAC,GACJ,IAAM7C,EAAQ8J,KAAUC,WACxBC,YAAiBhK,EAAO6C,EAAOgH,UAE/B+G,EAAK7N,SAAS,CAAE6G,QAAS/G,EAAOgH,8CAiB/B,IAAA+U,EAAAve,KAAA8E,EACiC9E,KAAKyC,MAAnC+b,EADH1Z,EACG0Z,UAAW1N,EADdhM,EACcgM,QAASyK,EADvBzW,EACuByW,MAGtBtT,EAFcjI,KAAKiC,MAAjBsH,QAEcL,IAAI,SAAAnI,GAAC,OACvBuD,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACrT,IAAKrD,GAClBuD,EAAArB,EAAAC,cAACga,GAAD,CAAalY,OAAQjE,EAAGmE,SAAUqZ,EAAKD,kBAIzCtS,EACF1H,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACub,GAAD,CAAsB3N,QAASA,IAC/BxM,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBma,MAAO,CAAEkB,cAC3CvW,IAKb,OAAOsT,EAAQjX,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KAAGrN,GAAc1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oBAAoB6I,UA5D9CzI,IAAMC,YAuEnC6a,GAAenI,aAAe,CAC1BqF,OAAO,EACPiD,UAAW,GAGAH,oDC5ETK,uBACF,SAAAA,EAAYjc,GAAQ,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA0e,GAAA5e,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA4e,GAAAve,KAAAH,KACVyC,0EAGD,IAAAqC,EACsB9E,KAAKyC,MAAxBsC,EADHD,EACGC,QAAS2G,EADZ5G,EACY4G,MAEjB,OACIpH,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACXmB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQqZ,eAAgB7Y,QAASmG,GACpDpH,EAAArB,EAAAC,cAACsT,GAAAvT,EAAD,OAEJqB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,qCACXmB,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAhB,yBAdmBI,IAAMC,YAqB9BoC,OA3BA,CACXwY,eAAgB,CACZ1H,OAAQ,sBAyBD9Q,CAAmB8Y,ICzB5BC,sNACF1c,MAAQ,CACJoC,MAAO,KAGXua,aAAe,SAACnQ,EAAOpK,GACnBxE,EAAK6C,SAAS,CAAE2B,mFAGX,IAAAS,EACsB9E,KAAKyC,MAAxBqO,EADHhM,EACGgM,QAASyK,EADZzW,EACYyW,MACTlX,EAAUrE,KAAKiC,MAAfoC,MAEF2H,EACF1H,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAC2b,GAAD,CAA0BnT,MAAOoF,IACjCxM,EAAArB,EAAAC,cAAC4b,GAAA7b,EAAD,CACIoB,MAAOA,EACP+T,SAAUpY,KAAK4e,aACfG,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdC,WAAS,GACT7a,EAAArB,EAAAC,cAACkc,GAAAnc,EAAD,CAAKoc,MAAM,QAAQ/B,MAAO,CAAEgC,SAAU,UACtChb,EAAArB,EAAAC,cAACkc,GAAAnc,EAAD,CAAKoc,MAAM,OAAO/B,MAAO,CAAEgC,SAAU,UACrChb,EAAArB,EAAAC,cAACkc,GAAAnc,EAAD,CAAKoc,MAAM,QAAQ/B,MAAO,CAAEgC,SAAU,UACtChb,EAAArB,EAAAC,cAACkc,GAAAnc,EAAD,CAAKoc,MAAM,QAAQ/B,MAAO,CAAEgC,SAAU,YAKlD,OAAO/D,EAAQjX,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KAAGrN,GAAc1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBAAgB6I,UAhC7CzI,IAAMC,YA2ChCmb,GAAYzI,aAAe,CACvBqF,OAAO,EACPiD,UAAW,GAGAG,UCrCTY,uBACF,SAAAA,EAAY9c,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAuf,IACf1f,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAyf,GAAApf,KAAAH,KAAMyC,KAmBV+c,qBAAuB,SAAAhf,GACDX,EAAK4C,MAAf8Y,OAGR1b,EAAK6C,SAAS,CACVsC,OAAQxE,EAAOif,WACfC,WAAY,KACZC,iBAAiB,EACjBC,oBAAoB,KA5BT/f,EAgCnBggB,sBAAwB,WACpBhgB,EAAK6C,SAAS,CAAEid,iBAAiB,KAjClB9f,EAoCnBigB,uBAAyB,WACrBjgB,EAAK6C,SAAS,CAAEid,iBAAiB,KArClB9f,EAwCnBkgB,yBAA2B,SAAAxS,GACvBW,QAAQC,IAAI,oCAAqCZ,GACjD1N,EAAK6C,SAAS,CAAEkd,oBAAoB,KA1CrB/f,EA6CnBmgB,0BAA4B,WACxBngB,EAAK6C,SAAS,CAAEkd,oBAAoB,KA9CrB/f,EAiDnBogB,uBAAyB,WAAM,IACnB1E,EAAU1b,EAAK4C,MAAf8Y,MACe1b,EAAKoC,MAApByd,WAEJ7f,EAAK6C,SAAS,CAAEgd,WAAY,OACrBnE,EACPha,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACT0C,OAAQ,IAGZmG,IAAiB+U,6BAA4B,IA5DlCrgB,EAgEnBsgB,iBAhEmB,eAAAC,EAAAtgB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAgEA,SAAAC,EAAMkL,GAAN,IAAAsB,EAAA,OAAA1M,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVuK,EADU,CAAAzK,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBAAA5B,EAAAE,KAAA,EAGE/G,KAAgBc,KAAK,CAClCC,QAAS,oBACTsG,QAASiK,EAAKjS,GACdmI,OAAO,IANI,UAGXoL,EAHW/L,EAAAiB,KASf8K,EAAOC,KAAUtN,IAAIqN,EAAKvT,KAAOuT,EATlB,CAAA/L,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,iBAYfnK,EAAK6C,SAAS,CAAEgd,WAAYvL,EAAKvT,KAZlB,wBAAAwH,EAAAwB,SAAAjC,MAhEA,gBAAA0Y,GAAA,OAAAD,EAAApc,MAAAhE,KAAAiE,YAAA,GAGfpE,EAAKygB,WAAa/c,IAAM+M,YAHT,IAKPiL,EAAU9Y,EAAV8Y,MALO,OAOf1b,EAAKoC,MAAQ,CACT+C,OAAQuW,EAAQpQ,IAAiBoV,aAAepV,IAAiBnG,QARtDnF,mFAafsL,IAAiBkI,GAAG,qBAAsBrT,KAAKwf,qEAI/CrU,IAAiBzJ,eAAe,qBAAsB1B,KAAKwf,uDA8DtD,IAAA1a,EACiC9E,KAAKyC,MAAnCsC,EADHD,EACGC,QAAS5B,EADZ2B,EACY3B,UAAWoY,EADvBzW,EACuByW,MADvB1M,EAE+D7O,KAAKiC,MAAjE+C,EAFH6J,EAEG7J,OAAQ0a,EAFX7Q,EAEW6Q,WAAYC,EAFvB9Q,EAEuB8Q,gBAAiBC,EAFxC/Q,EAEwC+Q,mBACvClH,EAAgB1T,GAAU0a,EAC1BlB,EAAYxe,KAAKsgB,YAActgB,KAAKsgB,WAAW7T,QAAUzM,KAAKsgB,WAAW7T,QAAQqP,mBAAqB,EAExG9P,EAAU,KAiCd,OA/BIA,EADA2T,EAEIrb,EAAArB,EAAAC,cAACsd,GAAD,CACIxb,OAAQ0T,EACR6C,MAAOA,EACPiD,UAAWA,EACX1N,QAAS9Q,KAAK8f,yBAGfF,EAEHtb,EAAArB,EAAAC,cAACud,GAAD,CACIzb,OAAQ0T,EACR6C,MAAOA,EACPiD,UAAWA,EACX1N,QAAS9Q,KAAKggB,4BAKlB1b,EAAArB,EAAAC,cAACwd,GAAD,CACIvP,IAAKnR,KAAKsgB,WACVtb,OAAQ0T,EACR6C,MAAOA,EACPnF,WAAYsJ,IAAe1a,EAC3BqX,kBAAmBrc,KAAK6f,sBACxBvD,qBAAsBtc,KAAK+f,yBAC3BjP,QAAS9Q,KAAKigB,yBAKnB1E,EACHjX,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KAAGrN,GAEH1H,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,CAAE6a,gBAAiBpF,GAASpY,IAAa6I,UA1H9EzI,IAAMC,YAqI7B+b,GAASrJ,aAAe,CACpB/S,UAAW,KACX4B,QAAS,KACTwW,OAAO,GAGI3V,WAAW2M,IAAX3M,CAAwB2Z,aC9IjCqB,4LACO,IAAA9b,EACoD9E,KAAKyC,MAA7CuC,GADZF,EACGC,QADHD,EACYE,QAAQE,EADpBJ,EACoBI,SAAU6Q,EAD9BjR,EAC8BiR,kBAE7B5Q,EAAaC,YAAkBJ,EAAQ+Q,GAE7C,OACIzR,EAAArB,EAAAC,cAAA,OAAKC,UAAU,YACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,EAAQE,SAAUA,EAAU6Q,kBAAmBA,EAAmB8K,YAAU,IAC9Fvc,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBgC,WAT3B5B,IAAMud,gBAqB5BF,GAAQ1K,aAAe,CACnBH,mBAAmB,GAGRnQ,WAlCA,CACXmb,eAAgB,CACZzO,SAAU,WACV0O,MAAO,EACPC,OAAQ,EACRC,OAAQ,IA6BDtb,CAAmBgb,IC3B5BO,4LACO,IAAArc,EACgC9E,KAAKyC,MAAlCuC,EADHF,EACGE,OAAQO,EADXT,EACWS,QAASR,EADpBD,EACoBC,QAEzB,OACIT,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASA,GACnDjB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,IAClBV,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBACXmB,EAAArB,EAAAC,cAAC8S,GAAA,EAAD,CAAahR,OAAQA,gBAXrBzB,IAAMud,gBA0BvBlb,OAhCA,CACX8R,SAAU,CACNzF,QAAS,IA8BFrM,CAAmBub,ICV5BC,uBACF,SAAAA,EAAY3e,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAohB,IACfvhB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAshB,GAAAjhB,KAAAH,KAAMyC,KAkCV+c,qBAAuB,SAAAhf,GAAU,IACrBif,EAA+Bjf,EAA/Bif,WAAY4B,EAAmB7gB,EAAnB6gB,eAEpBxhB,EAAK6C,SAAS,CACV+c,WAAYA,EACZ4B,eAAgBA,KArCpBxhB,EAAKoC,MAAQ,CACTwd,WAAYtU,IAAiBwN,YAC7B0I,eAAgB,MALLxhB,qFASGsT,EAAWC,GAAW,IAAAtO,EACd9E,KAAKyC,MAAvBuC,EADgCF,EAChCE,OAAQa,EADwBf,EACxBe,MAEhB,OAAIuN,EAAUqM,aAAeza,IAIzBoO,EAAUiO,iBAAmBrc,GAI7BmO,EAAUtN,QAAUA,+CAQxBsF,IAAiBkI,GAAG,qBAAsBrT,KAAKwf,qEAI/CrU,IAAiBzJ,eAAe,qBAAsB1B,KAAKwf,uDAYtD,IAAA8B,EAAArW,EACgCjL,KAAKyC,MAAlCuC,EADHiG,EACGjG,OAAQO,EADX0F,EACW1F,QAASR,EADpBkG,EACoBlG,QACnBwc,EAAiBvhB,KAAKiC,MAAMwd,WAE5B7E,EAAW1Q,YAAgBlF,GAC3Bwc,EAAeC,YAAyBzc,GAC1C0c,EAAoB,GAKxB,OAJIF,EAAe,IACfE,EAAqC,IAAjBF,EAAqB,iBAArB,KAAA7c,OAA6C6c,EAA7C,iBAIpBld,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAAC1S,QAAS,CAAE4c,KAAM5c,EAAQ2S,UAAYnS,QAASA,GAC3DjB,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,qBAADic,EAAA,GAAAxhB,OAAAyT,GAAA,EAAAzT,CAAAwhB,EAChBvc,EAAQ6c,sBAAwB5c,IAAWuc,GAD3BzhB,OAAAyT,GAAA,EAAAzT,CAAAwhB,EAEjB,oBAAqBtc,IAAWuc,GAFfD,KAIrBhd,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,IAClBV,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBACXmB,EAAArB,EAAAC,cAAC8S,GAAA,EAAD,CAAahR,OAAQA,EAAQD,QAAS,CAAE8c,aAAc9c,EAAQ8c,iBAElEvd,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,iBAAkBN,EAAQ+c,0BAArD,IACMlH,EACD8G,cAvEHne,IAAMC,YAsFrBoC,OAzGA,SAAAC,GAAK,MAAK,CACrB6R,SAAU,CACNzF,QAAS,GAEb4P,aAAc,CACVpW,MAAO5F,EAAME,QAAQC,QAAQC,MAEjC2b,sBAAuB,CACnBnW,MAAO,OACPsW,gBAAiBlc,EAAME,QAAQC,QAAQC,KACvC+b,kBAAmB,CACfvW,MAAO,SAGfqW,wBAAyB,CACrBrW,MAAO5F,EAAME,QAAQuG,KAAKoH,aA0FA,CAAErN,WAAW,GAAhCT,CAAwCwb,aCjFjDa,uBACF,SAAAA,EAAYxf,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAiiB,IACfpiB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAmiB,GAAA9hB,KAAAH,KAAMyC,KAkCV+c,qBAAuB,SAAAhf,GACnBX,EAAK6C,SAAL5C,OAAAkS,EAAA,EAAAlS,CAAA,GACOU,KAlCPX,EAAKoC,MAAQ,CACTwd,WAAYtU,IAAiBwN,YAC7BuJ,cAAe/W,IAAiBgX,gBALrBtiB,qFASGsT,EAAWC,GAAW,IAAAtO,EACH9E,KAAKyC,MAAlCuC,EADgCF,EAChCE,OAAQod,EADwBtd,EACxBsd,UAAWvc,EADaf,EACbe,MAE3B,OAAIuN,EAAUqM,aAAeza,GAAUoO,EAAU8O,gBAAkBE,IAI/DhP,EAAUiO,iBAAmBrc,GAAUoO,EAAUiP,oBAAsBD,GAIvEjP,EAAUtN,QAAUA,+CAQxBsF,IAAiBkI,GAAG,qBAAsBrT,KAAKwf,qEAI/CrU,IAAiBzJ,eAAe,qBAAsB1B,KAAKwf,uDAStD,IAAAvU,EAC0DjL,KAAKyC,MAA5DuC,EADHiG,EACGjG,OAAQod,EADXnX,EACWmX,UAAWE,EADtBrX,EACsBqX,WAAY/c,EADlC0F,EACkC1F,QAASR,EAD3CkG,EAC2ClG,QAAS4F,EADpDM,EACoDN,EACnD4W,EAAiBvhB,KAAKiC,MAAMwd,WAC5B8C,EAAoBviB,KAAKiC,MAAMigB,cAC/BrX,EAAUiB,KAAahF,IAAI9B,EAAQod,GAEjCI,EAAmB3X,EAAnB2X,eAEFC,EAAOC,YAAe7X,GACtB8X,EAAaC,YAAqB/X,GAClCgY,EAAiBC,YAAyBjY,GAC1CmB,EAAU+W,aAAWlY,EAASF,IAAM,OACpC1F,EAAWD,IAAWuc,GAAkBa,IAAcG,EAEtDS,EAAOR,GAAkBF,EAAahe,EAAArB,EAAAC,cAAC8Q,GAAA,EAAD,CAAUpB,OAAQ4P,IAAqBle,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,IAErG,OACIV,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASA,GACnDjB,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IACP,gBADiBvF,OAAAyT,GAAA,EAAAzT,CAAA,GAEdiF,EAAQke,mBAAqBhe,GAChC,CAAEie,oBAAqBje,KAE1B+d,EACD1e,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBACVmf,GAAcO,EACXve,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBAAgB0f,GAE/Bve,EAAArB,EAAAC,cAAC8S,GAAA,EAAD,CAAahR,OAAQA,EAAQD,QAAS,CAAE8c,aAAc9c,EAAQ8c,gBAElEvd,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,cAAeN,EAAQoe,uBAAwBV,IAE9Ene,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,iBAAkBN,EAAQoe,uBAE7C7e,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,MACMiJ,GAAcK,GACZre,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAyBwf,EAAzC,MAEH3W,eAnFdzI,IAAMC,YA2GlBsO,GALCC,YACZnM,IA1HW,SAAAC,GAAK,MAAK,CACrB6R,SAAU,CACNzF,QAAS,GAEbkR,qBAAsB,CAClB1X,MAAO5F,EAAME,QAAQuG,KAAKoH,WAE9BmO,aAAc,CACVpW,MAAO5F,EAAME,QAAQC,QAAQC,MAEjCgd,mBAAoB,CAChBxX,MAAO,OACPsW,gBAAiBlc,EAAME,QAAQC,QAAQC,KACvC+b,kBAAmB,CACfvW,MAAO,WA4GI,CAAEpF,WAAW,IAChCmM,cAGWV,CAAQmQ,WCzGRrc,WA/BA,SAAAC,GAAK,MAAK,CACrBud,cAAe,CACXjd,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQsd,KAAK,KAAO,aAAe,UACrF5X,MAA8B,SAAvB5F,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQuG,KAAKtG,QAAU,aAAe,WAEvFsd,qBAAsB,CAClB7X,MAA8B,SAAvB5F,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQuG,KAAKtG,QAAU,aAAe,aAyBzD,CAAEK,WAAW,GAAhCT,CArBf,SAAuBnD,GAAO,IAClBiL,EAAuCjL,EAAvCiL,QAAS6V,EAA8B9gB,EAA9B8gB,QAAShe,EAAqB9C,EAArB8C,QAASR,EAAYtC,EAAZsC,QAEnC,OACIT,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,iBAAkBN,EAAQqe,gBACjD9e,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBuK,GACtC8V,QAAQD,IACLjf,EAAArB,EAAAC,cAAA,KAAGC,UAAW4B,EAAQue,qBAAsB/d,QAASA,GAChDge,MCefE,uBACF,SAAAA,EAAYhhB,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAyjB,IACf5jB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA2jB,GAAAtjB,KAAAH,KAAMyC,KA6CVihB,yBAA2B,SAAAljB,GAAU,IAG3BmjB,EAFWnjB,EAAT8L,KAEiByC,OAEpB4U,EAGD9jB,EAAKyP,WAAWqU,GAFhB9jB,EAAK0H,eApDM1H,EA0DnB+jB,oBAAsB,SAAAC,GAIlB,IAHA,IAAMC,EAAM,GACN5a,EAAM,IAAIlC,IAEPE,EAAI,EAAGA,EAAI2c,EAAQld,OAAQO,IAAK,CACrC,IAAI1E,EAASqhB,EAAQ3c,IAAM2c,EAAQ3c,GAAGsC,SACtC,GAAIhH,EACA,IAAK,IAAIuhB,EAAI,EAAGA,EAAIvhB,EAAOmE,OAAQod,IAC1B7a,EAAI/B,IAAI3E,EAAOuhB,MAChB7a,EAAI+E,IAAIzL,EAAOuhB,GAAIvhB,EAAOuhB,IAC1BD,EAAInb,KAAKnG,EAAOuhB,KAUhC,OAJAD,EAAIhH,KAAK,SAAC7Z,EAAG+gB,GACT,OAAOC,aAAa7P,KAAUtN,IAAIkd,GAAGE,MAAO9P,KAAUtN,IAAI7D,GAAGihB,SAG1DJ,GA9EQjkB,EAiFnByP,WAjFmB,eAAA8Q,EAAAtgB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAiFN,SAAAC,EAAM2E,GAAN,IAAA6X,EAAAxkB,EAAAqF,EAAAkD,EAAAN,EAAAwc,EAAApV,EAAAqV,EAAApV,EAAAqV,EAAAT,EAAAU,EAAA5Z,EAAA2E,EAAAkV,EAAAb,EAAAc,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9c,EAAA0U,EAAAzV,EAAA,OAAAO,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTzI,EAAKskB,UAAY,IAAIa,KACrBnlB,EAAKyM,KAAOA,EACN6X,EAAYtkB,EAAKskB,UACnBxkB,EAAQ,KAEJqF,EAAWnF,EAAK4C,MAAhBuC,OACAkD,EAAkBrI,EAAKoC,MAAvBiG,cAEHlD,EATI,CAAAoD,EAAAE,KAAA,gBAUCV,EAAW,GACXwc,EAAe7iB,KAAgBc,KAAK,CACtCC,QAAS,cACT2iB,MAAO3Y,EACP5D,MAAO,MAEXd,EAASe,KAAKyb,IAERpV,EAAY3H,EAAciF,KACf0C,IAAc1C,IACrB+X,EAAoB9iB,KAAgBc,KAAK,CAC3CC,QAAS,cACT2iB,MAAOjW,EACPtG,MAAO,MAEXd,EAASe,KAAK0b,KAGZpV,EAAexI,EAAiB6F,KAClB2C,IAAiB3C,IAC3BgY,EAAuB/iB,KAAgBc,KAAK,CAC9CC,QAAS,cACT2iB,MAAOhW,EACPvG,MAAO,MAEXd,EAASe,KAAK2b,IAnCblc,EAAAE,KAAA,GAsCiBU,QAAQC,IAAIrB,EAASsB,IAAI,SAAAnI,GAAC,OAAIA,EAAEoI,MAAM,SAAAC,GAAC,OAAI,UAtC5D,WAsCCya,EAtCDzb,EAAAiB,KAuCCkb,EAAQ1kB,EAAK+jB,oBAAoBC,GAEnCM,IAActkB,EAAKskB,UAzClB,CAAA/b,EAAAE,KAAA,gBAAAF,EAAA4B,OAAA,qBA6CD9B,IACQyC,EAAM9K,EAAK4C,MAAXkI,EAEF2E,EAAahD,EAAKsR,gBAClB4G,EAAuB,CAAC,iBAAkB7Z,EAAE,iBAAiBiT,gBAG1C9c,KAAK,SAAAokB,GAAE,OAAIA,EAAGC,SAAS7V,MAC3CN,GAAawV,EAAqB1jB,KAAK,SAAAokB,GAAE,OAAIA,EAAGC,SAASnW,EAAU4O,mBAEpE2G,EAAMa,OAAO,EAAG,EAAGld,EAActH,KAIzCf,EAAK6C,SAAS,CACV2iB,IAAK,KACLC,cAAe,KACff,MAAOA,IAGX5kB,EAAQ8J,KAAUC,WAClBC,YAAiBhK,EAAO4kB,MAGxBZ,GADIA,EAAcrX,EAAKyC,QACGwW,WAAW,KAAO5B,EAAY6B,OAAO,GAAK7B,GACpDhd,QAAU8e,MAtErB,CAAArd,EAAAE,KAAA,gBAuEKmc,EAAiB,GAEjBC,EAAgBnjB,KAAgBc,KAAK,CACvCC,QAAS,oBACT2iB,MAAOtB,IAEXc,EAAe9b,KAAK+b,GAEhB1V,IAEA2V,GADIA,EAAmB3V,EAAUD,QACGwW,WAAW,KAAOZ,EAAiBa,OAAO,GAAKb,GAC9Dhe,QAAU8e,MAAuBd,IAAqBhB,IACjEiB,EAAqBrjB,KAAgBc,KAAK,CAC5CC,QAAS,oBACT2iB,MAAON,IAEXF,EAAe9b,KAAKic,IAvF3Bxc,EAAAE,KAAA,GA2F2BU,QAAQC,IAAIwb,EAAevb,IAAI,SAAAnI,GAAC,OAAIA,EAAEoI,MAAM,SAAAC,GAAC,OAAI,UA3F5E,WA2FKyb,EA3FLzc,EAAAiB,KA4FKyb,EAASjlB,EAAK+jB,oBAAoBiB,GAEpCV,IAActkB,EAAKskB,UA9FtB,CAAA/b,EAAAE,KAAA,gBAAAF,EAAA4B,OAAA,kBAkGDnK,EAAK6C,SAAS,CACVoiB,WAGJnlB,EAAQ8J,KAAUC,WAClBC,YAAiBhK,EAAOmlB,GAvGvB1c,EAAAE,KAAA,iBAyGDzI,EAAK6C,SAAS,CACVoiB,OAAQ,OA1GX,WA+GLC,EAAW,IACX/f,EAhHK,CAAAoD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAiHY/G,KAAgBc,KAAK,CAClCC,QAAS,qBACT6H,QAASnF,EACTigB,MAAO3Y,EACPkW,eAAgB,EAChBkD,gBAAiB,EACjBC,OAAQ,EACRjd,MAAO,GACPyG,OAAQ,OAzHP,QAiHL4V,EAjHK3c,EAAAiB,KAAAjB,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GA4HY/G,KAAgBc,KAAK,CAClCC,QAAS,iBACT2iB,MAAO3Y,EACPsZ,YAAa,EACbnd,eAAgB,EAChBod,kBAAmB,EACnBnd,MAAO,KAlIN,QA4HLqc,EA5HK3c,EAAAiB,KAAA,WAsITyC,KAAaga,SAASf,EAASA,UAE3BZ,IAActkB,EAAKskB,UAxId,CAAA/b,EAAAE,KAAA,gBAAAF,EAAA4B,OAAA,kBAkJT,IANAnK,EAAK6C,SAAS,CACVqiB,aAGE9c,EAAQ,IAAIjB,IACZ2V,EAAQ,IAAI3V,IACTE,EAAI,EAAGA,EAAI6d,EAASA,SAASpe,OAAQO,IAC1Ce,EAAMgG,IAAI8W,EAASA,SAAS7d,GAAGiD,QAAS4a,EAASA,SAAS7d,GAAGiD,SACzD4a,EAASA,SAAS7d,GAAGsb,gBACrB7F,EAAM1O,IAAI8W,EAASA,SAAS7d,GAAGsb,eAAgBuC,EAASA,SAAS7d,GAAGsb,gBAI5E7iB,EAAQ8J,KAAUC,WAClBC,YAAiBhK,EAADG,OAAAimB,GAAA,EAAAjmB,CAAYmI,EAAM+d,SAClC1L,YAAiB3a,EAADG,OAAAimB,GAAA,EAAAjmB,CAAY6c,EAAMqJ,SA3JzB,yBAAA5d,EAAAwB,SAAAjC,MAjFM,gBAAA0Y,GAAA,OAAAD,EAAApc,MAAAhE,KAAAiE,YAAA,GAAApE,EA+OnB0H,YA/OmBzH,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA+OL,SAAAmC,IAAA,IAAAoc,EAAAC,EAAApe,EAAAE,EAAAme,EAAAd,EAAAC,EAAApd,EAAAvI,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,WACSzI,EAAK4C,MAAhBuC,OADE,CAAA+E,EAAAzB,KAAA,eAGNzI,EAAK6C,SAAS,CACV2iB,IAAK,KACLC,cAAe,KACff,MAAO,KACPO,OAAQ,KACRC,SAAU,OARRhb,EAAAC,OAAA,wBAcJic,EAAa1kB,KAAgBc,KAAK,CACpCC,QAAS,cACT8jB,SAAU,CAAE9jB,QAAS,wBACrBoG,MAAO,KACRS,MAAM,WACL,MAAO,CAAE7G,QAAS,QAASkH,SAAU,MAGnC0c,EAAuB3kB,KAAgBc,KAAK,CAC9CC,QAAS,cACT2iB,MAAO,GACPvc,MAAO,MACRS,MAAM,WACL,MAAO,CAAE7G,QAAS,QAASkH,SAAU,MAGnC1B,EAAuBvG,KAAgBc,KAAK,CAC9CC,QAAS,oBACTsG,QAASC,KAAUC,UACnBC,OAAO,IACRI,MAAM,SAAAkd,MAlCCtc,EAAAzB,KAAA,EAoCwCU,QAAQC,IAAI,CAC1Dgd,EACAC,EACApe,IAvCM,OAAAE,EAAA+B,EAAAV,KAAA8c,EAAArmB,OAAAwJ,EAAA,EAAAxJ,CAAAkI,EAAA,GAoCHqd,EApCGc,EAAA,GAoCEb,EApCFa,EAAA,GAoCiBje,EApCjBie,EAAA,GA0CVtmB,EAAK6C,SAAS,CACV2iB,IAAKA,EACLC,cAAeA,EACfpd,cAAeA,EACfqc,MAAO,KACPO,OAAQ,KACRC,SAAU,OAGRplB,EAAQ8J,KAAUC,WACxBC,YAAiBhK,EAAO0lB,EAAI7b,UAC5BG,YAAiBhK,EAAO2lB,EAAc9b,UArD5B,yBAAAO,EAAAH,SAAAC,MA/OKhK,EAuSnBymB,oBAvSmBxmB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAuSG,SAAA6e,IAAA,IAAAte,EAAAf,EAAA,OAAAO,EAAAxE,EAAAkF,KAAA,SAAAqe,GAAA,cAAAA,EAAAne,KAAAme,EAAAle,MAAA,cAAAke,EAAAle,KAAA,EACE/G,KAAgBc,KAAK,CACrCC,QAAS,WACTkG,aAAc,sBACdC,eAAgB,EAChBC,MAAO,KALO,OAQlB,IAPMT,EADYue,EAAAnd,KAQTnC,EAAIe,EAAMuB,SAAS7C,OAAS,EAAGO,GAAK,EAAGA,IAC5C3F,KAAgBc,KAAK,CACjBC,QAAS,uBACT6H,QAASlC,EAAMuB,SAAStC,KAXd,wBAAAsf,EAAA5c,SAAA2c,MAvSH1mB,EAuTnB4mB,yBAA2B,SAAAhY,GACvBA,EAAMiY,kBAENnlB,KAAgBc,KAAK,CACjBC,QAAS,4BAGbzC,EAAK6C,SAAS,CAAE4iB,cAAe,QA9ThBzlB,EAiUnB8mB,oBAAsB,SAAC3hB,EAAQod,EAAWwE,EAAaC,GAAa,IACxDC,EAAoBjnB,EAAK4C,MAAzBqkB,gBAEJF,GACArlB,KAAgBc,KAAK,CACjBC,QAAS,uBACT6H,QAASnF,IAIjB8hB,EAAgB9hB,EAAQod,EAAWyE,IA3UpBhnB,EA8UnBknB,aAAe,WACX,IAAM/K,EAAOnc,EAAKmnB,QAAQva,QAEtBuP,EAAKX,UAAYW,EAAKE,eAAiBF,EAAKC,cAC5Cpc,EAAKonB,kBAlVMpnB,EAsVnBqnB,UAAY,SAAAnC,GACR,IAAMpe,EAASoe,EAAWA,EAASA,SAASpe,OAAS,EAMrD,MAAO,CACHif,YALejf,EAAS,EAAIoe,EAASA,SAASpe,EAAS,GAAG8b,KAAO,EAMjEha,eALiB9B,EAAS,EAAIoe,EAASA,SAASpe,EAAS,GAAGwD,QAAU,EAMtE0b,kBALoBlf,EAAS,EAAIoe,EAASA,SAASpe,EAAS,GAAG/F,GAAK,IA3VzDf,EAoWnBsnB,eAAiB,SAACpC,EAAUviB,GACxB,OAAKA,GACAA,EAAOuiB,SAASpe,OAEhBoe,GACAA,EAASA,SAASpe,OAEhB,CACHygB,YAAa5kB,EAAO4kB,YACpBrC,SAAUA,EAASA,SAASpgB,OAAOnC,EAAOuiB,WALxBviB,EAHFuiB,GArWLllB,EAiXnBonB,eAjXmBnnB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAiXF,SAAA2f,IAAA,IAAAriB,EAAAmf,EAAAY,EAAAY,EAAAnjB,EAAAyF,EAAA0U,EAAAzV,EAAAvH,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAAmf,GAAA,cAAAA,EAAAjf,KAAAif,EAAAhf,MAAA,WACTzI,EAAK0nB,QADI,CAAAD,EAAAhf,KAAA,eAAAgf,EAAAtd,OAAA,oBAGLhF,EAAWnF,EAAK4C,MAAhBuC,OAEFmf,EAAYtkB,EAAKskB,UAEfY,EAAallB,EAAKoC,MAAlB8iB,SAEFY,EAAS9lB,EAAKqnB,UAAUnC,GAE9BllB,EAAK0nB,SAAU,EACX/kB,EAAS,IACTwC,EAbS,CAAAsiB,EAAAhf,KAAA,gBAAAgf,EAAAhf,KAAA,GAcM/G,KAAgBc,KAAK,CAChCC,QAAS,qBACT6H,QAASnF,EACTigB,MAAOplB,EAAKyM,KACZkW,eAAgB,EAChBkD,gBAAiBC,EAAOE,kBACxBnd,MAAO,GACPyG,OAAQ,OArBH,QAcT3M,EAdS8kB,EAAAje,KAAAie,EAAAhf,KAAA,wBAAAgf,EAAAhf,KAAA,GAwBM/G,KAAgBc,KAAhBvC,OAAAkS,EAAA,EAAAlS,CAAA,CACXwC,QAAS,iBACT2iB,MAAOplB,EAAKyM,MACTqZ,EAHQ,CAIXjd,MAAO,MA5BF,QAwBTlG,EAxBS8kB,EAAAje,KAAA,WA+BbxJ,EAAK0nB,SAAU,EAEfC,aAAehlB,EAAQuiB,EAAWA,EAASA,SAAW,IAEtDjZ,KAAaga,SAAStjB,EAAOuiB,UAEzBZ,IAActkB,EAAKskB,UArCV,CAAAmD,EAAAhf,KAAA,gBAAAgf,EAAAtd,OAAA,kBA+Cb,IANAnK,EAAK6C,SAAS,CACVqiB,SAAUllB,EAAKsnB,eAAepC,EAAUviB,KAGtCyF,EAAQ,IAAIjB,IACZ2V,EAAQ,IAAI3V,IACTE,EAAI,EAAGA,EAAI1E,EAAOuiB,SAASpe,OAAQO,IACxCe,EAAMgG,IAAIzL,EAAOuiB,SAAS7d,GAAGiD,QAAS3H,EAAOuiB,SAAS7d,GAAGiD,SACrD3H,EAAOuiB,SAAS7d,GAAGsb,gBACnB7F,EAAM1O,IAAIzL,EAAOuiB,SAAS7d,GAAGsb,eAAgBhgB,EAAOuiB,SAAS7d,GAAGsb,gBAIlE7iB,EAAQ8J,KAAUC,WACxBC,YAAiBhK,EAADG,OAAAimB,GAAA,EAAAjmB,CAAYmI,EAAM+d,SAClC1L,YAAiB3a,EAADG,OAAAimB,GAAA,EAAAjmB,CAAY6c,EAAMqJ,SAxDrB,yBAAAsB,EAAA1d,SAAAyd,MAjXExnB,EA4anB4nB,qBAAuB,SAAAhZ,GACnBA,EAAMiY,mBA7aS7mB,EAgbnB0K,YAAc,YAGVuG,EAFoBjR,EAAK4C,MAAjBqO,YA9aRjR,EAAKmnB,QAAUzjB,IAAM+M,YAHN,IAAAxL,EAKUjF,EAAK4C,MAAtBuC,EALOF,EAKPE,OAAQsH,EALDxH,EAKCwH,KALD,OAOfzM,EAAKoC,MAAQ,CACTylB,gBAAiB1iB,EACjB2iB,cAAerb,EAEf+Y,IAAK,KACLC,cAAe,KACff,MAAO,KACPO,OAAQ,KACRC,SAAU,MAfCllB,mFAqCfG,KAAKuH,cAEL4D,IAAiBkI,GAAG,yBAA0BrT,KAAK0jB,yEAInDvY,IAAiBzJ,eAAe,yBAA0B1B,KAAK0jB,2DA2Y1D,IAAAnT,EAAAvQ,KAAAiL,EACuBjL,KAAKyC,MAAzBsC,EADHkG,EACGlG,QAASC,EADZiG,EACYjG,OADZ6J,EAEmD7O,KAAKiC,MAArDojB,EAFHxW,EAEGwW,IAAKC,EAFRzW,EAEQyW,cAAef,EAFvB1V,EAEuB0V,MAAOO,EAF9BjW,EAE8BiW,OAAQC,EAFtClW,EAEsCkW,SAErC5Q,EAAOC,KAAUtN,IAAI9B,GAErB4iB,EACFvC,GAAOA,EAAI7b,SACL6b,EAAI7b,SAASN,IAAI,SAAAnI,GAAC,OACduD,EAAArB,EAAAC,cAAC2kB,GAAD,CAASzjB,IAAKrD,EAAGiE,OAAQjE,EAAGmE,SAAU,kBAAMqL,EAAKoW,oBAAoB5lB,EAAG,MAAM,GAAO,QAEzF,GAEJ+mB,EACFxC,GAAiBA,EAAc9b,SACzB8b,EAAc9b,SAASN,IAAI,SAAAnI,GAAC,OACxBuD,EAAArB,EAAAC,cAAC6kB,GAAD,CACI3jB,IAAKrD,EACLiE,OAAQjE,EACRwE,QAAS,kBAAMgL,EAAKoW,oBAAoB5lB,EAAG,MAAM,GAAM,QAG/D,GAEJinB,EAAazD,EACbA,EAAMrb,IAAI,SAAAnI,GAAC,OACPuD,EAAArB,EAAAC,cAAC6kB,GAAD,CACI3jB,IAAKrD,EACLiE,OAAQjE,EACRwE,QAAS,kBAAMgL,EAAKoW,oBAAoB5lB,EAAG,MAAM,GAAM,QAG/D,GAEAknB,EAAcnD,EACdA,EAAO5b,IAAI,SAAAnI,GAAC,OACRuD,EAAArB,EAAAC,cAACglB,GAAD,CAAiB9jB,IAAKrD,EAAGiE,OAAQjE,EAAGwE,QAAS,kBAAMgL,EAAKoW,oBAAoB5lB,EAAG,MAAM,GAAM,QAE/F,GAEAonB,EACFpD,GAAYA,EAASA,SACfA,EAASA,SAAS7b,IAAI,SAAAnI,GAAC,OACnBuD,EAAArB,EAAAC,cAACklB,GAAD,CACIhkB,IAAG,GAAAO,OAAK5D,EAAEoJ,QAAP,KAAAxF,OAAkB5D,EAAEH,IACvBoE,OAAQjE,EAAEoJ,QACViY,UAAWrhB,EAAEH,GACb0hB,WAAYkB,QAAQxe,GACpBO,QAAS,kBAAMgL,EAAKoW,oBAAoB5lB,EAAEoJ,QAASpJ,EAAEH,IAAI,GAAO,QAGxE,GAENynB,EAAkB,oBAKtB,OAJItD,GAAYA,EAASqC,cACrBiB,EAA2C,IAAzBtD,EAASqC,YAAoB,kBAA7B,SAAAziB,OAA0DogB,EAASqC,YAAnE,cAIlB9iB,EAAArB,EAAAC,cAAA,OAAKiO,IAAKnR,KAAKgnB,QAAS7jB,UAAWkC,IAAWN,EAAQujB,OAAQ,UAAWC,SAAUvoB,KAAK+mB,cACnF5S,GACG7P,EAAArB,EAAAC,cAAA,OAAKC,UAAU,eACXmB,EAAArB,EAAAC,cAACslB,GAAD,CAAe9a,QAAQ,uBACvBpJ,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAACga,GAAD,CAAalY,OAAQA,EAAQ8Q,YAAY,KAE7CxR,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQ0jB,sBACnBjd,aAAW,SACXkd,YAAa1oB,KAAKuK,aAClBjG,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,SAKf2kB,EAASjhB,OAAS,GACfrC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oBACXmB,EAAArB,EAAAC,cAACslB,GAAD,CAAe9a,QAAQ,WACvBpJ,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBolB,SAAUvoB,KAAKynB,sBAClDnjB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iCACdykB,EACDtjB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mCAI1B2kB,EAAmBnhB,OAAS,GACzBrC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,+BACXmB,EAAArB,EAAAC,cAACslB,GAAD,CAAe9a,QAAQ,SAAS6V,QAAQ,QAAQhe,QAASvF,KAAKymB,2BAC7DqB,GAGRE,EAAWrhB,OAAS,GACjBrC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,sBACXmB,EAAArB,EAAAC,cAACslB,GAAD,CAAe9a,QAAQ,uBACtBsa,GAGRC,EAAYthB,OAAS,GAClBrC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAACslB,GAAD,CAAe9a,QAAQ,kBACtBua,GAGRlD,GACGzgB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAACslB,GAAD,CAAe9a,QAAS2a,IACvBF,uDA9gBW1lB,EAAOR,GACnC,OAAIQ,EAAMuC,SAAW/C,EAAMylB,iBAAmBjlB,EAAM6J,OAASrK,EAAM0lB,cACxD,CACHD,gBAAiBjlB,EAAMuC,OACvB2iB,cAAellB,EAAM6J,KAErB+Y,IAAK,KACLC,cAAe,KACff,MAAO,KACPO,OAAQ,KACRC,SAAU,MAIX,YAlCMxhB,IAAMC,YAsjBZsO,GALCC,YACZnM,IA9jBW,SAAAC,GAAK,MAAK,CACrB4iB,sBAAuB,CACnB/R,OAAQ,kBAEZgB,SAAU,CACNzF,QAAS,OAEbqW,OAAQ,CACJniB,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWwiB,QAAU,aAsjBhE,CAAEtiB,WAAW,IAChCmM,cAGWV,CAAQ2R,8YCrhBjBmF,eACF,SAAAA,EAAYnmB,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA4oB,IACf/oB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA8oB,GAAAzoB,KAAAH,KAAMyC,KASVmc,aAAe,SAAAnQ,GACX5O,EAAK6C,SAAS,CAAE2R,KAAM5F,EAAMoa,OAAOxkB,QAEnC8G,IAAiBlK,KAAK,4BAA6B,CAC/CoT,KAAM5F,EAAMoa,OAAOxkB,MACnB2B,QAASnG,EAAKipB,SAASjpB,EAAKoC,MAAMwJ,UAfvB5L,EAmBnBkpB,mBAAqB,SAAAta,GACjB5O,EAAK6C,SAAS,CAAE+I,MAAOgD,EAAMoa,OAAOxkB,QAEpC8G,IAAiBlK,KAAK,4BAA6B,CAC/CoT,KAAMxU,EAAKoC,MAAMoS,KACjBrO,QAASnG,EAAKipB,SAASra,EAAMoa,OAAOxkB,UAxBzBxE,EA4BnBmpB,eAAiB,SAAA3kB,GACb,OAAQA,GACJ,KAAK4kB,KAAI,KACL,MAAO,MACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAK,KACN,MAAO,OACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAW,KACZ,MAAO,aAGf,OAAO,MA9CQ1pB,EAiDnBipB,SAAW,SAAAzkB,GACP,OAAQA,GACJ,IAAK,MACD,OAAO4kB,KACX,IAAK,SACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,OACD,OAAOC,KACX,IAAK,SACD,OAAOC,KACX,IAAK,aACD,OAAOC,KAGf,OAAO,MAnEQ1pB,EAsEnB0K,YAAc,WACV1K,EAAK6C,SAAS,CAAEmO,MAAM,KAvEPhR,EA0EnBgR,KAAO,WACHhR,EAAK6C,SAAS,CAAEmO,MAAM,KAxEtBhR,EAAKoC,MAAQ,CACT4O,MAAM,EACNwD,KAAMxU,EAAK4C,MAAMoD,MAAME,QAAQsO,KAC/B5I,MAAO5L,EAAKmpB,eAAenpB,EAAK4C,MAAMoD,MAAME,QAAQC,QAAQC,OANjDpG,wEA8EV,IACGkF,EAAY/E,KAAKyC,MAAjBsC,QADH8J,EAEmB7O,KAAKiC,MAArBoS,EAFHxF,EAEGwF,KAAM5I,EAFToD,EAESpD,MAEd,OACInH,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIumB,mBAAoB,EACpB3Y,KAAM7Q,KAAKiC,MAAM4O,KACjBC,QAAS9Q,KAAKuK,YACdwG,kBAAgB,qBAChBC,mBAAiB,4BACjB1M,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,sBAAhB,cACA0D,EAAArB,EAAAC,cAACumB,GAAAxmB,EAAD,KACIqB,EAAArB,EAAAC,cAACwmB,GAAAzmB,EAAD,CAAa6W,UAAU,WAAW3W,UAAW4B,EAAQ4kB,aACjDrlB,EAAArB,EAAAC,cAAC0mB,GAAA3mB,EAAD,CAAW4mB,SAAO,EAAC/P,UAAU,UAA7B,SAGAxV,EAAArB,EAAAC,cAAC4mB,GAAA7mB,EAAD,CACIuI,aAAW,QACXue,KAAK,SACL5mB,UAAW4B,EAAQilB,MACnB3lB,MAAOgQ,EACP+D,SAAUpY,KAAK4e,cACfta,EAAArB,EAAAC,cAAC+mB,GAAAhnB,EAAD,CAAkBoB,MAAM,QAAQ6lB,QAAS5lB,EAAArB,EAAAC,cAACinB,GAAAlnB,EAAD,CAAOwI,MAAM,YAAc4T,MAAM,UAC1E/a,EAAArB,EAAAC,cAAC+mB,GAAAhnB,EAAD,CAAkBoB,MAAM,OAAO6lB,QAAS5lB,EAAArB,EAAAC,cAACinB,GAAAlnB,EAAD,CAAOwI,MAAM,YAAc4T,MAAM,WAGjF/a,EAAArB,EAAAC,cAACwmB,GAAAzmB,EAAD,CAAa6W,UAAU,WAAW3W,UAAW4B,EAAQ4kB,aACjDrlB,EAAArB,EAAAC,cAAC0mB,GAAA3mB,EAAD,CAAW4mB,SAAO,EAAC/P,UAAU,UAA7B,UAGAxV,EAAArB,EAAAC,cAAC4mB,GAAA7mB,EAAD,CACIuI,aAAW,SACXue,KAAK,UACL5mB,UAAW4B,EAAQilB,MACnB3lB,MAAOoH,EACP2M,SAAUpY,KAAK+oB,oBACfzkB,EAAArB,EAAAC,cAAC+mB,GAAAhnB,EAAD,CACIoB,MAAM,MACN6lB,QACI5lB,EAAArB,EAAAC,cAACinB,GAAAlnB,EAAD,CACI8B,QAAS,CACL4c,KAAM5c,EAAQqlB,QACd/R,QAAStT,EAAQsT,WAI7BgH,MAAM,QAEV/a,EAAArB,EAAAC,cAAC+mB,GAAAhnB,EAAD,CACIoB,MAAM,SACN6lB,QACI5lB,EAAArB,EAAAC,cAACinB,GAAAlnB,EAAD,CACI8B,QAAS,CACL4c,KAAM5c,EAAQslB,WACdhS,QAAStT,EAAQsT,WAI7BgH,MAAM,WAEV/a,EAAArB,EAAAC,cAAC+mB,GAAAhnB,EAAD,CACIoB,MAAM,QACN6lB,QACI5lB,EAAArB,EAAAC,cAACinB,GAAAlnB,EAAD,CACI8B,QAAS,CACL4c,KAAM5c,EAAQulB,UACdjS,QAAStT,EAAQsT,WAI7BgH,MAAM,UAEV/a,EAAArB,EAAAC,cAAC+mB,GAAAhnB,EAAD,CACIoB,MAAM,QACN6lB,QACI5lB,EAAArB,EAAAC,cAACinB,GAAAlnB,EAAD,CACI8B,QAAS,CACL4c,KAAM5c,EAAQwlB,UACdlS,QAAStT,EAAQsT,WAI7BgH,MAAM,UAEV/a,EAAArB,EAAAC,cAAC+mB,GAAAhnB,EAAD,CACIoB,MAAM,OACN6lB,QACI5lB,EAAArB,EAAAC,cAACinB,GAAAlnB,EAAD,CACI8B,QAAS,CACL4c,KAAM5c,EAAQylB,SACdnS,QAAStT,EAAQsT,WAI7BgH,MAAM,SAEV/a,EAAArB,EAAAC,cAAC+mB,GAAAhnB,EAAD,CACIoB,MAAM,SACN6lB,QACI5lB,EAAArB,EAAAC,cAACinB,GAAAlnB,EAAD,CACI8B,QAAS,CACL4c,KAAM5c,EAAQ0lB,WACdpS,QAAStT,EAAQsT,WAI7BgH,MAAM,WAEV/a,EAAArB,EAAAC,cAAC+mB,GAAAhnB,EAAD,CACIoB,MAAM,aACN6lB,QACI5lB,EAAArB,EAAAC,cAACinB,GAAAlnB,EAAD,CACI8B,QAAS,CACL4c,KAAM5c,EAAQ2lB,eACdrS,QAAStT,EAAQsT,WAI7BgH,MAAM,2BAtMZ9b,IAAMC,WAkNjBoC,OAtQA,SAAAC,GAAK,MAAK,CACrB8jB,YAAa,CACTjT,OAA6B,EAArB7Q,EAAMqM,QAAQC,MAE1B6X,MAAO,CACHtT,OAAM,GAAA/R,OAAKkB,EAAMqM,QAAQC,KAAnB,SAEViY,QAAS,CACL3e,MAAOwd,KAAI,KACX0B,YAAa,CACTlf,MAAOwd,KAAI,OAGnBoB,WAAY,CACR5e,MAAOyd,KAAO,KACdyB,YAAa,CACTlf,MAAOyd,KAAO,OAGtBoB,UAAW,CACP7e,MAAO0d,KAAM,KACbwB,YAAa,CACTlf,MAAO0d,KAAM,OAGrBoB,UAAW,CACP9e,MAAO2d,KAAM,KACbuB,YAAa,CACTlf,MAAO2d,KAAM,OAGrBoB,SAAU,CACN/e,MAAO4d,KAAK,KACZsB,YAAa,CACTlf,MAAO4d,KAAK,OAGpBoB,WAAY,CACRhf,MAAO6d,KAAO,KACdqB,YAAa,CACTlf,MAAO6d,KAAO,OAGtBoB,eAAgB,CACZjf,MAAO8d,KAAW,KAClBoB,YAAa,CACTlf,MAAO8d,KAAW,OAG1BlR,QAAS,KAqNqB,CAAEhS,WAAW,GAAhCT,CAAwCgjB,cCjQjDgC,eACF,SAAAA,EAAYnoB,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA4qB,IACf/qB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA8qB,GAAAzqB,KAAAH,KAAMyC,KAWVmc,aAAe,SAAAnQ,GACX5O,EAAK6C,SAAS,CAAEmoB,SAAUpc,EAAMoa,OAAOxkB,QAEvC9C,KAAgBiJ,aAAa,CAAElI,QAAS,6BAA8BuoB,SAAUpc,EAAMoa,OAAOxkB,SAf9ExE,EAkBnB0K,YAAc,WACV1K,EAAK6C,SAAS,CAAEmO,MAAM,KAnBPhR,EAsBnBgR,KAAO,WACHhR,EAAK6C,SAAS,CAAEmO,MAAM,KAvBP,IAGPia,EAASroB,EAATqoB,KACFD,EAAWC,EAAOA,EAAKD,SAAW,KAJzB,OAMfhrB,EAAKoC,MAAQ,CACT4O,MAAM,EACNga,SAAUA,GAAY,MARXhrB,wEA0BV,IAAAiF,EACkB9E,KAAKyC,MAAXkI,GADZ7F,EACGC,QADHD,EACY6F,GADZkE,EAEsB7O,KAAKiC,MAAxB4O,EAFHhC,EAEGgC,KAAMga,EAFThc,EAESgc,SAGRE,GAFOC,KAAkBvgB,MAAQ,CAAEwgB,eAAgB,KAElCA,eAAe/hB,IAAI,SAAAnI,GAAC,OACvCuD,EAAArB,EAAAC,cAAC+mB,GAAAhnB,EAAD,CACImB,IAAKrD,EAAEH,GACPyD,MAAOtD,EAAEH,GACTspB,QAAS5lB,EAAArB,EAAAC,cAACinB,GAAAlnB,EAAD,CAAOwI,MAAM,YACtB4T,MAAK,GAAA1a,OAAK5D,EAAEgpB,KAAP,SAAAplB,OAAmB5D,EAAEmqB,YAArB,SAIb,OACI5mB,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIumB,mBAAoB,EACpB3Y,KAAMA,EACNC,QAAS9Q,KAAKuK,YACdwG,kBAAgB,wBAChBC,mBAAiB,+BACjB1M,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,yBAAyB+J,EAAE,aAC3CrG,EAAArB,EAAAC,cAACumB,GAAAxmB,EAAD,KACIqB,EAAArB,EAAAC,cAACwmB,GAAAzmB,EAAD,CAAa6W,UAAU,YACnBxV,EAAArB,EAAAC,cAAC4mB,GAAA7mB,EAAD,CACIuI,aAAW,WACXue,KAAK,YACL1lB,MAAOwmB,EACPzS,SAAUpY,KAAK4e,cACdmM,aAxDAxnB,IAAMC,WA0EpBsO,GAPCC,YACZgM,cACAvL,cACA5M,IA/EW,SAAAC,GAAK,MAAK,CACrB8jB,YAAa,CACTjT,OAA6B,EAArB7Q,EAAMqM,QAAQC,MAE1B6X,MAAO,CACHtT,OAAM,GAAA/R,OAAKkB,EAAMqM,QAAQC,KAAnB,WA0ES,CAAE9L,WAAW,IAChC6X,cAGWpM,CAAQ8Y,IC3EjBO,WAAmB,CACrBC,SAAU,SACVC,WAAY,SAGVC,eACF,SAAAA,EAAY7oB,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAsrB,IACfzrB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAwrB,GAAAnrB,KAAAH,KAAMyC,KAgBV8oB,2BAA6B,SAAA/qB,GACzBX,EAAK6C,SAAS,CAAE8oB,mBAAoBhrB,EAAOC,uBAlB5BZ,EAqBnB4rB,eAAiB,SAAAhd,GAAS,IACd+c,EAAuB3rB,EAAKoC,MAA5BupB,mBACHE,aAAqBF,IAE1B3rB,EAAK6C,SAAS,CAAEipB,SAAUld,EAAMmd,iBAzBjB/rB,EA4BnBgsB,gBAAkB,WACdhsB,EAAK6C,SAAS,CAAEipB,SAAU,QA7BX9rB,EAgCnBisB,aAAe,WACXjsB,EAAKgsB,kBAELhsB,EAAK4C,MAAMspB,YAnCIlsB,EAsCnBmsB,mBAtCmBlsB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAsCE,SAAAC,IAAA,IAAAnF,EAAA,OAAAiF,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjBzI,EAAKgsB,kBADYzjB,EAAAE,KAAA,EAGI2jB,MAAK,GAAAtnB,OAAIunB,KAAJ,kBAAAvnB,OAAmCwnB,OAH5C,OAGX3pB,EAHW4F,EAAAiB,KAIjB6E,QAAQC,IAAI,cAAe3L,GAJV,wBAAA4F,EAAAwB,SAAAjC,MAtCF9H,EA8CnBusB,iBAAmB,SAAA3d,GACf5O,EAAKgsB,kBAELhsB,EAAKwsB,YAAYxb,QAjDFhR,EAoDnBysB,eAAiB,SAAA7d,GACb5O,EAAKgsB,kBAELhsB,EAAK0sB,eAAe1b,QAvDLhR,EA0DnB2sB,OAAS,SAAArb,GACLjD,QAAQC,IAARrO,OAAA2sB,GAAA,EAAA3sB,QAAA2sB,GAAA,EAAA3sB,CAAAD,KACAA,EAAK0sB,eAAiBpb,GAzDtBtR,EAAKoC,MAAQ,CACTupB,mBAAoBrgB,IAAiBuhB,wBACrCf,SAAU,MALC9rB,mFAUfsL,IAAiBkI,GAAG,2BAA4BrT,KAAKurB,2EAIrDpgB,IAAiBzJ,eAAe,2BAA4B1B,KAAKurB,6DAiD5D,IAAAhb,EAAAvQ,KAAA8E,EACkB9E,KAAKyC,MAApBsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EADZkE,EAEoC7O,KAAKiC,MAAtC0pB,EAFH9c,EAEG8c,SAAUH,EAFb3c,EAEa2c,mBAEZmB,EAAkBjB,aAAqBF,GACzClnB,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAC0pB,GAAA3pB,EAAD,CACIrC,GAAG,YACH+qB,SAAUA,EACV9a,KAAM2S,QAAQmI,GACd7a,QAAS9Q,KAAK6rB,gBACdgB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBC,aAAc7B,IACd7mB,EAAArB,EAAAC,cAAC+pB,GAAAhqB,EAAD,CAAUsC,QAASvF,KAAKgsB,oBAAqBrhB,EAAE,mBAC/CrG,EAAArB,EAAAC,cAAC+pB,GAAAhqB,EAAD,CAAUsC,QAASvF,KAAKosB,kBAAmBzhB,EAAE,eAC7CrG,EAAArB,EAAAC,cAAC+pB,GAAAhqB,EAAD,CAAUsC,QAASvF,KAAKssB,gBAAiB3hB,EAAE,aAC3CrG,EAAArB,EAAAC,cAAC+pB,GAAAhqB,EAAD,CAAUsC,QAASvF,KAAK8rB,cAAenhB,EAAE,aAGjD,KAEJ,OACIrG,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIiqB,YAAWvB,EAAW,cAAgB,KACtCwB,gBAAc,OACdhqB,UAAW4B,EAAQqoB,eACnB5hB,aAAW,OACXjG,QAASvF,KAAKyrB,gBACdnnB,EAAArB,EAAAC,cAACmqB,GAAApqB,EAAD,OAEH0pB,EACDroB,EAAArB,EAAAC,cAACoqB,GAAD,CAAaC,SAAU,SAAApc,GAAG,OAAKZ,EAAK8b,YAAclb,KAClD7M,EAAArB,EAAAC,cAACsqB,GAAD,CAAgBrc,IAAK,SAAAA,GAAG,OAAKZ,EAAKgc,eAAiBpb,aAnGtC5N,IAAMC,WA8GpBsO,GALCC,YACZS,cACA5M,IAzHW,CACXwnB,eAAgB,CACZ1W,OAAQ,qBAEZ+W,iBAAkB,CACd/W,OAAQ,mBAoHO,CAAErQ,WAAW,IAGrByL,CAAQwZ,IC3GjBoC,uBACF,SAAAA,EAAYjrB,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA0tB,IACf7tB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA4tB,GAAAvtB,KAAAH,KAAMyC,KA8BV8oB,2BAA6B,SAAA/qB,GACzBX,EAAK6C,SAAS,CAAE8oB,mBAAoBhrB,EAAOC,uBAhC5BZ,EAmCnBisB,aAAe,WACXjsB,EAAK6C,SAAS,CAAEmO,MAAM,KApCPhR,EAuCnB8tB,WAAa,WACT9tB,EAAK0K,cACLhJ,KAAgBqsB,UAzCD/tB,EA4CnB0K,YAAc,WACV1K,EAAK6C,SAAS,CAAEmO,MAAM,KA7CPhR,EAgDnBguB,aAAe,WAAM,IAAA/oB,EACgBjF,EAAK4C,MAA9BqrB,EADShpB,EACTgpB,SAAUC,EADDjpB,EACCipB,WACVvC,EAAuB3rB,EAAKoC,MAA5BupB,mBACHE,aAAqBF,IAE1BsC,GAAUC,IArDKluB,EAwDnBmuB,cAAgB,SAAAvf,GACU,KAAlBA,EAAMC,SACND,EAAME,kBA1DK9O,EA8DnBouB,YAAc,WACV,IAAM3f,EAAYzO,EAAKquB,YAAYzhB,QAAQ6B,UACrCC,EAAY1O,EAAKquB,YAAYzhB,QAAQ8B,WAEvCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC1O,EAAKquB,YAAYzhB,QAAQ8B,UAAY,IAGzCpD,IAAiBlK,KAAK,yBAA0B,CAAEqL,KAAMgC,KAtEzCzO,EAyEnBsuB,YAAc,SAAA1f,GACV,IAAMe,EAAYf,EAAMgB,cAAcC,QAAQ,cAC1CF,IACAf,EAAME,iBACNgB,SAASC,YAAY,cAAc,EAAOJ,KA1E9C3P,EAAKquB,YAAc3qB,IAAM+M,YAEzBzQ,EAAKoC,MAAQ,CACTupB,mBAAoBrgB,IAAiBuhB,wBACrC7b,MAAM,GAGVhR,EAAKuuB,YAAc/W,aAASxX,EAAKuuB,YAAa,KAV/BvuB,kFAaAgD,EAAWC,EAAWC,GAAU,IAAAwN,EAAAvQ,KAC3CA,KAAKyC,MAAMsrB,YAAc/tB,KAAKyC,MAAMsrB,aAAelrB,EAAUkrB,YAC7D3d,WAAW,WACHG,EAAK2d,YAAYzhB,SACjB8D,EAAK2d,YAAYzhB,QAAQ4D,SAE9B,iDAKPlF,IAAiBkI,GAAG,2BAA4BrT,KAAKurB,2EAIrDpgB,IAAiBzJ,eAAe,2BAA4B1B,KAAKurB,6DAqD5D,IAAAtgB,EACuCjL,KAAKyC,MAAzCsC,EADHkG,EACGlG,QAASQ,EADZ0F,EACY1F,QAASwoB,EADrB9iB,EACqB8iB,WAAYpjB,EADjCM,EACiCN,EAC9BkG,EAAS7Q,KAAKiC,MAAd4O,KAEFwd,EAAsBxd,EACxBvM,EAAArB,EAAAC,cAACorB,GAAA,EAAD,CAAQ9E,mBAAoB,EAAG3Y,KAAMA,EAAMC,QAAS9Q,KAAKuK,YAAawG,kBAAgB,qBAClFzM,EAAArB,EAAAC,cAACorB,GAAA,EAAD,CAAa1tB,GAAG,qBAAqB+J,EAAE,YACvCrG,EAAArB,EAAAC,cAACorB,GAAA,EAAD,KACIhqB,EAAArB,EAAAC,cAACorB,GAAA,EAAD,CAAmBnrB,UAAW4B,EAAQwpB,YAAa5jB,EAAE,sBAEzDrG,EAAArB,EAAAC,cAACorB,GAAA,EAAD,KACIhqB,EAAArB,EAAAC,cAACorB,GAAA,EAAD,CAAQ/oB,QAASvF,KAAKuK,YAAakB,MAAM,WACpCd,EAAE,WAEPrG,EAAArB,EAAAC,cAACorB,GAAA,EAAD,CAAQ/oB,QAASvF,KAAK2tB,WAAYliB,MAAM,WACnCd,EAAE,SAIf,KAEJ,OACIrG,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACT4qB,EASEzpB,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,OAAKC,UAAU,4BACXmB,EAAArB,EAAAC,cAAA,OACItC,GAAG,yBACHuQ,IAAKnR,KAAKkuB,YACV5c,YAAa3G,EAAE,UACfvG,IAAK4gB,OACL5T,iBAAe,EACfC,gCAA8B,EAC9BE,UAAWvR,KAAKguB,cAChBxc,QAASxR,KAAKiuB,YACdxc,QAASzR,KAAKmuB,gBAnB1B7pB,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACsrB,GAAD,CAAgBzC,SAAU/rB,KAAK8rB,eAC9BuC,EACD/pB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCAAoCoC,QAASA,GACxDjB,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAyBwH,EAAE,cAoBvDrG,EAAArB,EAAAC,cAACorB,GAAA,EAAD,CACInrB,UAAW4B,EAAQ0pB,iBACnBjjB,aAAYb,EAAE,UACd+d,YAAa1oB,KAAK6tB,cAClBvpB,EAAArB,EAAAC,cAACwrB,GAAAzrB,EAAD,CAAe4N,KAAMkd,EAAYY,KAAMrqB,EAAArB,EAAAC,cAAC0rB,GAAA3rB,EAAD,MAAgB4rB,SAAUvqB,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,iBAtIzDM,IAAMC,YAyJnBsO,GALCC,YACZS,cACA5M,IA/JW,CACX6oB,iBAAkB,CACd/X,OAAQ,kBAEZ6X,WAAY,CACRhR,WAAY,cA6JLzL,CAAQ4b,cCzKjBoB,eACF,SAAAA,EAAYrsB,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA8uB,IACfjvB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAgvB,GAAA3uB,KAAAH,KAAMyC,KAeVssB,kCAAoC,WAChClvB,EAAK6C,SAAS,CAAEssB,qBAAqB,KAjBtBnvB,EAoBnBovB,aAAe,WACPpvB,EAAKqvB,UAETrvB,EAAKqvB,SAAU,EACf9e,WAAW,WACPtO,OAAOqtB,SAASC,UACjB,OAvBHvvB,EAAKoC,MAAQ,CACT+sB,qBAAqB,GAJVnvB,mFASfsL,IAAiBkI,GAAG,kCAAmCrT,KAAK+uB,kFAI5D5jB,IAAiBzJ,eAAe,kCAAmC1B,KAAK+uB,oEAgBnE,IACGC,EAAwBhvB,KAAKiC,MAA7B+sB,oBACAjqB,EAAY/E,KAAKyC,MAAjBsC,QAEFiH,EAAUgjB,EACZ1qB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQ+U,QAAQ,YAAYvM,MAAM,UAAUtI,UAAW4B,EAAQ4c,KAAMpc,QAASvF,KAAKivB,cAAnF,UAGA,KAEJ,OAAO3qB,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KAAGrN,UAxCQzI,IAAMC,WA4CjBoC,OAvDA,CACX+b,KAAM,CACFjL,OAAQ,EACRzE,QAAS,OACT3E,MAAO,OACP+hB,aAAc,EACd5jB,MAAO,QACP6jB,UAAW,SAgDJ1pB,CAAmBkpB,IC3C5BS,uBACF,SAAAA,EAAY9sB,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAuvB,IACf1vB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAyvB,GAAApvB,KAAAH,KAAMyC,KA4CV+sB,0BAA4B,SAAAhvB,GACxBX,EAAKuO,eA9CUvO,EAiDnB4vB,oCAAsC,SAAAjvB,GAClCX,EAAK6C,SAAS,CACVgtB,qBAAsBvkB,IAAiBukB,wBAnD5B7vB,EAuDnB8vB,yBAA2B,SAAAnvB,GACvBX,EAAK6C,SAAS,CACVqrB,YAAY,EACZ6B,aAAcpvB,EAAOwE,OACrBsK,WAAY,QA3DDzP,EA+DnBsb,kBAAoB,WAChBtb,EAAKgwB,YAAYpjB,QAAQqjB,eAhEVjwB,EAmEnBguB,aAAe,SAAAkC,GACXlwB,EAAK6C,SAAS,CACVqrB,WAAYgC,EACZH,aAAc,EACdtgB,WAAY,QAvEDzP,EA2EnB8mB,oBAAsB,SAAC3hB,EAAQod,EAAW2L,GACtCpS,aAAS3W,EAAQod,GAEjB,IAAMwN,EAAe7B,EAAaluB,EAAKoC,MAAM2tB,aAAe,EACtDtgB,EAAaye,EAAaluB,EAAKoC,MAAMqN,WAAa,KAExDzP,EAAK6C,SAAS,CACVqrB,WAAYA,EACZ6B,aAAcA,EACdtgB,WAAYA,KApFDzP,EAwFnB0K,YAAc,WACV1K,EAAK6C,SAAS,CACVqrB,YAAY,EACZ6B,aAAc,EACdtgB,WAAY,QA5FDzP,EAgGnBmwB,uBAAyB,SAAA1jB,GACrBzM,EAAK6C,SAAS,CACV4M,WAAYhD,KA/FhBzM,EAAKgwB,YAActsB,IAAM+M,YAEzBzQ,EAAKoC,MAAQ,CACTytB,qBAAsBvkB,IAAiBukB,qBACvC3B,YAAY,EACZ6B,aAAc,EACdtgB,WAAY,MATDzP,qFAaGsT,EAAWC,GAC7B,OAAIA,EAAUsc,uBAAyB1vB,KAAKiC,MAAMytB,uBAI9Ctc,EAAU2a,aAAe/tB,KAAKiC,MAAM8rB,aAIpC3a,EAAUwc,eAAiB5vB,KAAKiC,MAAM2tB,cAItCxc,EAAU9D,aAAetP,KAAKiC,MAAMqN,yDAQxCnE,IAAiBkI,GAAG,oCAAqCrT,KAAKyvB,qCAC9DtkB,IAAiBkI,GAAG,yBAA0BrT,KAAK2vB,0BACnDxkB,IAAiBkI,GAAG,0BAA2BrT,KAAKwvB,0EAIpDrkB,IAAiBzJ,eAAe,oCAAqC1B,KAAKyvB,qCAC1EtkB,IAAiBzJ,eAAe,yBAA0B1B,KAAK2vB,0BAC/DxkB,IAAiBzJ,eAAe,0BAA2B1B,KAAKwvB,4DA4D3D,IACGzqB,EAAY/E,KAAKyC,MAAjBsC,QADH8J,EAEkE7O,KAAKiC,MAApEytB,EAFH7gB,EAEG6gB,qBAAsB3B,EAFzBlf,EAEyBkf,WAAY6B,EAFrC/gB,EAEqC+gB,aAActgB,EAFnDT,EAEmDS,WAExD,OACIhL,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAWN,EAAQe,YAAa,UAAW,CAClDmqB,uBAAwBP,KAE5BprB,EAAArB,EAAAC,cAACgtB,GAAD,CACInC,WAAYA,EACZxoB,QAASvF,KAAKmb,kBACd2S,SAAU9tB,KAAK6tB,aACfsC,mBAAoBnwB,KAAKgwB,yBAE7B1rB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAACktB,GAAA,EAAD,CAAajf,IAAKnR,KAAK6vB,cACtB9B,GACGzpB,EAAArB,EAAAC,cAACmtB,GAAD,CACIrrB,OAAQ4qB,EACRtjB,KAAMgD,EACNwX,gBAAiB9mB,KAAK2mB,oBACtB7V,QAAS9Q,KAAKuK,eAI1BjG,EAAArB,EAAAC,cAACotB,GAAD,cAjIM9sB,cAuIPoC,OA3IA,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,GACbyS,YAAY1M,KA0IJD,CAAmB2pB,IC/H5BgB,sNACFtuB,MAAQ,CACJ+C,OAAQmG,IAAiBoV,gBAiB7BiQ,+BAAiC,SAAAhwB,GAAU,IAC/BwE,EAAWxE,EAAXwE,OAERnF,EAAK6C,SAAS,CAAEsC,cAGpBuF,YAAc,WACVhJ,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACT0C,OAAQ,0FAvBMmO,EAAWC,EAAWqd,GAAa,IAC7CzrB,EAAWhF,KAAKiC,MAAhB+C,OAER,OAAOoO,EAAUpO,SAAWA,8CAI5BmG,IAAiBkI,GAAG,2BAA4BrT,KAAKwwB,+EAIrDrlB,IAAiBzJ,eAAe,2BAA4B1B,KAAKwwB,iEAgB5D,IACGzrB,EAAY/E,KAAKyC,MAAjBsC,QACAC,EAAWhF,KAAKiC,MAAhB+C,OACR,OAAKA,EAGDV,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACI4N,MAAI,EACJ2Y,mBAAoB,EACpB1Y,QAAS9Q,KAAKuK,YACdxF,QAAS,CAAE4c,KAAM5c,EAAQ2rB,WAAYC,UAAW5rB,EAAQ6rB,cAAexqB,MAAOrB,EAAQ8rB,YACtFvsB,EAAArB,EAAAC,cAAC4tB,GAAD,CAAU3tB,UAAW4B,EAAQgsB,aAAc/rB,OAAQA,EAAQuW,OAAK,KARpD,YAnCChY,IAAMC,YAmDpBoC,OAnEA,SAAAC,GAAK,MAAK,CACrBkrB,aAAc,CACVzjB,MAAO,KAEXsjB,cAAe,CACXI,WAAY,SAEhBN,WAAY,CACRjlB,MAAO5F,EAAME,QAAQuG,KAAKtG,QAC1Bkb,OAAQrb,EAAMqb,OAAO+P,OAEzBJ,UAAW,CACPvjB,MAAO,OAuDA1H,CAAmB2qB,sJCrD5BW,8MACFjvB,MAAQ,CACJ0pB,SAAU,QAGdwF,gBAAkB,SAAA1iB,GACd5O,EAAK6C,SAAS,CAAEipB,SAAUld,EAAMmd,mBAGpCC,gBAAkB,WACdhsB,EAAK6C,SAAS,CAAEipB,SAAU,UAG9ByF,kBAAoB,WAChBvxB,EAAKgsB,kBADiB,IAGdwF,EAAkBxxB,EAAK4C,MAAvB4uB,cACHA,GAELjhB,WAAW,kBAAMihB,KAAiBC,QAGtCC,qBAAuB,WACnB1xB,EAAKgsB,kBADoB,IAGjB2F,EAAqB3xB,EAAK4C,MAA1B+uB,iBACHA,GAELphB,WAAW,kBAAMohB,KAAoBF,QAGzCG,iBAAmB,WACf5xB,EAAKgsB,kBADgB,IAGb6F,EAAiB7xB,EAAK4C,MAAtBivB,aACHA,GAELA,6EAGK,IAAA5sB,EAC0B9E,KAAKyC,MAA5BsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EAAG3F,EADfF,EACeE,OACZ2mB,EAAa3rB,KAAKiC,MAAlB0pB,SAER,OACIrnB,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQ4sB,WACnBnmB,aAAW,SACXqF,KAAM2S,QAAQmI,GACdpmB,QAASvF,KAAKmxB,iBACd7sB,EAAArB,EAAAC,cAAC0uB,GAAA3uB,EAAD,CAAgBE,UAAU,0BAE9BmB,EAAArB,EAAAC,cAAC0pB,GAAA3pB,EAAD,CACIrC,GAAG,cACH+qB,SAAUA,EACV9a,KAAM2S,QAAQmI,GACdkB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBC,aAAc,CACV5B,SAAU,MACVC,WAAY,SAEhBwG,gBAAiB,CACbzG,SAAU,SACVC,WAAY,SAEhBva,QAAS9Q,KAAK6rB,iBACdvnB,EAAArB,EAAAC,cAAC+pB,GAAAhqB,EAAD,CAAUsC,QAASvF,KAAKoxB,kBAAmBvT,UAAWiU,YAAc9sB,IAChEV,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAAC4a,GAAA7a,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CAAc+C,QAAS2E,EAAE,kBAE7BrG,EAAArB,EAAAC,cAAC+pB,GAAAhqB,EAAD,CAAUsC,QAASvF,KAAKuxB,qBAAsB1T,UAAWkU,YAAiB/sB,IACtEV,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAAC8uB,GAAA/uB,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CAAc+C,QAAS2E,EAAE,sBAE3B0L,YAAcrR,IACZV,EAAArB,EAAAC,cAAC+pB,GAAAhqB,EAAD,CAAUsC,QAASvF,KAAKyxB,iBAAkB5T,UAAWoU,YAAajtB,IAC9DV,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACgvB,GAAAjvB,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CAAc+C,QAAS2E,EAAE,oBAtF1BpH,IAAMC,WA2GlBsO,GALCC,YACZnM,IA7GW,CACX+rB,WAAY,CACRjb,OAAQ,UA2GO,CAAErQ,WAAW,IAChCmM,cAGWV,CAAQof,cCnIhB,SAASiB,GAAUC,GAAqB,IAAfC,EAAepuB,UAAA0C,OAAA,QAAA2rB,IAAAruB,UAAA,IAAAA,UAAA,GAC3C,GAAKmuB,EAAL,CAEA,GAAIC,GAASD,EAAKG,YAAcH,EAAKG,WAAW5rB,OAAS,EAAG,CACxD,IAAM6rB,EAAWJ,EAAKG,WAAWH,EAAKG,WAAW5rB,OAAS,GACpD8rB,EAAQ9iB,SAAS+iB,cACvBD,EAAME,SAASH,EAAUA,EAAS7rB,QAClC8rB,EAAMG,UAAS,GAEf,IAAMC,EAAY/wB,OAAOgxB,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBL,EAAK/W,UAAY+W,EAAKnW,aAG1BmW,EAAK/hB,SCfT,IAAM2V,GACS,EADTA,GAEK,GAFLA,GAGI,GAHJA,GAIG,GAJHA,GAKM,GALNA,GAOS,GAPTA,GAQO,GARPA,GASU,GATVA,GAUS,GAGFiN,GAAQ,CACjBC,QAAS,GACTC,aAAc,GACdC,UAHiB,SAGPhqB,GACN,MAA0C,qBAA5BpJ,KAAKkzB,QAAQ9pB,EAAEsF,UAEjC2kB,eANiB,SAMFjqB,GACX,MAA+C,qBAAjCpJ,KAAKmzB,aAAa/pB,EAAEsF,WAI1CukB,GAAMC,QAAQlN,KAAqB,EACnCiN,GAAMC,QAAQlN,KAAiB,EAC/BiN,GAAMC,QAAQlN,KAAgB,EAC9BiN,GAAMC,QAAQlN,KAAe,EAC7BiN,GAAMC,QAAQlN,KAAkB,EAEhCiN,GAAME,aAAanN,KAAmB,EACtCiN,GAAME,aAAanN,KAAqB,EACxCiN,GAAME,aAAanN,KAAqB,EACxCiN,GAAME,aAAanN,KAAsB,aCFnCsN,eACF,SAAAA,EAAY7wB,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAszB,IACfzzB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAwzB,GAAAnzB,KAAAH,KAAMyC,KASV8wB,QAAU,WACN,OAAO1zB,EAAK2zB,cAAc/mB,QAAQ6B,WAXnBzO,EAcnBwQ,MAAQ,WAAmB,IAAlBgiB,EAAkBpuB,UAAA0C,OAAA,QAAA2rB,IAAAruB,UAAA,IAAAA,UAAA,GAGvBkuB,GAFatyB,EAAK2zB,cAAc/mB,QAEhB4lB,IAjBDxyB,EAoBnB4zB,aAAe,WAAM,IAAA3uB,EACYjF,EAAK4C,MAA1BixB,EADS5uB,EACT4uB,OAAQC,EADC7uB,EACD6uB,SACXD,GACAC,GAELA,EAASD,EAAO9yB,KAzBDf,EA4BnBuuB,YAAc,SAAA3f,GAAS,IACXilB,EAAW7zB,EAAK4C,MAAhBixB,OAERjlB,EAAME,iBAEN,IAAMyjB,EAAOvyB,EAAK2zB,cAAc/mB,QAC1B9F,EAASyrB,EAAKwB,QAAQjtB,OAEtB2F,GADY8lB,EAAKwB,QAAQC,UAClBh0B,EAAK0zB,WAElB1zB,EAAK6C,SAAS,CACVoxB,aAAcntB,EAAS2F,EAAK3F,SAGhCpF,KAAgBiJ,aAAa,CACzBlI,QAAS,yBACT1B,GAAI8yB,EAAO9yB,GACX0L,UA7CWzM,EAiDnBmuB,cAAgB,SAAAvf,GACZ,IAAM2jB,EAAOvyB,EAAK2zB,cAAc/mB,QAC1BonB,EAAYzB,EAAKwB,QAAQC,UAEzBltB,EADY9G,EAAK0zB,UACE5sB,OAErBotB,GAAe,EACblB,EAAY/wB,OAAOgxB,eACnBM,EAAYH,GAAMG,UAAU3kB,GAC5B4kB,EAAiBJ,GAAMI,eAAe5kB,GAM5C,OAJIokB,IACAkB,IAAiBlB,EAAUmB,YAGvBvlB,EAAMrK,KACV,IAAK,YAED,IADavE,EAAK0zB,UACP,KAAAtoB,EACsBpL,EAAK4C,MAA1BixB,EADDzoB,EACCyoB,OAAQC,EADT1oB,EACS0oB,SAMhB,OALIA,GACAA,EAASD,EAAO9yB,IAAI,GAGxB6N,EAAME,kBACC,EAGX,MAEJ,IAAK,QAAS,IAAAvC,EACsBvM,EAAK4C,MAA7BixB,EADEtnB,EACFsnB,OAAQO,EADN7nB,EACM6nB,YAMhB,OALIP,GAAUO,GACVA,EAAYP,EAAO9yB,IAGvB6N,EAAME,kBACC,EAEX,IAAK,UACD,IAAMkkB,EAAY/wB,OAAOgxB,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUqB,YAAa,MAE5B,IAAMC,EAAa/B,EAAKG,YAAcH,EAAKG,WAAW5rB,OAAS,EAAIyrB,EAAKG,WAAW,GAAK,KAExF,IAAK4B,GAAetB,EAAUuB,aAAeD,IAAetB,EAAUwB,aAAe,KAAA7jB,EACjD3Q,EAAK4C,MAA7BixB,EADyEljB,EACzEkjB,OAAQY,EADiE9jB,EACjE8jB,YAMhB,OALIA,GACAA,EAAYZ,EAAO9yB,IAGvB6N,EAAME,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMkkB,EAAY/wB,OAAOgxB,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUqB,YAAa,MAE5B,IAAMK,EACFnC,EAAKG,YAAcH,EAAKG,WAAW5rB,OAAS,EAAIyrB,EAAKG,WAAWH,EAAKG,WAAW5rB,OAAS,GAAK,KAElG,IAAK4tB,GAAc1B,EAAUuB,aAAeG,GAAa1B,EAAUwB,eAAiBE,EAAU5tB,OAAS,KAAA+U,EACnE7b,EAAK4C,MAA7BixB,EAD2FhY,EAC3FgY,OAAQO,EADmFvY,EACnFuY,YAMhB,OALIA,GACAA,EAAYP,EAAO9yB,IAGvB6N,EAAME,kBACC,GAOnB,SAAIykB,IAAaC,OAIb1sB,GAAUktB,IAAcE,KACxBtlB,EAAME,kBACC,KAvII9O,EA6InBsuB,YAAc,SAAA1f,GACVA,EAAME,iBAEN,IACMklB,EADOh0B,EAAK2zB,cAAc/mB,QACTmnB,QAAQC,UAEzBhB,EAAY/wB,OAAOgxB,eACnB0B,EAAkB3B,EAAYA,EAAUmB,WAAa,GAErD1lB,EAAYzO,EAAK0zB,UACvB,KAAIjlB,EAAU3H,OAASksB,EAAUlsB,QAAUktB,GAA3C,CAEA,IAAIY,EAAYhmB,EAAMgB,cAAcC,QAAQ,cACvC+kB,IAELA,EAAYA,EAAUC,QAAQ,OAAQ,MAAMA,QAAQ,KAAM,KAEtDpmB,EAAU3H,OAAS6tB,EAAgB7tB,OAAS8tB,EAAU9tB,OAASktB,IAC/DY,EAAYA,EAAUjP,OAAO,EAAGqO,EAAYvlB,EAAU3H,OAAS6tB,EAAgB7tB,SAEnFgJ,SAASC,YAAY,cAAc,EAAO6kB,MA9J1C50B,EAAK2zB,cAAgBjwB,IAAM+M,YAE3BzQ,EAAKoC,MAAQ,CACT6xB,aAAca,KANH90B,wEAoKV,IAAAsc,EACkBnc,KAAKyC,MAApBsC,EADHoX,EACGpX,QAAS4F,EADZwR,EACYxR,EACTmpB,EAAiB9zB,KAAKiC,MAAtB6xB,aAER,OACIxvB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,sBACXmB,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAKwzB,cACV5yB,GAAG,0BACHwQ,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa3G,EAAE,UACfiqB,cAAaC,IACbC,kBAAiBH,IACjBI,QAAS/0B,KAAKouB,YACd7c,UAAWvR,KAAKguB,cAChBvc,QAASzR,KAAKmuB,cAElB7pB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCACXmB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQ4sB,WAAYpsB,QAASvF,KAAKyzB,cACrDnvB,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,CAAW+xB,SAAS,YAG5B1wB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,mCAADvF,OAAAyT,GAAA,EAAAzT,CAAA,GAAwCiF,EAAQe,aAAc,MACvFguB,GAAgBe,IAAqBI,KAClC3wB,EAAArB,EAAAC,cAACgyB,GAAA,EAAD,CACIC,MAAM,SACNhyB,UAAW4B,EAAQqwB,YACnB3pB,MAAOqoB,GAAgB,EAAI,gBAAkB,QAC7C9b,QAAQ,aACP8b,WAnMMvwB,IAAMC,WAyNtBsO,GAPCC,YACZgM,cACAnY,IAlOW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChB6xB,WAAY,CACR1f,QAAS,GAEbmjB,YAAa,CACT9iB,SAAU,WACV0O,MAAO,GACPC,OAAQ,EACR3B,SAAU,GACV+V,WAAY,SAEb9iB,YAAY1M,MAwNf2M,cACA0L,cAGWpM,CAAQwhB,ICtPhB,SAASgC,GAAYC,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBC,EAAsBD,EAAtBC,SAAUC,EAAYF,EAAZE,QAClB,IAQJ,SAAyBD,GACrB,QAAKA,GAEEA,EAAS7uB,QAAU+uB,IAXrBC,CAAgBH,GAAW,OAAO,EAEvC,IAAMI,EAAmBH,EAAQtmB,OAAO,SAAApO,GAAC,OAAIyiB,QAAQziB,EAAEuL,QACvD,QAAIspB,EAAiBjvB,QAAU,IAExBivB,EAAiBC,MAAMC,IASlC,SAASA,GAAcpC,GACnB,QAAKA,MACAA,EAAOpnB,MAELonB,EAAOpnB,KAAK3F,QAAUkuB,SCoG3Bl1B,GAAQ,gBAxHV,SAAAo2B,IAAc,IAAAl2B,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA+1B,IACVl2B,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAi2B,GAAA51B,KAAAH,QAQJI,MAAQ,WACJP,EAAK01B,KAAO,MAVF11B,EAadU,SAAW,SAAAC,GACP,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrBC,EAAwBD,EAAxBC,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACDZ,EAAKO,WArBXP,EAiCdqB,eAAiB,SAAAV,GACb,OAAQA,EAAO,UACX,IAAK,sBACDX,EAAKoO,IAAI,CACLrN,GAAIokB,KAAKgR,MACTR,SAAU,GACVC,QAAS,KAGb51B,EAAKoB,KAAK,sBAAuBT,GACjC,MAEJ,IAAK,2BAA4B,IACrBg1B,EAAah1B,EAAbg1B,SAER31B,EAAKmB,OAAOnB,EAAK01B,KAAM,CAAEC,aAEzB31B,EAAKoB,KAAK,2BAA4BT,GACtC,MAEJ,IAAK,yBAA0B,IACnBI,EAAaJ,EAAbI,GAAI0L,EAAS9L,EAAT8L,KACJmpB,EAAY51B,EAAK01B,KAAjBE,QAER51B,EAAKmB,OAAOnB,EAAK01B,KAAM,CAAEE,QAASA,EAAQvsB,IAAI,SAAAnI,GAAC,OAAKA,EAAEH,KAAOA,EAATd,OAAAkS,EAAA,EAAAlS,CAAA,GAAmBiB,EAAnB,CAAsBuL,SAAtBxM,OAAAkS,EAAA,EAAAlS,CAAA,GAAoCiB,OAExFlB,EAAKoB,KAAK,yBAA0BT,GACpC,MAEJ,IAAK,4BAA6B,IACtBkzB,EAAWlzB,EAAXkzB,OACA+B,EAAY51B,EAAK01B,KAAjBE,QAER51B,EAAKmB,OAAOnB,EAAK01B,KAAM,CAAEE,QAAO,GAAA9wB,OAAA7E,OAAAimB,GAAA,EAAAjmB,CAAM21B,GAAN,CAAe/B,MAC/C7zB,EAAKoB,KAAK,4BAA6BT,GACvC,MAEJ,IAAK,+BAAgC,IACzBI,EAAOJ,EAAPI,GACA60B,EAAY51B,EAAK01B,KAAjBE,QAER51B,EAAKmB,OAAOnB,EAAK01B,KAAM,CAAEE,QAASA,EAAQtmB,OAAO,SAAApO,GAAC,OAAIA,EAAEH,KAAOA,MAC/Df,EAAKoB,KAAK,+BAAgCT,GAC1C,MAEJ,IAAK,yBACDX,EAAKoO,IAAI,MAETpO,EAAKoB,KAAK,yBAA0BT,KAjFlCX,EAyFdyB,iBAAmB,WACfC,KAAgBC,YAAY,SAAU3B,EAAKU,UAC3CgB,KAAgBC,YAAY,eAAgB3B,EAAKqB,iBA3FvCrB,EA8Fd4B,oBAAsB,WAClBF,KAAgBG,eAAe,SAAU7B,EAAKU,UAC9CgB,KAAgBG,eAAe,eAAgB7B,EAAKqB,iBA7FpDrB,EAAKO,QAELP,EAAKyB,mBACLzB,EAAK8B,gBAAgBC,KANX/B,sEAmGPo2B,EAASC,GACZl2B,KAAKiO,IAAInO,OAAOkB,OAAO,GAAIi1B,EAASC,gCAGpCX,GACAv1B,KAAKu1B,KAAOA,gDAIZ,IAAKv1B,KAAKu1B,KAAM,OAAO,KACvB,IAAKD,GAAYt1B,KAAKu1B,MAAO,OAAO,KAFlB,IAAAY,EAGYn2B,KAAKu1B,KAEnC,MAAO,CACHjzB,QAAS,mBACTkzB,SAPcW,EAGVX,SAKJC,QARcU,EAGAV,QAKGtmB,OAAO,SAAApO,GAAC,OAAIyiB,QAAQziB,EAAEuL,QAAOpD,IAAI,SAAAnI,GAAC,OAAIA,EAAEuL,qBApH7CzK,eA0HxBC,OAAOyzB,KAAO51B,GACCA,UC3ETy2B,uBACF,SAAAA,EAAY3zB,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAo2B,IACfv2B,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAs2B,GAAAj2B,KAAAH,KAAMyC,KA8BV4zB,0BAA4B,SAAA71B,GAAU,IAC1B+0B,EAASQ,GAATR,KAER11B,EAAK6C,SAAS,CACV4zB,SAAS,EACTxC,aAAcyC,IACdhB,UArCW11B,EAyCnB22B,+BAAiC,SAAAh2B,GAAU,IAC/B+0B,EAASQ,GAATR,KAEFnD,EAAOvyB,EAAK42B,YAAYhqB,QACxB9F,EAASyrB,EAAKwB,QAAQjtB,OACtB2H,EAAY8jB,EAAK9jB,UAEvBzO,EAAK6C,SAAS,CACVoxB,aAAcntB,EAAS2H,EAAU3H,OACjC4uB,UAlDW11B,EAsDnB62B,uBAAyB,SAAAl2B,GAAU,IACvB+0B,EAASQ,GAATR,KAER11B,EAAK6C,SAAS,CAAE6yB,UAzDD11B,EA4DnB82B,gCAAkC,SAAAn2B,GAAU,IAChC+0B,EAASQ,GAATR,KAER11B,EAAK6C,SAAS,CAAE6yB,QAAQ,WACpBnlB,WAAW,WACMvQ,EAAK+2B,cAAc9vB,IAAIyuB,EAAKE,QAAQ9uB,OAAS,GAErD0J,OAAM,QAnEJxQ,EAkFnBmuB,cAAgB,SAAAvf,GACZ,IAAM2jB,EAAOvyB,EAAK42B,YAAYhqB,QACxBonB,EAAYzB,EAAKwB,QAAQC,UAEzBltB,EADYyrB,EAAK9jB,UACE3H,OAErBotB,GAAe,EACblB,EAAY/wB,OAAOgxB,eACnBM,EAAYH,GAAMG,UAAU3kB,GAC5B4kB,EAAiBJ,GAAMI,eAAe5kB,GAM5C,OAJIokB,IACAkB,IAAiBlB,EAAUmB,YAGvBvlB,EAAMrK,KACV,IAAK,QACD,IAAKqK,EAAMooB,SAIP,OAHAh3B,EAAKi3B,sBAAsB,GAE3BroB,EAAME,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMkkB,EAAY/wB,OAAOgxB,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUqB,YAAa,MAE5B,IAAMK,EACFnC,EAAKG,YAAcH,EAAKG,WAAW5rB,OAAS,EAAIyrB,EAAKG,WAAWH,EAAKG,WAAW5rB,OAAS,GAAK,KAElG,IAAK4tB,GAAc1B,EAAUuB,aAAeG,GAAa1B,EAAUwB,eAAiBE,EAAU5tB,OAI1F,OAHA9G,EAAKi3B,sBAAsB,GAE3BroB,EAAME,kBACC,EAOnB,SAAIykB,IAAaC,OAIb1sB,GAAUktB,IAAcE,KACxBtlB,EAAME,kBACC,KArII9O,EA2InBsuB,YAAc,SAAA1f,GACVA,EAAME,iBAEN,IAAMyjB,EAAOvyB,EAAK42B,YAAYhqB,QACxBonB,EAAYzB,EAAKwB,QAAQC,UAEzBhB,EAAY/wB,OAAOgxB,eACnB0B,EAAkB3B,EAAYA,EAAUmB,WAAa,GAErD1lB,EAAY8jB,EAAK9jB,UACvB,KAAIA,EAAU3H,OAASksB,EAAUlsB,QAAUktB,GAA3C,CAEA,IAAIY,EAAYhmB,EAAMgB,cAAcC,QAAQ,cACvC+kB,IAEDnmB,EAAU3H,OAAS6tB,EAAgB7tB,OAAS8tB,EAAU9tB,OAASktB,IAC/DY,EAAYA,EAAUjP,OAAO,EAAGqO,EAAYvlB,EAAU3H,OAAS6tB,EAAgB7tB,SAEnFgJ,SAASC,YAAY,cAAc,EAAO6kB,MA7J3B50B,EAgKnBuuB,YAAc,SAAA3f,GACVA,EAAME,iBAEN,IAAMyjB,EAAOvyB,EAAK42B,YAAYhqB,QAGxB6B,EAAY8jB,EAAK9jB,UAGL,SAFA8jB,EAAK7jB,YAGnB6jB,EAAK9jB,UAAY,IAOrB/M,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACTkzB,SAAUlnB,KAnLCzO,EAuLnBk3B,gBAAkB,WAAM,IACZxB,EAAS11B,EAAKoC,MAAdszB,KACR,GAAKA,KAEeA,EAAZE,QACI9uB,QAAUqwB,KAAtB,CAEA,IAAMtD,EAAS,CACX9yB,GAAIokB,KAAKgR,MACT1pB,KAAM,IAGV/K,KAAgBiJ,aAAa,CACzBlI,QAAS,4BACToxB,aArMW7zB,EAyMnBo3B,mBAAqB,SAACr2B,GAA0BqD,UAAA0C,OAAA,QAAA2rB,IAAAruB,UAAA,IAAAA,UAAA,GAExCpE,EAAKq3B,wBAAwBt2B,GAE7Bf,EAAK4zB,aAAa7yB,IA7MPf,EAiNnB4zB,aAAe,SAAA7yB,GACXW,KAAgBiJ,aAAa,CACzBlI,QAAS,+BACT1B,QApNWf,EAwNnBq3B,wBAA0B,SAAAt2B,GAAM,IACpB20B,EAAS11B,EAAKoC,MAAdszB,KACR,GAAKA,EAAL,CAOA,IAT4B,IAIpBE,EAAYF,EAAZE,QAEF0B,EAAQ1B,EAAQ2B,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAOA,IACxCy2B,EAAYF,EAAQ,EACtBG,GAAe,EACVpwB,EAAIiwB,EAAOjwB,EAAIuuB,EAAQ9uB,OAAQO,IAAK,CAEzC,GADiBuuB,EAAQvuB,GAAjBoF,KACE,CACNgrB,GAAe,EACf,OAIJA,GACAz3B,EAAKo3B,mBAAmBr2B,GAG5B,IAAM22B,EAAW13B,EAAK+2B,cAAc9vB,IAAIuwB,GACxC,GAAKE,EAOLA,EAASlnB,OAAM,QAJX8hB,GAFgBtyB,EAAK42B,YAAYhqB,SAEd,KAjPR5M,EAwPnB23B,sBAAwB,SAAA52B,GAAM,IAClB20B,EAAS11B,EAAKoC,MAAdszB,KACR,GAAKA,EAAL,CAF0B,IAOpB8B,EAHc9B,EAAZE,QAEc2B,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAOA,IACpB,EAEpB22B,EAAW13B,EAAK+2B,cAAc9vB,IAAIuwB,GACxC,GAAKE,EAOLA,EAASlnB,OAAM,QAJX8hB,GAFgBtyB,EAAK42B,YAAYhqB,SAEd,KArQR5M,EA4QnBi3B,sBAAwB,SAAAl2B,GAAM,IAClB20B,EAAS11B,EAAKoC,MAAdszB,KACR,GAAKA,EAAL,CAF0B,IAIlBE,EAAYF,EAAZE,QAEF0B,EAAQ1B,EAAQ2B,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAOA,IACxC62B,EAAYN,EAAQ,EAEpBO,EAAW73B,EAAK+2B,cAAc9vB,IAAI2wB,GACxC,GAAKC,EAULA,EAASrnB,MAAMqnB,GAAU,OAVzB,CACI,IAAMprB,EAAO6qB,GAAS,GAAKA,EAAQ1B,EAAQ9uB,OAAS8uB,EAAQ0B,GAAO7qB,KAAO,GAC1E,GAAImpB,EAAQ9uB,SAAW2F,EACnB,OAGJzM,EAAKk3B,qBA5RMl3B,EAmSnB83B,QAAU,WAAM,IACJpC,EAAS11B,EAAKoC,MAAdszB,KACR,GAAKA,EAAL,CAFY,IAIJE,EAAYF,EAAZE,QAEFmC,EAAWZ,IAAyBvB,EAAQ9uB,OAElD,OAAIixB,GAAY,EACL,gDAEM,IAAbA,EACO,6BAGX,eAAAjzB,OAAsBqyB,IAAyBvB,EAAQ9uB,OAAvD,oBAlTe9G,EAqTnB0K,YAAc,YF9UX,SAAqBgrB,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBC,EAAsBD,EAAtBC,SAAUC,EAAYF,EAAZE,QAClB,QAAID,GAEGC,EAAQ30B,KAAK,SAAAC,GAAC,OAAIyiB,QAAQziB,EAAEuL,QE2U3BurB,CAFah4B,EAAKoC,MAAdszB,MAKJ11B,EAAKi4B,yBAFLj4B,EAAK6C,SAAS,CAAE4zB,SAAS,KAzTdz2B,EA+TnBsM,WAAa,WAAM,IACP4rB,EAAWl4B,EAAK4C,MAAhBs1B,OAEFC,EAAmBjC,GAAUkC,sBAC9BD,IAELD,EAAOC,GAEPn4B,EAAKi4B,2BAvUUj4B,EA0UnBq4B,wBAA0B,WACtBr4B,EAAK6C,SAAS,CAAE4zB,SAAS,KA3UVz2B,EA8UnBi4B,uBAAyB,WACrBj4B,EAAKq4B,0BAEL32B,KAAgBiJ,aAAa,CACzBlI,QAAS,4BA/UbzC,EAAK42B,YAAclzB,IAAM+M,YACzBzQ,EAAK+2B,cAAgB,IAAI5vB,IAEzBnH,EAAKoC,MAAQ,CACTszB,KAAM,KACNe,SAAS,EACTxC,aAAcyC,KATH12B,mFAcfk2B,GAAU1iB,GAAG,yBAA0BrT,KAAK02B,wBAC5CX,GAAU1iB,GAAG,+BAAgCrT,KAAK02B,wBAClDX,GAAU1iB,GAAG,sBAAuBrT,KAAKq2B,2BACzCN,GAAU1iB,GAAG,4BAA6BrT,KAAK22B,iCAC/CZ,GAAU1iB,GAAG,yBAA0BrT,KAAK02B,wBAC5CX,GAAU1iB,GAAG,2BAA4BrT,KAAKw2B,+EAI9CT,GAAUr0B,eAAe,yBAA0B1B,KAAK02B,wBACxDX,GAAUr0B,eAAe,+BAAgC1B,KAAK02B,wBAC9DX,GAAUr0B,eAAe,sBAAuB1B,KAAKq2B,2BACrDN,GAAUr0B,eAAe,4BAA6B1B,KAAK22B,iCAC3DZ,GAAUr0B,eAAe,yBAA0B1B,KAAK02B,wBACxDX,GAAUr0B,eAAe,2BAA4B1B,KAAKw2B,2EA4C3C3zB,EAAWC,EAAWC,GAAU,IAAAwN,EAAAvQ,KAC9BA,KAAKiC,MAAdszB,OAEKzyB,EAAUyyB,MACnBnlB,WAAW,WACP+hB,GAAU5hB,EAAKkmB,YAAYhqB,SAAS,IACrC,oCAwQF,IAAA8R,EAAAve,KAAA8E,EACkB9E,KAAKyC,MAApBsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EADZkE,EAEmC7O,KAAKiC,MAArC6xB,EAFHjlB,EAEGilB,aAAcwC,EAFjBznB,EAEiBynB,QAASf,EAF1B1mB,EAE0B0mB,KAC/B,IAAKA,EAAM,OAAO,KAElB,IAAME,EAAUF,EAAOA,EAAKE,QAAU,GAEtCz1B,KAAK42B,cAAcuB,QACnB,IAAMtb,EAAQ4Y,EAAQvsB,IAAI,SAACnI,EAAGmG,GAAJ,OACtB5C,EAAArB,EAAAC,cAACk1B,GAAD,CACIjnB,IAAK,SAAA+T,GAAE,OAAI3G,EAAKqY,cAAc3oB,IAAI/G,EAAGge,IACrC9gB,IAAKrD,EAAEH,GACP8yB,OAAQ3yB,EACR4yB,SAAUpV,EAAK0Y,mBACf3C,YAAa/V,EAAKiZ,sBAClBvD,YAAa1V,EAAKuY,0BAIpBuB,EAAerB,IAAyBvB,EAAQ9uB,OAAS,EACzDrG,EAAON,KAAK23B,UAElB,OACIrzB,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIE,UAAW4B,EAAQ2rB,WACnB7f,MAAI,EACJ2Y,mBAAoB,EACpB1Y,QAAS9Q,KAAKuK,YACdwG,kBAAgB,gBAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,gBAAgB+J,EAAE,YAClCrG,EAAArB,EAAAC,cAACumB,GAAAxmB,EAAD,CAAe8B,QAAS,CAAE4c,KAAM5c,EAAQuzB,cACpCh0B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,qCACXmB,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAM,UAAUuM,QAAQ,YAAYsF,MAAO,CAAEib,SAAU,IAC9D5tB,EAAE,aAENmpB,GAAgB4B,IAAuB8C,KACpCl0B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAOqoB,GAAgB,EAAI,gBAAkB,QAAS9b,QAAQ,aACrE8b,IAIbxvB,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAKy2B,YACV71B,GAAG,8BACHwQ,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa3G,EAAE,gBACfiqB,cAAac,IACbZ,kBAAiByB,IACjB9kB,QAASzR,KAAKmuB,YACd5c,UAAWvR,KAAKguB,cAChB+G,QAAS/0B,KAAKouB,cAElB9pB,EAAArB,EAAAC,cAACua,GAAAxa,EAAD,CAASE,UAAW4B,EAAQ0zB,cAC5Bn0B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAM,UAAUuM,QAAQ,aAC/BrN,EAAE,gBAEPrG,EAAArB,EAAAC,cAAC2W,GAAA5W,EAAD,CAAM8B,QAAS,CAAE4c,KAAM5c,EAAQ2zB,WAC1B7b,EACAwb,GACG/zB,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CACIgC,UAAU,EACV9B,UAAW4B,EAAQ2S,SACnBD,QAAM,EACNlS,QAASvF,KAAK+2B,iBACdzyB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CAAc01B,mBAAiB,EAAC3yB,QAAS2E,EAAE,mBAIvDrG,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,KAAa3C,IAEjBgE,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUlG,QAASvF,KAAKuK,aACjCI,EAAE,WAEN2qB,GAAYC,IACTjxB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUlG,QAASvF,KAAKmM,YACjCxB,EAAE,WAKnBrG,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIE,UAAW4B,EAAQ2rB,WACnB7f,KAAMylB,EACN9M,mBAAoB,EACpB1Y,QAAS9Q,KAAKk4B,wBACdnnB,kBAAgB,gBAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,gBAAgB+J,EAAE,yBAClCrG,EAAArB,EAAAC,cAACumB,GAAAxmB,EAAD,CAAe8B,QAAS,CAAE4c,KAAM5c,EAAQuzB,cAAgB3tB,EAAE,wBAC1DrG,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUlG,QAASvF,KAAKk4B,yBACjCvtB,EAAE,WAEPrG,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUlG,QAASvF,KAAK83B,wBACjCntB,EAAE,iBAvbApH,IAAMC,YA2ctBsO,GAPCC,YACZgM,cACAnY,IA3dW,SAAAC,GAAK,MAAK,CACrB6qB,WAAY,CACRjlB,MAAO5F,EAAME,QAAQuG,KAAKtG,SAE9BsyB,YAAa,CACThrB,MAAO,KAEXmrB,YAAa,CACT/hB,OAAQ,aAEZgiB,SAAU,CACNhiB,OAAQ,WAEZgB,SAAU,CACNzF,QAAS,YACTxG,MAAO,UACP8B,OAAQ,IAEZqrB,eAAgB,MA0chBpmB,cACA0L,cAGWpM,CAAQskB,kCCjbRyC,sNA/CXC,wBAA0B,SAAAt4B,GAAU,IAAAsE,EACSjF,EAAK4C,MAAtCuC,EADwBF,EACxBE,OAAQod,EADgBtd,EAChBsd,UAAW/V,EADKvH,EACLuH,UAC3B,GAAKA,EAAL,CAFgC,IAIxBJ,EAAUI,EAAVJ,MACHA,GAEDzL,EAAOwE,SAAWA,GAAUxE,EAAO4hB,YAAcA,GAAa5hB,EAAOu4B,SAAW9sB,EAAMrL,IACtFf,EAAKuO,mGA3BT3E,KAAU4J,GAAG,qCAAsCrT,KAAK84B,yBACxDrvB,KAAU4J,GAAG,iCAAkCrT,KAAK84B,yBACpDrvB,KAAU4J,GAAG,oCAAqCrT,KAAK84B,yBACvDrvB,KAAU4J,GAAG,wBAAyBrT,KAAK84B,yBAC3CrvB,KAAU4J,GAAG,mCAAoCrT,KAAK84B,yBACtDrvB,KAAU4J,GAAG,iCAAkCrT,KAAK84B,yBACpDrvB,KAAU4J,GAAG,qCAAsCrT,KAAK84B,wEAIxDrvB,KAAU/H,eAAe,qCAAsC1B,KAAK84B,yBACpErvB,KAAU/H,eAAe,iCAAkC1B,KAAK84B,yBAChErvB,KAAU/H,eAAe,oCAAqC1B,KAAK84B,yBACnErvB,KAAU/H,eAAe,wBAAyB1B,KAAK84B,yBACvDrvB,KAAU/H,eAAe,mCAAoC1B,KAAK84B,yBAClErvB,KAAU/H,eAAe,iCAAkC1B,KAAK84B,yBAChErvB,KAAU/H,eAAe,qCAAsC1B,KAAK84B,0DAe/D,IAAA7tB,EACoCjL,KAAKyC,MAAtCuC,EADHiG,EACGjG,OAAQod,EADXnX,EACWmX,UAAW/V,EADtBpB,EACsBoB,UAC3B,IAAKA,EAAW,OAAO,KAFlB,IAIGJ,EAAUI,EAAVJ,MACR,IAAKA,EAAO,OAAO,KAEnB,IAAM+sB,EAAMC,YAAOhtB,GACbitB,EAAYC,aAAmBltB,GAC/BmtB,EAAcC,aAAar0B,EAAQod,GAEzC,OACI9d,EAAArB,EAAAC,cAAA,OAAKC,UAAU,cACXmB,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IACP,mBACA,CAAEi0B,yBAA0BF,GAC5B,CAAEG,4BAA6BP,GAC/B,CAAEQ,gBAAiBN,IAEvBO,WAAW,EACXT,IAAKA,EACLU,IAAI,aAvDAn2B,IAAMC,YCWxBm2B,sNASFC,mBAAqB,SAAAp3B,GAAU,IAAAsC,EACGjF,EAAK4C,MAA3BuC,EADmBF,EACnBE,OAAQod,EADWtd,EACXsd,UAEZpd,IAAWxC,EAAO2H,SAAWiY,IAAc5f,EAAO5B,IAClDf,EAAKuO,iBAIbyF,YAAc,SAAApF,GACVA,EAAMiY,qBAGVmT,WAAa,SAAAprB,GACTA,EAAMiY,kBADY,IAAAzb,EAGqBpL,EAAK4C,MAApCuC,EAHUiG,EAGVjG,OAAQod,EAHEnX,EAGFmX,UAAW7c,EAHT0F,EAGS1F,QAErBsF,EAAUiB,KAAahF,IAAI9B,EAAQod,GACzC,OAAKvX,EACDivB,aAAiBjvB,GAAiB,MAEtC8Q,aAAS3W,EAAQod,GAAW,QACxB7c,GAASA,MAJQ,yFAzBrBuG,KAAauH,GAAG,mBAAoBrT,KAAK45B,mEAIzC9tB,KAAapK,eAAe,mBAAoB1B,KAAK45B,qDA4BhD,IAAAxtB,EACqCpM,KAAKyC,MAAvCsC,EADHqH,EACGrH,QAAS4F,EADZyB,EACYzB,EAAG3F,EADfoH,EACepH,OAAQod,EADvBhW,EACuBgW,UAEtBvX,EAAUiB,KAAahF,IAAI9B,EAAQod,GAErC2X,EAASlvB,EAAiBmvB,aAASnvB,GAAhB,KACnBmB,EAAWnB,EAAyBkY,aAAWlY,EAASF,GAAnCA,EAAE,WACrB0B,EAAY4tB,aAAkBj1B,EAAQod,GAO5C,OALI0X,aAAiBjvB,KACjBkvB,EAAQ,KACR/tB,EAAUrB,EAAE,mBAIZrG,EAAArB,EAAAC,cAAA,OAAKC,UAAU,QAAQulB,YAAa1oB,KAAK65B,WAAYt0B,QAASvF,KAAK6T,aAC/DvP,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,eAAgBN,EAAQm1B,yBAClD7tB,GAAa/H,EAAArB,EAAAC,cAACi3B,GAAD,CAAWn1B,OAAQA,EAAQod,UAAWA,EAAW/V,UAAWA,IAC1E/H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACV42B,GACGz1B,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,sBAAuBN,EAAQq1B,kBAAmBL,GAEjFz1B,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,yBAA0BN,EAAQs1B,uBACxDruB,aA1DTzI,IAAMC,YA8EXsO,GALCC,YACZnM,IAjFW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChBu6B,qBAAsB,CAClB5uB,MAAO5F,EAAME,QAAQuG,KAAKoH,YAE3B4mB,YAAaz0B,KA6EG,CAAEQ,WAAW,IAChCmM,cAGWV,CAAQ6nB,IC9EjBY,sNACFhwB,YAAc,WACVhJ,KAAgBiJ,aAAa,CACzBlI,QAAS,oBACT0C,OAAQnF,EAAK4C,MAAMuC,OACnBod,UAAW,6EAIV,IAAAtd,EACkC9E,KAAKyC,MAApCsC,EADHD,EACGC,QAASC,EADZF,EACYE,OAAQod,EADpBtd,EACoBsd,UACzB,OAAKpd,GACAod,EAGD9d,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,+BACXmB,EAAArB,EAAAC,cAACs3B,GAAAv3B,EAAD,CAAWE,UAAW4B,EAAQ01B,aAElCn2B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iCACXmB,EAAArB,EAAAC,cAACw3B,GAAD,CAAO11B,OAAQA,EAAQod,UAAWA,KAEtC9d,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQiZ,gBAAiBxS,aAAW,QAAQjG,QAASvF,KAAKuK,aAC7EjG,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,SAbI,YAXCM,IAAMC,YAqCpBoC,OA/CA,SAAAC,GAAK,MAAK,CACrB40B,UAAW,CACPxoB,QAAS,GACTxG,MAAO5F,EAAME,QAAQC,QAAQC,MAEjC+X,gBAAiB,CACbtH,OAAQ,KAyCD9Q,CAAmB20B,IC1BnBI,cA3BX,SAAAA,EAAY31B,GAASlF,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA26B,GACjB36B,KAAKgF,OAASA,EACdhF,KAAK46B,WAAa,2DAGZ5vB,GACN,GAAKhL,KAAKgF,OAAV,CAEA,GAAIhF,KAAK46B,YAAc56B,KAAK46B,WAAW,WAAa5vB,EAAO,SAAU,CACjE,IAAIgrB,EAAM,IAAIhR,KAEd,GADAgR,EAAI6E,WAAW7E,EAAI8E,aAAeC,MAC9B/6B,KAAKg7B,gBAAkBh7B,KAAKg7B,eAAiBhF,EAC7C,OAIRh2B,KAAK46B,WAAa5vB,EAClBhL,KAAKg7B,eAAiB,IAAIhW,KAE1BzjB,KAAgBc,KAAK,CACjBC,QAAS,iBACT6H,QAASnK,KAAKgF,OACdgG,OAAQA,wBCKdiwB,WAAoB13B,IAAM23B,KAAK,kBAAMlyB,QAAAC,IAAA,CAAAkyB,EAAA/xB,EAAA,GAAA+xB,EAAA/xB,EAAA,KAAA7G,KAAA44B,EAAAC,KAAA,cAYrCC,eACF,SAAAA,EAAY54B,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAq7B,IACfx7B,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAu7B,GAAAl7B,KAAAH,KAAMyC,KAgEV64B,0BAA4B,SAAA96B,GAAU,IACjB+6B,EAAS/6B,EAAlBuB,QACR,GAAKw5B,EAAL,CAFkC,IAI1Bx5B,EAAsCw5B,EAAtCx5B,QAASyL,EAA6B+tB,EAA7B/tB,UAAWF,EAAkBiuB,EAAlBjuB,MAAOC,EAAWguB,EAAXhuB,OACnC,GAAKxL,EAAL,CAEAlC,EAAK27B,cAAc/uB,QAAQ6B,UAAY,KACvCzO,EAAK27B,cAAc/uB,QAAQgvB,YAAc,KACzC57B,EAAK0O,UAAY,KAEjB,IAAMvC,EAAU,CACZ1J,QAAS,sBACTP,QAAS,CACLO,QAAS,cACT1B,GAAImB,EAAQnB,IAEhB0M,QACAC,UAGJ,GAAIC,EAAW,KACIkuB,EAAmDluB,EAA1DF,MAA+BquB,EAA2BnuB,EAAnCD,OAAyBtB,EAAUuB,EAAVvB,MAExDD,EAAQwB,UAAY,CAChBA,UAAW,CACPlL,QAAS,cACT1B,GAAIqL,EAAMrL,IAEd0M,MAAOouB,EACPnuB,OAAQouB,GAIhB97B,EAAK+7B,eAAe5vB,GAAS,EAAM,SAAAxJ,MAEnCjB,KAAgBiJ,aAAa,CACzBlI,QAAS,gCACThC,KAAM,UAvGKT,EA2GnBg8B,oBAAsB,SAAAr7B,GAAU,IACZkY,EAAkB7Y,EAAKoC,MAA/B+C,OACAA,EAAsBxE,EAAtBwE,OAAQod,EAAc5hB,EAAd4hB,UAEZ1J,IAAkB1T,IAItBnF,EAAK6C,SAAS,CAAEo5B,iBAAkB1Z,IAE9BA,GACAviB,EAAKk8B,kBAtHMl8B,EA0HnB2f,qBAAuB,SAAAhf,GACAX,EAAKoC,MAAhB+C,SACOxE,EAAOif,aAEtB5f,EAAK0O,UAAY,KACjB1O,EAAK6C,SAAS,CACVsC,OAAQxE,EAAOif,WACfqc,iBAAkBE,YAA6Bx7B,EAAOif,YACtDwc,iBAAiB,MAlINp8B,EAsInBq8B,SAAW,WAAM,IACLl3B,EAAWnF,EAAKoC,MAAhB+C,OAEFm3B,EAAUt8B,EAAK27B,cAAc/uB,QAE7B2vB,EAAQC,YAAar3B,GACvBo3B,GACAD,EAAQ7tB,UAAY8tB,EAAM9vB,KAC1BzM,EAAK0O,UAAY6tB,EAAM9vB,OAEvB6vB,EAAQ7tB,UAAY,KACpBzO,EAAK0O,UAAY,OAjJN1O,EAsKnBk8B,cAAgB,WACZ3rB,WAAW,WACP,GAAIvQ,EAAK27B,cAAc/uB,QAAS,CAC5B,IAAM0vB,EAAUt8B,EAAK27B,cAAc/uB,QAEnC,GAAI0vB,EAAQ5J,WAAW5rB,OAAS,EAAG,CAC/B,IAAM8rB,EAAQ9iB,SAAS+iB,cACvBD,EAAME,SAASwJ,EAAQ5J,WAAW,GAAI4J,EAAQ5J,WAAW,GAAG5rB,QAC5D8rB,EAAMG,UAAS,GAEf,IAAMC,EAAY/wB,OAAOgxB,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB0J,EAAQ9rB,UAEb,MAtLYxQ,EAyLnBy8B,oBAAsB,SAAAC,GAClB,GAAKA,EAAL,CADsC,IAG9Bv3B,EAAyBu3B,EAAzBv3B,OAAQw3B,EAAiBD,EAAjBC,aACXx3B,GAELzD,KAAgBc,KAAK,CACjBC,QAAS,sBACT6H,QAASnF,EACTy3B,cAAeD,MAlMJ38B,EAsMnB68B,uBAAyB,SAAC13B,EAAQ82B,GAC9B,IAAI3nB,EAAOC,KAAUtN,IAAI9B,GACzB,GAAKmP,EAAL,CACA,IAAMwoB,EAAW98B,EAAK+8B,eAElBC,EAAgB,GAChBC,EAA2B,EACvBL,EAAkBtoB,EAAlBsoB,cACR,GAAIA,GAAiBA,EAAcM,oBAAsBN,EAAcM,mBAAmBzwB,KAAM,KACpFO,EAA4C4vB,EAA5C5vB,oBAAqBkwB,EAAuBN,EAAvBM,mBAE7BD,EAA2BjwB,EACvBkwB,GAAsBA,EAAmBzwB,OACzCuwB,EAAgBE,EAAmBzwB,KAAKA,MAIhD,OAAIqwB,IAAaE,GAAiBf,IAAqBgB,EAgB5C,CAAE93B,OAAQA,EAAQw3B,aAfJ,CACjBl6B,QAAS,eACTuK,oBAAqBivB,EACrBiB,mBAAoB,CAChBz6B,QAAS,mBACTgK,KAAM,CACFhK,QAAS,gBACTgK,KAAMqwB,EACNzvB,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,KAOlB,OA1OQvN,EA6OnBm9B,aAAe,WACX,IAAI1wB,EAAOzM,EAAK+8B,eAOhB,GALA/8B,EAAK27B,cAAc/uB,QAAQ6B,UAAY,KACvCzO,EAAK27B,cAAc/uB,QAAQgvB,YAAc,KACzC57B,EAAK0O,UAAY,KACjB1O,EAAKuuB,cAEA9hB,GACAA,EAAKyC,OAAV,CAEA,IAAM/C,EAAU,CACZ1J,QAAS,mBACTgK,KAAM,CACFhK,QAAS,gBACTgK,KAAMA,EACNY,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,GAGjBvN,EAAK+7B,eAAe5vB,GAAS,EAAO,SAAAxJ,QAnQrB3C,EAsQnB4xB,iBAAmB,WACflwB,KAAgBiJ,aAAa,CACzBlI,QAAS,yBAxQEzC,EA4QnBuxB,kBAAoB,WACXvxB,EAAKo9B,gBAEVp9B,EAAKo9B,eAAexwB,QAAQywB,SA/Qbr9B,EAkRnBs9B,0BAA4B,WACxB,IAAIC,EAAQv9B,EAAKo9B,eAAexwB,QAAQ2wB,MACnB,IAAjBA,EAAMz2B,SAEV02B,MAAMC,KAAKF,GAAOzwB,QAAQ,SAAA4wB,GACtBC,aAAcD,EAAM,SAAA/6B,GAChB3C,EAAK49B,gBAAgBj7B,OAI7B3C,EAAKo9B,eAAexwB,QAAQpI,MAAQ,KA5RrBxE,EA+RnB0xB,qBAAuB,WACd1xB,EAAK69B,mBAEV79B,EAAK69B,kBAAkBjxB,QAAQywB,SAlShBr9B,EAqSnB89B,6BAA+B,WAC3B,IAAIP,EAAQv9B,EAAK69B,kBAAkBjxB,QAAQ2wB,MACtB,IAAjBA,EAAMz2B,SAEV02B,MAAMC,KAAKF,GAAOzwB,QAAQ,SAAA4wB,GACtB19B,EAAK+9B,mBAAmBL,KAG5B19B,EAAK69B,kBAAkBjxB,QAAQpI,MAAQ,KA7SxBxE,EA2TnBouB,YAAc,WAAM,IACRjpB,EAAWnF,EAAKoC,MAAhB+C,OAER,IAAIwV,YAASxV,GAAb,CAEA,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,EAAL,CAEA,IAAM7F,EAAYzO,EAAK27B,cAAc/uB,QAAQ6B,UACvCC,EAAY1O,EAAK27B,cAAc/uB,QAAQ8B,UAM7C,GAJID,GAA2B,OAAdA,GAAsBC,IAA4B,SAAdA,GAAsC,oBAAdA,KACzE1O,EAAK27B,cAAc/uB,QAAQ8B,UAAY,IAGtCD,GAEiB6F,EAAKwmB,sBAAwBxmB,EAAKwmB,oBAAsB,IAAIA,GAAoBxmB,EAAKvT,MAE7Fi9B,UAAU,CAAEv7B,QAAS,wBA9UpBzC,EAiVnBmuB,cAAgB,SAAA5kB,GACMvJ,EAAK27B,cAAc/uB,QAAQ6B,UAA7C,IACMC,EAAY1O,EAAK27B,cAAc/uB,QAAQ8B,UAC7C1O,EAAK0O,UAAYA,EAEH,UAAVnF,EAAEhF,KAAoBgF,EAAEytB,WACxBztB,EAAEuF,iBACF9O,EAAKm9B,iBAxVMn9B,EA4VnB49B,gBAAkB,SAAAF,GACd,GAAKA,EAAL,CAEA,IAAMvxB,EAAU,CACZ1J,QAAS,oBACT2J,MAAO,CAAE3J,QAAS,gBAAiBynB,KAAMwT,EAAKxT,KAAM+T,KAAMP,GAC1DjwB,MAAOiwB,EAAKQ,WACZxwB,OAAQgwB,EAAKS,aAGjBn+B,EAAK+7B,eAAe5vB,GAAS,EAAM,SAAAxJ,GAC/B,IAAMy7B,EAAgBnyB,KAAahF,IAAItE,EAAO2H,QAAS3H,EAAO5B,IACzC,MAAjBq9B,GACAp+B,EAAKq+B,qBAAqBD,EAAeV,GAG7C9zB,KAAU00B,WAAW37B,EAAOwJ,QAAQC,MAAMC,MAAM,GAAGD,MAAMrL,GAAI4B,OA5WlD3C,EAgXnBu+B,eAAiB,SAAA7I,GACb11B,EAAK+7B,eAAerG,GAAM,EAAM,eAjXjB11B,EAoXnB+9B,mBAAqB,SAAAL,GACjB,GAAKA,EAAL,CAEA,IAAMvxB,EAAU,CACZ1J,QAAS,uBACTqN,SAAU,CAAErN,QAAS,gBAAiBynB,KAAMwT,EAAKxT,KAAM+T,KAAMP,IAGjE19B,EAAK+7B,eAAe5vB,GAAS,EAAM,SAAAxJ,GAAM,OAAIiH,KAAU00B,WAAW37B,EAAOwJ,QAAQ2D,SAASA,SAAS/O,GAAI4B,OA5XxF3C,EA+XnBsuB,YAAc,SAAA1f,GAIV,IAHA,IAAMoO,GAASpO,EAAMgB,eAAiBhB,EAAM4vB,cAAc5uB,eAAeoN,MAEnEugB,EAAQ,GACLl2B,EAAI,EAAGA,EAAI2V,EAAMlW,OAAQO,IACQ,IAAlC2V,EAAM3V,GAAGo3B,KAAKruB,QAAQ,SACtBmtB,EAAMz0B,KAAKkU,EAAM3V,GAAGq3B,aAI5B,GAAInB,EAAMz2B,OAAS,EAKf,OAJA8H,EAAME,iBAEN9O,EAAKu9B,MAAQA,OACbv9B,EAAK6C,SAAS,CAAEu5B,iBAAiB,IAIrC,IAAMzsB,EAAYf,EAAMgB,cAAcC,QAAQ,cAC9C,OAAIF,GACAf,EAAME,iBACNgB,SAASC,YAAY,cAAc,EAAOJ,QAC1C3P,EAAK0O,UAAYiB,SAHrB,GAlZe3P,EA0ZnB2+B,oBAAsB,WAClB3+B,EAAK4+B,mBAEL,IAAMrB,EAAQv9B,EAAKu9B,MACdA,GACAA,EAAMz2B,SAEXy2B,EAAMzwB,QAAQ,SAAA4wB,GACV19B,EAAK+9B,mBAAmBL,KAG5B19B,EAAKu9B,MAAQ,OAraEv9B,EAwanB4+B,iBAAmB,WACf5+B,EAAK6C,SAAS,CAAEu5B,iBAAiB,KAzalBp8B,EA4anBq+B,qBAAuB,SAACrzB,EAAS6zB,GAC7B,GAAI7zB,GAAWA,EAAQ8zB,eAAoD,+BAAnC9zB,EAAQ8zB,cAAc,UACtD9zB,EAAQmB,SAAwC,iBAA7BnB,EAAQmB,QAAQ,UAA+BnB,EAAQmB,QAAQC,MAAO,CACzF,IAAIoB,EAAOuxB,aAAQ/zB,EAAQmB,QAAQC,MAAMC,MAAO2yB,KAChD,IAAKxxB,EAAM,OAEX,IAAIkwB,EAAOlwB,EAAKpB,MACZsxB,GAAQA,EAAKhZ,OAASgZ,EAAKhZ,MAAMua,2BAA6BvB,EAAKmB,OACnEnB,EAAKmB,KAAOA,EACZj1B,KAAUs1B,gBAAgBl0B,EAAQV,QAASU,EAAQjK,GAAI28B,EAAK38B,OArbzDf,EA2bnB+7B,eA3bmB,eAAAxb,EAAAtgB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA2bF,SAAAC,EAAOqE,EAASgzB,EAAYC,GAA5B,IAAApwB,EAAA7J,EAAA82B,EAAAt5B,EAAA,OAAAiF,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAuG,EACwBhP,EAAKoC,MAAlC+C,EADK6J,EACL7J,OAAQ82B,EADHjtB,EACGitB,iBAEX92B,EAHQ,CAAAoD,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,oBAIRgC,EAJQ,CAAA5D,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBAAA5B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAOH6C,IAAiB+zB,sBAAjB,mCAAAv6B,OAA0EK,IAPvE,cAAAoD,EAAAE,KAAA,GASU/G,KAAgBc,KAAK,CACpCC,QAAS,cACT6H,QAASnF,EACT6H,oBAAqBivB,EACrB7uB,sBAAuBjB,IAblB,QASLxJ,EATK4F,EAAAiB,KAgBTxJ,EAAK6C,SAAS,CAAEo5B,iBAAkB,GAAK,WACnC,GAAIkD,EAAY,CACZ,IAAMG,EAAsBt/B,EAAK68B,uBAC7B78B,EAAKoC,MAAM+C,OACXnF,EAAKoC,MAAM65B,kBAEfj8B,EAAKy8B,oBAAoB6C,MAKjC59B,KAAgBc,KAAK,CACjBC,QAAS,eACT6H,QAASnF,EACT6I,YAAa,CAACrL,EAAO5B,MAGzBq+B,EAASz8B,GAjCA4F,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAg3B,GAAAh3B,EAAA,SAmCTi3B,MAAM,qBAAuBC,KAAKC,UAALn3B,EAAAg3B,KAnCpB,yBAAAh3B,EAAAwB,SAAAjC,EAAA,kBA3bE,gBAAA0Y,EAAAmf,EAAAC,GAAA,OAAArf,EAAApc,MAAAhE,KAAAiE,YAAA,GAAApE,EAkenB6/B,kBAAoB,SAAAx9B,GACXA,IAELrC,EAAK27B,cAAc/uB,QAAQ6B,WAAapM,EAAMy9B,OAC9C9/B,EAAKuuB,gBAteUvuB,EAyenBuuB,YAzemB,eAAArmB,EAAAjI,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAyeL,SAAAmC,EAAM4E,GAAN,IAAAH,EAAA8wB,EAAAQ,EAAAC,EAAAC,EAAA3+B,EAAA,OAAAsG,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,WACJgG,EAAYzO,EAAK27B,cAAc/uB,QAAQ6B,cAC3BA,EAAU3H,OAAS,IAF3B,CAAAoD,EAAAzB,KAAA,eAGW1I,KAATU,MAEJiB,KAAgBiJ,aAAa,CACzBlI,QAAS,gCACThC,KAAM,OAPRyJ,EAAAC,OAAA,oBAcJo1B,EAAKW,YAAY/J,MACjB4J,EAAQI,OACVH,EAAQD,EAAMK,KAAK3xB,GACjBwxB,EAAKC,YAAY/J,MACvB9nB,QAAQC,IAAI,YAAc2xB,EAAKV,GAAM,KAAMS,GACtCA,GAASvxB,IAAcuxB,EAAM,GAnBxB,CAAA91B,EAAAzB,KAAA,gBAoBW1I,KAATU,MAEJiB,KAAgBiJ,aAAa,CACzBlI,QAAS,gCACThC,KAAM,OAxBRyJ,EAAAC,OAAA,kBA+BJ7I,EAAY6jB,KAAKgR,MACvBz0B,KAAgBc,KAAK,CACjBC,QAAS,cACTJ,MAAO29B,EAAM,GACbn3B,MAAO,MACRnG,KAAK,SAAAlB,GACJE,KAAgBiJ,aAAa,CACzBlI,QAAS,gCACThC,KAAM,CACFa,YACAe,MAAO29B,EAAM,GACbx+B,gBAKZE,KAAgBc,KAAK,CACjBC,QAAS,iBACTJ,MAAO29B,EAAM,GACbn3B,MAAO,MACRnG,KAAK,SAAAlB,GACJE,KAAgBiJ,aAAa,CACzBlI,QAAS,iCACThC,KAAM,CACFa,YACAe,MAAO29B,EAAM,GACbx+B,gBAzDF,yBAAA0I,EAAAH,SAAAC,MAzeK,gBAAAq2B,GAAA,OAAAn4B,EAAA/D,MAAAhE,KAAAiE,YAAA,GAGfpE,EAAK69B,kBAAoBn6B,IAAM+M,YAC/BzQ,EAAKo9B,eAAiB15B,IAAM+M,YAC5BzQ,EAAK27B,cAAgBj4B,IAAM+M,YAE3B,IAAMtL,EAASmG,IAAiBwN,YAPjB,OASf9Y,EAAK0O,UAAY,KACjB1O,EAAKoC,MAAQ,CACT+C,OAAQA,EACR82B,iBAAkBE,YAA6Bh3B,GAC/Ci3B,iBAAiB,GAbNp8B,qFAiBGsT,EAAWC,GAAW,IAAAtO,EACnB9E,KAAKyC,MAAlBoD,EADgCf,EAChCe,MAAO8E,EADyB7F,EACzB6F,EADyB8F,EAEczQ,KAAKiC,MAAnD+C,EAFgCyL,EAEhCzL,OAAQ82B,EAFwBrrB,EAExBqrB,iBAAkBG,EAFMxrB,EAENwrB,gBAElC,OAAI9oB,EAAUtN,QAAUA,IAIpBsN,EAAUxI,IAAMA,IAIhByI,EAAUpO,SAAWA,IAIrBoO,EAAU0oB,mBAAqBA,GAI/B1oB,EAAU6oB,kBAAoBA,iDAUlC9wB,IAAiBkI,GAAG,qBAAsBrT,KAAKwf,sBAC/C1T,KAAauH,GAAG,oBAAqBrT,KAAK67B,qBAC1Cj8B,KAAayT,GAAG,0BAA2BrT,KAAKs7B,2BAEhDt7B,KAAK+7B,gBACL/7B,KAAKk8B,WACLl8B,KAAKouB,6DAIL,IAAM+Q,EAAsBn/B,KAAK08B,uBAAuB18B,KAAKiC,MAAM+C,OAAQhF,KAAKiC,MAAM65B,kBACtF97B,KAAKs8B,oBAAoB6C,GAEzBh0B,IAAiBzJ,eAAe,qBAAsB1B,KAAKwf,sBAC3D1T,KAAapK,eAAe,oBAAqB1B,KAAK67B,qBACtDj8B,KAAa8B,eAAe,0BAA2B1B,KAAKs7B,sEAuF7Cz4B,EAAWC,EAAWC,GAErC/C,KAAKs8B,oBAAoBv5B,GAErBD,EAAUkC,SAAWhF,KAAKiC,MAAM+C,SAChChF,KAAK+7B,gBACL/7B,KAAKk8B,WACLl8B,KAAKouB,+DAIWvrB,EAAWC,GAC/B,OAAIA,EAAUkC,SAAWhF,KAAKiC,MAAM+C,OAAe,KAE5ChF,KAAK08B,uBAAuB55B,EAAUkC,OAAQlC,EAAUg5B,yDA8I/D,IAAIxtB,EAAYtO,KAAKw7B,cAAc/uB,QAAQ6B,UACvCC,EAAYvO,KAAKw7B,cAAc/uB,QAAQ8B,UAM3C,OAJID,GAA2B,OAAdA,GAAsBC,IAA4B,SAAdA,GAAsC,oBAAdA,KACzEvO,KAAKw7B,cAAc/uB,QAAQ8B,UAAY,IAGpCD,mCAgPF,IAAArD,EACkBjL,KAAKyC,MAApBsC,EADHkG,EACGlG,QAAS4F,EADZM,EACYN,EADZw1B,EAEiDngC,KAAKiC,MAAnD+C,EAFHm7B,EAEGn7B,OAAQ82B,EAFXqE,EAEWrE,iBAAkBG,EAF7BkE,EAE6BlE,gBAE5BjwB,EAA6B,OAAnBhM,KAAKuO,UAAqBvO,KAAKuO,UAAY,KAE3D,OACIjK,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,aAC5CxB,EAAArB,EAAAC,cAACk9B,GAAD,CAAgBp7B,OAAQA,EAAQod,UAAW0Z,IAC3Cx3B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAACoB,EAAArB,EAAMo9B,SAAP,CACIC,SACIh8B,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQ4sB,WAAYnmB,aAAW,YAClDlH,EAAArB,EAAAC,cAACq9B,GAAAt9B,EAAD,QAGRqB,EAAArB,EAAAC,cAAC+3B,GAAD,CAAmB/1B,SAAUlF,KAAK0/B,sBAG1Cp7B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,0BACXmB,EAAArB,EAAAC,cAAA,OACItC,GAAG,mBACHuQ,IAAKnR,KAAKw7B,cACVp3B,IAAK,IAAI4gB,KACT1T,YAAa3G,EAAE,WACfyG,iBAAe,EACfC,gCAA8B,EAC9BE,UAAWvR,KAAKguB,cAChBxc,QAASxR,KAAKiuB,YACdxc,QAASzR,KAAKmuB,YACd4G,QAAS/0B,KAAKouB,aACbpiB,IAGT1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,yBACXmB,EAAArB,EAAAC,cAAA,SACIiO,IAAKnR,KAAK09B,kBACVv6B,UAAU,yBACVkR,KAAK,OACLmsB,SAAS,WACTpoB,SAAUpY,KAAK29B,+BAEnBr5B,EAAArB,EAAAC,cAAA,SACIiO,IAAKnR,KAAKi9B,eACV95B,UAAU,yBACVkR,KAAK,OACLmsB,SAAS,WACTC,OAAO,UACProB,SAAUpY,KAAKm9B,4BAEnB74B,EAAArB,EAAAC,cAACw9B,GAAD,CACI17B,OAAQA,EACRqsB,cAAerxB,KAAKoxB,kBACpBI,iBAAkBxxB,KAAKuxB,qBACvBG,aAAc1xB,KAAKyxB,mBAMvBntB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIwI,MAAM,UACNtI,UAAW4B,EAAQ4sB,WACnBnmB,aAAW,OACXjG,QAASvF,KAAKg9B,cACd14B,EAAArB,EAAAC,cAACy9B,GAAA19B,EAAD,WAKdoT,YAAcrR,IAAWV,EAAArB,EAAAC,cAAC09B,GAAD,CAAkB7I,OAAQ/3B,KAAKo+B,iBAC1D95B,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIumB,mBAAoB,EACpB3Y,KAAMorB,EACNnrB,QAAS9Q,KAAKy+B,iBACd1tB,kBAAgB,uBAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,uBAAuB+J,EAAE,YACzCrG,EAAArB,EAAAC,cAACumB,GAAAxmB,EAAD,KACIqB,EAAArB,EAAAC,cAAC29B,GAAA59B,EAAD,KACKjD,KAAKo9B,OAASp9B,KAAKo9B,MAAMz2B,OAAS,EAC7B,uCACA,wCAGdrC,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKy+B,iBAAkBhzB,MAAM,WACzCd,EAAE,WAEPrG,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKw+B,oBAAqB/yB,MAAM,WAC5Cd,EAAE,iBApoBDnH,aAkpBfsO,GALCC,YACZnM,IAxpBW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChB6xB,WAAY,CACRjb,OAAQ,SAEZsH,gBAAiB,CACbtH,OAAQ,IAETnE,YAAY1M,KAipBI,CAAEQ,WAAW,IAChCmM,cAGWV,CAAQupB,yBC9qBjByF,4LACO,IAAAh8B,EACmC9E,KAAKyC,MAArCsC,EADHD,EACGC,QAASwe,EADZze,EACYye,QAASwd,EADrBj8B,EACqBi8B,UAE1B,OACIz8B,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,2BAC5CxB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,0BACXmB,EAAArB,EAAAC,cAAC89B,GAAA/9B,EAAD,CAAQwI,MAAM,UAAUtI,UAAW4B,EAAQ0S,OAAQlS,QAASw7B,GACvDxd,YARGhgB,IAAMC,YAgBnBoC,OAxBA,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChB2X,OAAQ,CACJf,OAAQ,OACR4I,SAAU,UAEX/M,YAAY1M,KAmBJD,CAAmBk7B,ICTnBG,eAjBX,SAAAA,EAAYx+B,GAAO,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAihC,GAAAnhC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAmhC,GAAA9gC,KAAAH,KACTyC,0EAGD,IAEC8gB,EADcvjB,KAAKiC,MAAjB4U,QACkB,SAAW,OAErC,OACIvS,EAAArB,EAAAC,cAACg+B,GAAD,CACI3d,QAASA,EACTwd,UAAW/gC,KAAKiX,oCAZUN,ICoK3BwqB,uBA5JX,SAAAA,EAAY1+B,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAmhC,IACfthC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAqhC,GAAAhhC,KAAAH,KAAMyC,KAqBV2S,mBAAqB,SAAA5U,GAAU,IACnBwE,EAAWnF,EAAK4C,MAAhBuC,OAEJo8B,YAAgBp8B,EAAQxE,EAAO6U,YAAYzU,KAC3Cf,EAAKuO,eA1BMvO,EA8BnByV,mBAAqB,SAAA9U,GAAU,IACnBwE,EAAWnF,EAAK4C,MAAhBuC,OAEJq8B,YAAgBr8B,EAAQxE,EAAO+U,WAAW3U,KAC1Cf,EAAKuO,eAlCMvO,EAsCnByhC,WAAa,WAAM,IACPt8B,EAAWnF,EAAK4C,MAAhBuC,OACHA,GAELzD,KAAgBc,KAAK,CACjBC,QAAS,WACT6H,QAASnF,KA5CEnF,EAgDnB0hC,oBAAsB,WAAM,IAChBv8B,EAAWnF,EAAK4C,MAAhBuC,OACHA,GAELzD,KAAgBc,KAAK,CACjBC,QAAS,oBACT6H,QAASnF,EACTw8B,uBAAuB,KAvDZ3hC,qFAIGsT,EAAWC,GAC7B,OAAID,EAAUnO,SAAWhF,KAAKyC,MAAMuC,mDAQpCwP,KAAgBnB,GAAG,mBAAoBrT,KAAKoV,oBAC5CK,KAAgBpC,GAAG,mBAAoBrT,KAAKsV,mEAI5Cd,KAAgB9S,eAAe,mBAAoB1B,KAAKoV,oBACxDK,KAAgB/T,eAAe,mBAAoB1B,KAAKsV,qDA8CnD,IACGtQ,EAAWhF,KAAKyC,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,OAAO,KAClB,IAAKA,EAAKE,KAAM,OAAO,KAEvB,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,IAAMotB,EAAajtB,KAAgB1N,IAAIqN,EAAKE,KAAKK,gBACjD,GAAI+sB,GAAcA,EAAW3uB,OACzB,OAAQ2uB,EAAW3uB,OAAO,UACtB,IAAK,gCACD,OAAOxO,EAAArB,EAAAC,cAACw+B,GAAD,MAEX,IAAK,yBACD,OAAOp9B,EAAArB,EAAAC,cAACg+B,GAAD,CAAe3d,QAAQ,kBAAkBwd,UAAW/gC,KAAKuhC,sBAEpE,IAAK,0BACD,OAAOj9B,EAAArB,EAAAC,cAACw+B,GAAD,MAEX,IAAK,uBACD,OAAO,KAEX,IAAK,yBACD,OAAOp9B,EAAArB,EAAAC,cAACw+B,GAAD,MAEX,IAAK,6BACD,OAAID,EAAW3uB,OAAO6uB,UACbF,EAAW3uB,OAAO8uB,kBAIhBt9B,EAAArB,EAAAC,cAACw+B,GAAD,MAHI,KAKJp9B,EAAArB,EAAAC,cAACg+B,GAAD,CAAe3d,QAAQ,OAAOwd,UAAW/gC,KAAKshC,aAMrE,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAOh9B,EAAArB,EAAAC,cAACw+B,GAAD,MAEX,IAAK,qBACD,IAAMnsB,EAAaE,KAAgB3O,IAAIqN,EAAKE,KAAKc,eACjD,GAAII,GAAcA,EAAWzC,OACzB,OAAQyC,EAAWzC,OAAO,UACtB,IAAK,gCACD,OAAOxO,EAAArB,EAAAC,cAACw+B,GAAD,MAEX,IAAK,yBACD,OAAOp9B,EAAArB,EAAAC,cAACg+B,GAAD,CAAe3d,QAAQ,kBAAkBwd,UAAW/gC,KAAKuhC,sBAEpE,IAAK,0BACD,OAAOj9B,EAAArB,EAAAC,cAACw+B,GAAD,MAEX,IAAK,uBACD,OAAOp9B,EAAArB,EAAAC,cAACg+B,GAAD,CAAe3d,QAAQ,OAAOwd,UAAW/gC,KAAKshC,aAEzD,IAAK,yBACD,OAAI/rB,EAAWssB,WACJv9B,EAAArB,EAAAC,cAAC4+B,GAAD,CAA6B98B,OAAQA,IAErCV,EAAArB,EAAAC,cAACw+B,GAAD,MAGf,IAAK,6BACD,OAAInsB,EAAWzC,OAAO6uB,UACbpsB,EAAWzC,OAAO8uB,kBAIhBt9B,EAAArB,EAAAC,cAACw+B,GAAD,MAHI,KAKJp9B,EAAArB,EAAAC,cAACg+B,GAAD,CAAe3d,QAAQ,OAAOwd,UAAW/gC,KAAKshC,cAQ7E,OAAO,YAzJM/9B,IAAMC,+DCyDZu+B,uBA7DX,SAAAA,EAAYt/B,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA+hC,IACfliC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAiiC,GAAA5hC,KAAAH,KAAMyC,KAeVu/B,YAAc,WACV,IAAMhM,EAAM,IAAIhR,KACVid,EAAUpiC,EAAKqiC,OAASlM,EACxB3xB,EAAQ,IAAO49B,EAAUpiC,EAAK4C,MAAMkX,QAAW,IAErD9Z,EAAK6C,SAAS,CACVu/B,QAASA,EAAU,EAAIA,EAAU,EACjC59B,MAAOA,EAAQ,IAAM,IAAMA,IAG3B2xB,GAAOn2B,EAAKqiC,QACRriC,EAAKsiC,UACLC,cAAcviC,EAAKsiC,SACnBtiC,EAAKsiC,QAAU,OA1BvBtiC,EAAKoC,MAAQ,CACTggC,QAASpiC,EAAK4C,MAAMkX,QAAU,IAC9BtV,MAAO,GALIxE,mFAUfG,KAAKqiC,UAAY,IAAIrd,KACrBhlB,KAAKkiC,OAASliC,KAAKqiC,UACnBriC,KAAKkiC,OAAOI,gBAAgBtiC,KAAKkiC,OAAOK,kBAAoBviC,KAAKyC,MAAMkX,SACvE3Z,KAAKmiC,QAAUK,YAAYxiC,KAAKgiC,YAAa,oDAsBzChiC,KAAKmiC,UACLC,cAAcpiC,KAAKmiC,SACnBniC,KAAKmiC,QAAU,uCAId,IAAAtzB,EACsB7O,KAAKiC,MAAxBoC,EADHwK,EACGxK,MAAO49B,EADVpzB,EACUozB,QAEf,OACI39B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,sBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,2BACXmB,EAAArB,EAAAC,cAACgyB,GAAA,EAAD,CAAYzpB,MAAM,YAAYw2B,EAAU,KAAMQ,YAElDn+B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,+BACXmB,EAAArB,EAAAC,cAACw/B,GAAAz/B,EAAD,CAAkBoK,KAAM,GAAIhJ,MAAO,IAAMA,EAAO2T,QAAQ,oBAnD5CzU,IAAMC,YCwBhC2nB,WAAmB,CACrBC,SAAU,SACVC,WAAY,UAGVsX,GAAsB,CACxBvX,SAAU,MACVC,WAAY,SAGVuX,8MACFC,oBAAsB,SAAA79B,GAClB,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,OAAO,KAClB,IAAKA,EAAKE,KAAM,OAAO,KAEvB,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,8CAAA1P,OAA+CwP,EAAK4lB,MAApD,KAEJ,IAAK,qBACD,IAAMxkB,EAAaE,KAAgB3O,IAAIqN,EAAKE,KAAKc,eACjD,OAAII,EACOA,EAAWssB,WAAX,0CAAAl9B,OACyCwP,EAAK4lB,MAD9C,6CAAAp1B,OAEuCwP,EAAK4lB,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,mDAAAp1B,OAAoDS,YAAkBJ,GAAtE,KAIR,OAAO,8EAGF,IAAAF,EACiC9E,KAAKyC,MAAnCqO,EADHhM,EACGgM,QAAS9L,EADZF,EACYE,OAAW89B,EADvBhjC,OAAAijC,GAAA,EAAAjjC,CAAAgF,EAAA,sBAGL,OACIR,EAAArB,EAAAC,cAAC0N,EAAA3N,EAADnD,OAAAkB,OAAA,CACIwoB,mBAAoB,EACpB1Y,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,uBACZ+xB,GACJx+B,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,uBAAuBwE,YAAkBJ,IACzDV,EAAArB,EAAAC,cAACumB,GAAAxmB,EAAD,KACIqB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,yBACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,IAClBV,EAAArB,EAAAC,cAAC29B,GAAA59B,EAAD,CAAmBrC,GAAG,6BACjBZ,KAAK6iC,oBAAoB79B,MAItCV,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAAS,kBAAMuL,GAAQ,IAAQrF,MAAM,WAA7C,UAGAnH,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAAS,kBAAMuL,GAAQ,IAAOrF,MAAM,UAAUoG,WAAS,GAA/D,eAnDUtO,IAAMC,WA4D9Bw/B,oLACO,IAAA/3B,EACiCjL,KAAKyC,MAAnCqO,EADH7F,EACG6F,QAAS9L,EADZiG,EACYjG,OAAW89B,EADvBhjC,OAAAijC,GAAA,EAAAjjC,CAAAmL,EAAA,sBAGL,OACI3G,EAAArB,EAAAC,cAAC0N,EAAA3N,EAADnD,OAAAkB,OAAA,CACIwoB,mBAAoB,EACpB1Y,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,uBACZ+xB,GACJx+B,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,uBAAuBwE,YAAkBJ,IACzDV,EAAArB,EAAAC,cAACumB,GAAAxmB,EAAD,KACIqB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,yBACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,IAClBV,EAAArB,EAAAC,cAAC29B,GAAA59B,EAAD,CAAmBrC,GAAG,6BAAtB,0CAKR0D,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAAS,kBAAMuL,GAAQ,IAAQrF,MAAM,WAA7C,UAGAnH,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAAS,kBAAMuL,GAAQ,IAAOrF,MAAM,UAAUoG,WAAS,GAA/D,eAvBatO,IAAMC,WAgCjC8nB,eACF,SAAAA,EAAY7oB,GAAO,IAAA8N,EAAA,OAAAzQ,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAsrB,IACf/a,EAAAzQ,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAwrB,GAAAnrB,KAAAH,KAAMyC,KASVwgC,kBAAoB,SAAAx0B,GAChB8B,EAAK7N,SAAS,CAAEipB,SAAUld,EAAMmd,iBAXjBrb,EAcnBsb,gBAAkB,WACdtb,EAAK7N,SAAS,CAAEipB,SAAU,QAfXpb,EAkBnB2yB,eAAiB,WACb3yB,EAAKsb,kBACLzb,WAAW,kBAAMG,EAAK9N,MAAM0gC,mBAAmB,MApBhC5yB,EAuBnB6yB,mBAAqB,WACjB7yB,EAAKsb,kBAELtb,EAAK7N,SAAS,CAAE2gC,kBAAkB,KA1BnB9yB,EA6BnB+yB,2BAA6B,SAAA9gC,GAGzB,GAFA+N,EAAK7N,SAAS,CAAE2gC,kBAAkB,IAE7B7gC,EAAL,CAEA,IAAMwC,EAASmG,IAAiBwN,YAE1B4qB,EAAU,CACZjhC,QAAS,oBACT6H,QAASnF,EACTw8B,uBAAuB,GAG3BjxB,EAAKxF,sBAAsB/F,EAAQ,2BAPnB,mBAOwDu+B,KA1CzDhzB,EA6CnBizB,YAAc,WACVjzB,EAAKsb,kBAELtb,EAAK7N,SAAS,CAAE+gC,YAAY,KAhDblzB,EAmDnBmzB,oBAAsB,SAAAlhC,GAGlB,GAFA+N,EAAK7N,SAAS,CAAE+gC,YAAY,IAEvBjhC,EAAL,CAEA,IAAMwC,EAASmG,IAAiBwN,YAC1B9N,EAAU0F,EAAKozB,yBAAyB3+B,GACxCu+B,EAAUltB,YAAcrR,GACxB,CAAE1C,QAAS,oBAAqB6H,QAASnF,EAAQw8B,uBAAuB,GACxE,CAAEl/B,QAAS,YAAa6H,QAASnF,GAEvCuL,EAAKxF,sBAAsB/F,EAAQ,wBAAyB6F,EAAS04B,KA9DtDhzB,EAiEnBxF,sBAAwB,SAAC/F,EAAQ4+B,EAAkB/4B,EAAS04B,GACxD,GAAKK,EAAL,CAEA,IAAMx/B,EAAG,GAAAO,OAAMi/B,EAAN,YAAAj/B,OAAiCK,GACpCgG,EAAM,eAAAoV,EAAAtgB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAAG,SAAAC,IAAA,OAAAF,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAED/G,KAAgBc,KAAKkhC,GAFpB,cAAAn7B,EAAAC,KAAA,EAIP9G,KAAgBiJ,aAAa,CAAElI,QAASshC,EAAkB5+B,OAAQA,EAAQ6+B,YAAY,IAJ/Ez7B,EAAA07B,OAAA,2BAAA17B,EAAAwB,SAAAjC,EAAA,oBAAH,yBAAAyY,EAAApc,MAAAhE,KAAAiE,YAAA,GAJwD8/B,EAe/BxzB,EAAK9N,MAAlCyI,EAf4D64B,EAe5D74B,gBAf4D64B,EAe3Ch/B,QACzB,GAAKmG,EAAL,CAGIC,IAAiBC,mBAAmBhH,EAAKiH,IAAoCL,EARlE,WACXzJ,KAAgBiJ,aAAa,CAAElI,QAASshC,EAAkB5+B,OAAQA,EAAQ6+B,YAAY,QAQtFtiC,KAAgBiJ,aAAa,CAAElI,QAASshC,EAAkB5+B,OAAQA,EAAQ6+B,YAAY,IACtF34B,EAAgBL,EAAS,CACrBS,iBAAkBD,IAAqC,IACvDL,OAAQ,CACJ1G,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYmB,IAAI,WAAWqH,MAAM,UAAUtI,UAAU,mBACjDmB,EAAArB,EAAAC,cAAC8gC,GAAD,CAAmBrqB,QAAStO,OAEhC/G,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CACImB,IAAI,OACJqH,MAAM,UACN4B,KAAK,QACL9H,QAAS,kBAAM4F,IAAiBQ,sBAAsBvH,KAJ1D,eA5FGmM,EAwGnB0zB,kBAAoB,SAAAj/B,GAChB,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,OAAO,KAClB,IAAKA,EAAKE,KAAM,OAAO,KAEvB,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,MAAO,kBAEX,IAAK,qBACD,IAAMkB,EAAaE,KAAgB3O,IAAIqN,EAAKE,KAAKc,eACjD,OAAII,EACOA,EAAWssB,WAAa,gBAAkB,cAG9C,KAEX,IAAK,kBACL,IAAK,iBACD,MAAO,sBAIf,OAAO,MA/HQtxB,EAkInBozB,yBAA2B,SAAA3+B,GACvB,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,MAAO,eAClB,IAAKA,EAAKE,KAAM,MAAO,eAEvB,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,MAAO,eAEX,IAAK,qBACD,IAAMkB,EAAaE,KAAgB3O,IAAIqN,EAAKE,KAAKc,eACjD,OAAII,EACOA,EAAWssB,WAAa,eAAiB,aAG7C,eAEX,IAAK,kBACL,IAAK,iBACD,MAAO,eAIf,MAAO,gBAtJPtxB,EAAKtO,MAAQ,CACT0pB,SAAU,KACV8X,YAAY,EACZJ,kBAAkB,GANP9yB,wEA4JV,IACGxL,EAAY/E,KAAKyC,MAAjBsC,QADH8J,EAE8C7O,KAAKiC,MAAhD0pB,EAFH9c,EAEG8c,SAAU8X,EAFb50B,EAEa40B,WAAYJ,EAFzBx0B,EAEyBw0B,iBAExBr+B,EAASmG,IAAiBwN,YAC1BurB,EAAeC,YAAgBn/B,GAC/Bo/B,EAAaC,YAAcr/B,GAC3Bs/B,EAAiBtkC,KAAKikC,kBAAkBj/B,GAE9C,OACIV,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIiqB,YAAWvB,EAAW,cAAgB,KACtCwB,gBAAc,OACdhqB,UAAW4B,EAAQqoB,eACnB5hB,aAAW,OACXjG,QAASvF,KAAKijC,mBACd3+B,EAAArB,EAAAC,cAACqhC,GAAAthC,EAAD,OAEJqB,EAAArB,EAAAC,cAAC0pB,GAAA3pB,EAAD,CACIrC,GAAG,YACH+qB,SAAUA,EACV9a,KAAM2S,QAAQmI,GACd7a,QAAS9Q,KAAK6rB,gBACdgB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBC,aAAc7B,GACd0G,gBAAiB8Q,IACjBr+B,EAAArB,EAAAC,cAAC+pB,GAAAhqB,EAAD,CAAUsC,QAASvF,KAAKkjC,gBAAxB,aACCgB,GAAgB5/B,EAAArB,EAAAC,cAAC+pB,GAAAhqB,EAAD,CAAUsC,QAASvF,KAAKojC,oBAAxB,iBAChBgB,GAAcE,GAAkBhgC,EAAArB,EAAAC,cAAC+pB,GAAAhqB,EAAD,CAAUsC,QAASvF,KAAKwjC,aAAcc,IAE3EhgC,EAAArB,EAAAC,cAACshC,GAAD,CAAiBx/B,OAAQA,EAAQ6L,KAAM4yB,EAAY3yB,QAAS9Q,KAAK0jC,sBACjEp/B,EAAArB,EAAAC,cAACuhC,GAAD,CAAoBz/B,OAAQA,EAAQ6L,KAAMwyB,EAAkBvyB,QAAS9Q,KAAKsjC,qCA/L7D//B,IAAMC,WA0MpBsO,GALCC,YACZnM,IAlTW,SAAAC,GAAK,MAAK,CACrBunB,eAAgB,CACZ1W,OAAQ,qBAiTZjE,eAGWX,CAAQwZ,yBC7SjBoZ,uBACF,SAAAA,EAAYjiC,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA0kC,IACf7kC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA4kC,GAAAvkC,KAAAH,KAAMyC,KAOVkiC,aAAe,WACXpjC,KAAgBiJ,aAAa,CAAElI,QAAS,gCATzBzC,EAYnB4zB,aAAe,WACX,IAAImR,GAA0B,EADbC,GAAA,EAAAC,GAAA,EAAAC,OAAAzS,EAAA,IAEjB,QAAA0S,EAAAC,EAAkCn5B,KAAao5B,cAAcC,SAA7DC,OAAAC,cAAAR,GAAAG,EAAAC,EAAA38B,QAAAg9B,MAAAT,GAAA,EAAuE,KAAA98B,EAAAi9B,EAAA3gC,MAA5DW,EAA4D+C,EAA5D/C,OAAQod,EAAoDra,EAApDqa,UACTvX,EAAUiB,KAAahF,IAAI9B,EAAQod,GACzC,IAAKvX,EAAS,CACV+5B,GAA0B,EAC1B,MAEJ,IAAK/5B,EAAQ06B,6BAA8B,CACvCX,GAA0B,EAC1B,QAVS,MAAAY,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAcjBllC,EAAK6C,SAAS,CACVgjC,kBAAkB,EAClBd,wBAAyBA,EACzBe,OAAQf,KA7BG/kC,EAiCnB+lC,qBAAuB,WAAM,IAGrBhlC,EAFI+kC,EAAW9lC,EAAKoC,MAAhB0jC,OAGF77B,EAAa,GAJM+7B,GAAA,EAAAC,GAAA,EAAAC,OAAAzT,EAAA,IAKzB,QAAA0T,EAAAC,EAAkCn6B,KAAao5B,cAAcC,SAA7DC,OAAAC,cAAAQ,GAAAG,EAAAC,EAAA39B,QAAAg9B,MAAAO,GAAA,EAAuE,KAAA1f,EAAA6f,EAAA3hC,MAA5DW,EAA4DmhB,EAA5DnhB,OAAQod,EAAoD+D,EAApD/D,UACfxhB,EAAKoE,EACL8E,EAAWnB,KAAKyZ,IAPK,MAAAojB,GAAAM,GAAA,EAAAC,EAAAP,EAAA,YAAAK,GAAA,MAAAI,EAAAR,QAAAQ,EAAAR,SAAA,WAAAK,EAAA,MAAAC,GAUzBlmC,EAAK8kC,eAELpjC,KAAgBc,KAAK,CACjBC,QAAS,iBACT6H,QAASvJ,EACTiN,YAAa/D,EACb67B,OAAQA,KAjDG9lC,EAqDnBqmC,mBAAqB,WACjBrmC,EAAK6C,SAAS,CAAEijC,QAAS9lC,EAAKoC,MAAM0jC,UAtDrB9lC,EAyDnBsmC,kBAAoB,WAChBtmC,EAAK6C,SAAS,CAAEgjC,kBAAkB,KA1DnB7lC,EA6DnBumC,cAAgB,WACZ,IAAIxlC,EACEkJ,EAAa,GAFDu8B,GAAA,EAAAC,GAAA,EAAAC,OAAAjU,EAAA,IAGlB,QAAAkU,EAAAC,EAAkC36B,KAAao5B,cAAcC,SAA7DC,OAAAC,cAAAgB,GAAAG,EAAAC,EAAAn+B,QAAAg9B,MAAAe,GAAA,EAAuE,KAAAK,EAAAF,EAAAniC,MAA5DW,EAA4D0hC,EAA5D1hC,OAAQod,EAAoDskB,EAApDtkB,UACfxhB,EAAKoE,EACL8E,EAAWnB,KAAKyZ,IALF,MAAAojB,GAAAc,GAAA,EAAAC,EAAAf,EAAA,YAAAa,GAAA,MAAAI,EAAAhB,QAAAgB,EAAAhB,SAAA,WAAAa,EAAA,MAAAC,GAQlB1mC,EAAK8kC,eAELpjC,KAAgBiJ,aAAa,CACzBlI,QAAS,sBACTmI,KAAM,CACFzF,OAAQpE,EACRkJ,WAAYA,MA3ELjK,EAgFnB8mC,YAAc,WACV,GAAwC,IAApC76B,KAAao5B,cAAc73B,KAA/B,CADgB,IAAAu5B,EAGc96B,KAAao5B,cAAcC,SAAS78B,OAAOjE,MAAjEW,EAHQ4hC,EAGR5hC,OAAQod,EAHAwkB,EAGAxkB,UAEhBviB,EAAK8kC,eAELpjC,KAAgBiJ,aAAa,CAAElI,QAAS,oBAAqB0C,OAAQA,EAAQod,UAAWA,MApFxFviB,EAAKoC,MAAQ,CACTyjC,kBAAkB,GAJP7lC,wEA0FV,IAAAiF,EACyB9E,KAAKyC,MAA3BsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EAAGk8B,EADf/hC,EACe+hC,MADfh4B,EAEyD7O,KAAKiC,MAA3DyjC,EAFH72B,EAEG62B,iBAAkBd,EAFrB/1B,EAEqB+1B,wBAAyBe,EAF9C92B,EAE8C82B,OAE7C3gC,EAASmG,IAAiBwN,YAE5BmuB,GAAe,EANdC,GAAA,EAAAC,GAAA,EAAAC,OAAA3U,EAAA,IAOL,QAAA4U,EAAAC,EAAkCr7B,KAAao5B,cAAcC,SAA7DC,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7+B,QAAAg9B,MAAAyB,GAAA,EAAuE,KAAAK,EAAAF,EAAA7iC,MAA5DW,EAA4DoiC,EAA5DpiC,OAAQod,EAAoDglB,EAApDhlB,UACTvX,EAAUiB,KAAahF,IAAI9B,EAAQod,GACzC,IAAKvX,EAAS,CACVi8B,GAAe,EACf,MAEJ,IAAKj8B,EAAQw8B,+BAAiCx8B,EAAQ06B,6BAA8B,CAChFuB,GAAe,EACf,QAfH,MAAAtB,GAAAwB,GAAA,EAAAC,EAAAzB,EAAA,YAAAuB,GAAA,MAAAI,EAAA1B,QAAA0B,EAAA1B,SAAA,WAAAuB,EAAA,MAAAC,GAmBL,IAAIK,GAAiB,EAnBhBC,GAAA,EAAAC,GAAA,EAAAC,OAAAnV,EAAA,IAoBL,QAAAoV,EAAAC,EAAkC77B,KAAao5B,cAAcC,SAA7DC,OAAAC,cAAAkC,GAAAG,EAAAC,EAAAr/B,QAAAg9B,MAAAiC,GAAA,EAAuE,KAAAK,EAAAF,EAAArjC,MAA5DW,EAA4D4iC,EAA5D5iC,OAAQod,EAAoDwlB,EAApDxlB,UACTvX,EAAUiB,KAAahF,IAAI9B,EAAQod,GACzC,IAAKvX,EAAS,CACVy8B,GAAiB,EACjB,MAEJ,IAAKz8B,EAAQkB,iBAAkB,CAC3Bu7B,GAAiB,EACjB,QA5BH,MAAA9B,GAAAgC,GAAA,EAAAC,EAAAjC,EAAA,YAAA+B,GAAA,MAAAI,EAAAlC,QAAAkC,EAAAlC,SAAA,WAAA+B,EAAA,MAAAC,GAgCL,IAAMI,EAAyB,IAAVhB,GAAez3B,YAAgBpK,GAEpD,OACIV,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,mBAC3CwhC,GACGhjC,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUtI,UAAW4B,EAAQ+iC,WAAYviC,QAASvF,KAAKomC,eAChES,GAAS,EAAIl8B,EAAE,WAAf,GAAAhG,OAA+BgG,EAAE,WAAjC,KAAAhG,OAA+CkiC,IAGvDC,GACGxiC,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUtI,UAAW4B,EAAQ+iC,WAAYviC,QAASvF,KAAKyzB,cAChEoT,GAAS,EAAIl8B,EAAE,UAAf,GAAAhG,OAA8BgG,EAAE,UAAhC,KAAAhG,OAA6CkiC,IAGrDgB,GACGvjC,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUtI,UAAW4B,EAAQ+iC,WAAYviC,QAASvF,KAAK2mC,aAChEh8B,EAAE,UAGXrG,EAAArB,EAAAC,cAAA,OAAKC,UAAU,yBACfmB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUtI,UAAW4B,EAAQgjC,YAAaxiC,QAASvF,KAAK2kC,cACjEh6B,EAAE,YAGXrG,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIumB,mBAAoB,EACpB3Y,KAAM60B,EACN50B,QAAS9Q,KAAKmmC,kBACdp1B,kBAAgB,uBAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,uBAAhB,WACA0D,EAAArB,EAAAC,cAACumB,GAAAxmB,EAAD,KACIqB,EAAArB,EAAAC,cAAC29B,GAAA59B,EAAD,KACe,IAAV4jC,EACK,6CADL,mCAAAliC,OAEwCkiC,EAFxC,eAIJjC,GACGtgC,EAAArB,EAAAC,cAAC+mB,GAAAhnB,EAAD,CACIinB,QACI5lB,EAAArB,EAAAC,cAAC8kC,GAAA/kC,EAAD,CAAUoV,QAASstB,EAAQvtB,SAAUpY,KAAKkmC,mBAAoBz6B,MAAM,YAExE4T,MACIhJ,YAAcrR,GAAd,cAAAL,OAAsCS,YAAkBJ,IAAY,oBAKpFV,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKmmC,kBAAmB16B,MAAM,WAA/C,UAGAnH,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAK4lC,qBAAsBn6B,MAAM,WAAlD,gBA/KIlI,IAAMC,YAkMnBsO,GALCC,YACZnM,IA1MW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChBgoC,WAAY,CACRpxB,OAAQ,mBACR4I,SAAU,SAEdyoB,YAAa,CACTrxB,OAAQ,mBACR4I,SAAU,UAEX/M,YAAY1M,KAiMI,CAAEQ,WAAW,IAChCmM,cAGWV,CAAQ4yB,aCtLjBuD,eACF,SAAAA,EAAYxlC,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAioC,IACfpoC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAmoC,GAAA9nC,KAAAH,KAAMyC,KA8DVylC,8BAAgC,SAAA1nC,GAC5B,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,GACDA,EAAKvT,KAAOJ,EAAO2J,SAEvBtK,EAAKuO,eApEUvO,EAuEnBsoC,8BAAgC,SAAA3nC,GAC5BX,EAAK6C,SAAS,CAAE0lC,eAAgBt8B,KAAao5B,cAAc73B,QAxE5CxN,EA2EnB2f,qBAAuB,SAAAhf,GACnBX,EAAKuO,eA5EUvO,EA+EnBwoC,wBAA0B,SAAA7nC,GACtBX,EAAK6C,SAAS,CAAE4lC,gBAAiB9nC,EAAOyB,SAhFzBpC,EAmFnB0rB,2BAA6B,SAAA/qB,GACzBX,EAAK6C,SAAS,CAAE8oB,mBAAoBhrB,EAAOC,uBApF5BZ,EAuFnB0oC,kBAAoB,SAAA/nC,GAChB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,GACDA,EAAKvT,KAAOJ,EAAO2J,SAEvBtK,EAAKuO,eA5FUvO,EA+FnB8S,mBAAqB,SAAAnS,GACjB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aAC5C,GAAKxE,GACAA,EAAKE,KAEV,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,IAAME,EAAWC,KAAgBC,YAAYN,EAAKE,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAA7T,GAAC,OAAIA,EAAE6H,UAAYpI,EAAOoI,WAE3D/I,EAAKuO,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACG+F,EAAKE,KAAKzL,UAAYpI,EAAOoI,SAC7B/I,EAAKuO,gBAvHFvO,EAiInB2oC,uBAAyB,SAAAhoC,GACC2K,IAAiBwN,cAEjBnY,EAAO2J,SACzBtK,EAAKuO,eArIMvO,EAyInBuV,mBAAqB,SAAA5U,GACjB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBlU,EAAO6U,YAAYzU,IAEhDf,EAAKuO,eAlJMvO,EAsJnByV,mBAAqB,SAAA9U,GACjB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkB3U,EAAO+U,WAAW3U,IAE9Cf,EAAKuO,eA/JMvO,EAmKnBoV,2BAA6B,SAAAzU,GACzB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBlU,EAAOkU,gBAEpC7U,EAAKuO,eA5KMvO,EAgLnBqV,2BAA6B,SAAA1U,GACzB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkB3U,EAAO2U,eAEnCtV,EAAKuO,eAzLMvO,EA6LnBmV,qBAAuB,SAAAxU,GACnB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,KAGDA,EAAKE,MACmB,oBAAvBF,EAAKE,KAAK,UAAyD,mBAAvBF,EAAKE,KAAK,UACvDF,EAAKE,KAAKzL,UAAYpI,EAAOoI,SAE7B/I,EAAKuO,gBAtMMvO,EA0MnBsjC,gBAAkB,WACd,IAAMn+B,EAASmG,IAAiBwN,YACnBvE,KAAUtN,IAAI9B,IAG3BmG,IAAiB+U,6BAA4B,IA/M9BrgB,EAkNnB4oC,iBAAmB,WACf,IAAMzjC,EAASmG,IAAiBwN,YACnBvE,KAAUtN,IAAI9B,IAG3BmG,IAAiBu9B,WAAW1jC,IAvNbnF,EA0NnB8oC,SAAW,SAAAC,GAGP,OAAOj+B,EAFO9K,EAAK4C,MAAXkI,GAECi+B,GACJlU,QAAQ,MAAO,IACfA,QAAQ,SAAK,KA5NlB70B,EAAKoC,MAAQ,CACTupB,mBAAoBrgB,IAAiBuhB,wBACrC4b,gBAAiBn9B,IAAiB09B,sBALvBhpC,qFASGsT,EAAWC,GAC7B,OAAIA,IAAcpT,KAAKiC,QAInBkR,EAAUtN,QAAU7F,KAAKyC,MAAMoD,OAI/BsN,EAAUxI,IAAM3K,KAAKyC,MAAMkI,+CAQ/BQ,IAAiBkI,GAAG,wBAAyBrT,KAAKqoC,yBAClDl9B,IAAiBkI,GAAG,2BAA4BrT,KAAKurB,4BACrDpgB,IAAiBkI,GAAG,qBAAsBrT,KAAKwf,sBAE/C1T,KAAauH,GAAG,8BAA+BrT,KAAKmoC,+BACpDr8B,KAAauH,GAAG,6BAA8BrT,KAAKmoC,+BAEnD/zB,KAAUf,GAAG,8BAA+BrT,KAAKkoC,+BACjD9zB,KAAUf,GAAG,kBAAmBrT,KAAKuoC,mBACrC1/B,KAAUwK,GAAG,mBAAoBrT,KAAK2S,oBACtCyB,KAAUf,GAAG,uBAAwBrT,KAAKwoC,wBAC1C3/B,KAAUwK,GAAG,qBAAsBrT,KAAKgV,sBACxCR,KAAgBnB,GAAG,2BAA4BrT,KAAKiV,4BACpDQ,KAAgBpC,GAAG,2BAA4BrT,KAAKkV,4BACpDV,KAAgBnB,GAAG,mBAAoBrT,KAAKoV,oBAC5CK,KAAgBpC,GAAG,mBAAoBrT,KAAKsV,mEAI5CnK,IAAiBzJ,eAAe,wBAAyB1B,KAAKqoC,yBAC9Dl9B,IAAiBzJ,eAAe,2BAA4B1B,KAAKurB,4BACjEpgB,IAAiBzJ,eAAe,qBAAsB1B,KAAKwf,sBAE3D1T,KAAapK,eAAe,8BAA+B1B,KAAKmoC,+BAChEr8B,KAAapK,eAAe,6BAA8B1B,KAAKmoC,+BAE/D/zB,KAAU1S,eAAe,8BAA+B1B,KAAKkoC,+BAC7D9zB,KAAU1S,eAAe,kBAAmB1B,KAAKuoC,mBACjD1/B,KAAUnH,eAAe,mBAAoB1B,KAAK2S,oBAClDyB,KAAU1S,eAAe,uBAAwB1B,KAAKwoC,wBACtD3/B,KAAUnH,eAAe,qBAAsB1B,KAAKgV,sBACpDR,KAAgB9S,eAAe,2BAA4B1B,KAAKiV,4BAChEQ,KAAgB/T,eAAe,2BAA4B1B,KAAKkV,4BAChEV,KAAgB9S,eAAe,mBAAoB1B,KAAKoV,oBACxDK,KAAgB/T,eAAe,mBAAoB1B,KAAKsV,qDAsKnD,IAAAxQ,EACkB9E,KAAKyC,MAApBsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EADZkE,EAE2D7O,KAAKiC,MAA7DupB,EAFH3c,EAEG2c,mBAAoB8c,EAFvBz5B,EAEuBy5B,gBAAiBF,EAFxCv5B,EAEwCu5B,eAE7C,GAAIA,EACA,OAAO9jC,EAAArB,EAAAC,cAAC4lC,GAAD,CAAejC,MAAOuB,IAGjC,IAAMpjC,EAASmG,IAAiBwN,YAC1BxE,EAAOC,KAAUtN,IAAI9B,GAErB+jC,EAAmBC,YAAqBhkC,GAC1C+0B,EAAQhqB,YAAa/K,GAAQ,EAAM2F,GACnCkK,EAAWo0B,YAAgBjkC,GAAQ,GACnCkkC,GAAwB,EAE5B,GAAIZ,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACDvO,EAAQ/5B,KAAK2oC,SAAS,cACtB9zB,EAAW,GACXq0B,GAAwB,EACxB,MACJ,IAAK,mCACDnP,EAAQ/5B,KAAK2oC,SAAS,uBACtB9zB,EAAW,GACXq0B,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACDnP,EAAQ/5B,KAAK2oC,SAAS,YACtB9zB,EAAW,GACXq0B,GAAwB,EACxB,MACJ,IAAK,mCACDnP,EAAQ/5B,KAAK2oC,SAAS,uBACtB9zB,EAAW,GACXq0B,GAAwB,OAG7B,GAAI1d,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,6BACD,MACJ,IAAK,+BACDuO,EAAQ/5B,KAAK2oC,SAAS,eACtB9zB,EAAW,GACXq0B,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACDnP,EAAQ/5B,KAAK2oC,SAAS,WACtB9zB,EAAW,GACXq0B,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACDnP,EAAQ/5B,KAAK2oC,SAAS,WACtB9zB,EAAW,GACXq0B,GAAwB,OAIhCnP,EAAQ/5B,KAAK2oC,SAAS,WACtB9zB,EAAW,GACXq0B,GAAwB,EAG5B,OACI5kC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,mBAC5CxB,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,gBAAiB,OAAQ8O,EAAO,iBAAmB,kBACzE5O,QAASvF,KAAKmjC,iBACd7+B,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAyB42B,GACxCmP,GAAyB5kC,EAAArB,EAAAC,cAACimC,GAAA,EAAD,MAC1B7kC,EAAArB,EAAAC,cAAA,QACIC,UAAWkC,IAAW,sBAAuBN,EAAQqkC,kBAAhCtpC,OAAAyT,GAAA,EAAAzT,CAAA,GAChBiF,EAAQskC,wBAA0BN,KAEtCl0B,GAELvQ,EAAArB,EAAAC,cAAA,QAAMC,UAAU,wBAEnBgR,GACG7P,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQukC,wBACnB99B,aAAW,SACXjG,QAASvF,KAAKyoC,kBACdnkC,EAAArB,EAAAC,cAAC0rB,GAAA3rB,EAAD,OAEJqB,EAAArB,EAAAC,cAACqmC,GAAD,CAAgBpG,gBAAiBnjC,KAAKmjC,2BAvUzC3/B,aAoVNsO,GALCC,YACZS,cACA5M,IA1WW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChB2X,OAAQ,CACJf,OAAQ,QAEZ0W,eAAgB,CACZ1W,OAAQ,qBAEZ+W,iBAAkB,CACd/W,OAAQ,kBAEZ4yB,wBAAyB,CACrB5yB,OAAQ,kBAEZ8yB,eAAgB,CACZ9yB,OAAQ,kBAEZ0yB,kBAAmB,CACf39B,MAAO5F,EAAME,QAAQuG,KAAKoH,WAE9B21B,wBAAyB,CACrB59B,MAAO5F,EAAME,QAAQC,QAAQ2N,KAAO,eAErCpB,YAAY1M,KAoVI,CAAEQ,WAAW,IAGrByL,CAAQm2B,yMC9VjBwB,sNACFxnC,MAAQ,CACJ0pB,SAAU,KACVtnB,MAAOqlC,KAAYC,OACnBC,UAAWF,KAAYC,OACvBE,UAAU,EACVC,YAAY,EACZC,WAAW,KAWfC,0BAA4B,SAAAxpC,GAAU,IAC1BmpC,EAAuBnpC,EAAvBmpC,OAAQM,EAAezpC,EAAfypC,gBAEG3X,IAAf2X,EACApqC,EAAK6C,SAAS,CAAE2B,MAAOslC,IAEvB9pC,EAAK6C,SAAS,CAAE2B,MAAOslC,EAAQC,UAAWK,OAIlDC,kBAAoB,SAAAve,GAChB9rB,EAAK6C,SAAS,CAAEipB,SAAUA,OAG9Bwe,mBAAqB,WAAM,IAAAt7B,EACqBhP,EAAKoC,MAAzC4nC,EADeh7B,EACfg7B,SAAUC,EADKj7B,EACLi7B,WAAYC,EADPl7B,EACOk7B,UAE1BF,GACAC,GACAC,GAEJlqC,EAAK6C,SAAS,CAAEipB,SAAU,UAG9Bye,iBAAmB,SAAC37B,EAAO47B,GACvBxqC,EAAK6C,SAAS,CAAEonC,YAAY,IAExBO,GACAxqC,EAAKqqC,kBAAkBz7B,EAAMmd,kBAIrC0e,iBAAmB,WACfzqC,EAAK6C,SAAS,CAAEonC,YAAY,GAAS,WACjCjqC,EAAKsqC,0BAIbI,sBAAwB,WACpB1qC,EAAK6C,SAAS,CAAEqnC,WAAW,GAAS,WAChClqC,EAAKsqC,0BAIbK,iBAAmB,WAAM,IAAA/5B,EACQ5Q,EAAKoC,MAA1BoC,EADaoM,EACbpM,MAAOulC,EADMn5B,EACNm5B,UACTa,EAAYpmC,EAAQ,EAAI,EAAIulC,GAAac,IAE/CnpC,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACTqnC,OAAQc,OAIhB7rB,aAAe,SAACnQ,EAAOpK,GAAU,IAAA87B,EACGtgC,EAAKoC,MAA7B4nC,EADqB1J,EACrB0J,SAAUD,EADWzJ,EACXyJ,UAEdC,EACAtoC,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACTqnC,OAAQtlC,IAGZ9C,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACT2nC,WAAY5lC,EAAQ,EAAIA,EAAQulC,EAChCD,OAAQtlC,OAKpBsmC,gBAAkB,WAAM,IACZtmC,EAAUxE,EAAKoC,MAAfoC,MAERxE,EAAK6C,SAAS,CACVmnC,UAAU,EACVD,UAAWvlC,OAInBumC,cAAgB,WAAM,IAAAC,EACWhrC,EAAKoC,MAA1BoC,EADUwmC,EACVxmC,MAAOulC,EADGiB,EACHjB,UAEf/pC,EAAK6C,SACD,CACImnC,UAAU,EACVD,UAAWvlC,EAAQ,EAAIA,EAAQulC,GAEnC,WACI/pC,EAAKsqC,0BAKjBW,cAAgB,SAAAzmC,GACZ,OAAc,IAAVA,EACOC,EAAArB,EAAAC,cAAC6nC,GAAA9nC,EAAD,CAAe+xB,SAAS,UAG/B3wB,EAAQ,IACDC,EAAArB,EAAAC,cAAC8nC,GAAA/nC,EAAD,CAAgB+xB,SAAS,UAGhC3wB,EAAQ,GACDC,EAAArB,EAAAC,cAAC+nC,GAAAhoC,EAAD,CAAgB+xB,SAAS,UAG7B1wB,EAAArB,EAAAC,cAACgoC,GAAAjoC,EAAD,CAAc+xB,SAAS,8FAlH9B0U,KAAYr2B,GAAG,0BAA2BrT,KAAKgqC,0EAI/CN,KAAYhoC,eAAe,0BAA2B1B,KAAKgqC,4DAiHtD,IAAAz5B,EAAAvQ,KACG+E,EAAY/E,KAAKyC,MAAjBsC,QADHomC,EAEuBnrC,KAAKiC,MAAzB0pB,EAFHwf,EAEGxf,SAAUtnB,EAFb8mC,EAEa9mC,MACZwM,EAAO2S,QAAQmI,GAErB,OACIrnB,EAAArB,EAAAC,cAAA,OACIkoC,aAAc,SAAAhiC,GAAC,OAAImH,EAAK65B,iBAAiBhhC,GAAG,IAC5CiiC,aAAcrrC,KAAKsqC,iBACnBhtB,MAAO,CACHhL,SAAU,WACVnM,WAAY,gBAEhB7B,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQ4sB,WAAYlmB,MAAM,UAAUlG,QAASvF,KAAKwqC,kBACpExqC,KAAK8qC,cAAczmC,IAExBC,EAAArB,EAAAC,cAAA,OACIoa,MAAO,CACHhL,SAAU,WACVnM,WAAY,cACZmlC,WAAYz6B,EAAO,UAAY,SAC/BqQ,OAAQ,GAEZkqB,aAAc,SAAAhiC,GAAC,OAAImH,EAAK65B,iBAAiBhhC,GAAG,IAC5CiiC,aAAcrrC,KAAKuqC,uBACnBjmC,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAWN,EAAQe,YAAaf,EAAQ4c,MACnDrE,MAAO,CACHiuB,UAAW,EACXC,YAAa,EACbj5B,YAAa,UAEjBjO,EAAArB,EAAAC,cAACuoC,GAAAxoC,EAAD,CACI8B,QAAS,CAAE4rB,UAAW5rB,EAAQ2mC,OAAQC,MAAO5mC,EAAQ4mC,OACrDC,IAAK,EACLC,IAAK,EACLxnC,MAAOA,EACP+T,SAAUpY,KAAK4e,aACfktB,YAAa9rC,KAAK2qC,gBAClBoB,UAAW/rC,KAAK4qC,cAChBxf,UAAQ,cAxKT7nB,IAAMC,YAiLlBoC,OArMA,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChB6xB,WAAY,CACR1f,QAAS,GAEb0P,KAAM,CACFtP,QAAS,OACT9E,OAAQ,IACRD,MAAO,GACP2E,QAAS,SACT9L,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWwiB,QAAU,WAEnF+iB,OAAQ,CACJz5B,QAAS,UAEb05B,MAAO,CACHK,QAAS,IAEVz5B,YAAY1M,KAoLe,CAAEQ,WAAW,GAAhCT,CAAwC6jC,8CCtMjDwC,eACF,SAAAA,EAAYxpC,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAisC,IACfpsC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAmsC,GAAA9rC,KAAAH,KAAMyC,KAiBVypC,0BAA4B,SAAA1rC,GAAU,IAC1B2rC,EAAW3rC,EAAX2rC,OAERtsC,EAAK6C,SAAS,CAAEypC,YArBDtsC,EAwBnBusC,aAAe,WAAM,IACTD,EAAWtsC,EAAKoC,MAAhBkqC,OAEJE,EAAaF,EACjB,OAAQA,GACJ,KAAKG,KAAWC,KACZF,EAAaC,KAAWE,OACxB,MAEJ,KAAKF,KAAWE,OACZH,EAAaC,KAAWG,WACxB,MAEJ,KAAKH,KAAWG,WACZJ,EAAaC,KAAWC,KAKhChrC,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACT6pC,OAAQE,KA7CGxsC,EAiDnB6sC,QAAU,SAAAP,GACN,OAAQA,GACJ,KAAKG,KAAWC,KAGhB,KAAKD,KAAWE,OACZ,OAAOloC,EAAArB,EAAAC,cAACypC,GAAA1pC,EAAD,CAAY+xB,SAAS,UAEhC,KAAKsX,KAAWG,WACZ,OAAOnoC,EAAArB,EAAAC,cAAC0pC,GAAA3pC,EAAD,CAAe+xB,SAAS,UAEnC,QACI,OAAO1wB,EAAArB,EAAAC,cAACypC,GAAA1pC,EAAD,CAAY+xB,SAAS,YA7DrB,IAGPmX,EAAWzC,KAAXyC,OAHO,OAKftsC,EAAKoC,MAAQ,CACTkqC,UANWtsC,mFAWf6pC,KAAYr2B,GAAG,0BAA2BrT,KAAKksC,0EAI/CxC,KAAYhoC,eAAe,0BAA2B1B,KAAKksC,4DAmDtD,IACGnnC,EAAY/E,KAAKyC,MAAjBsC,QACAonC,EAAWnsC,KAAKiC,MAAhBkqC,OAER,OACI7nC,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQ4sB,WACnBlmB,MAAO0gC,IAAWG,KAAWC,KAAO,UAAY,UAChDhnC,QAASvF,KAAKosC,cACbpsC,KAAK0sC,QAAQP,WA5EH5oC,IAAMC,WAkFlBoC,OAxFA,CACX+rB,WAAY,CACR1f,QAAS,IAsFFrM,CAAmBqmC,yBCnF5BY,eACF,SAAAA,EAAYpqC,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA6sC,IACfhtC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA+sC,GAAA1sC,KAAAH,KAAMyC,KAiBVqqC,2BAA6B,SAAAtsC,GAAU,IAC3BusC,EAAYvsC,EAAZusC,QAERltC,EAAK6C,SAAS,CAAEqqC,aArBDltC,EAwBnBmtC,cAAgB,WAAM,IACVD,EAAYltC,EAAKoC,MAAjB8qC,QAERxrC,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACTyqC,SAAUA,KA7BC,IAGPA,EAAYrD,KAAZqD,QAHO,OAKfltC,EAAKoC,MAAQ,CACT8qC,WANWltC,mFAWf6pC,KAAYr2B,GAAG,2BAA4BrT,KAAK8sC,2EAIhDpD,KAAYhoC,eAAe,2BAA4B1B,KAAK8sC,6DAkBvD,IACG/nC,EAAY/E,KAAKyC,MAAjBsC,QACAgoC,EAAY/sC,KAAKiC,MAAjB8qC,QAER,OACIzoC,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQ4sB,WACnBlmB,MAAQshC,EAAsB,UAAZ,UAClBxnC,QAASvF,KAAKgtC,eACd1oC,EAAArB,EAAAC,cAAC+pC,GAAAhqC,EAAD,CAAa+xB,SAAS,kBA3CVzxB,IAAMC,WAiDnBoC,OAvDA,CACX+rB,WAAY,CACR1f,QAAS,IAqDFrM,CAAmBinC,IClD5BK,eACF,SAAAA,EAAYzqC,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAktC,IACfrtC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAotC,GAAA/sC,KAAAH,KAAMyC,KAiBV0qC,gCAAkC,SAAA3sC,GAAU,IAChC4sC,EAAiB5sC,EAAjB4sC,aAERvtC,EAAK6C,SAAS,CAAE0qC,kBArBDvtC,EAwBnBwtC,mBAAqB,WAAM,IAGjBC,EAFmBztC,EAAKoC,MAAtBmrC,eAGaG,IAA6BC,IAA2BD,IAE7EhsC,KAAgBiJ,aAAa,CACzBlI,QAAS,gCACT8qC,aAAcE,KAhCH,IAGPF,EAAiB1D,KAAjB0D,aAHO,OAKfvtC,EAAKoC,MAAQ,CACTmrC,gBANWvtC,mFAWf6pC,KAAYr2B,GAAG,gCAAiCrT,KAAKmtC,gFAIrDzD,KAAYhoC,eAAe,gCAAiC1B,KAAKmtC,kEAqB5D,IACGpoC,EAAY/E,KAAKyC,MAAjBsC,QACAqoC,EAAiBptC,KAAKiC,MAAtBmrC,aAER,OACI9oC,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQ4sB,WACnBlmB,MAAO2hC,EAAeG,IAA6B,UAAY,UAC/DhoC,QAASvF,KAAKqtC,oBACd/oC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,+BAAf,cA9CiBI,IAAMC,WAoDxBoC,OAzDA,CACX+rB,WAAY,CACR1f,QAAS,IAuDFrM,CAAmBsnC,ICdnBO,eA7CX,SAAAA,EAAYhrC,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAytC,IACf5tC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA2tC,GAAAttC,KAAAH,KAAMyC,KAiBVirC,wBAA0B,SAAAltC,GAAU,IACxBmtC,EAAgBntC,EAAhBmtC,YAER9tC,EAAK6C,SAAS,CACVirC,YAAaA,EACbC,kBAAmBC,aAAkBC,KAAKC,MAAMJ,GAAe,OAvBpD9tC,EA2BnBmuC,cAAgB,SAACL,EAAaM,GAGHJ,aAAkBC,KAAKC,MAAME,GAAY,IAKhE,OAJ0BJ,aAAkBC,KAAKC,MAAMJ,GAAe,KA5BtE9tC,EAAKoC,MAAQ,CACT0rC,YAAa,EACbM,SAAU,EACVC,WAAYruC,EAAKmuC,cAAc,EAAG,IANvBnuC,mFAWf6pC,KAAYr2B,GAAG,wBAAyBrT,KAAK0tC,wEAI7ChE,KAAYhoC,eAAe,wBAAyB1B,KAAK0tC,0DAuBpD,IACGE,EAAsB5tC,KAAKiC,MAA3B2rC,kBAER,OAAOtpC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KAAGu0B,UA1CCrqC,IAAMC,oBCanB2qC,uBACF,SAAAA,EAAY1rC,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAmuC,IACftuC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAquC,GAAAhuC,KAAAH,KAAMyC,KA0BV2rC,eAAiB,WACb,IAAMpyB,EAAOnc,EAAKmnB,QAAQva,QAC1B,GAAKuP,EAAL,CAFmB,IAIXoG,EAJWtiB,OAAA2sB,GAAA,EAAA3sB,QAAA2sB,GAAA,EAAA3sB,CAAAD,IAIXuiB,UACR,GAAKA,EAAL,CAEA,IAAMmZ,EAAO17B,EAAKwuC,WAAWvnC,IAAIsb,GACjC,GAAKmZ,EAAL,CAEA,IAAMnJ,EAAOkc,eAAqB/S,GAC7BnJ,IAELpW,EAAKX,UAAY+W,EAAKmc,UAAY,QAxCnB1uC,EAyDnB2uC,kCAAoC,SAAAhuC,GAAU,IAClCiuC,EAASjuC,EAATiuC,KAEJA,EACA5uC,EAAK6C,SACD,CACIgsC,kBAAmBD,GAEvB,WACI5uC,EAAK8uC,YAIb9uC,EAAK6C,SACD,CACIgsC,kBAAmBD,GAEvB,WACI5uC,EAAK+uC,cA3EF/uC,EAiFnBgvC,0BAA4B,SAAAruC,GAAU,IAC1BwE,EAAsBxE,EAAtBwE,OAAQod,EAAc5hB,EAAd4hB,UAEhBviB,EAAKmF,OAASA,EACdnF,EAAKuiB,UAAYA,GArFFviB,EAwFnBivC,mCAAqC,SAAAtuC,GAAU,IAAAuuC,EAAAjvC,OAAA2sB,GAAA,EAAA3sB,QAAA2sB,GAAA,EAAA3sB,CAAAD,IACnCmF,EADmC+pC,EACnC/pC,OAAQod,EAD2B2sB,EAC3B3sB,UAEZ5hB,EAAOwE,SAAWA,GAAUxE,EAAO4hB,YAAcA,GACjDviB,EAAK6C,SAAS,CACVssC,SAAU,QA7FHnvC,EAkGnBovC,4BAA8B,SAAAzuC,GAAU,IAAA0uC,EAAApvC,OAAA2sB,GAAA,EAAA3sB,QAAA2sB,GAAA,EAAA3sB,CAAAD,IAC5BmF,EAD4BkqC,EAC5BlqC,OAAQod,EADoB8sB,EACpB9sB,UACR4sB,EAAaxuC,EAAbwuC,SAEJhqC,IAAWgqC,EAAShqC,QAAUod,IAAc4sB,EAAS5sB,WACrDviB,EAAK6C,SAAS,CACVssC,SAAUA,KAxGHnvC,EA6GnB8uC,QAAU,WACNQ,aAAatvC,EAAKuvC,aAElBvvC,EAAKuvC,YAAch/B,WAAW,WAAM,IAAAvB,EACchP,EAAKoC,MAA3CotC,EADwBxgC,EACxBwgC,eAAgBX,EADQ7/B,EACR6/B,kBACxB7uC,EAAK6C,SAAS,CACVmO,KAAMw+B,GAAkBX,KAE7B,MArHY7uC,EAwHnB+uC,SAAW,WACPO,aAAatvC,EAAK8Z,SAElB9Z,EAAK8Z,QAAUvJ,WAAW,WAAM,IAAAK,EACkB5Q,EAAKoC,MAA3CotC,EADoB5+B,EACpB4+B,eAAgBX,EADIj+B,EACJi+B,kBACxB7uC,EAAK6C,SAAS,CACVmO,KAAMw+B,GAAkBX,KAE7B,MAhIY7uC,EAmInBuqC,iBAAmB,WACfvqC,EAAK6C,SAAS,CACVgsC,mBAAmB,EACnB79B,MAAM,KAtIKhR,EA0InByqC,iBAAmB,WACfzqC,EAAK6C,SACD,CACIgsC,mBAAmB,GAEvB,WACI7uC,EAAK+uC,cAhJE/uC,EAqJnBknB,aAAe,WACX,IAAM/K,EAAOnc,EAAKmnB,QAAQva,QACrBuP,IAEkB,IAAnBA,EAAKX,UACL9Z,KAAgBiJ,aAAa,CACzBlI,QAAS,kCAEN0Z,EAAKC,eAAiBD,EAAKX,UAAYW,EAAKE,cACnD3a,KAAgBiJ,aAAa,CACzBlI,QAAS,oCA5JjBzC,EAAKmnB,QAAUzjB,IAAM+M,YACrBzQ,EAAKwuC,WAAa,IAAIrnC,IAJP,IAMP6D,EAAsB6+B,KAAtB7+B,QAASmkC,EAAatF,KAAbsF,SANF,OAQfnvC,EAAKmF,OAAS6F,EAAUA,EAAQV,QAAU,EAC1CtK,EAAKuiB,UAAYvX,EAAUA,EAAQjK,GAAK,EAExCf,EAAKoC,MAAQ,CACT4O,MAAM,EACNw+B,gBAAgB,EAChBX,mBAAmB,EACnBM,SAAUA,GAfCnvC,kFAmBAgD,EAAWC,EAAWC,GAAU,IACvC8N,EAAS7Q,KAAKiC,MAAd4O,MAEH/N,EAAU+N,MAAQA,GACnB7Q,KAAKouC,6DAqBT1E,KAAYr2B,GAAG,0BAA2BrT,KAAK6uC,2BAC/CnF,KAAYr2B,GAAG,4BAA6BrT,KAAKivC,6BACjDvF,KAAYr2B,GAAG,mCAAoCrT,KAAK8uC,oCACxDpF,KAAYr2B,GAAG,kCAAmCrT,KAAKwuC,kFAIvD9E,KAAYhoC,eAAe,0BAA2B1B,KAAK6uC,2BAC3DnF,KAAYhoC,eAAe,4BAA6B1B,KAAKivC,6BAC7DvF,KAAYhoC,eAAe,mCAAoC1B,KAAK8uC,oCACpEpF,KAAYhoC,eAAe,kCAAmC1B,KAAKwuC,oEA8G9D,IAAAj+B,EAAAvQ,KACG+E,EAAY/E,KAAKyC,MAAjBsC,QADHo7B,EAGsBngC,KAAKiC,MAAxB4O,EAHHsvB,EAGGtvB,KAAMm+B,EAHT7O,EAGS6O,SACd,IAAKn+B,EAAM,OAAO,KAClB,IAAKm+B,EAAU,OAAO,KALjB,IAOGjqB,EAAaiqB,EAAbjqB,SACR,OAAKA,EACDA,EAASpe,QAAU,EAAU,MAEjC3G,KAAKquC,WAAWlW,QAGZ7zB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,YACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,mBAAoBN,EAAQ4c,KAAM5c,EAAQe,cACjExB,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAKgnB,QACV7jB,UAAU,iBACVioC,aAAcprC,KAAKoqC,iBACnBiB,aAAcrrC,KAAKsqC,iBACnB/hB,SAAUvoB,KAAK+mB,cACdioB,EAASjqB,SACLuqB,MAAM,GACNC,UACArmC,IAAI,SAAAnI,GAAC,OACFuD,EAAArB,EAAAC,cAAA,OAAKkB,IAAKrD,EAAEH,GAAIuQ,IAAK,SAAA+T,GAAE,OAAI3U,EAAK89B,WAAWpgC,IAAIlN,EAAEH,GAAIskB,IAAK/hB,UAAU,iBAC/DqsC,aAASzuC,EAAG,kBAAM0uC,aAAU1uC,EAAEoJ,QAASpJ,EAAEH,aAnBhD,YA7KP2C,IAAMC,YA0MdoC,OAjNA,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChB6hB,KAAM,CACFxb,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWwiB,QAAU,YAEhFpW,YAAY1M,KA6MJD,CAAmBuoC,ICvL5BuB,uBACF,SAAAA,EAAYjtC,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA0vC,IACf7vC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA4vC,GAAAvvC,KAAAH,KAAMyC,KA6EV0qC,gCAAkC,SAAA3sC,GAAU,IAChC4sC,EAAiB5sC,EAAjB4sC,aAEFuC,EAAS9vC,EAAK+vC,SAASnjC,QACxBkjC,IAELA,EAAOvC,aAAeA,IApFPvtC,EAuFnBmqC,0BAA4B,SAAAxpC,GAAU,IAC1BmpC,EAAWnpC,EAAXmpC,OAEFgG,EAAS9vC,EAAK+vC,SAASnjC,QACxBkjC,IAELA,EAAOhG,OAASA,IA7FD9pC,EAgGnBgwC,iCAAmC,SAAArvC,GAC/BX,EAAKiwC,mBAAqBtsB,QAAQrY,IAAiB4kC,qBAjGpClwC,EAoGnBmwC,+BAAiC,SAAAxvC,GAC7BX,EAAKiwC,oBAAqB,GArGXjwC,EAwGnBowC,+BAAiC,SAAAzvC,GAC7BX,EAAKiwC,oBAAqB,GAzGXjwC,EA4GnBqwC,8BAAgC,SAAA1vC,GAC5BX,EAAKiwC,oBAAqB,EAE1B,IAAMH,EAAS9vC,EAAK+vC,SAASnjC,QACxBkjC,GAELA,EAAOQ,SAlHQtwC,EAqHnBuwC,iBAAmB,SAAC7S,EAAM1yB,GAAY,IAC1BV,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEjBf,EAAK6C,SACD,CACIs2B,IAAKn5B,EAAKwwC,YAAYxlC,IAE1B,WACI,IAAM8kC,EAAS9vC,EAAK+vC,SAASnjC,QACzBkjC,GACI9vC,EAAKiwC,qBACLH,EAAOQ,QAEP5uC,KAAgBiJ,aAAa,CACzBlI,QAAS,yBACT0C,OAAQmF,EACRiY,UAAWxhB,QArIhBf,EA6InBywC,wBAA0B,SAAA9vC,GAAU,IACxBwE,EAAsBxE,EAAtBwE,OAAQod,EAAc5hB,EAAd4hB,UACRvX,EAAYhL,EAAKoC,MAAjB4I,QAER,GAAKA,EAAL,CAJgC,IAMxBV,EAAyBU,EAAzBV,QAASvJ,EAAgBiK,EAAhBjK,GAAIoL,EAAYnB,EAAZmB,QACrB,GAAKA,GACDhH,IAAWmF,GAAWiY,IAAcxhB,EAExC,OAAQoL,EAAQ,UACZ,IAAK,cAAe,IACRukC,EAAavkC,EAAbukC,SACR,GAAIA,EAAU,KACFC,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAE3B,GAAIF,EAAO,CACP,IAAMjT,EAAOiT,EAAMA,MACfjT,GACA19B,EAAKuwC,iBAAiB7S,EAAM1yB,GAIpC,GAAI4lC,EAAY,KACJE,EAAUF,EAAVE,MACJA,GACA9wC,EAAKuwC,iBAAiBO,EAAO9lC,GAIrC,GAAI6lC,EAAY,KACJE,EAAUF,EAAVE,MACJA,GACA/wC,EAAKuwC,iBAAiBQ,EAAO/lC,IAKzC,MAEJ,IAAK,eAAgB,IACT2lC,EAAUxkC,EAAVwkC,MACR,GAAIA,EAAO,CACP,IAAMjT,EAAOiT,EAAMA,MACfjT,GACA19B,EAAKuwC,iBAAiB7S,EAAM1yB,GAIpC,MAEJ,IAAK,mBAAoB,IACb4lC,EAAezkC,EAAfykC,WACR,GAAIA,EAAY,KACJE,EAAUF,EAAVE,MACJA,GACA9wC,EAAKuwC,iBAAiBO,EAAO9lC,GAIrC,MAEJ,IAAK,mBAAoB,IACb6lC,EAAe1kC,EAAf0kC,WACR,GAAIA,EAAY,KACJE,EAAUF,EAAVE,MACJA,GACA/wC,EAAKuwC,iBAAiBQ,EAAO/lC,OAhN9BhL,EAyNnBovC,4BAA8B,SAAAzuC,GAAU,IAC5BwuC,EAAaxuC,EAAbwuC,SACAhqC,EAAsBgqC,EAAtBhqC,OAAQod,EAAc4sB,EAAd5sB,UACRvX,EAAYhL,EAAKoC,MAAjB4I,QAEJA,GAAWA,EAAQV,UAAYnF,GAAU6F,EAAQjK,KAAOwhB,GACxDviB,EAAK6C,SAAS,CAAEssC,SAAUA,KA/NfnvC,EAmOnBgxC,yBAA2B,SAAArwC,GACvBX,EAAK6C,SAAS,CACVmI,QAAS,KACTmkC,SAAU,KACV8B,SAAS,EACT9X,IAAK,QAxOMn5B,EA4OnBgvC,0BAA4B,SAAAruC,GAAU,IAC1BwE,EAAsBxE,EAAtBwE,OAAQod,EAAc5hB,EAAd4hB,UADkBvT,EAEThP,EAAKoC,MAAtB4I,EAF0BgE,EAE1BhE,QAASmuB,EAFiBnqB,EAEjBmqB,IAEjB,GAAInuB,GAAWA,EAAQV,UAAYnF,GAAU6F,EAAQjK,KAAOwhB,GACxD,GAAI4W,EAAK,CACL,IAAM2W,EAAS9vC,EAAK+vC,SAASnjC,QACzBkjC,IACIA,EAAOoB,OACPpB,EAAOqB,OAEPrB,EAAOQ,cAIhB,CACH,IAAMnX,EAAMn5B,EAAKwwC,YAAY3G,KAAY7+B,SACnCimC,EAAUttB,QAAQwV,GACP0Q,KAAYsF,SAC7BnvC,EAAK6C,SACD,CACImI,QAAS6+B,KAAY7+B,QACrBmkC,SAAUtF,KAAYsF,SACtB8B,QAASA,EACT9X,IAAKA,GAET,WACI,IAAM2W,EAAS9vC,EAAK+vC,SAASnjC,QACzBkjC,IACAA,EAAOhC,YAAc9tC,EAAKwiC,UACtBxiC,EAAKiwC,mBACLH,EAAOQ,QAGAR,EAAOoB,QACdpB,EAAOqB,YA/QZnxC,EAuRnBoxC,WAAa,WACT1vC,KAAgBiJ,aAAa,CACzBlI,QAAS,2BAzREzC,EA6RnBqxC,WAAa,WAAM,IACPrmC,EAAYhL,EAAKoC,MAAjB4I,QACHA,GAELtJ,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACT0C,OAAQ6F,EAAQV,QAChBiY,UAAWvX,EAAQjK,MApSRf,EAwSnBsxC,WAAa,WACT5vC,KAAgBiJ,aAAa,CACzBlI,QAAS,2BA1SEzC,EA8SnBwwC,YAAc,SAAAxlC,GACV,GAAIA,EAAS,KACDmB,EAAYnB,EAAZmB,QACR,GAAIA,EAAS,KACDwkC,EAA4CxkC,EAA5CwkC,MAAOC,EAAqCzkC,EAArCykC,WAAYC,EAAyB1kC,EAAzB0kC,WAAYH,EAAavkC,EAAbukC,SAEvC,GAAIC,EAAO,CACP,IAAMjT,EAAOiT,EAAMA,MACnB,GAAIjT,EACA,OAAOtE,YAAOsE,GAItB,GAAIkT,EAAY,KACJE,EAAUF,EAAVE,MACR,GAAIA,EACA,OAAO1X,YAAO0X,GAItB,GAAID,EAAY,KACJE,EAAUF,EAAVE,MACR,GAAIA,EACA,OAAO3X,YAAO2X,GAItB,GAAIL,EAAU,CACV,GAAIA,EAASC,MAAO,CAChB,IAAMjT,EAAOgT,EAASC,MAAMA,MAC5B,GAAIjT,EACA,OAAOtE,YAAOsE,GAItB,GAAIgT,EAASE,WAAY,KACbE,EAAUJ,EAASE,WAAnBE,MACR,GAAIA,EACA,OAAO1X,YAAO0X,GAItB,GAAIJ,EAASG,WAAY,KACbE,EAAUL,EAASG,WAAnBE,MACR,GAAIA,EACA,OAAO3X,YAAO2X,MAOlC,MAAO,IAlWQ/wC,EAqWnBuxC,YAAc,WAAqB,IAApBC,IAAoBptC,UAAA0C,OAAA,QAAA2rB,IAAAruB,UAAA,KAAAA,UAAA,GACvB4G,EAAYhL,EAAKoC,MAAjB4I,QACHA,IAELtJ,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACT0C,OAAQ6F,EAAQV,QAChBiY,UAAWvX,EAAQjK,GACnBywC,SAAUA,IAGdxxC,EAAK6C,SACD,GAKA,WACInB,KAAgBiJ,aAAa,CACzBlI,QAAS,uBACT0C,OAAQ6F,EAAQV,QAChBiY,UAAWvX,EAAQjK,GACnBywC,SAAUA,QA3XPxxC,EAiYnByxC,iBAAmB,WACfzxC,EAAKuxC,aAAY,IAlYFvxC,EAqYnB0K,YAAc,WACV,IAAMolC,EAAS9vC,EAAK+vC,SAASnjC,QACzBkjC,GACAA,EAAOQ,QAGXtwC,EAAKuxC,aAAY,IA3YFvxC,EA8YnB0xC,iBAAmB,WAAM,IACb1mC,EAAYhL,EAAKoC,MAAjB4I,QACR,GAAKA,EAAL,CAEA,IAAM8kC,EAAS9vC,EAAK+vC,SAASnjC,QACxBkjC,IAEL9vC,EAAK6C,SAAS,CACVirC,YAAagC,EAAOhC,YACpBC,kBAAmBC,aAAkBC,KAAKC,MAAM4B,EAAOhC,aAAe,MAG1EpsC,KAAgBiJ,aAAa,CACzBlI,QAAS,wBACT0C,OAAQ6F,EAAQV,QAChBiY,UAAWvX,EAAQjK,GACnBqtC,SAAU0B,EAAO1B,SACjBN,YAAagC,EAAOhC,YACpBxsC,UAAW6jB,KAAKgR,WAhaLn2B,EAoanB2xC,cAAgB,WAAM,IACV3mC,EAAYhL,EAAKoC,MAAjB4I,QACR,GAAKA,EAAL,CAEA,IAAM8kC,EAAS9vC,EAAK+vC,SAASnjC,QAC7B,GAAKkjC,EAAL,CALkB,IAOVvC,EAAyB1D,KAAzB0D,aAAczD,EAAWD,KAAXC,OAEdx/B,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GACX4vC,EAAQiB,aAAStnC,EAASvJ,GAMhC,GAJA+uC,EAAOvC,aAAeoD,EAAQjD,IAA6BH,EAC3DuC,EAAOhG,OAASA,EAChBgG,EAAO+B,OAAQ,GAEXlB,EAAJ,CAIA,IAAImB,EAAS,KACT,kBAAmBhC,EACnBgC,EAAShC,EAAOiC,gBACT,qBAAsBjC,IAC7BgC,EAAShC,EAAOkC,oBAGfF,GAILpwC,KAAgBiJ,aAAa,CACzBlI,QAAS,iCACT0C,OAAQ6F,EAAQV,QAChBiY,UAAWvX,EAAQjK,GACnB+wC,OAAQA,QAvcG9xC,EA2cnBiyC,gBAAkB,WAAM,IACZjnC,EAAYhL,EAAKoC,MAAjB4I,QACR,GAAKA,EAAL,CAEAhL,EAAK6C,SAAS,CACVouC,SAAS,IAGb,IAAMnB,EAAS9vC,EAAK+vC,SAASnjC,QACxBkjC,GAELpuC,KAAgBiJ,aAAa,CACzBlI,QAAS,wBACT0C,OAAQ6F,EAAQV,QAChBiY,UAAWvX,EAAQjK,GACnB+sC,YAAagC,EAAOhC,YACpBM,SAAU0B,EAAO1B,SACjB9sC,UAAW6jB,KAAKgR,UA5dLn2B,EAgenBkyC,iBAAmB,WAAM,IACblnC,EAAYhL,EAAKoC,MAAjB4I,QACHA,IAELhL,EAAK6C,SAAS,CACVouC,SAAS,IAGEjxC,EAAK+vC,SAASnjC,SAG7BlL,KAAgBiJ,aAAa,CACzBlI,QAAS,yBACT0C,OAAQ6F,EAAQV,QAChBiY,UAAWvX,EAAQjK,OA9eRf,EAkfnBwtC,mBAAqB,WAAM,IAGjBC,EAFmBztC,EAAKoC,MAAtBmrC,eAGaG,IAA6BC,IAA2BD,IAE7E1tC,EAAK6C,SACD,CACI0qC,aAAcE,GAElB,WACI,IAAMqC,EAAS9vC,EAAK+vC,SAASnjC,QACxBkjC,IAELA,EAAOvC,aAAeE,KAI9B/rC,KAAgBiJ,aAAa,CACzBlI,QAAS,gCACT8qC,aAAcE,KAtgBHztC,EA0gBnBmyC,QAAU,SAACnnC,EAASmkC,GAChB,IAAKnkC,EAAS,OAAO,EACrB,IAAKmkC,IAAaA,EAASjqB,SAASpe,OAAQ,OAAO,EAFtB,IAIrBwD,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEXu2B,EAAQ6X,EAASjqB,SAASqS,UAAU,SAAAr2B,GAAC,OAAIA,EAAEoJ,UAAYA,GAAWpJ,EAAEH,KAAOA,IACjF,OAAe,IAAXu2B,GAEGA,EAAQ,EAAI6X,EAASjqB,SAASpe,QAnhBtB9G,EAshBnBoyC,QAAU,SAACpnC,EAASmkC,GAChB,IAAKnkC,EAAS,OAAO,EACrB,IAAKmkC,IAAaA,EAASjqB,SAASpe,OAAQ,OAAO,EAFtB,IAIrBwD,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEXu2B,EAAQ6X,EAASjqB,SAASqS,UAAU,SAAAr2B,GAAC,OAAIA,EAAEoJ,UAAYA,GAAWpJ,EAAEH,KAAOA,IACjF,OAAe,IAAXu2B,GAEGA,EAAQ,GAAK,GA/hBLt3B,EAkiBnBqyC,sBAAwB,WACpB3wC,KAAgBiJ,aAAa,CACzBlI,QAAS,kCACTmsC,MAAM,KAriBK5uC,EAyiBnBsyC,sBAAwB,WACpB5wC,KAAgBiJ,aAAa,CACzBlI,QAAS,kCACTmsC,MAAM,KA5iBK5uC,EAgjBnBuyC,iBAAmB,WAAM,IACbvnC,EAAYhL,EAAKoC,MAAjB4I,QACHA,GAEL8Q,aAAS9Q,EAAQV,QAASU,EAAQjK,KAjjBlCf,EAAK+vC,SAAWrsC,IAAM+M,YAHP,IAKPzF,EAAsB6+B,KAAtB7+B,QAASmkC,EAAatF,KAAbsF,SALF,OAOfnvC,EAAKwiC,UAAYgQ,IAEjBxyC,EAAKoC,MAAQ,CACT0rC,YAAa,EACbC,kBAAmBC,aAAkB,GACrChjC,QAASA,EACTmkC,SAAUA,EACV8B,SAAS,EACT9X,IAAKn5B,EAAKwwC,YAAYxlC,IAfXhL,qFAmBGsT,EAAWC,EAAWqd,GAAa,IAC7C5qB,EAAU7F,KAAKyC,MAAfoD,MAD6C4K,EAETzQ,KAAKiC,MAAzC4I,EAF6C4F,EAE7C5F,QAASmkC,EAFoCv+B,EAEpCu+B,SAAUhW,EAF0BvoB,EAE1BuoB,IAAK8X,EAFqBrgC,EAErBqgC,QAEhC,OAAI39B,EAAUtN,QAAUA,IAIpBuN,EAAUvI,UAAYA,IAItBuI,EAAU47B,WAAaA,IAIvB57B,EAAU4lB,MAAQA,GAIlB5lB,EAAU09B,UAAYA,iDAQ1BrnC,KAAU4J,GAAG,4BAA6BrT,KAAKswC,yBAC/C7mC,KAAU4J,GAAG,4BAA6BrT,KAAKswC,yBAC/C7mC,KAAU4J,GAAG,wBAAyBrT,KAAKswC,yBAC3C5G,KAAYr2B,GAAG,0BAA2BrT,KAAK6uC,2BAC/CnF,KAAYr2B,GAAG,yBAA0BrT,KAAK6wC,0BAC9CnH,KAAYr2B,GAAG,4BAA6BrT,KAAKivC,6BACjDvF,KAAYr2B,GAAG,8BAA+BrT,KAAKkwC,+BACnDxG,KAAYr2B,GAAG,+BAAgCrT,KAAKiwC,gCACpDvG,KAAYr2B,GAAG,+BAAgCrT,KAAKgwC,gCACpDtG,KAAYr2B,GAAG,0BAA2BrT,KAAKgqC,2BAC/CN,KAAYr2B,GAAG,gCAAiCrT,KAAKmtC,iCAErDhiC,IAAiBkI,GAAG,iCAAkCrT,KAAK6vC,iFAI3DpmC,KAAU/H,eAAe,4BAA6B1B,KAAKswC,yBAC3D7mC,KAAU/H,eAAe,4BAA6B1B,KAAKswC,yBAC3D7mC,KAAU/H,eAAe,wBAAyB1B,KAAKswC,yBACvD5G,KAAYhoC,eAAe,0BAA2B1B,KAAK6uC,2BAC3DnF,KAAYhoC,eAAe,yBAA0B1B,KAAK6wC,0BAC1DnH,KAAYhoC,eAAe,4BAA6B1B,KAAKivC,6BAC7DvF,KAAYhoC,eAAe,8BAA+B1B,KAAKkwC,+BAC/DxG,KAAYhoC,eAAe,+BAAgC1B,KAAKiwC,gCAChEvG,KAAYhoC,eAAe,+BAAgC1B,KAAKgwC,gCAChEtG,KAAYhoC,eAAe,0BAA2B1B,KAAKgqC,2BAC3DN,KAAYhoC,eAAe,gCAAiC1B,KAAKmtC,iCAEjEhiC,IAAiBzJ,eAAe,iCAAkC1B,KAAK6vC,mEA4elE,IACG9qC,EAAY/E,KAAKyC,MAAjBsC,QADHo7B,EAEuCngC,KAAKiC,MAAzC6uC,EAFH3Q,EAEG2Q,QAASjmC,EAFZs1B,EAEYt1B,QAASmkC,EAFrB7O,EAEqB6O,SAAUhW,EAF/BmH,EAE+BnH,IAEhCwX,GAAQ,EACZ,GAAI3lC,EAAS,KACDV,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GACjB4vC,EAAQiB,aAAStnC,EAASvJ,GAG9B,IAAM6hB,EAAO5X,EAAUA,EAAQ4X,KAAO,KAEhCsX,EAAQuY,aAAcznC,GACtB0nC,EAAcC,aAAY/vB,GAC1BgwB,EAAUC,aAAQjwB,GAClBkwB,GAAYnC,EACZoC,GAAoBpC,EACpBqC,EAAarC,EACbsC,EAActC,EACdwB,EAAUhyC,KAAKgyC,QAAQnnC,EAASmkC,GAChCiD,EAAUjyC,KAAKiyC,QAAQpnC,EAASmkC,GAEtC,OACI1qC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,SACIC,UAAU,sBACVgO,IAAKnR,KAAK4vC,SACV5W,IAAKA,EACL+Z,UAAU,EACVC,UAAU,EACV1lC,MAAO,GACPC,OAAQ,GACR0lC,UAAWjzC,KAAKwxC,cAChB0B,OAAQlzC,KAAK8xC,gBACbqB,QAASnzC,KAAK+xC,iBACdqB,aAAcpzC,KAAKuxC,iBACnB8B,QAASrzC,KAAKsxC,mBAEjBzmC,GACGvG,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,kBAC5CxB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACI4a,UAAWm0B,EACX7uC,UAAW4B,EAAQ4sB,WACnBlmB,MAAM,UACNlG,QAASvF,KAAKixC,YACd3sC,EAAArB,EAAAC,cAACowC,GAAArwC,EAAD,CAAkB+xB,SAAS,WAE/B1wB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQ4sB,WACnBlmB,MAAM,UACNoS,UAAWmb,EACXzzB,QAASvF,KAAKkxC,YACbJ,EAAUxsC,EAAArB,EAAAC,cAACqwC,GAAAtwC,EAAD,MAAgBqB,EAAArB,EAAAC,cAACswC,GAAAvwC,EAAD,OAE/BqB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACI4a,UAAWo0B,EACX9uC,UAAW4B,EAAQ4sB,WACnBlmB,MAAM,UACNlG,QAASvF,KAAKmxC,YACd7sC,EAAArB,EAAAC,cAACuwC,GAAAxwC,EAAD,CAAc+xB,SAAS,WAE3B1wB,EAAArB,EAAAC,cAACwwC,GAAD,MACApvC,EAAArB,EAAAC,cAAA,OACIC,UAAU,wBACVioC,aAAcprC,KAAKkyC,sBACnB7G,aAAcrrC,KAAKmyC,sBACnB5sC,QAASvF,KAAKoyC,kBACd9tC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACV42B,EACA4Y,GACGruC,EAAArB,EAAAC,cAAA,QAAM62B,MAAOwY,GAAb,OAEKE,IAVjB,OAeInuC,EAAArB,EAAAC,cAACywC,GAAD,OAEJrvC,EAAArB,EAAAC,cAAC0wC,GAAD,MACChB,GAAoBtuC,EAAArB,EAAAC,cAAC2wC,GAAD,MACpBhB,GAAcvuC,EAAArB,EAAAC,cAAC4wC,GAAD,MACdhB,GAAexuC,EAAArB,EAAAC,cAAC6wC,GAAD,MAChBzvC,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQ4sB,WAAYpsB,QAASvF,KAAKuK,aACrDjG,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,CAAW+xB,SAAS,oBA5oBrBzxB,IAAMC,YA0pBlBsO,GALCC,YACZS,cACA5M,IA9pBW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChB6xB,WAAY,CACR1f,QAAS,IAEVM,YAAY1M,KA0pBI,CAAEQ,WAAW,IAGrByL,CAAQ49B,IC/qBjBsE,sNASFC,uBAAyB,WACrBp0C,EAAKuO,kGARL4c,KAAkB3X,GAAG,6BAA8BrT,KAAKi0C,uEAIxDjpB,KAAkBtpB,eAAe,6BAA8B1B,KAAKi0C,yDAO/D,IAAAnvC,EAC2B9E,KAAKyC,MAA7BsC,EADHD,EACGC,QAAS0d,EADZ3d,EACY2d,KAAMqI,EADlBhmB,EACkBgmB,KAEvB,OACIxmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,WAAYN,EAAQmvC,UAC1C,IAAIlvB,KAAY,IAAPvC,GAAa0xB,mBAAmB,CAACrpB,EAAKD,UAAW,CAAEupB,IAAK,UAAWC,MAAO,iBAlB9E9wC,IAAMC,YAiCbsO,GALCC,YACZnM,IAnCW,SAAAC,GAAK,MAAK,CACrBquC,QAAS,CACLzoC,MAAO5F,EAAME,QAAQuG,KAAKoH,aAiCX,CAAErN,WAAW,IAChCmM,cAGWV,CAAQkiC,ICoERM,uBA7GX,SAAAA,EAAY7xC,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAs0C,IACfz0C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAw0C,GAAAn0C,KAAAH,KAAMyC,KAeV8xC,uBAAyB,SAAA/zC,GACrBX,EAAK6C,SAAS,CAAEmnC,SAAU1+B,IAAiBqpC,iBAjB5B30C,EAoBnB40C,gBAAkB,SAAAhmC,GACdA,EAAME,iBACNF,EAAMiY,mBAtBS7mB,EAyBnB60C,WAAa,SAAAjmC,GACTA,EAAME,iBACNF,EAAMiY,kBACNvb,IAAiBwpC,aAAY,GAE7B90C,EAAK89B,6BAA6BlvB,EAAMmmC,aAAaxX,QA9BtCv9B,EAiCnBg1C,gBAAkB,SAAApmC,GACdA,EAAME,iBACNF,EAAMiY,kBACNvb,IAAiBwpC,aAAY,IApCd90C,EAuCnB89B,6BAA+B,SAAAP,GAC3B,GAAqB,IAAjBA,EAAMz2B,OAEV,IAAK,IAAIO,EAAI,EAAGA,EAAIk2B,EAAMz2B,OAAQO,IAAK,CACnC,IAAIq2B,EAAOH,EAAMl2B,GACX8E,EAAU,CACZ1J,QAAS,uBACTqN,SAAU,CAAErN,QAAS,gBAAiBynB,KAAMwT,EAAKxT,KAAM+T,KAAMP,IAGjE19B,EAAK+7B,eAAe5vB,EAAS,SAAAxJ,GAAM,OAAIiH,KAAU00B,WAAW37B,EAAOwJ,QAAQ2D,SAASA,SAAS/O,GAAI4B,OAjDtF3C,EAqDnB+7B,eArDmB,eAAAxb,EAAAtgB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAqDF,SAAAC,EAAOqE,EAASizB,GAAhB,IAAAvmB,EAAAlW,EAAA,OAAAiF,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACPoQ,EAAgBvN,IAAiBwN,YAD1B,CAAAvQ,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,oBAIRgC,EAJQ,CAAA5D,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBAAA5B,EAAAC,KAAA,EAOT8C,IAAiB+zB,sBAAjB,mCAAAv6B,OAA0E+T,IAPjEtQ,EAAAE,KAAA,EASU/G,KAAgBc,KAAK,CACpCC,QAAS,cACT6H,QAASuO,EACT7L,oBAAqB,EACrBI,sBAAuBjB,IAblB,OASLxJ,EATK4F,EAAAiB,KAkBT9H,KAAgBc,KAAK,CACjBC,QAAS,eACT6H,QAASuO,EACT7K,YAAa,CAACrL,EAAO5B,MAGzBq+B,EAASz8B,GAxBA4F,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAg3B,GAAAh3B,EAAA,SA0BTi3B,MAAM,qBAAuBC,KAAKC,UAALn3B,EAAAg3B,KA1BpB,yBAAAh3B,EAAAwB,SAAAjC,EAAA,kBArDE,gBAAA0Y,EAAAmf,GAAA,OAAApf,EAAApc,MAAAhE,KAAAiE,YAAA,GAGfpE,EAAKoC,MAAQ,CACT4nC,SAAU1+B,IAAiBqpC,eAJhB30C,mFASfsL,IAAiBkI,GAAG,uBAAwBrT,KAAKu0C,uEAIjDppC,IAAiBzJ,eAAe,uBAAwB1B,KAAKu0C,yDAsExD,IACG1K,EAAa7pC,KAAKiC,MAAlB4nC,SAER,OACIvlC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACKwwB,GACGvlC,EAAArB,EAAAC,cAAA,OACIC,UAAU,oBACV2xC,YAAa90C,KAAKy0C,gBAClBM,YAAa/0C,KAAK60C,gBAClBG,OAAQh1C,KAAK00C,YACbpwC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,6BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,0BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,2BAAf,mBACAmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,8BAAf,+CAlGFI,IAAMC,wCCoDpC,IAwBMyxC,8MACFhzC,MAAQ,CACJizC,SAAU,QAGdC,eAAiB,SAAA/iB,GACbvyB,EAAK6C,SAAS,CACVwyC,SAAU9iB,OAIlBgjB,YAAc,SAAA3mC,GACVA,EAAMiY,kBADa,IAGX2uB,EAAgBx1C,EAAK4C,MAArB4yC,YACR,IAAKA,EAAa,OAAO,KAJN,IAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrB9yB,EAAmB8yB,EAAnB9yB,eAER3G,aAAS2G,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAA+B,IACxBrY,EAAwBmrC,EAAxBnrC,QAASC,EAAekrC,EAAflrC,WAEjBuR,aAASxR,EAASC,6EAMrB,IAAAtF,EAC+B9E,KAAKyC,MAAjCkI,EADH7F,EACG6F,EAAG5F,EADND,EACMC,QAASswC,EADfvwC,EACeuwC,YACZH,EAAal1C,KAAKiC,MAAlBizC,SAEFnb,EAAQwb,aAAgBF,EAAa1qC,GACrC6qC,EAAUC,aAAsBJ,GAClC/wC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK1O,EAAE,cACHrG,EAAArB,EAAAC,cAAA,QAAMC,UAAW4B,EAAQ2wC,MAAOvkC,IAAKnR,KAAKm1C,kBAG9C,GAGJ,OACI7wC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,iBAAkBN,EAAQ4wC,aAAc,YAAnE,GAAAhxC,OACQgG,EAAE,oBADV,MAAAhG,OACkCgG,EAAE,QADpC,KAEIrG,EAAArB,EAAAC,cAAC0yC,GAAA3yC,EAAD,CACI82B,MAAOyb,EACPzwC,QAAS,CAAE8wC,OAAQ9wC,EAAQ+wC,YAAaN,QAASzwC,EAAQywC,SACzDO,YAAa,CACTC,cAAe,CACXC,UAAW,CACPP,MAAO,CACHQ,QAAS1yB,QAAQ0xB,GACjB/Y,QAAS+Y,MAKzBiB,UAAU,OACV7xC,EAAArB,EAAAC,cAAA,KAAGqC,QAASvF,KAAKo1C,aAAcrb,YArE7Bx2B,IAAMC,WAqFbsO,GALCC,YACZnM,IAzGW,SAAAC,GAAK,MAAK,CACrB8vC,aAAc,CACVlqC,MAAO5F,EAAME,QAAQC,QAAQC,MAEjC6vC,aAnDoBrqC,EAmDQ5F,EAAME,QAAQsd,KAAK,KAlDxC,CACH+yB,kCAAmC,CAC/B/wB,IAAK,EACLgxB,KAAM,EACN9K,UAAW,UACXj+B,MAAO,MACPC,OAAQ,MACR+oC,YAAa,CACT9K,YAAa,gBACb1lC,YAAW,2BAAAnB,OAA6B8G,EAA7B,kBAGnB8qC,+BAAgC,CAC5Bt1B,OAAQ,EACRo1B,KAAM,EACNG,aAAc,UACdlpC,MAAO,MACPC,OAAQ,MACR+oC,YAAa,CACT9K,YAAa,gBACb1lC,YAAW,GAAAnB,OAAK8G,EAAL,0CAGnBgrC,iCAAkC,CAC9BJ,KAAM,EACNK,WAAY,UACZnpC,OAAQ,MACRD,MAAO,MACPgpC,YAAa,CACT9K,YAAa,gBACb1lC,YAAW,eAAAnB,OAAiB8G,EAAjB,8BAGnBkrC,gCAAiC,CAC7B31B,MAAO,EACP41B,YAAa,UACbrpC,OAAQ,MACRD,MAAO,MACPgpC,YAAa,CACT9K,YAAa,gBACb1lC,YAAW,uCAAAnB,OAAyC8G,OAWhEiqC,MAAO,CACHpjC,SAAU,WACV0iB,SAAU,EACV1nB,MAAO,MACPC,OAAQ,MACR+oC,YAAa,CACTtqC,QAAS,KACT0K,OAAQ,OACRrE,QAAS,QACT/E,MAAO,EACPC,OAAQ,EACRgF,YAAa,UAGrBijC,QAAS,CACL9+B,OAAQ,iBAnEhB,IAAwBjL,GAwJD,CAAEpF,WAAW,IAChCmM,cAGWV,CAAQmjC,ICrJjB4B,4LACO,IAAA/xC,EACsD9E,KAAKyC,MAAxDsC,EADHD,EACGC,QAAS0d,EADZ3d,EACY2d,KAAMq0B,EADlBhyC,EACkBgyC,SAAUC,EAD5BjyC,EAC4BiyC,YAAapsC,EADzC7F,EACyC6F,EAAGqsC,EAD5ClyC,EAC4CkyC,MAE3CvE,EAAUC,aAAQjwB,GAClB8vB,EAAcC,aAAY/vB,GAEhC,OACIne,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,OAAQN,EAAQkyC,OACvC3yC,EAAArB,EAAAC,cAAA,oBACC8zC,EAAQ,GACL1yC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,KAAGC,UAAU,oBACbmB,EAAArB,EAAAC,cAAA,QAAMC,UAAU,cAAhB,OAEK6zC,EAFL,cAOPF,EAAW,GAAKxyC,EAAArB,EAAAC,cAAA,YAAOyH,EAAE,iBAAT,QACjBrG,EAAArB,EAAAC,cAAA,KAAGqC,QAASwxC,GACRzyC,EAAArB,EAAAC,cAAA,QAAM62B,MAAOwY,GAAcE,YAtB5BlvC,IAAMC,YAyCVsO,GALCC,YACZnM,IA9CW,SAAAC,GAAK,MAAK,CACrBoxC,KAAM,CACFxrC,MAAO5F,EAAME,QAAQuG,KAAKoH,UAC1BwjC,MAAO,CACHzrC,MAAO5F,EAAME,QAAQuG,KAAKoH,cA0Cf,CAAErN,WAAW,IAChCmM,cAGWV,CAAQ+kC,ICGRM,uBAvDX,SAAAA,EAAY10C,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAm3C,IACft3C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAq3C,GAAAh3C,KAAAH,KAAMyC,KACD20C,wBAA0Bv3C,EAAKu3C,wBAAwBhc,KAA7Bt7B,OAAA2sB,GAAA,EAAA3sB,QAAA2sB,GAAA,EAAA3sB,CAAAD,KAC/BA,EAAKw3C,2BAA6Bx3C,EAAKw3C,2BAA2Bjc,KAAhCt7B,OAAA2sB,GAAA,EAAA3sB,QAAA2sB,GAAA,EAAA3sB,CAAAD,KAElCA,EAAKoC,MAAQ,CACTq1C,aAAc70C,EAAM60C,aACpBC,QAAQ,GAPG13C,mFAYfiM,KAAauH,GAAG,0BAA2BrT,KAAKo3C,yBAChDtrC,KAAauH,GAAG,6BAA8BrT,KAAKo3C,yBAEnDhjC,KAAUf,GAAG,uBAAwBrT,KAAKq3C,4EAGtBG,GAChBx3C,KAAKyC,MAAM2f,YAAco1B,EAAQC,gBAAkBD,EAAQ3sC,UAC3D7K,KAAK03C,aAAeF,EAAQ3sC,QAAQjK,GACpCZ,KAAK0C,SAAS,CAAE40C,aAAcE,EAAQ3sC,QAAQ8zB,oEAI3B6Y,GAEnBx3C,KAAKyC,MAAMuC,SAAWwyC,EAAQrtC,UAC5BnK,KAAKyC,MAAMi1C,cAAgB13C,KAAKyC,MAAMi1C,cAAgBF,EAAQG,6BAC5D33C,KAAKyC,MAAM2f,WAAao1B,EAAQG,8BAEpC33C,KAAK0C,SAAS,CAAE40C,aAAc,KAAMC,QAAQ,mDAKhDzrC,KAAapK,eAAe,0BAA2B1B,KAAKo3C,yBAC5DtrC,KAAapK,eAAe,6BAA8B1B,KAAKo3C,yBAE/DhjC,KAAU1S,eAAe,uBAAwB1B,KAAKq3C,6DAItD,IAAIO,EAAiB,yBAQrB,OAPI53C,KAAKiC,MAAMq1C,eACXM,EACyC,8BAArC53C,KAAKiC,MAAMq1C,aAAa,SAClB,uBACA,yBAGPt3C,KAAKiC,MAAMs1C,QAAUjzC,EAAArB,EAAAC,cAAA,KAAGC,UAAWkC,IAAW,qBAAsBuyC,YApDvDr0C,IAAMC,4BCYnBoC,WAbA,SAAAC,GAAK,MAAK,CACrBgyC,gBAAiB,CACb1xC,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQsd,KAAK,KAAO,UACtE5X,MAA8B,SAAvB5F,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQuG,KAAKtG,QAAU,aAU7DJ,CANf,SAAyBnD,GAAO,IACpBsC,EAAYtC,EAAZsC,QAER,OAAOT,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,mBAAoBN,EAAQ8yC,kBAAvD,qGCQLC,sNACF/0B,WAAa,WAAM,IAAAje,EACwEjF,EAAK4C,MAApFsC,EADOD,EACPC,QAASC,EADFF,EACEE,OAAQod,EADVtd,EACUsd,UAAW/U,EADrBvI,EACqBuI,KAAmB0qC,GADxCjzC,EAC2BzB,YAD3ByB,EACwCizC,kBAAkBtI,EAD1D3qC,EAC0D2qC,UAEnE5kC,EAAUiB,KAAahF,IAAI9B,EAAQod,GACzC,IAAKvX,EAAS,OAAO,KAJN,IAMPmB,EAAYnB,EAAZmB,QACR,IAAKA,EAAS,OAAO,KAPN,IASPukC,EAAavkC,EAAbukC,SACR,IAAKA,EAAU,OAAO,KAVP,IAaXyH,EAaAzH,EAbAyH,UACAje,EAYAwW,EAZAxW,MACAke,EAWA1H,EAXA0H,YAEAhsC,GASAskC,EAVA2H,IAUA3H,EATAtkC,OACAksC,EAQA5H,EARA4H,UACAvH,EAOAL,EAPAK,MACAJ,EAMAD,EANAC,MACA7gC,EAKA4gC,EALA5gC,SACA8gC,EAIAF,EAJAE,WACAC,EAGAH,EAHAG,WACA3uC,EAEAwuC,EAFAxuC,QACAsS,EACAk8B,EADAl8B,KAGJ,GAAItS,EACA,OACIuC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK2+B,GACG1zC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQq1B,kBAAmB4d,GAE/Eje,GAASz1B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB42B,GAC1Cke,GAAe3zC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB80C,GACvD3zC,EAAArB,EAAAC,cAACk1C,GAAA,EAAD,CAASpzC,OAAQA,EAAQod,UAAWA,EAAWrgB,QAASA,EAAS0tC,UAAWA,KAKxF,GAAIgB,EACA,OACInsC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK2+B,GACG1zC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQq1B,kBAAmB4d,GAE/Eje,GAASz1B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB42B,GAC1Cke,GAAe3zC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB80C,GACvD3zC,EAAArB,EAAAC,cAACm1C,GAAA,EAAD,CAAWrzC,OAAQA,EAAQod,UAAWA,EAAWk2B,UAAW7H,EAAYhB,UAAWA,KAK/F,GAAIiB,EACA,OACIpsC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK2+B,GACG1zC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQq1B,kBAAmB4d,GAE/Eje,GAASz1B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB42B,GAC1Cke,GAAe3zC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB80C,GACvD3zC,EAAArB,EAAAC,cAACq1C,GAAA,EAAD,CAAWvzC,OAAQA,EAAQod,UAAWA,EAAWo2B,UAAW9H,EAAYjB,UAAWA,KAK/F,GAAIe,EACA,OACIlsC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK2+B,GACG1zC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQq1B,kBAAmB4d,GAE/Eje,GAASz1B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB42B,GAC1Cke,GAAe3zC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB80C,GACvD3zC,EAAArB,EAAAC,cAACu1C,GAAA,EAAD,CAAOzzC,OAAQA,EAAQod,UAAWA,EAAWouB,MAAOA,EAAOf,UAAWA,KAKlF,GAAI9/B,EACA,OACIrL,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK2+B,GACG1zC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQq1B,kBAAmB4d,GAE/Eje,GAASz1B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB42B,GAC1Cke,GAAe3zC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB80C,GACvD3zC,EAAArB,EAAAC,cAACw1C,GAAA,EAAD,CAAU1zC,OAAQA,EAAQod,UAAWA,EAAWzS,SAAUA,EAAU8/B,UAAWA,KAK3F,GAAI0I,IACqBlf,YAAOkf,EAAUA,YAClBA,EAAU3qC,WAC1B,OACIlJ,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK2+B,GACG1zC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQq1B,kBAAmB4d,GAE/Eje,GAASz1B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB42B,GAC1Cke,GAAe3zC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB80C,GACvD3zC,EAAArB,EAAAC,cAACy1C,GAAA,EAAD,CAAW3zC,OAAQA,EAAQod,UAAWA,EAAW+1B,UAAWA,EAAW1I,UAAWA,KAMlG,GAAImB,GACIA,EAAMpjC,UACN,OACIlJ,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK2+B,GACG1zC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQq1B,kBAAmB4d,GAE/Eje,GAASz1B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB42B,GAC1Cke,GAAe3zC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB80C,GACvD3zC,EAAArB,EAAAC,cAAC01C,GAAA,EAAD,CAAO5zC,OAAQA,EAAQod,UAAWA,EAAWwuB,MAAOA,EAAOnB,UAAWA,KAMtF,GAAIxjC,EAAO,CACP,IAAMI,EAAYuyB,aAAQ3yB,EAAMC,MAAOmB,GACjCwrC,GACQ,YAATxkC,GAA+B,UAATA,KACtB2jC,GAAaje,GAASke,IACvB5rC,GACAA,EAAUiB,QAAUjB,EAAUkB,OAE5B+P,EAAQu7B,EACR,CACIC,MAAO,QACPpC,WAAY,EACZF,aAAc,GAElB,GACN,OACIlyC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACKw/B,GACGv0C,EAAArB,EAAAC,cAAC61C,GAAA,EAAD,CACI11C,YAAa00C,EACbz6B,MAAOA,EACPtY,OAAQA,EACRod,UAAWA,EACXnW,MAAOA,EACPwjC,UAAWA,IAGlBuI,GACG1zC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQq1B,kBAAmB4d,GAE/Eje,GAASz1B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB42B,GAC1Cke,GAAe3zC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB80C,IACrDY,GAAcv0C,EAAArB,EAAAC,cAAC61C,GAAA,EAAD,CAAO/zC,OAAQA,EAAQod,UAAWA,EAAWnW,MAAOA,EAAOwjC,UAAWA,KAKlG,OACInrC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK2+B,GACG1zC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQq1B,kBAAmB4d,GAE/Eje,GAASz1B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkB42B,GAC1Cke,GAAe3zC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwB80C,6EAK1D,IACGlzC,EAAY/E,KAAKyC,MAAjBsC,QAER,OACIT,EAAArB,EAAAC,cAAA,OAAKC,UAAU,YACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,kBAAmBN,EAAQm1B,yBACtD51B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oBAAoBnD,KAAK+iB,sBAnLlCxf,IAAMC,YAkM5Bs0C,GAAQ5hC,aAAe,CACnB7I,KAAMwxB,IACNx7B,YAAa21C,IACbjB,iBAAkBkB,KAGPrzC,WA5MA,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,GACbw6B,YAAaz0B,KA2MLD,CAAmBkyC,ICvL5BoB,uBACF,SAAAA,EAAYz2C,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAk5C,IACfr5C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAo5C,GAAA/4C,KAAAH,KAAMyC,KAoFV02C,6BAA+B,SAAA34C,GACtBX,EAAKoC,MAAMgD,UAEhBpF,EAAK6C,SAAS,CAAEuC,UAAU,KAxFXpF,EA2FnBu5C,iCAAmC,SAAA54C,GAAU,IAAAsE,EACXjF,EAAK4C,MAA3BuC,EADiCF,EACjCE,OAAQod,EADyBtd,EACzBsd,UADyBvT,EAEPhP,EAAKoC,MAA/BgD,EAFiC4J,EAEjC5J,SAAUo0C,EAFuBxqC,EAEvBwqC,YAEdp0C,IAEAD,IAAWxE,EAAOwE,QAAUod,IAAc5hB,EAAO4hB,UAC7Ci3B,EACAx5C,EAAK6C,SAAS,CAAE22C,aAAa,GAAS,WAClCjpC,WAAW,WACPvQ,EAAK6C,SAAS,CAAE22C,aAAa,KAC9B,KAGPx5C,EAAK6C,SAAS,CAAE22C,aAAa,IAE1BA,GACPx5C,EAAK6C,SAAS,CAAE22C,aAAa,MA5GlBx5C,EAgHnBsoC,8BAAgC,SAAA3nC,GAAU,IAAAyK,EACRpL,EAAK4C,MAA3BuC,EAD8BiG,EAC9BjG,OAAQod,EADsBnX,EACtBmX,UACRnd,EAAazE,EAAbyE,SAEJD,IAAWxE,EAAOwE,QAAUod,IAAc5hB,EAAO4hB,WACjDviB,EAAK6C,SAAS,CAAEuC,WAAUo0C,aAAa,KArH5Bx5C,EAyHnBy5C,sBAAwB,SAAA94C,GAAU,IACtB2J,EAAwB3J,EAAxB2J,QAASC,EAAe5J,EAAf4J,WADagC,EAEAvM,EAAK4C,MAA3BuC,EAFsBoH,EAEtBpH,OAAQod,EAFchW,EAEdgW,UAEZpd,IAAWmF,GAAWiY,IAAchY,GACpCvK,EAAKuO,eA9HMvO,EAkInB05C,qBAAuB,SAAA/4C,GAAU,IACrB2J,EAAwB3J,EAAxB2J,QAASC,EAAe5J,EAAf4J,WADYoG,EAEC3Q,EAAK4C,MAA3BuC,EAFqBwL,EAErBxL,OAAQod,EAFa5R,EAEb4R,UAEZpd,IAAWmF,GAAWiY,IAAchY,GACpCvK,EAAKuO,eAvIMvO,EA2InB25C,uBAAyB,SAAAh5C,GAAU,IACvB2J,EAAwB3J,EAAxB2J,QAASC,EAAe5J,EAAf4J,WADcsR,EAED7b,EAAK4C,MAA3BuC,EAFuB0W,EAEvB1W,OAAQod,EAFe1G,EAEf0G,UACRq3B,EAAiB55C,EAAKoC,MAAtBw3C,aAEJz0C,IAAWmF,IACXiY,IAAchY,IAEMsvC,aAAgB10C,EAAQod,KACxBq3B,EACpB55C,EAAK6C,SAAS,CAAE+2C,aAAcC,aAAgB10C,EAAQod,KAEtDviB,EAAKuO,iBAvJMvO,EA2JnBsgB,iBAAmB,SAAAvN,GACfiJ,aAASjJ,GAAQ,IA5JF/S,EA+JnBqa,iBAAmB,SAAAlV,GACf2W,aAAS3W,EAAQ,MAAM,IAhKRnF,EAmKnB85C,gBAAkB,WACd,GAAK95C,EAAK+5C,YAEQ93C,OAAOgxB,eAAekB,WACxC,CAJoB,IAAA7X,EAMUtc,EAAK4C,MAA3BuC,EANYmX,EAMZnX,OAAQod,EANIjG,EAMJiG,UAEVnd,GAAY6G,KAAao5B,cAAc/9B,IAA3B,UAAAxC,OAAyCK,EAAzC,eAAAL,OAA6Dyd,IAC/Ey3B,aAAc70C,EAAQod,EAAWnd,KA5KlBpF,EA+KnBi6C,gBAAkB,SAAA1wC,GACdA,EAAEuF,iBACFvF,EAAEsd,kBAFiB,IAAAtK,EAIWvc,EAAK4C,MAA3BuC,EAJWoX,EAIXpX,OAAQod,EAJGhG,EAIHgG,UAEVvX,EAAUiB,KAAahF,IAAI9B,EAAQod,GAEpBhT,YAAgBpK,GAEjCzD,KAAgBiJ,aAAa,CACzBlI,QAAS,oBACT0C,OAAQA,EACRod,UAAWA,IAKIvX,GAAWA,EAAQkB,kBAEtCxK,KAAgBiJ,aAAa,CACzBlI,QAAS,sBACTmI,KAAM,CACFzF,OAAQA,EACR8E,WAAY,CAACsY,OAvMVviB,EA6MnB4vC,UAAY,SAAAhhC,GACJA,IACAA,EAAME,iBACNF,EAAMiY,mBAHO,IAAAqzB,EAMal6C,EAAK4C,MAA3BuC,EANS+0C,EAMT/0C,OAAQod,EANC23B,EAMD33B,UAEhBqtB,aAAUzqC,EAAQod,IArNHviB,EAwNnBm6C,mBAAqB,WACjBn6C,EAAK6C,SAAS,CAAE22C,aAAa,KAzNdx5C,EA4NnBo6C,gBAAkB,WACdp6C,EAAK+5C,WAAY,GA7NF/5C,EAgOnBq6C,gBAAkB,WACdr6C,EAAK+5C,WAAY,GAjOF/5C,EAoOnBs6C,eAAiB,WACbt6C,EAAKu6C,UAAW,GArODv6C,EAwOnBw6C,iBAAmB,WAAM,IAAAC,EACSz6C,EAAK4C,MAA3BuC,EADas1C,EACbt1C,OAAQod,EADKk4B,EACLl4B,UAChBm4B,aAAUv1C,EAAQod,IA1OH,IAAAo4B,EAGe36C,EAAK4C,MAA3BuC,EAHOw1C,EAGPx1C,OAAQod,EAHDo4B,EAGCp4B,UAHD,OAYXviB,EAAKoC,MAAQ,CACTw3C,aAAcC,aAAgB10C,EAAQod,GACtCnd,UAAU,EACVo0C,aAAa,GAfNx5C,qFAoBGsT,EAAWC,GAAW,IAAAqnC,EAC2Cz6C,KAAKyC,MAAhFoD,EADgC40C,EAChC50C,MAAOb,EADyBy1C,EACzBz1C,OAAQod,EADiBq4B,EACjBr4B,UAAWk1B,EADMmD,EACNnD,aAAcoD,EADRD,EACQC,oBAAqBC,EAD7BF,EAC6BE,UAD7BlqC,EAEqBzQ,KAAKiC,MAA1D24C,EAFgCnqC,EAEhCmqC,YAAa31C,EAFmBwL,EAEnBxL,SAAUo0C,EAFS5oC,EAET4oC,YAAaI,EAFJhpC,EAEIgpC,aAE5C,OAAItmC,EAAUtN,QAAUA,IAIpBsN,EAAUnO,SAAWA,IAIrBmO,EAAUiP,YAAcA,IAIxBjP,EAAUmkC,eAAiBA,IAI3BnkC,EAAUunC,sBAAwBA,IAIlCvnC,EAAUwnC,YAAcA,IAIxBvnC,EAAUwnC,cAAgBA,IAI1BxnC,EAAUnO,WAAaA,IAIvBmO,EAAUimC,cAAgBA,GAI1BjmC,EAAUqmC,eAAiBA,sDAQ/B3tC,KAAauH,GAAG,iCAAkCrT,KAAKo5C,kCACvDttC,KAAauH,GAAG,8BAA+BrT,KAAKmoC,+BACpDr8B,KAAauH,GAAG,6BAA8BrT,KAAKm5C,8BACnDrtC,KAAauH,GAAG,uBAAwBrT,KAAKw5C,wBAC7C1tC,KAAauH,GAAG,sBAAuBrT,KAAKs5C,uBAC5CxtC,KAAauH,GAAG,qBAAsBrT,KAAKu5C,qEAI3CztC,KAAapK,eAAe,iCAAkC1B,KAAKo5C,kCACnEttC,KAAapK,eAAe,8BAA+B1B,KAAKmoC,+BAChEr8B,KAAapK,eAAe,6BAA8B1B,KAAKm5C,8BAC/DrtC,KAAapK,eAAe,uBAAwB1B,KAAKw5C,wBACzD1tC,KAAapK,eAAe,sBAAuB1B,KAAKs5C,uBACxDxtC,KAAapK,eAAe,qBAAsB1B,KAAKu5C,uDA2JlD,IAAAj4B,EAAAu5B,EACqE76C,KAAKyC,MAApEsC,GADN81C,EACGlwC,EADHkwC,EACM91C,SAASC,EADf61C,EACe71C,OAAQod,EADvBy4B,EACuBz4B,UAAWs4B,EADlCG,EACkCH,oBAAqBC,EADvDE,EACuDF,UADvDxa,EAE2CngC,KAAKiC,MAA7Cw3C,EAFHtZ,EAEGsZ,aAAcx0C,EAFjBk7B,EAEiBl7B,SAAUo0C,EAF3BlZ,EAE2BkZ,YAE1BxuC,EAAUiB,KAAahF,IAAI9B,EAAQod,GACzC,IAAKvX,EAAS,OAAOvG,EAAArB,EAAAC,cAAA,8BALhB,IAOGy7B,EAA6F9zB,EAA7F8zB,cAAeqY,EAA8EnsC,EAA9EmsC,MAAOv0B,EAAuE5X,EAAvE4X,KAAMq4B,EAAiEjwC,EAAjEiwC,UAAWjuC,EAAsDhC,EAAtDgC,oBAAqBkuC,EAAiClwC,EAAjCkwC,aAAcv4B,EAAmB3X,EAAnB2X,eAE5ElW,EAAOinB,aAAQ1oB,GACfmwC,EAAUC,aAAWpwC,GACrBqwC,EAAQ1L,aAAS3kC,EAAS7K,KAAKyvC,WACrCzvC,KAAKu3C,OAAS4D,aAAUtwC,GAExB,IAAImY,EAAO,KACP23B,IACA33B,EAAOR,EACHle,EAAArB,EAAAC,cAAC8Q,GAAA,EAAD,CAAUpB,OAAQ4P,EAAgBtd,SAAUlF,KAAKmgB,mBAEjD7b,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,EAAQE,SAAUlF,KAAKka,oBAIjD,IAAMkhC,EAAmB/1C,IAAW,UAAWN,EAAQ8F,SAApByW,EAAA,CAC/B+5B,mBAAoBp2C,GADWnF,OAAAyT,GAAA,EAAAzT,CAAAwhB,EAE9Bvc,EAAQu2C,gBAAkBr2C,GAFInF,OAAAyT,GAAA,EAAAzT,CAAAwhB,EAG9Bvc,EAAQw2C,mBAAqBlC,IAAgBp0C,GAHfnF,OAAAyT,GAAA,EAAAzT,CAAAwhB,EAI/B,iBAAkBq5B,GAJar5B,IAO7B21B,EAAO3yC,EAAArB,EAAAC,cAACs4C,GAAD,CAAM/4B,KAAMA,EAAMq0B,SAAUgE,EAAW9D,MAAOA,EAAOD,YAAa/2C,KAAK85C,kBAEpF,OACIx1C,EAAArB,EAAAC,cAAA,OACIC,UAAWi4C,EACXK,YAAaz7C,KAAKk6C,gBAClBwB,WAAY17C,KAAKm6C,eACjBzxB,YAAa1oB,KAAKi6C,gBAClB10C,QAASvF,KAAK25C,gBACdgC,eAAgB37C,KAAKg6C,oBACpBU,GAAuBp2C,EAAArB,EAAAC,cAAC04C,GAAD,MACxBt3C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAA,KAAGC,UAAU,wBACZnD,KAAKu3C,QACFjzC,EAAArB,EAAAC,cAAC24C,GAAD,CAAe72C,OAAQA,EAAQod,UAAWA,EAAWk1B,aAAc3Y,IAEtE3b,EACD1e,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACVw3C,IAAcI,GACXz2C,EAAArB,EAAAC,cAAC44C,GAAA,EAAD,CAAe92C,OAAQA,EAAQ2W,UAAQ,EAAC/I,OAAQ4P,EAAgB3G,UAAQ,IAE3Ek/B,GAAgBz2C,EAAArB,EAAAC,cAAC64C,GAAD,CAAS1G,YAAa0F,IACtCJ,GAAa1D,GAEjBzzB,QAAQ3W,IACLvI,EAAArB,EAAAC,cAACw3B,GAAD,CAAO11B,OAAQA,EAAQod,UAAWvV,EAAqBtH,QAASvF,KAAKq6C,mBAExEa,EACD52C,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,eAAgB,CAClC22C,sBAAwC,IAAjBvC,EACvBwC,sBAAwC,IAAjBxC,EACvByC,sBAAwC,IAAjBzC,KAE1BntC,GAEJ0uC,GAAW12C,EAAArB,EAAAC,cAACi5C,GAAD,CAASn3C,OAAQA,EAAQod,UAAWA,EAAWqtB,UAAWzvC,KAAKyvC,cAE7EkL,GAAa1D,WAnTbzzC,cA+TPsO,GALCC,YACZnM,IA9UW,SAAAC,GAAK,MAAK,CACrBgF,QAAS,CACLkX,gBAAiB,eAErBq6B,mBAAoB,CAChB3wC,MAAO5F,EAAME,QAAQC,QAAQC,MAEjCq1C,gBAAiB,CACbv5B,gBAAiBlc,EAAME,QAAQC,QAAQC,KAAO,MAElDo2C,yBAA0B,CACtB/e,KAAM,CAAEvb,gBAAiBlc,EAAME,QAAQC,QAAQC,KAAO,MACtDq2C,GAAI,CAAEv6B,gBAAiB,gBAE3Bw5B,mBAAoB,CAChBpD,UAAW,6BA+TI,CAAE9xC,WAAW,IAChCmM,cAGWV,CAAQonC,IC9TjBqD,uBACF,SAAAA,EAAY95C,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAu8C,IACf18C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAy8C,GAAAp8C,KAAAH,KAAMyC,KAgDV+5C,gCAAkC,SAAAh8C,GAAU,IAChCwE,EAAuBxE,EAAvBwE,OAAQy3C,EAAej8C,EAAfi8C,WAEZ58C,EAAK4C,MAAMuC,SAAWA,GAE1BnF,EAAK6C,SAAS,CAAE+5C,gBAtDD58C,EAyDnB68C,0BAA4B,SAAAl8C,GAAU,IAC1B2J,EAA+B3J,EAA/B2J,QAASwyC,EAAsBn8C,EAAtBm8C,kBACE98C,EAAK4C,MAAhBuC,SAEOmF,GAEftK,EAAK6C,SAAS,CAAE0f,UAAWu6B,KA/DZ98C,EAkEnB0H,YAAc,WAAM,IACRvC,EAAWnF,EAAK4C,MAAhBuC,OACAod,EAAcviB,EAAKoC,MAAnBmgB,UAEHpd,IACAod,IAEWtW,KAAahF,IAAI9B,EAAQod,IAGzC7gB,KAAgBc,KAAK,CACjBC,QAAS,aACT6H,QAASnF,EACToF,WAAYgY,IAEX7f,KAAK,SAAAC,GACFsJ,KAAamC,IAAIzL,GAEjB,IAAM7C,EAAQ8J,KAAUC,WACxBkzC,YAAoBj9C,EAAO,CAAC6C,IAE5B3C,EAAKuO,gBAERjF,MAAM,SAAAkd,GACH,IAAMw2B,EAAiB,CACnBv6C,QAAS,iBACT6H,QAASnF,EACTpE,GAAIwhB,EACJpW,QAAS,MAEbF,KAAamC,IAAI4uC,GACjBh9C,EAAKuO,mBAjGEvO,EAoInBgU,YAAc,SAAApF,GAAS,IACXzJ,EAAWnF,EAAK4C,MAAhBuC,OACAod,EAAcviB,EAAKoC,MAAnBmgB,UAEHA,GAELzG,aAAS3W,EAAQod,IA1IFviB,EA6InB4zB,aA7ImB,eAAArT,EAAAtgB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA6IJ,SAAAC,EAAM8G,GAAN,IAAAzJ,EAAAod,EAAA0b,EAAA,OAAAr2B,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACXmG,EAAME,iBACNF,EAAMiY,kBAEE1hB,EAAWnF,EAAK4C,MAAhBuC,OACAod,EAAcviB,EAAKoC,MAAnBmgB,WAEO06B,YAAe93C,GAPnB,CAAAoD,EAAAE,KAAA,QASPzI,EAAK6C,SAAS,CAAE4zB,SAAS,IATlBluB,EAAAE,KAAA,uBAWDw1B,EAAO1pB,KAAU2oC,cAAc/3C,GAX9BoD,EAAAE,KAAA,GAYD/G,KAAgBiJ,aAAa,CAC/BlI,QAAS,gCACT0C,OAAQA,EACRy3C,WAAY38C,OAAOkB,OAAO,GAAI88B,EAAM,CAAEkf,oBAAqB56B,MAfxD,yBAAAha,EAAAwB,SAAAjC,MA7II,gBAAA0Y,GAAA,OAAAD,EAAApc,MAAAhE,KAAAiE,YAAA,GAAApE,EAiKnBo9C,YAjKmBn9C,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAiKL,SAAAmC,IAAA,IAAA7E,EAAA,OAAAyC,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACFtD,EAAWnF,EAAK4C,MAAhBuC,OAERnF,EAAK0K,cAELhJ,KAAgBc,KAAK,CACjBC,QAAS,mBACT6H,QAASnF,IAPH,wBAAA+E,EAAAH,SAAAC,MAjKKhK,EA4KnB0K,YAAc,WACV1K,EAAK6C,SAAS,CAAE4zB,SAAS,KA1KzB,IAAMniB,EAAOC,KAAUtN,IAAIrE,EAAMuC,QAHlB,OAIfnF,EAAKoC,MAAQ,CACTylB,gBAAiBjlB,EAAMuC,OACvBy3C,WAAYroC,KAAU2oC,cAAct6C,EAAMuC,QAC1Cod,UAAWjO,GAAQA,EAAKwoC,kBAAoBxoC,EAAKwoC,kBAAoB,EACrErmB,SAAS,GAREz2B,kFA6BAgD,EAAWC,EAAWC,GAAU,IACvCqf,EAAcpiB,KAAKiC,MAAnBmgB,UAEJA,GAAatf,EAAUsf,YAAcA,GACrCpiB,KAAKuH,0DAKTvH,KAAKuH,cAEL6M,KAAUf,GAAG,0BAA2BrT,KAAK08C,2BAC7CtoC,KAAUf,GAAG,gCAAiCrT,KAAKw8C,gFAInDpoC,KAAU1S,eAAe,0BAA2B1B,KAAK08C,2BACzDtoC,KAAU1S,eAAe,gCAAiC1B,KAAKw8C,+EAuD7CrpC,EAAWC,EAAWqd,GAAa,IAAA3rB,EACxB9E,KAAKyC,MAA1BuC,EAD6CF,EAC7CE,OAAQ2F,EADqC7F,EACrC6F,EAAG9E,EADkCf,EAClCe,MADkCgJ,EAEV7O,KAAKiC,MAAxCw6C,EAF6C5tC,EAE7C4tC,WAAYnmB,EAFiCznB,EAEjCynB,QAASlU,EAFwBvT,EAExBuT,UAE7B,OAAIjP,EAAUxI,IAAMA,IAIhBwI,EAAUtN,QAAUA,IAIpBsN,EAAUnO,SAAWA,IAIrBoO,EAAUqpC,aAAeA,IAIzBrpC,EAAUkjB,UAAYA,GAItBljB,EAAUgP,YAAcA,uCAmDvB,IAAAnX,EAC0BjL,KAAKyC,MAA5BuC,EADHiG,EACGjG,OAAQD,EADXkG,EACWlG,QAAS4F,EADpBM,EACoBN,EADpB8F,EAE0BzQ,KAAKiC,MAA5BmgB,EAFH3R,EAEG2R,UAAWkU,EAFd7lB,EAEc6lB,QAEnB,IAAKtxB,EAAQ,OAAO,KAGpB,GADgCoP,KAAU2oC,cAAc/3C,GAAhDg4C,sBACoB56B,EAAW,OAAO,KAE9C,IAAMvX,EAAUiB,KAAahF,IAAI9B,EAAQod,GACzC,IAAKvX,EAAS,OAAO,KAErB,IAAImB,EAAWnB,EAAyBkY,aAAWlY,EAASF,GAAnCA,EAAE,WACrB0B,EAAY4tB,aAAkBj1B,EAAQod,GAM5C,OAJI0X,aAAiBjvB,KACjBmB,EAAUrB,EAAE,mBAIZrG,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,iBAAkBN,EAAQm4C,cAAen4C,EAAQe,aACvEP,QAASvF,KAAK6T,aACdvP,EAAArB,EAAAC,cAAA,OAAKC,UAAU,0BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,eAAgBN,EAAQm1B,yBAClD7tB,GAAa/H,EAAArB,EAAAC,cAACi3B,GAAD,CAAWn1B,OAAQA,EAAQod,UAAWA,EAAW/V,UAAWA,IAC1E/H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,0BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,+BAAgCN,EAAQq1B,kBAC9DzvB,EAAE,kBAEPrG,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IACP,kCACAN,EAAQo4C,+BAEXnxC,IAGT1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQ4sB,WAAYpsB,QAASvF,KAAKyzB,cACrDnvB,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,UAKfqzB,GACGhyB,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIumB,mBAAoB,EACpB3Y,MAAI,EACJC,QAAS9Q,KAAKuK,YACdwG,kBAAgB,8BAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,8BAA8B+J,EAAE,YAChDrG,EAAArB,EAAAC,cAACumB,GAAAxmB,EAAD,KACIqB,EAAArB,EAAAC,cAAC29B,GAAA59B,EAAD,KAAoB0H,EAAE,uBAE1BrG,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKuK,YAAakB,MAAM,WACpCd,EAAE,WAEPrG,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKi9C,YAAaxxC,MAAM,WACpCd,EAAE,6DAjOClI,EAAOR,GAAO,IAClCylB,EAAoBzlB,EAApBylB,gBACA1iB,EAAWvC,EAAXuC,OAER,GAAI0iB,IAAoB1iB,EAAQ,CAC5B,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,MAAO,CACH0iB,gBAAiB1iB,EACjBy3C,WAAYroC,KAAU2oC,cAAc/3C,GACpCod,UAAWjO,GAAQA,EAAKwoC,kBAAoBxoC,EAAKwoC,kBAAoB,EACrErmB,SAAS,GAIjB,OAAO,YA3Ba/yB,IAAMC,YAiQnBsO,GALCC,YACZnM,IA5QW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,GACbw6B,YAAaz0B,GACb0M,YAAY1M,GAFC,CAGhB8rB,WAAY,GAGZurB,cAAe,CACX/2C,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWwiB,QAAU,UAC/Eld,MAAO5F,EAAME,QAAQuG,KAAKtG,SAE9Bm3C,6BAA8B,CAC1B1xC,MAAO5F,EAAME,QAAQuG,KAAKoH,cAiQX,CAAErN,WAAW,IAChCmM,cAGWV,CAAQyqC,ICjTvB,SAAAa,KAAmR,OAA9PA,GAAAt9C,OAAAkB,QAAA,SAAA6nB,GAAgD,QAAA3hB,EAAA,EAAgBA,EAAAjD,UAAA0C,OAAsBO,IAAA,CAAO,IAAAm2C,EAAAp5C,UAAAiD,GAA2B,QAAA9C,KAAAi5C,EAA0Bv9C,OAAAw9C,UAAAC,eAAAp9C,KAAAk9C,EAAAj5C,KAAyDykB,EAAAzkB,GAAAi5C,EAAAj5C,IAAiC,OAAAykB,IAAkB7kB,MAAAhE,KAAAiE,WAEnR,SAAAu5C,GAAAH,EAAAI,GAAqD,SAAAJ,EAAA,SAA+B,IAA8Dj5C,EAAA8C,EAA9D2hB,EAEpF,SAAAw0B,EAAAI,GAA0D,SAAAJ,EAAA,SAA+B,IAAuDj5C,EAAA8C,EAAvD2hB,EAAA,GAAiB60B,EAAA59C,OAAAkmB,KAAAq3B,GAAkD,IAAAn2C,EAAA,EAAYA,EAAAw2C,EAAA/2C,OAAuBO,IAAO9C,EAAAs5C,EAAAx2C,GAAqBu2C,EAAAxtC,QAAA7L,IAAA,IAA0CykB,EAAAzkB,GAAAi5C,EAAAj5C,IAA6B,OAAAykB,EAF9M80B,CAAAN,EAAAI,GAA0E,GAAA39C,OAAA89C,sBAAA,CAAoC,IAAAC,EAAA/9C,OAAA89C,sBAAAP,GAA6D,IAAAn2C,EAAA,EAAYA,EAAA22C,EAAAl3C,OAA6BO,IAAO9C,EAAAy5C,EAAA32C,GAA2Bu2C,EAAAxtC,QAAA7L,IAAA,GAA0CtE,OAAAw9C,UAAAQ,qBAAA39C,KAAAk9C,EAAAj5C,KAAwEykB,EAAAzkB,GAAAi5C,EAAAj5C,IAA+B,OAAAykB,EAM3d,IAAIk1B,GAEJz5C,EAAArB,EAAKC,cAAA,SAA0BoB,EAAArB,EAAKC,cAAA,QACpC86C,KAAA,UACAC,EAAA,k4BACI35C,EAAArB,EAAKC,cAAA,QACT86C,KAAA,UACAC,EAAA,g5BAGIC,GAAU,SAAA99B,GACd,IAAA+9B,EAAA/9B,EAAA+9B,OACA17C,EAAA+6C,GAAAp9B,EAAA,YAEA,OAAS9b,EAAArB,EAAKC,cAAA,MAAAk6C,GAAA,CACdx8C,GAAA,SACAG,EAAA,MACAgc,EAAA,MACAqhC,QAAA,cACA9gC,MAAA,CACA+gC,iBAAA,mBAEAC,SAAA,WACAntC,IAAAgtC,GACG17C,GAAUs7C,KAGbQ,GAAiBj6C,EAAArB,EAAKu7C,WAAA,SAAA/7C,EAAA0O,GACtB,OAAS7M,EAAArB,EAAKC,cAAeg7C,GAAUd,GAAA,CACvCe,OAAAhtC,GACG1O,MCzBGg8C,ID2BStjB,EAAAujB,qBC1BX,SAAAD,EAAYh8C,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAy+C,IACf5+C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA2+C,GAAAt+C,KAAAH,KAAMyC,KAmBV+c,qBAAuB,SAAAhf,GAAU,IACTwE,EAAWxE,EAAvBif,WAER5f,EAAK6C,SAAS,CAAEsC,YAvBDnF,EA0BnB8+C,2BAA6B,SAAAn+C,GAAU,IAC3Bo+C,EAAiBzzC,IAAjByzC,aAER/+C,EAAK6C,SAAS,CAAEk8C,kBA7BD,IAGP55C,EAAyBmG,IAAzBnG,OAAQ45C,EAAiBzzC,IAAjByzC,aAHD,OAIf/+C,EAAKoC,MAAQ,CACT+C,SACA45C,gBANW/+C,mFAWfsL,IAAiBkI,GAAG,qBAAsBrT,KAAKwf,sBAC/CrU,IAAiBkI,GAAG,2BAA4BrT,KAAK2+C,2EAIrDxzC,IAAiBzJ,eAAe,qBAAsB1B,KAAKwf,sBAC3DrU,IAAiBzJ,eAAe,2BAA4B1B,KAAK2+C,6DAe5D,IACGh0C,EAAM3K,KAAKyC,MAAXkI,EADHkE,EAE4B7O,KAAKiC,MAA9B+C,EAFH6J,EAEG7J,OAAQ45C,EAFX/vC,EAEW+vC,aAChB,OAAI55C,EAAe,KACd45C,EAGDt6C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,eACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAACq7C,GAAD,CAAap7C,UAAU,qBACtBwH,EAAE,gCANW,YArCRpH,IAAMC,YAoDjBgP,iBAAkBisC,wBC3C3BI,4LACO,IAAA/5C,EACwB9E,KAAKyC,MAA1BsC,EADHD,EACGC,QAASQ,EADZT,EACYS,QAEjB,OACIjB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQ+5C,mBACrDx6C,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAY87C,eAAe,EAAMr2B,YAAanjB,GAC1CjB,EAAArB,EAAAC,cAAC87C,GAAA/7C,EAAD,eAPWM,IAAMC,YAkBtBoC,OAzBA,SAAAC,GAAK,MAAK,CACrBi5C,iBAAkB,CACd34C,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWwiB,QAAU,UAC/E7iB,YAAaD,EAAME,QAAQk5C,WAsBpBr5C,CAAmBi5C,aCvB5BK,WAAiB,CACnB5xC,MAAO,GACPC,OAAQ,GACR8hB,aAAc,MACd3Y,OAAQ,wBAgBNyoC,eACF,SAAAA,EAAY18C,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAm/C,IACft/C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAq/C,GAAAh/C,KAAAH,KAAMyC,KAsDV22C,iCAAmC,SAAA54C,GAAU,IAAAsE,EACXjF,EAAK4C,MAA3BuC,EADiCF,EACjCE,OAAQod,EADyBtd,EACzBsd,UADyBvT,EAEPhP,EAAKoC,MAA/BgD,EAFiC4J,EAEjC5J,SAAUo0C,EAFuBxqC,EAEvBwqC,YAEdp0C,IAEAD,IAAWxE,EAAOwE,QAAUod,IAAc5hB,EAAO4hB,UAC7Ci3B,EACAx5C,EAAK6C,SAAS,CAAE22C,aAAa,GAAS,WAClCjpC,WAAW,WACPvQ,EAAK6C,SAAS,CAAE22C,aAAa,KAC9B,KAGPx5C,EAAK6C,SAAS,CAAE22C,aAAa,IAE1BA,GACPx5C,EAAK6C,SAAS,CAAE22C,aAAa,MAxElBx5C,EA4EnBm6C,mBAAqB,WACjBn6C,EAAK6C,SAAS,CAAE22C,aAAa,KA7Edx5C,EAgFnB4vC,UAAY,SAAAhhC,GACJA,IACAA,EAAME,iBACNF,EAAMiY,mBAHO,IAAAzb,EAMapL,EAAK4C,MAA3BuC,EANSiG,EAMTjG,OAAQod,EANCnX,EAMDmX,UAEhBqtB,aAAUzqC,EAAQod,IA9EdviB,EAAKoC,MAAQ,CACTo3C,aAAa,GAXNx5C,qFAgBGsT,EAAWC,GAAW,IAAA5C,EACgCxQ,KAAKyC,MAArEuC,EADgCwL,EAChCxL,OAAQod,EADwB5R,EACxB4R,UAAWk1B,EADa9mC,EACb8mC,aAAcoD,EADDlqC,EACCkqC,oBAAqB70C,EADtB2K,EACsB3K,MACtDwzC,EAAgBr5C,KAAKiC,MAArBo3C,YAER,OAAIlmC,EAAUnO,SAAWA,IAIrBmO,EAAUiP,YAAcA,IAIxBjP,EAAUmkC,eAAiBA,IAI3BnkC,EAAUunC,sBAAwBA,IAIlCvnC,EAAUtN,QAAUA,GAIpBuN,EAAUimC,cAAgBA,kDAQ9BvtC,KAAauH,GAAG,iCAAkCrT,KAAKo5C,iFAIvDttC,KAAapK,eAAe,iCAAkC1B,KAAKo5C,mEAuC9D,IAAA19B,EACuD1b,KAAKyC,MAAzDsC,EADH2W,EACG3W,QAASC,EADZ0W,EACY1W,OAAQod,EADpB1G,EACoB0G,UAAWs4B,EAD/Bh/B,EAC+Bg/B,oBAC5BrB,EAAgBr5C,KAAKiC,MAArBo3C,YAEFxuC,EAAUiB,KAAahF,IAAI9B,EAAQod,GACzC,IAAKvX,EAAS,OAAOvG,EAAArB,EAAAC,cAAA,sCALhB,IAOG8I,EAAYnB,EAAZmB,QACR,IAAKA,EAAS,OAAO1H,EAAArB,EAAAC,cAAA,sCARhB,IAUG+I,EAAUD,EAAVC,MAEFK,EAAO8yC,aAAyBv0C,GAAS,GAEzCuwC,EAAmB/1C,IAAW,kBAADvF,OAAAyT,GAAA,EAAAzT,CAAA,GAAuBiF,EAAQw2C,mBAAqBlC,IAEvF,OACI/0C,EAAArB,EAAAC,cAAA,OAAKC,UAAWi4C,EAAkBO,eAAgB37C,KAAKg6C,oBAClDU,GAAuBp2C,EAAArB,EAAAC,cAAC04C,GAAD,MACxBt3C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,2BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,0BAA2BN,EAAQs6C,wBAAyB/yC,IAE1FL,GACG3H,EAAArB,EAAAC,cAAC61C,GAAA,EAAD,CACI/zC,OAAQA,EACRod,UAAWA,EACXnW,MAAOA,EACPqR,MAAO4hC,GACPzP,UAAWzvC,KAAKyvC,oBAxHXlsC,IAAMC,WAgIpBoC,OA7IA,SAAAC,GAAK,MAAK,CACrBw2C,yBAA0B,CACtB/e,KAAM,CAAEvb,gBAAiBlc,EAAME,QAAQC,QAAQC,KAAO,MACtDq2C,GAAI,CAAEv6B,gBAAiB,gBAE3Bw5B,mBAAoB,CAChBpD,UAAW,2BAEfkH,sBAAuB,CACnB5zC,MAAO5F,EAAME,QAAQuG,KAAKoH,aAoIA,CAAErN,WAAW,GAAhCT,CAAwCu5C,cCzIjDG,uBACF,SAAAA,EAAY78C,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAs/C,IACfz/C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAw/C,GAAAn/C,KAAAH,KAAMyC,KAuBV88C,iCAAmC,SAAA/+C,GAAU,IACjCF,EAASE,EAATF,KACMk/C,EAAgB3/C,EAAKoC,MAA3B3B,KAER,IAAIk/C,GAAel/C,EAAKa,YAAcq+C,EAAYr+C,UAAlD,CAEAtB,EAAK6C,SAAS,CACVpC,KAAMV,KAAaU,KACnBuc,MAAOhd,EAAK4/C,SAAS7/C,KAAaU,QAGtC,IAAMX,EAAQ8J,KAAUC,WAChBrI,EAAaf,EAAbe,SACRq+C,YAAoB//C,EAAO0B,EAASA,YArCrBxB,EAwCnB8/C,gCAAkC,SAAAn/C,GAAU,IAChCF,EAASE,EAATF,KAUR,GARAT,EAAK6C,SAAS,CACVpC,OACAuc,MAAOhd,EAAK4/C,SAASn/C,GACrBs/C,iBAAkB,EAClBC,aAAa,EACbC,YAAY,IAGXx/C,EAAL,CAEA,IAAMX,EAAQ8J,KAAUC,WAChBrI,EAAaf,EAAbe,SACRq+C,YAAoB//C,EAAO0B,EAASA,YAvDrBxB,EA0DnBsM,WAAa,SAAApK,GACclC,EAAKoC,MAApB69C,YAEH/9C,GAELR,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACTP,aAjEWlC,EAqEnBkgD,mBAAqB,SAAAC,GAAa,IACtBnjC,EAAUhd,EAAKoC,MAAf4a,MAEF9a,EAAU8a,EAAMjI,KAAK,SAAA7T,GAAC,OAAIA,EAAEgB,QAAQnB,KAAOo/C,IACjD,GAAKj+C,EAAL,CAEA,IAAMpC,EAAQ8J,KAAUC,WACxBu2C,YAAmBtgD,EAAOoC,EAAS,MAEnC,IAAIm+C,EAAiB,EACjBrgD,EAAKsgD,UAAYtgD,EAAKsgD,SAAS1zC,UAC/ByzC,EAAiBpS,KAAKC,MAAMluC,EAAKsgD,SAAS1zC,QAAQ2zC,YAAcC,MAG5CxgD,EAAKygD,oBAAoBN,EAAWnjC,EAAOqjC,GACnDvzC,QAAQ,SAAA5L,GACpBk/C,YAAmBtgD,EAAOoB,EAAG,UArFlBlB,EAyFnBygD,oBAAsB,SAACN,EAAW3+C,EAAU6+C,GACxC,IAAK7+C,EAAU,MAAO,GAEtB,IAAMk/C,EAAU,GACVppB,EAAQ91B,EAAS+1B,UAAU,SAAAr2B,GAAC,OAAIA,EAAEgB,QAAQnB,KAAOo/C,IACvD,IAAe,IAAX7oB,EAAc,MAAO,GAEzB,IAAMqpB,EAAM1S,KAAKC,MAAM5W,EAAQ+oB,GACzBO,EAAStpB,EAAQ+oB,EAEjBQ,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQ53C,KAAKu3C,EAAiBQ,EAAUE,GAE5CL,EAAQ53C,KAAKu3C,EAAiBQ,EAAUD,GACpCI,EAAaX,GACbK,EAAQ53C,KAAKu3C,EAAiBQ,EAAUG,IAI5CD,GAAc,GACdL,EAAQ53C,KAAKu3C,EAAiBM,EAAMI,GAEpCC,EAAaX,GACbK,EAAQ53C,KAAKu3C,EAAiBM,EAAMK,GAGpCF,EAAU7S,KAAKgT,KAAKz/C,EAASsF,OAASu5C,KAClCU,GAAc,GACdL,EAAQ53C,KAAKu3C,EAAiBS,EAAUC,GAE5CL,EAAQ53C,KAAKu3C,EAAiBS,EAAUF,GACpCI,EAAaX,GACbK,EAAQ53C,KAAKu3C,EAAiBS,EAAUE,IAIzCN,EAAQr3C,IAAI,SAAAhC,GAAC,OAAI7F,EAAS6F,MAnIlBrH,EAsInBq6C,gBAAkB,SAAAzrC,GACd,IAAMuxC,EAAYe,OAAOtyC,EAAMoa,OAAO+K,QAAQosB,WACzCA,GAEAngD,EAAK+5C,YAEN/5C,EAAKmhD,qBAAuBhB,IAC5BngD,EAAKmhD,mBAAqB,MAE9BnhD,EAAK6C,SAAS,CAAEk9C,iBAAkBI,IAClCngD,EAAKkgD,mBAAmBC,KAhJTngD,EAmJnBo6C,gBAAkB,SAAAxrC,GACd,IAAMuxC,EAAYe,OAAOtyC,EAAMoa,OAAO+K,QAAQosB,WAC9C,GAAKA,EAAL,CAEAngD,EAAKmhD,mBAAqBhB,EAC1B,IAAMhqB,EAAMhR,KAAKgR,MAiBjB,OAfAn2B,EAAK6C,SAAS,CAAEk9C,iBAAkBI,EAAW7+C,UAAW60B,EAAK6pB,aAAa,EAAOC,YAAY,IAC7F1vC,WAAW,WACevQ,EAAKoC,MAAnBd,YACU60B,GACdn2B,EAAK6C,SAAS,CAAEm9C,aAAa,EAAMC,YAAY,KAEpD,KAEHjgD,EAAKkgD,mBAAmBC,GAExBngD,EAAK+5C,WAAY,EACjBjqC,SAASsxC,iBAAiB,UAAWphD,EAAKqhD,eAE1CzyC,EAAME,iBACNF,EAAMiY,mBACC,IAzKQ7mB,EA4KnBqhD,cAAgB,WACZrhD,EAAK6C,SAAS,CAAEk9C,iBAAkB,EAAGz+C,UAAW,EAAG0+C,aAAa,IAChEhgD,EAAK+5C,WAAY,EACjBjqC,SAASwxC,oBAAoB,UAAWthD,EAAKqhD,gBA/K9BrhD,EAkLnB4/C,SAAW,SAAAn/C,GACP,IAAMuc,EAAQ,GACd,IAAKvc,EAAM,OAAOuc,EAElB,IAAMukC,EAAO,IAAIp6C,IACT3F,EAA4Bf,EAA5Be,SAAUD,EAAkBd,EAAlBc,cAgBlB,OAfIC,GACAA,EAASA,SAASsL,QAAQ,SAAA5L,GACtB8b,EAAMlU,KAAK5H,GACXqgD,EAAKnzC,IAAIlN,EAAEgB,QAAQnB,GAAIG,EAAEgB,QAAQnB,MAGrCQ,GACAA,EAAcC,SAASsL,QAAQ,SAAA5L,GACtBqgD,EAAKj6C,IAAIpG,EAAEgB,QAAQnB,MACpBic,EAAMlU,KAAK5H,GACXqgD,EAAKnzC,IAAIlN,EAAEgB,QAAQnB,GAAIG,EAAEgB,QAAQnB,OAKtCic,GApMPhd,EAAKsgD,SAAW58C,IAAM+M,YAEtBzQ,EAAKoC,MAAQ,CACT3B,KAAM,KACNuc,MAAO,GACP+iC,iBAAkB,EAClBC,aAAa,EACbC,YAAY,GAVDjgD,mFAefD,KAAayT,GAAG,gCAAiCrT,KAAK2/C,iCACtD//C,KAAayT,GAAG,iCAAkCrT,KAAKu/C,iFAIvD3/C,KAAa8B,eAAe,gCAAiC1B,KAAK2/C,iCAClE//C,KAAa8B,eAAe,iCAAkC1B,KAAKu/C,mEAqL9D,IAAAhvC,EAAAvQ,KACG+E,EAAY/E,KAAKyC,MAAjBsC,QADH8J,EAEkD7O,KAAKiC,MAApD3B,EAFHuO,EAEGvO,KAAMuc,EAFThO,EAESgO,MAAO+iC,EAFhB/wC,EAEgB+wC,iBAAkBC,EAFlChxC,EAEkCgxC,YACvC,IAAKv/C,EAAM,OAAO,KAClB,IAAKuc,EAAO,OAAO,KACnB,IAAKA,EAAMlW,OAAQ,OAAO,KAE1B,IAAMqsC,EAAWn2B,EAAM3T,IAAI,SAAAnI,GAAC,OACxBuD,EAAArB,EAAAC,cAAA,OACIC,UAAU,0BACViB,IAAKrD,EAAEgB,QAAQnB,GACfygD,kBAAiBtgD,EAAEgB,QAAQnB,GAC3B0c,MAAO,CAAEhQ,MAAO+yC,IAA2B9yC,OAAQ8yC,KACnD96C,QAAS,kBAAMgL,EAAKpE,WAAWpL,KAC/BuD,EAAArB,EAAAC,cAACk1C,GAAA,EAAD,CACIh0C,IAAKrD,EAAEgB,QAAQnB,GACfuC,UAAU,kCACVm+C,SAAO,EACPv/C,QAAShB,EACTsC,YAAak+C,IACbC,MAAM,OAKZC,EAAe5kC,EAAMua,UAAU,SAAAr2B,GAAC,OAAIA,EAAEgB,QAAQnB,KAAOg/C,IACrD79C,GAA4B,IAAlB0/C,EAAsB5kC,EAAM4kC,GAAgB,KAE5D,OACIn9C,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAKmgD,SACVh9C,UAAWkC,IAAW,gBAAiBN,EAAQe,YAAaf,EAAQ4c,MACpE85B,YAAaz7C,KAAKk6C,gBAClBxxB,YAAa1oB,KAAKi6C,iBACjBjH,EACAxvB,QAAQzhB,IAAY89C,GAAev7C,EAAArB,EAAAC,cAAClB,GAAA,EAAD,CAAgBD,QAASA,YA9OlDwB,IAAMC,YAoPlBoC,OA3PA,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChB6hB,KAAM,CACFxb,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWwiB,QAAU,YAEhFpW,YAAY1M,KAuPJD,CAAmB05C,IC7O5BoC,WAAqB5hD,OAAO6hD,OAAO,CACrCC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,qBAAsB,0BASpBC,eACF,SAAAA,EAAYv/C,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAgiD,IACfniD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAkiD,GAAA7hD,KAAAH,KAAMyC,KA8KVw/C,wBAA0B,SAAAzhD,GAAU,IACxBwE,EAAsBxE,EAAtBwE,OAAQod,EAAc5hB,EAAd4hB,UACR8/B,EAAiBriD,EAAKoC,MAAtBigD,aAER,GAAIriD,EAAK4C,MAAMuC,SAAWA,EAA1B,CAIA,IAAMm9C,EAAWD,EAAav7C,OAAS,EAAIu7C,EAAaA,EAAav7C,OAAS,GAAK,KAC/Ew7C,GAAYA,EAASn9C,SAAWA,GAAUm9C,EAAS//B,YAAcA,GAIrE8/B,EAAav5C,KAAK,CAAE3D,SAAQod,gBA5LbviB,EA+LnBgvC,0BAA4B,SAAAruC,GACxB,IAAMwb,EAAOnc,EAAKmnB,QAAQva,QAEpB21C,EAAmBpmC,EAAKE,aACxBmmC,EAAgBrmC,EAAKX,UAC3Bxb,EAAK6C,SAAS,CAAE4/C,cAAc,GAAQ,WAC9BtmC,EAAKX,YAAcgnC,IACnBrmC,EAAKX,WAAayyB,KAAKyU,IAAIH,EAAmBpmC,EAAKE,kBAtM5Crc,EA2MnB2iD,0BAA4B,SAAAC,GACxB,IAAMzmC,EAAOnc,EAAKmnB,QAAQva,QAE1B5M,EAAKuiD,iBAAmBpmC,EAAKE,aAC7Brc,EAAKwiD,cAAgBrmC,EAAKX,WA/MXxb,EAkNnB6iD,uBAAyB,SAAAD,GACrB,IAAMzmC,EAAOnc,EAAKmnB,QAAQva,QAK1B5M,EAAK6C,SAAS,CAAE4/C,cAAc,GAAS,WAC/BtmC,EAAKX,YAAcxb,EAAKwiD,gBACxBrmC,EAAKX,WAAayyB,KAAKyU,IAAI1iD,EAAKuiD,iBAAmBpmC,EAAKE,kBA1NjDrc,EA+NnB8iD,wBAA0B,SAAAniD,GACtBX,EAAK6C,SAAS,CACVkgD,gBAAiB92C,KAAao5B,cAAc73B,KAAO,KAjOxCxN,EAqOnBgjD,2BAA6B,SAAAriD,GACNX,EAAK4C,MAAhBuC,SAEOxE,EAAOwE,QAClBnF,EAAK6C,SAAS,CAAEwhC,aAAc1jC,EAAOqjC,cAzO1BhkC,EA6OnB25C,uBAAyB,SAAAh5C,GAAU,IACvBwE,EAAWnF,EAAK4C,MAAhBuC,OACA89C,EAAYjjD,EAAKoC,MAAjB6gD,QACA34C,EAAwB3J,EAAxB2J,QAASC,EAAe5J,EAAf4J,WAEjB,GAAIpF,IAAWmF,IAEsC,IAAjD24C,EAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAOwJ,IAAoB,CACpD,IAAMS,EAAUiB,KAAahF,IAAIqD,EAASC,GAC1C,IAAKS,EAAS,OAEd,IAAMlL,EAAQ8J,KAAUC,WACxBkzC,YAAoBj9C,EAAO,CAACkL,MAzPjBhL,EA6PnBkjD,wBAA0B,SAAAviD,GACHX,EAAK4C,MAAhBuC,OACOxE,EAAO2J,SA/PPtK,EAkQnBmjD,6BAA+B,SAAAxiD,GAAU,IAC7BqK,EAA4BrK,EAA5BqK,QAAS4sC,EAAmBj3C,EAAnBi3C,eAEjB,GADmB53C,EAAK4C,MAAhBuC,SACO6F,EAAQV,QAAvB,CAaA,IAAM84C,EAAiBp4C,EAAQq4C,YACzBxB,GAAmBE,iBACnBF,GAAmBK,qBAEzBliD,EAAKsjD,eAAe1L,EAAgB5sC,EAAS,WACrCo4C,IAAmBvB,GAAmBK,sBACtCliD,EAAKujD,qBAAqBH,EAAgBpjD,EAAKkD,YAIvD,IAAMpD,EAAQ8J,KAAUC,WACxBkzC,YAAoBj9C,EAAO,CAACkL,IAC5Bm3C,EAAaqB,aAAa,CAACx4C,MA9RZhL,EAiSnByjD,mBAAqB,SAAA9iD,GACjB,GAAKX,EAAK0jD,UAAV,CAD2B,IAGnB14C,EAAYrK,EAAZqK,QAER,GADmBhL,EAAK4C,MAAhBuC,SACO6F,EAAQV,QAAvB,CAEA,IAAM84C,EAAiBp4C,EAAQq4C,YACzBxB,GAAmBE,iBACnBF,GAAmBK,qBACnByB,EAAW34C,EAAQq4C,YAAc,CAAEO,mBAAmB,GAAU,GAEhEX,EAAU,CAACj4C,GACjBhL,EAAK6jD,eAAel8B,aAAes7B,GAAUU,EAAU,WAC/CP,IAAmBvB,GAAmBK,sBACtCliD,EAAKujD,qBAAqBH,EAAgBpjD,EAAKkD,YAIvD,IAAMpD,EAAQ8J,KAAUC,WACxBkzC,YAAoBj9C,EAAOmjD,GAC3Bd,EAAaqB,aAAaP,MAtTXjjD,EAyTnB8jD,uBAAyB,SAAAnjD,GAAU,IACvBwE,EAAWnF,EAAK4C,MAAhBuC,OACAmF,EAAuC3J,EAAvC2J,QAASy5C,EAA8BpjD,EAA9BojD,aAAc/1C,EAAgBrN,EAAhBqN,YAC3B7I,IAAWmF,GAEVy5C,GAEL/jD,EAAKgkD,cAAch2C,EAAa,WAC5BhO,EAAKujD,qBAAqB1B,GAAmBE,iBAAkB/hD,EAAKkD,aAjUzDlD,EAqUnBikD,kBAAoB,WAChB,GAAKjkD,EAAKklB,SAAV,CAIA,IAFA,IAAMA,EAAW,IAAI/d,IACf6V,EAAQknC,aAAYlkD,EAAKmnB,QAASnnB,EAAKmkD,UACpC98C,EAAI,EAAGA,EAAI2V,EAAMlW,OAAQO,IAAK,CACnC,IAAM+8C,EAAiBpkD,EAAKklB,SAASlI,EAAM3V,IAC3C,GAAI+8C,EAAgB,CAChB,IADgBC,EACAD,EAAexhD,MAAM0hD,SAAS,GACR1hD,MAA9BuC,EAFQk/C,EAERl/C,OAAQod,EAFA8hC,EAEA9hC,UACVhe,EAAG,GAAAO,OAAMK,EAAN,KAAAL,OAAgByd,GACzB2C,EAAS9W,IAAI7J,EAAKA,IAI1B7C,KAAgBiJ,aAAa,CACzBlI,QAAS,6BACTyiB,SAAUA,MAtVCllB,EAygBnBukD,sBAzgBmB,eAAAhkC,EAAAtgB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAygBK,SAAAC,EAAMnF,GAAN,IAAA6hD,EAAAC,EAAAp9C,EAAA,OAAAO,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd+7C,EAAiB,EACnBC,EAAa9hD,GAAUA,EAAOuiB,SAASpe,OAAS,GAAKnE,EAAOuiB,SAASpe,OAAS49C,IAEzEr9C,EAAI,EAJO,YAIJA,EAAIm9C,GAAkBC,GAJlB,CAAAl8C,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKDzI,EAAK2kD,aALJ,OAKhBhiD,EALgB4F,EAAAiB,KAMhBi7C,EAAa9hD,GAAUA,EAAOuiB,SAASpe,OAAS,GAAKnE,EAAOuiB,SAASpe,OAAS49C,IAN9D,OAI8Br9C,IAJ9BkB,EAAAE,KAAA,iCAAAF,EAAAwB,SAAAjC,MAzgBL,gBAAA0Y,GAAA,OAAAD,EAAApc,MAAAhE,KAAAiE,YAAA,GAAApE,EAmhBnB2kD,WAnhBmB1kD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAmhBN,SAAAmC,IAAA,IAAA7E,EAAA89C,EAAA2B,EAAAtgC,EAAA3hB,EAAA7C,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACDtD,EAAWnF,EAAK4C,MAAhBuC,OACA89C,EAAYjjD,EAAKoC,MAAjB6gD,QAEH99C,EAJI,CAAA+E,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,qBAKLnK,EAAK0nB,QALA,CAAAxd,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,qBAOLnK,EAAK6kD,oBAPA,CAAA36C,EAAAzB,KAAA,eAQLzI,EAAK8kD,wBARA56C,EAAAC,OAAA,wBAYHy6C,EAAgB3B,GAAWA,EAAQn8C,OAAS,EAAIm8C,EAAQ,GAAGliD,GAAK,EAEtEf,EAAK0nB,SAAU,EACTpD,EAAYtkB,EAAKskB,UAfdpa,EAAAzB,KAAA,GAgBU/G,KAAgBc,KAAK,CACpCC,QAAS,iBACT6H,QAASnF,EACT0gB,gBAAiB++B,EACjB9+B,OAAQ,EACRjd,MAAO67C,MACRK,QAAQ,WACP/kD,EAAK0nB,SAAU,IAvBV,WAgBL/kB,EAhBKuH,EAAAV,KA0BL8a,IAActkB,EAAKskB,UA1Bd,CAAApa,EAAAzB,KAAA,gBAAAyB,EAAAC,OAAA,qBA8BLnK,EAAK4C,MAAMuC,SAAWA,EA9BjB,CAAA+E,EAAAzB,KAAA,gBAAAyB,EAAAC,OAAA,yBAkCT8B,KAAaga,SAAStjB,EAAOuiB,UAC7BviB,EAAOuiB,SAASwqB,UAChB1vC,EAAKglD,WAAWr9B,aAAehlB,EAAOuiB,UAAW,WACxCviB,EAAOuiB,SAASpe,QACjB9G,EAAK8kD,0BAIPhlD,EAAQ8J,KAAUC,WACxBkzC,YAAoBj9C,EAAO6C,EAAOuiB,UAClCi9B,EAAaqB,aAAa7gD,EAAOuiB,UA5CxBhb,EAAAC,OAAA,SA8CFxH,GA9CE,yBAAAuH,EAAAH,SAAAC,MAnhBMhK,EAokBnB8kD,sBApkBmB7kD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAokBK,SAAA6e,IAAA,IAAAvhB,EAAA89C,EAAAgC,EAAAvwC,EAAAwwC,EAAAN,EAAAtgC,EAAA3hB,EAAA7C,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAAqe,GAAA,cAAAA,EAAAne,KAAAme,EAAAle,MAAA,UACZtD,EAAWnF,EAAK4C,MAAhBuC,OACA89C,EAAYjjD,EAAKoC,MAAjB6gD,QAEH99C,EAJe,CAAAwhB,EAAAle,KAAA,eAAAke,EAAAxc,OAAA,qBAKhBnK,EAAK0nB,QALW,CAAAf,EAAAle,KAAA,eAAAke,EAAAxc,OAAA,oBAOd86C,EAAeE,YAAgBhgD,GAPjB,CAAAwhB,EAAAle,KAAA,eAAAke,EAAAxc,OAAA,oBAUduK,EAAWkB,KAAgBhB,YAAYqwC,GAVzB,CAAAt+B,EAAAle,KAAA,gBAAAke,EAAAxc,OAAA,qBAYfuK,EAAS0wC,6BAZM,CAAAz+B,EAAAle,KAAA,gBAAAke,EAAAxc,OAAA,yBAcpBnK,EAAK6kD,qBAAsB,EAdPl+B,EAAAle,KAAA,GAgBS/G,KAAgBc,KAAK,CAC9CC,QAAS,uBACToS,eAAgBH,EAAS0wC,+BAlBT,WAgBdF,EAhBcv+B,EAAAnd,KAAA,CAAAmd,EAAAle,KAAA,gBAAAke,EAAAxc,OAAA,yBAuBdy6C,EAAgB3B,EAAQn8C,OAAS,GAAKm8C,EAAQ,GAAG34C,UAAY46C,EAAenkD,GAAKkiD,EAAQ,GAAGliD,GAAK,EAEvGf,EAAK0nB,SAAU,EACTpD,EAAYtkB,EAAKskB,UA1BHqC,EAAAle,KAAA,GA2BC/G,KAAgBc,KAAK,CACtCC,QAAS,iBACT6H,QAAS46C,EAAenkD,GACxB8kB,gBAAiB++B,EACjB9+B,OAAQ,EACRjd,MAAO67C,MACRK,QAAQ,WACP/kD,EAAK0nB,SAAU,IAlCC,WA2Bd/kB,EA3BcgkB,EAAAnd,KAqChB8a,IAActkB,EAAKskB,UArCH,CAAAqC,EAAAle,KAAA,gBAAAke,EAAAxc,OAAA,qBAyChBnK,EAAK4C,MAAMuC,SAAWA,EAzCN,CAAAwhB,EAAAle,KAAA,gBAAAke,EAAAxc,OAAA,kBA6CpB8B,KAAaga,SAAStjB,EAAOuiB,UAC7BviB,EAAOuiB,SAASwqB,UAChB1vC,EAAKglD,WAAWr9B,aAAehlB,EAAOuiB,WAEhCplB,EAAQ8J,KAAUC,WACxBkzC,YAAoBj9C,EAAO6C,EAAOuiB,UAClCi9B,EAAaqB,aAAa7gD,EAAOuiB,UAnDb,yBAAAyB,EAAA5c,SAAA2c,MApkBL1mB,EA0nBnBonB,eA1nBmBnnB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA0nBF,SAAA2f,IAAA,IAAAriB,EAAA89C,EAAA3uC,EAAAswC,EAAAtgC,EAAA3hB,EAAA7C,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAAmf,GAAA,cAAAA,EAAAjf,KAAAif,EAAAhf,MAAA,UACLtD,EAAWnF,EAAK4C,MAAhBuC,OACA89C,EAAYjjD,EAAKoC,MAAjB6gD,QAEF3uC,EAAOC,KAAUtN,IAAI9B,GAJd,CAAAsiB,EAAAhf,KAAA,eAAAgf,EAAAtd,OAAA,qBAOTnK,EAAK0nB,QAPI,CAAAD,EAAAhf,KAAA,eAAAgf,EAAAtd,OAAA,qBAQTnK,EAAK0jD,UARI,CAAAj8B,EAAAhf,KAAA,eAAAgf,EAAAtd,OAAA,wBAUPy6C,EAAgB3B,GAAWA,EAAQn8C,OAAS,EAAIm8C,EAAQA,EAAQn8C,OAAS,GAAG/F,GAAK,EAEvFf,EAAK0nB,SAAU,EACTpD,EAAYtkB,EAAKskB,UAbVmD,EAAAhf,KAAA,GAcM/G,KAAgBc,KAAK,CACpCC,QAAS,iBACT6H,QAASnF,EACT0gB,gBAAiB++B,EACjB9+B,QAAS4+B,IAAsB,EAC/B77C,MAAO67C,IAAsB,IAC9BK,QAAQ,WACP/kD,EAAK0nB,SAAU,IArBN,WAcT/kB,EAdS8kB,EAAAje,KAwBT8a,IAActkB,EAAKskB,UAxBV,CAAAmD,EAAAhf,KAAA,gBAAAgf,EAAAtd,OAAA,qBA4BTnK,EAAK4C,MAAMuC,SAAWA,EA5Bb,CAAAsiB,EAAAhf,KAAA,gBAAAgf,EAAAtd,OAAA,yBAgCTmK,EAAK+wC,aACLrlD,EAAK0jD,UAAY/gD,EAAOuiB,SAASpe,OAAS,GAAKwN,EAAK+wC,aAAatkD,KAAO4B,EAAOuiB,SAAS,GAAGnkB,GAE3Ff,EAAK0jD,WAAY,EAGrB4B,aAAwB3iD,EAAQ3C,EAAKoC,MAAM6gD,SAE3Ch3C,KAAaga,SAAStjB,EAAOuiB,UAC7BviB,EAAOuiB,SAASwqB,UAChB1vC,EAAK6jD,eAAel8B,aAAehlB,EAAOuiB,UAAW,IAE/CplB,EAAQ8J,KAAUC,WACxBkzC,YAAoBj9C,EAAO6C,EAAOuiB,UAClCi9B,EAAaqB,aAAa7gD,EAAOuiB,UA9CpBuC,EAAAtd,OAAA,SAgDNxH,GAhDM,yBAAA8kB,EAAA1d,SAAAyd,MA1nBExnB,EA4tBnBknB,aAAe,WAAM,IAAAlY,EAEoChP,EAAKoC,MAAlDwhD,EAFS50C,EAET40C,kBAAmBvB,EAFVrzC,EAEUqzC,aAAcY,EAFxBj0C,EAEwBi0C,QACnC9mC,EAAOnc,EAAKmnB,QAAQva,QAE1B5M,EAAKikD,oBAED9nC,EAAKX,WAAa,EAElBxb,EAAK2kD,aACExoC,EAAKX,UAAYW,EAAKE,eAAiBF,EAAKC,cAEnDpc,EAAKonB,iBAGLjL,EAAKX,UAAYW,EAAKE,eAAiBF,EAAKC,aACxCpc,EAAK0jD,WAAaE,IACd5jD,EAAKwiD,gBAAkBrmC,EAAKX,WAAaxb,EAAKwiD,eAAiBxiD,EAAKulD,cAAgBtC,EAEpFjjD,EAAK6C,SAAS,CACV+gD,mBAAmB,EACnBvB,aAAc,KAEVA,EAAav7C,QAErB9G,EAAK6C,SAAS,CACV+gD,mBAAmB,KAK1BA,GAED5jD,EAAK6C,SAAS,CAAE+gD,mBAAmB,IAI3C5jD,EAAKwiD,cAAgBrmC,EAAKX,UAC1Bxb,EAAKulD,YAActC,GAlwBJjjD,EAqwBnBujD,qBAAuB,SAACH,EAAgBlgD,GAAa,IAAA+B,EACnBjF,EAAK4C,MAA3BuC,EADyCF,EACzCE,OAAQod,EADiCtd,EACjCsd,UADiCijC,EAECtiD,GAAY,CAC1DsY,UAAW,EACXY,aAAc,EACdC,aAAc,GAHVb,EAFyCgqC,EAEzChqC,UAAWY,EAF8BopC,EAE9BppC,aAAcC,EAFgBmpC,EAEhBnpC,aAejC,OATAhO,QAAQC,IAAR,yDAAAxJ,OAEaK,EAFb,eAAAL,OAEiCyd,EAFjC,iCAAAzd,OAGqBs+C,EAHrB,qCAAAt+C,OAIyB0W,EAJzB,wCAAA1W,OAK4BsX,EAL5B,wCAAAtX,OAM4BuX,IAGpB+mC,GACJ,KAAKvB,GAAmBE,iBACpB/hD,EAAKylD,iBACL,MAEJ,KAAK5D,GAAmBI,kBACpBjiD,EAAK0lD,kBACL,MAEJ,KAAK7D,GAAmBG,iBACpBhiD,EAAK2lD,iBACL,MAEJ,KAAK9D,GAAmBK,qBACpBliD,EAAK4lD,mBAAmB1iD,KApyBjBlD,EA0yBnB4lD,mBAAqB,SAAA1iD,GAAY,IAAAkI,EACCpL,EAAK4C,MAA3BuC,EADqBiG,EACrBjG,OAAQod,EADanX,EACbmX,UACR/G,EAA0CtY,EAA1CsY,UAAWY,EAA+BlZ,EAA/BkZ,aACbD,GAD4CjZ,EAAjBmZ,aACpBrc,EAAKmnB,QAAQva,SAE1ByB,QAAQC,IAAR,8DAAAxJ,OAEaK,EAFb,eAAAL,OAEiCyd,EAFjC,4CAAAzd,OAGqBqX,EAAKX,UAH1B,oCAAA1W,OAIwBqX,EAAKE,aAJ7B,oCAAAvX,OAKwBqX,EAAKC,eAG7BD,EAAKX,UAAYA,GAAaW,EAAKC,aAAeA,GAElD/N,QAAQC,IAAR,6DAAAxJ,OAEaK,EAFb,eAAAL,OAEiCyd,EAFjC,4CAAAzd,OAGqBqX,EAAKX,UAH1B,oCAAA1W,OAIwBqX,EAAKE,aAJ7B,oCAAAvX,OAKwBqX,EAAKC,gBA9zBdpc,EAk0BnB2lD,eAAiB,WAAM,IAAAp5C,EACWvM,EAAK4C,MAA3BuC,EADWoH,EACXpH,OAAQod,EADGhW,EACHgW,UACR0gC,EAAYjjD,EAAKoC,MAAjB6gD,QACF9mC,EAAOnc,EAAKmnB,QAAQva,QAE1ByB,QAAQC,IAAR,0DAAAxJ,OAEaK,EAFb,eAAAL,OAEiCyd,EAFjC,4CAAAzd,OAGqBqX,EAAKX,UAH1B,oCAAA1W,OAIwBqX,EAAKE,aAJ7B,oCAAAvX,OAKwBqX,EAAKC,eAI7B,IADA,IAAIypC,GAAW,EACNx+C,EAAI,EAAGA,EAAI47C,EAAQn8C,OAAQO,IAAK,CACrC,IAAIy+C,EAAgB9lD,EAAK+lD,SAAS9+C,IAAII,GAClCq0B,EAAO+S,eAAqBqX,GAChC,GAAIpqB,GACIoqB,EAAcljD,MAAMi4C,oBAAqB,CACzC1+B,EAAKX,UAAYkgB,EAAKgT,UACtBmX,GAAW,EACX,OAKZx3C,QAAQC,IAAR,yDAAAxJ,OAEaK,EAFb,eAAAL,OAEiCyd,EAFjC,cAAAzd,OAEuD+gD,EAFvD,0CAAA/gD,OAGqBqX,EAAKX,UAH1B,oCAAA1W,OAIwBqX,EAAKE,aAJ7B,oCAAAvX,OAKwBqX,EAAKC,eAGxBypC,GACD7lD,EAAKylD,kBAr2BMzlD,EAy2BnB0lD,gBAAkB,WAAM,IAAA/0C,EACU3Q,EAAK4C,MAA3BuC,EADYwL,EACZxL,OAAQod,EADI5R,EACJ4R,UACR0gC,EAAYjjD,EAAKoC,MAAjB6gD,QACF9mC,EAAOnc,EAAKmnB,QAAQva,QAE1ByB,QAAQC,IAAR,2DAAAxJ,OAEaK,EAFb,eAAAL,OAEiCyd,EAFjC,4CAAAzd,OAGqBqX,EAAKX,UAH1B,oCAAA1W,OAIwBqX,EAAKE,aAJ7B,oCAAAvX,OAKwBqX,EAAKC,eAI7B,IADA,IAAIypC,GAAW,EACNx+C,EAAI,EAAGA,EAAI47C,EAAQn8C,OAAQO,IAAK,CACrC,IAAIy+C,EAAgB9lD,EAAK+lD,SAAS9+C,IAAII,GAClCq0B,EAAO+S,eAAqBqX,GAChC,GAAIpqB,GACIoqB,EAAcljD,MAAM2f,YAAcA,EAAW,CAC7CpG,EAAKX,UAAYkgB,EAAKgT,UAAYvyB,EAAKE,aAAe,EACtDwpC,GAAW,EACX,OAKZx3C,QAAQC,IAAR,0DAAAxJ,OAEaK,EAFb,eAAAL,OAEiCyd,EAFjC,cAAAzd,OAEuD+gD,EAFvD,0CAAA/gD,OAGqBqX,EAAKX,UAH1B,oCAAA1W,OAIwBqX,EAAKE,aAJ7B,oCAAAvX,OAKwBqX,EAAKC,eAGxBypC,GACD7lD,EAAKylD,kBA54BMzlD,EAg5BnBylD,eAAiB,WAAM,IAAA5pC,EACW7b,EAAK4C,MAA3BuC,EADW0W,EACX1W,OAAQod,EADG1G,EACH0G,UACVpG,EAAOnc,EAAKmnB,QAAQva,QAE1ByB,QAAQC,IAAR,0DAAAxJ,OAEaK,EAFb,eAAAL,OAEiCyd,EAFjC,4CAAAzd,OAGqBqX,EAAKX,UAH1B,oCAAA1W,OAIwBqX,EAAKE,aAJ7B,oCAAAvX,OAKwBqX,EAAKC,eAGPD,EAAKC,aAAeD,EAAKE,eACzBF,EAAKX,WACvBW,EAAKX,UAAYW,EAAKC,aAAeD,EAAKE,aAE1ChO,QAAQC,IAAR,yDAAAxJ,OAESK,EAFT,eAAAL,OAE6Byd,EAF7B,4CAAAzd,OAGiBqX,EAAKX,UAHtB,oCAAA1W,OAIoBqX,EAAKE,aAJzB,oCAAAvX,OAKoBqX,EAAKC,gBAGzB/N,QAAQC,IAAR,sEAAAxJ,OAESK,EAFT,eAAAL,OAE6Byd,EAF7B,4CAAAzd,OAGiBqX,EAAKX,UAHtB,oCAAA1W,OAIoBqX,EAAKE,aAJzB,oCAAAvX,OAKoBqX,EAAKC,gBA76Bdpc,EAk7BnBgmD,cAl7BmB/lD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAk7BH,SAAAo+C,IAAA,IAAA9gD,EAAAmP,EAAAzL,EAAAyb,EAAA3hB,EAAA7C,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAA49C,GAAA,cAAAA,EAAA19C,KAAA09C,EAAAz9C,MAAA,UACJtD,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GAFf,CAAA+gD,EAAAz9C,KAAA,eAAAy9C,EAAA/7C,OAAA,wBAKZkE,QAAQC,IAAI,2CACZtO,EAAKskB,UAAYa,KAAKgR,MACtBn2B,EAAK0nB,SAAU,EACf1nB,EAAK0jD,WAAY,EAEK,EACP,EACT76C,EAAQ67C,IAEd1kD,EAAK0nB,SAAU,EACTpD,EAAYtkB,EAAKskB,UAfX4hC,EAAAz9C,KAAA,GAgBS/G,KAAgBc,KAAK,CACtCC,QAAS,iBACT6H,QAASgK,EAAKvT,GACd8kB,gBATkB,EAUlBC,OATW,EAUXjd,MAAOA,IACRk8C,QAAQ,WACP/kD,EAAK0nB,SAAU,IAvBP,WAgBN/kB,EAhBMujD,EAAA18C,KA0BR8a,IAActkB,EAAKskB,UA1BX,CAAA4hC,EAAAz9C,KAAA,gBAAAy9C,EAAA/7C,OAAA,qBA8BRnK,EAAK4C,MAAMuC,SAAWA,EA9Bd,CAAA+gD,EAAAz9C,KAAA,gBAAAy9C,EAAA/7C,OAAA,kBAkCRmK,EAAK+wC,aACLrlD,EAAK0jD,UAAY/gD,EAAOuiB,SAASpe,OAAS,GAAKwN,EAAK+wC,aAAatkD,KAAO4B,EAAOuiB,SAAS,GAAGnkB,GAE3Ff,EAAK0jD,WAAY,EAGrB1jD,EAAK6C,SAAS,CAAE+gD,mBAAmB,EAAOvB,aAAc,KAExDp2C,KAAaga,SAAStjB,EAAOuiB,UAC7BviB,EAAOuiB,SAASwqB,UAES,EACzB1vC,EAAK60B,QADoB,EACQlyB,EAAOuiB,SAAU,WAC9CllB,EAAKujD,qBAAqB1B,GAAmBE,iBAAkB/hD,EAAKkD,YAIlEpD,EAAQ8J,KAAUC,WACxBkzC,YAAoBj9C,EAAO6C,EAAOuiB,UAClCi9B,EAAaqB,aAAa7gD,EAAOuiB,UAEjCllB,EAAKukD,sBAAsB5hD,GAvDf,yBAAAujD,EAAAn8C,SAAAk8C,MAl7BGjmD,EA4+BnBmmD,oBAAsB,SAAAv3C,GAClBA,EAAME,iBACNF,EAAMiY,kBAFqB,IAInB1hB,EAAWnF,EAAK4C,MAAhBuC,OACHihD,YAAajhD,IAElBmG,IAAiBwpC,aAAY,IAn/Bd90C,EAs/BnBqmD,sBAAwB,SAAAz3C,GAAS,IACrByzC,EAAiBriD,EAAKoC,MAAtBigD,aAER,GAAIA,EAAav7C,OAAS,EAAG,CACzB,IAAMw/C,EAAYjE,EAAakE,MAC/B,GAAID,EAAW,KACHnhD,EAAsBmhD,EAAtBnhD,OAAQod,EAAc+jC,EAAd/jC,UACZpd,IAAWnF,EAAK4C,MAAMuC,QACtB2W,aAAS3W,EAAQod,SAIzBviB,EAAKgmD,iBA//BT33C,QAAQC,IAAR,6BAAAxJ,OAAyClC,EAAMuC,OAA/C,gBAAAL,OAAoElC,EAAM2f,YAE1ElU,QAAQC,IAAI,kCACZtO,EAAKskB,UAAYa,KAAKgR,MACtBn2B,EAAKoC,MAAQ,CACTuT,WAAY,EACZ6wC,cAAe,KACf/D,cAAc,EACdQ,QAAS,GACT5e,cAAc,EACd0e,iBAAiB,EACjB0D,mBAAoB,EACpB7C,mBAAmB,EACnBvB,aAAc,IAGlBriD,EAAKmnB,QAAUzjB,IAAM+M,YACrBzQ,EAAKmkD,SAAWzgD,IAAM+M,YAEtBzQ,EAAK+lD,SAAW,IAAI5+C,IAEpBnH,EAAKikD,kBAAoByC,aAAS1mD,EAAKikD,kBAAmB,KAxB3CjkD,uFA4CKgD,EAAWC,GAAW,IAAAqZ,EACZnc,KAAKyC,MAA3BuC,EADkCmX,EAClCnX,OAAQod,EAD0BjG,EAC1BiG,UAEVpG,EAAOhc,KAAKgnB,QAAQva,QAClB4O,EAA0CW,EAA1CX,UAAWY,EAA+BD,EAA/BC,aAAcC,EAAiBF,EAAjBE,aAE3BnZ,EAAW,CACbsY,YACAY,eACAC,gBAYJ,OATAhO,QAAQC,IAAR,4DAAAxJ,OAEaK,EAFb,eAAAL,OAEiCyd,EAFjC,iCAAAzd,OAGqB0W,EAHrB,oCAAA1W,OAIwBsX,EAJxB,oCAAAtX,OAKwBuX,IAGxBlc,KAAK+C,SAAWA,EACTA,6CAGQF,EAAWC,EAAWC,GAAU,IAAAqZ,EACjBpc,KAAKyC,MAA3BuC,EADuCoX,EACvCpX,OAAQod,EAD+BhG,EAC/BgG,UACRqhC,EAAsBzjD,KAAKiC,MAA3BwhD,kBAEFznC,EAAOhc,KAAKgnB,QAAQva,QAC1ByB,QAAQC,IAAR,yDAAAxJ,OAEcK,EAFd,gBAAAL,OAEmCyd,EAFnC,oCAAAzd,OAGwB9B,EAAUmC,OAHlC,0BAAAL,OAGiE9B,EAAUuf,UAH3E,oCAAAzd,OAIwB8+C,EAJxB,iCAAA9+C,OAKqBqX,EAAKX,UAL1B,oCAAA1W,OAMwBqX,EAAKC,aAN7B,oCAAAtX,OAOwBqX,EAAKE,eAGzBrZ,EAAUmC,SAAWA,GAAUnC,EAAUuf,YAAcA,EACvDpiB,KAAKka,iBAAiBlV,EAAQnC,EAAUmC,OAAQod,EAAWvf,EAAUuf,WAErEpiB,KAAKojD,qBAAqB1B,GAAmBK,qBAAsBh/C,iDAIrDoQ,EAAWC,GAAW,IAAA2mC,EACH/5C,KAAKyC,MAAlCuC,EADgC+0C,EAChC/0C,OAAQod,EADwB23B,EACxB33B,UAAWvc,EADak0C,EACbl0C,MADa4K,EAEsDzQ,KAAKiC,MAA3FqgD,EAFgC7xC,EAEhC6xC,aAAcQ,EAFkBryC,EAElBqyC,QAASjZ,EAFSp5B,EAETo5B,SAAU3F,EAFDzzB,EAECyzB,aAAc0e,EAFfnyC,EAEemyC,gBAAiBa,EAFhChzC,EAEgCgzC,kBAExE,OAAItwC,EAAUtN,QAAUA,GACpBqI,QAAQC,IAAI,6CACL,GAGPgF,EAAUnO,SAAWA,GACrBkJ,QAAQC,IAAI,8CACL,GAGPgF,EAAUiP,YAAcA,GACxBlU,QAAQC,IAAI,iDACL,GAGPiF,EAAUqwC,oBAAsBA,GAChCv1C,QAAQC,IAAI,yDACL,GAGPiF,EAAUkvC,eAAiBA,GAC3Bp0C,QAAQC,IAAI,oDACL,GAGNq4C,aAAcpzC,EAAU0vC,QAASA,GAKlC1vC,EAAUy2B,WAAaA,GACvB37B,QAAQC,IAAI,gDACL,GAGPiF,EAAU8wB,eAAiBA,GAC3Bh2B,QAAQC,IAAI,oDACL,GAGPiF,EAAUwvC,kBAAoBA,GAC9B10C,QAAQC,IAAI,uDACL,IAGXD,QAAQC,IAAI,6CACL,IApBHD,QAAQC,IAAI,+CACL,+CAuBXrC,KAAauH,GAAG,mBAAoBrT,KAAKsjD,oBACzCx3C,KAAauH,GAAG,uBAAwBrT,KAAK2jD,wBAC7C73C,KAAauH,GAAG,uBAAwBrT,KAAKw5C,wBAC7C1tC,KAAauH,GAAG,6BAA8BrT,KAAKgjD,8BACnDl3C,KAAauH,GAAG,8BAA+BrT,KAAK2iD,yBACpD72C,KAAauH,GAAG,6BAA8BrT,KAAK2iD,yBACnD72C,KAAauH,GAAG,wBAAyBrT,KAAKiiD,yBAC9C7tC,KAAUf,GAAG,wBAAyBrT,KAAK+iD,yBAC3C3uC,KAAUf,GAAG,2BAA4BrT,KAAK6iD,4BAE9CnZ,KAAYr2B,GAAG,0BAA2BrT,KAAK6uC,2BAC/CnF,KAAYr2B,GAAG,0BAA2BrT,KAAKwiD,2BAC/C9Y,KAAYr2B,GAAG,uBAAwBrT,KAAK0iD,uEAI5C52C,KAAapK,eAAe,mBAAoB1B,KAAKsjD,oBACrDx3C,KAAapK,eAAe,uBAAwB1B,KAAK2jD,wBACzD73C,KAAapK,eAAe,uBAAwB1B,KAAKw5C,wBACzD1tC,KAAapK,eAAe,6BAA8B1B,KAAKgjD,8BAC/Dl3C,KAAapK,eAAe,8BAA+B1B,KAAK2iD,yBAChE72C,KAAapK,eAAe,6BAA8B1B,KAAK2iD,yBAC/D72C,KAAapK,eAAe,wBAAyB1B,KAAKiiD,yBAC1D7tC,KAAU1S,eAAe,wBAAyB1B,KAAK+iD,yBACvD3uC,KAAU1S,eAAe,2BAA4B1B,KAAK6iD,4BAE1DnZ,KAAYhoC,eAAe,0BAA2B1B,KAAK6uC,2BAC3DnF,KAAYhoC,eAAe,0BAA2B1B,KAAKwiD,2BAC3D9Y,KAAYhoC,eAAe,uBAAwB1B,KAAK0iD,yGAsMrC19C,EAAQqc,EAAgBe,EAAWC,2GAChDlO,EAAOC,KAAUtN,IAAI9B,GACrByhD,EAAeryC,KAAUtN,IAAIua,GAEnCnT,QAAQC,IAAI,8CACZnO,KAAKmkB,UAAYa,KAAKgR,MACtBh2B,KAAKunB,SAAU,EACfvnB,KAAKujD,WAAY,EACjBvjD,KAAK0kD,qBAAsB,GAEvBvwC,0BACA5S,KAAgBc,KAAK,CACjBC,QAAS,WACT6H,QAASgK,EAAKvT,KAGZ22C,GAAUn1B,GAAajO,EAAKuyC,aAAe,EAC3CjC,EACFlN,GAAUpjC,EAAKuyC,aAAe,EAAIvyC,EAAKwyC,2BAA6BvkC,GAAwB,EAC1FuD,EAAU4xB,GAAUpjC,EAAKuyC,aAAe,GAAMtkC,GAAa,EAAImiC,IAAsB,EACrF77C,EACD6uC,GAAUpjC,EAAKuyC,aAAe,GAAMtkC,EAAY,EAAImiC,IAAsBA,IAE/EvkD,KAAKunB,SAAU,EACTpD,EAAYnkB,KAAKmkB,oBACF5iB,KAAgBc,KAAK,CACtCC,QAAS,iBACT6H,QAASgK,EAAKvT,GACd8kB,gBAAiB++B,EACjB9+B,OAAQA,EACRjd,MAAOA,IACRk8C,QAAQ,WACPr0C,EAAKgX,SAAU,eAPb/kB,SAUF2hB,IAAcnkB,KAAKmkB,gEAInBhQ,EAAK+wC,aACLllD,KAAKujD,UAAY/gD,EAAOuiB,SAASpe,OAAS,GAAKwN,EAAK+wC,aAAatkD,KAAO4B,EAAOuiB,SAAS,GAAGnkB,GAE3FZ,KAAKujD,WAAY,EAGrBz3C,KAAaga,SAAStjB,EAAOuiB,UAC7BviB,EAAOuiB,SAASwqB,UAEZ+W,EAAqBvF,OAAO6F,YAC5BzyC,GAAQA,EAAKuyC,aAAe,oBACnBx/C,EAAI1E,EAAOuiB,SAASpe,OAAS,eAAGO,GAAK,uBAClCtG,EAAO4B,EAAOuiB,SAAS7d,GAAvBtG,MAEH4B,EAAOuiB,SAAS7d,GAAGg8C,aACpBtiD,EAAKuT,EAAKwyC,4BACV/lD,EAAK0lD,oBAELA,EAAqB1lD,8DAPoBsG,4BAarDo/C,EAAqBA,IAAuBvF,OAAO6F,UAAY,EAAIN,EAE/DrD,EAAiBvB,GAAmBE,iBACpCx/B,EACA6gC,EAAiBvB,GAAmBI,kBAC7BvK,GAAU+O,IACjBrD,EAAiBvB,GAAmBG,kBAGxC7hD,KAAK00B,QAAQ4xB,EAAoB9jD,EAAOuiB,SAAU,WAC9CxU,EAAK6yC,qBAAqBH,EAAgB1yC,EAAKxN,UAC3Cqf,GACAykC,aAAiB7hD,EAAQod,KAK3BziB,EAAQ8J,KAAUC,WACxBkzC,YAAoBj9C,EAAO6C,EAAOuiB,UAClCi9B,EAAaqB,aAAa7gD,EAAOuiB,UAEjCpb,YAAiBhK,EAAO,CAACqF,IACzB8hD,YAAiBnnD,EAAOqF,GAExBhF,KAAKokD,sBAAsB5hD,GAG3B+X,YAAgBpG,EAAKvT,4BAErBZ,KAAKunB,SAAU,EACfvnB,KAAK00B,QAAQ,EAAG,GAAI,WAChBnkB,EAAKgX,SAAU,YAInBk/B,GAAgBplC,IAAmBrc,GACnCzD,KAAgBc,KAAK,CACjBC,QAAS,YACT6H,QAASkX,gKAiBK0D,GAEtB,IAAK,IAAI7d,EAAI6d,EAASpe,OAAS,EAAGO,GAAK,EAAGA,IAAK,CAC3C,IAAI2D,EAAUka,EAAS7d,GACvB,GAAI2D,GAAWA,EAAQmB,QACnB,OAAQnB,EAAQmB,QAAQ,UACpB,IAAK,eAAgB,IAAA+6C,EACD/mD,KAAKgnD,gBAAgBn8C,GADpBo8C,EAAAnnD,OAAAwJ,EAAA,EAAAxJ,CAAAinD,EAAA,GACZnmD,EADYqmD,EAAA,GAEjB,GAFiBA,EAAA,GAGHC,aAAar8C,EAAQmB,QAAQC,MAAMC,OACpCwyB,MACLj1B,KAAU09C,oBAAoBvmD,EAAIiK,GAG1C,MAEJ,IAAK,iBAAkB,IAAAu8C,EACHpnD,KAAKqnD,kBAAkBx8C,GADpBy8C,EAAAxnD,OAAAwJ,EAAA,EAAAxJ,CAAAsnD,EAAA,GACdxmD,EADc0mD,EAAA,GAEnB,GAFmBA,EAAA,GAGLz8C,EAAQmB,QAAQjK,QAAQA,QACzB28B,MACLj1B,KAAU09C,oBAAoBvmD,EAAIiK,qCAgLtDy7C,EAAoBxD,EAAS7jB,GACjCj/B,KAAK0C,SAAS,CAAE4jD,qBAAoBxD,WAAW7jB,0CAGpCsoB,EAAc18C,EAASo0B,GAC7Bp0B,EAKL7K,KAAK0C,SACD,CACIogD,QAAS9iD,KAAKiC,MAAM6gD,QAAQ3zC,OAAO,SAAApO,GAAC,OAAIA,EAAEH,KAAO2mD,IAAc5iD,OAAO,CAACkG,KAE3Eo0B,GARIA,GAAUA,uCAYX6jB,EAAS7jB,GACO,IAAnB6jB,EAAQn8C,OAKZ3G,KAAK0C,SAAS,CAAEogD,QAASA,EAAQn+C,OAAO3E,KAAKiC,MAAM6gD,UAAY7jB,GAJvDA,GAAUA,2CAOP6jB,EAASU,EAAUvkB,GACP,IAAnB6jB,EAAQn8C,OAKZ3G,KAAK0C,SAAL5C,OAAAkS,EAAA,EAAAlS,CAAA,CAAgBgjD,QAAS9iD,KAAKiC,MAAM6gD,QAAQn+C,OAAOm+C,IAAaU,GAAYvkB,GAJpEA,GAAUA,0CAORpxB,EAAaoxB,GAAU,IACzB6jB,EAAY9iD,KAAKiC,MAAjB6gD,QACR,GAAuB,IAAnBA,EAAQn8C,OAAZ,CAKA,IAAMuC,EAAM,IAAIlC,IAAI6G,EAAY3E,IAAI,SAAAnI,GAAC,MAAI,CAACA,EAAGA,MAC7Cf,KAAK0C,SAAS,CAAEogD,QAASA,EAAQ3zC,OAAO,SAAApO,GAAC,OAAKmI,EAAI/B,IAAIpG,EAAEH,OAAQq+B,QALxDA,GAAUA,qCAkTb,IAAA1gB,EAAAve,KAAAs6C,EACuBt6C,KAAKyC,MAAzBsC,EADHu1C,EACGv1C,QAASC,EADZs1C,EACYt1C,OADZm7B,EAEqFngC,KAAKiC,MAAvF6gD,EAFH3iB,EAEG2iB,QAASwD,EAFZnmB,EAEYmmB,mBAAoBpiB,EAFhC/D,EAEgC+D,aAAc0e,EAF9CziB,EAE8CyiB,gBAAiBa,EAF/DtjB,EAE+DsjB,kBAI9DrqC,EAAY9C,YAActR,GA4DhC,OAzDAhF,KAAK4lD,SAASztB,QACdn4B,KAAK+kB,SAAWmf,EACV,KACA4e,EAAQ55C,IAAI,SAACnI,EAAGmG,GACZ,IAAMsgD,EAActgD,EAAI,EAAI47C,EAAQ57C,EAAI,GAAK,KACvCub,EAAO,IAAIuC,KAAc,IAATjkB,EAAE0hB,MAClBglC,EAAWD,EAAc,IAAIxiC,KAAwB,IAAnBwiC,EAAY/kC,MAAeA,EAC/DkwB,GAAW,EAEL,IAANzrC,GACAub,EAAKilC,gBAAkBD,EAASC,eAChCjlC,EAAKklC,aAAeF,EAASE,YAC7BllC,EAAKiwB,YAAc+U,EAAS/U,YAE5BC,GAAW,GAGf,IAAIiV,EAAI,KACR,GAAIC,aAAiB9mD,GACjB6mD,EACItjD,EAAArB,EAAAC,cAAC4kD,GAAD,CACI32C,IAAK,SAAA+T,GAAE,OAAI3G,EAAKqnC,SAAS33C,IAAI/G,EAAGge,IAChClgB,OAAQjE,EAAEoJ,QACViY,UAAWrhB,EAAEH,GACb85C,oBAAqB4L,IAAuBvlD,EAAEH,SAGnD,CACH,IAAM+5C,EAEFvhC,GACM,IAANlS,GACCsgD,IACIK,aAAiBL,IACdzmD,EAAEyhB,iBAAmBglC,EAAYhlC,gBACjCzhB,EAAE0hB,KAAO+kC,EAAY/kC,KAAOslC,KAExCH,EACItjD,EAAArB,EAAAC,cAAC8kD,GAAD,CACI72C,IAAK,SAAA+T,GAAE,OAAI3G,EAAKqnC,SAAS33C,IAAI/G,EAAGge,IAChClgB,OAAQjE,EAAEoJ,QACViY,UAAWrhB,EAAEH,GACb02C,aAAcv2C,EAAE49B,cAChBgc,UAAWA,EACXD,oBAAqB4L,IAAuBvlD,EAAEH,KAK1D,OACI0D,EAAArB,EAAAC,cAAA,OAAKkB,IAAG,WAAAO,OAAa5D,EAAEoJ,QAAf,gBAAAxF,OAAqC5D,EAAEH,KAC1C+xC,GAAYruC,EAAArB,EAAAC,cAAC+kD,GAAD,CAASxlC,KAAM1hB,EAAE0hB,OAC7BmlC,KAMftjD,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAWN,EAAQoB,WAAY,gBAAiB,CACvD+hD,iCAAkCtF,IAEtC9N,YAAa90C,KAAKgmD,qBAClB1hD,EAAArB,EAAAC,cAAA,OAAKiO,IAAKnR,KAAKgnB,QAAS7jB,UAAU,wBAAwBolB,SAAUvoB,KAAK+mB,cACrEziB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,sBACfmB,EAAArB,EAAAC,cAAA,OAAKiO,IAAKnR,KAAKgkD,SAAU7gD,UAAU,uBAC9BnD,KAAK+kB,WAGdzgB,EAAArB,EAAAC,cAACilD,GAAD,MACC1E,GAAqBn/C,EAAArB,EAAAC,cAACklD,GAAD,CAAkB7iD,QAASvF,KAAKkmD,wBACtD5hD,EAAArB,EAAAC,cAACmlD,GAAD,CAAerjD,OAAQA,IACvBV,EAAArB,EAAAC,cAAColD,GAAD,MACAhkD,EAAArB,EAAAC,cAACqlD,GAAD,0DA7jCoB9lD,EAAOR,GACnC,OAAIQ,EAAMuC,SAAW/C,EAAMuT,YAAc/S,EAAM2f,YAAcngB,EAAMokD,cACxD,CACH7wC,WAAY/S,EAAMuC,OAClBqhD,cAAe5jD,EAAM2f,UACrB8hB,cAAc,EACd0e,iBAAiB,EACjB0D,mBAAoB,EACpB7C,kBACIhhD,EAAMuC,SAAW/C,EAAMuT,aAAevT,EAAMwhD,mBAAqBxhD,EAAMigD,aAAav7C,OAAS,GACjGu7C,aAAcz/C,EAAMuC,SAAW/C,EAAMuT,WAAa,GAAKvT,EAAMigD,cAI9D,0CAmbSn9B,GACXA,GACmB,IAApBA,EAASpe,QACRoe,EAAS,GAAG5a,SAEjB5I,KAAgBc,KAAK,CACjBC,QAAS,eACT6H,QAAS4a,EAAS,GAAG5a,QACrB0D,YAAakX,EAAS7b,IAAI,SAAAnI,GAAC,OAAIA,EAAEH,cArelB2C,IAAMC,WA+lClBoC,OArmCA,SAAAC,GAAK,MAAK,CACrBM,WAAY,CACRA,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQsd,KAAK,KAAO,iBAmmC5C,CAAEhd,WAAW,GAAhCT,CAAwCo8C,8CC5mCjDwG,8MACFvmD,MAAQ,CACJ0pB,SAAU,QAGdwF,gBAAkB,SAAA1iB,GACd5O,EAAKg6B,WAAWprB,EAAMmd,kBAG1BiO,WAAa,SAAAlO,GACT9rB,EAAK6C,SAAS,CAAEipB,gBAGpBphB,YAAc,WACV1K,EAAK6C,SAAS,CAAEipB,SAAU,UAG9BjhB,eAAiB,WACb7K,EAAK0K,cADc,IAGXI,EAAM9K,EAAK4C,MAAXkI,EAEFC,EAAO/K,EAAK4oD,gBAAgB7oD,KAAaS,YAC/C,GAAKuK,EAAL,CAEAE,IAAKF,GAEL,IAAMxG,EAAG,GAAAO,OAAMiG,EAAN,uBACHC,EAAUF,EAAE,cAGlB9K,EAAKkL,sBAAsB3G,EAAKyG,EAFjB,UAKnB49C,gBAAkB,SAAApoD,GACd,IAAKA,EAAY,MAAO,GADI,IAGpB0pB,EAAS1pB,EAAT0pB,KACR,IAAKA,EAAM,MAAO,GAElB,IAAMlP,EAAoBhU,IAAYC,IAAI,YAE1C,OAAQ+T,EAAoBA,EAAkBxW,MAAQ,yBAA2B,eAAiB0lB,KAGtGhf,sBAAwB,SAAC3G,EAAKyG,EAASG,GACnC,GAAK5G,EAAL,CAD8C,IAAAU,EAGNjF,EAAK4C,MAArCyI,EAHsCpG,EAGtCoG,gBAAiBnG,EAHqBD,EAGrBC,QAHqBD,EAGZ6F,EAClC,GAAKO,EAAL,CAIIC,IAAiBC,mBAAmBhH,EAAKiH,IAAqC,IAAsBL,IAEpGE,EAAgBL,EAAS,CACrBS,iBAAkBD,IAClBL,OAAQ,CACJ1G,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACImB,IAAI,QACJoH,aAAW,QACXC,MAAM,UACNtI,UAAW4B,EAAQ2G,MACnBnG,QAAS,kBAAM4F,IAAiBQ,sBAAsBvH,KACtDE,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,eAOpBylD,YAAc,WACV7oD,EAAK0K,cAEL,IAAMK,EAAO/K,EAAK4oD,gBAAgB7oD,KAAaS,YAC1CuK,IAELrJ,KAAgBiJ,aAAa,CACzBlI,QAAS,yBACTjC,WAAY,OAGhBkB,KAAgBiJ,aAAa,CACzBlI,QAAS,sBACTmI,KAAM,CAAEG,oFAIP,IAAAK,EAC6BjL,KAAKyC,MAA/BsC,EADHkG,EACGlG,QAAS4F,EADZM,EACYN,EAAGxH,EADf8H,EACe9H,UACZwoB,EAAa3rB,KAAKiC,MAAlB0pB,SAER,OACIrnB,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQ4sB,WAAa,IAAMxuB,EACtCqI,aAAW,QACXqF,KAAM2S,QAAQmI,GACdpmB,QAASvF,KAAKmxB,iBACd7sB,EAAArB,EAAAC,cAACqhC,GAAAthC,EAAD,OAEJqB,EAAArB,EAAAC,cAAC0pB,GAAA3pB,EAAD,CACIrC,GAAG,cACH+qB,SAAUA,EACV9a,KAAM2S,QAAQmI,GACdkB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBC,aAAc,CACV5B,SAAU,SACVC,WAAY,SAEhBwG,gBAAiB,CACbzG,SAAU,MACVC,WAAY,SAEhBva,QAAS9Q,KAAKuK,aACdjG,EAAArB,EAAAC,cAAC+pB,GAAAhqB,EAAD,CAAUsC,QAASvF,KAAK0K,gBACpBpG,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACylD,GAAA1lD,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CAAc+C,QAAS2E,EAAE,eAE7BrG,EAAArB,EAAAC,cAAC+pB,GAAAhqB,EAAD,CAAUsC,QAASvF,KAAK0oD,aACpBpkD,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAAC0lD,GAAA3lD,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CAAc+C,QAAS2E,EAAE,6BA/HbpH,IAAMC,WA+I3BsO,GANCC,YACZnM,IAhJW,SAAAC,GAAK,MAAK,CACrB6F,MAAO,CACHuG,QAASpM,EAAMqM,QAAQC,KAAO,KA8If,CAAE9L,WAAW,IAChCmM,cACAC,eAGWX,CAAQ02C,ICtHjBK,uBACF,SAAAA,EAAYpmD,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA6oD,IACfhpD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA+oD,GAAA1oD,KAAAH,KAAMyC,KAwBVqmD,iCAAmC,SAAAtoD,GAAU,IACjCH,EAAeT,KAAfS,WAERR,EAAK6C,SAAS,CAAErC,gBA5BDR,EA+BnBkpD,6BAA+B,SAAAvoD,GAAU,IAC7BH,EAAeG,EAAfH,WAIR,GAFAR,EAAK6C,SAAS,CAAErC,eAEZA,EAAY,CACZ,IAAMV,EAAQ8J,KAAUC,WACxBs/C,YAAsBrpD,EAAOU,KAtClBR,EA0CnB0K,YAAc,WACVhJ,KAAgBiJ,aAAa,CACzBlI,QAAS,yBACTjC,WAAY,QA7CDR,EAiDnB8tB,WAAa,WAAM,IACPttB,EAAeR,EAAKoC,MAApB5B,WACR,GAAKA,EAAL,CAFe,IAIPQ,EAAiBR,EAAjBQ,aAERU,KAAgBc,KAAK,CACjBC,QAAS,mBACT2mD,OAAQ5oD,EAAWO,GACnBC,cAAeA,IAGnBhB,EAAK0K,gBA7DU1K,EAgEnBkgD,mBAAqB,SAAAC,GAAa,IAGxBj+C,EAFiBlC,EAAKoC,MAApB5B,WACAgB,SACiBuT,KAAK,SAAA7T,GAAC,OAAIA,EAAEgB,QAAQnB,KAAOo/C,IACpD,GAAKj+C,EAAL,CAEA,IAAMpC,EAAQ8J,KAAUC,WACxBu2C,YAAmBtgD,EAAOoC,EAAS,MAEXlC,EAAKygD,oBAAoBN,GACjCrzC,QAAQ,SAAA5L,GACpBk/C,YAAmBtgD,EAAOoB,EAAG,UA3ElBlB,EA+EnBygD,oBAAsB,SAAAN,GAAa,IACvB3/C,EAAeR,EAAKoC,MAApB5B,WACR,IAAKA,EAAY,MAAO,GAFO,IAIvBgB,EAAahB,EAAbgB,SACR,IAAKA,EAAU,MAAO,GAEtB,IAAMk/C,EAAU,GACVppB,EAAQ91B,EAAS+1B,UAAU,SAAAr2B,GAAC,OAAIA,EAAEgB,QAAQnB,KAAOo/C,IACvD,IAAe,IAAX7oB,EAAc,MAAO,GAEzB,IACMqpB,EAAM1S,KAAKC,MAAM5W,EADE,GAEnBspB,EAAStpB,EAFU,EAInBupB,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQ53C,KAXS,EAWe+3C,EAAUE,GAE9CL,EAAQ53C,KAba,EAaW+3C,EAAUD,GACtCI,EAdiB,GAejBN,EAAQ53C,KAfS,EAee+3C,EAAUG,IAI9CD,GAAc,GACdL,EAAQ53C,KApBa,EAoBW63C,EAAMI,GAEtCC,EAtBqB,GAuBrBN,EAAQ53C,KAvBa,EAuBW63C,EAAMK,GAGtCF,EAAU7S,KAAKgT,KAAKz/C,EAASsF,OA1BR,KA2BjBi6C,GAAc,GACdL,EAAQ53C,KA5BS,EA4Beg4C,EAAUC,GAE9CL,EAAQ53C,KA9Ba,EA8BWg4C,EAAUF,GACtCI,EA/BiB,GAgCjBN,EAAQ53C,KAhCS,EAgCeg4C,EAAUE,IAI3CN,EAAQr3C,IAAI,SAAAhC,GAAC,OAAI7F,EAAS6F,MA9HlBrH,EAiInBq6C,gBAAkB,SAAAzrC,GACd,IAAMuxC,EAAYe,OAAOtyC,EAAMoa,OAAO+K,QAAQosB,WACzCA,GAEAngD,EAAK+5C,YAEV/5C,EAAK6C,SAAS,CAAEs9C,cAChBngD,EAAKkgD,mBAAmBC,KAxITngD,EA2InBo6C,gBAAkB,SAAAxrC,GACd,IAAMuxC,EAAYe,OAAOtyC,EAAMoa,OAAO+K,QAAQosB,WAC9C,GAAKA,EAUL,OARAngD,EAAK6C,SAAS,CAAEs9C,cAChBngD,EAAKkgD,mBAAmBC,GAExBngD,EAAK+5C,WAAY,EACjBjqC,SAASsxC,iBAAiB,UAAWphD,EAAKqhD,eAE1CzyC,EAAME,iBACNF,EAAMiY,mBACC,GAvJQ7mB,EA0JnBqhD,cAAgB,WACZrhD,EAAK6C,SAAS,CAAEs9C,UAAW,IAC3BngD,EAAK+5C,WAAY,EACjBjqC,SAASwxC,oBAAoB,UAAWthD,EAAKqhD,gBA1J7CrhD,EAAKoC,MAAQ,CACT5B,WAAYT,KAAaS,WACzB2/C,UAAW,GALAngD,qFASGsT,EAAWC,EAAWqd,GAAa,IAAA5hB,EACnB7O,KAAKiC,MAA/B5B,EAD6CwO,EAC7CxO,WAAY2/C,EADiCnxC,EACjCmxC,UAEpB,OAAO3/C,IAAe+S,EAAU/S,YAAc2/C,IAAc5sC,EAAU4sC,sDAItEpgD,KAAayT,GAAG,yBAA0BrT,KAAK+oD,8BAC/CnpD,KAAayT,GAAG,6BAA8BrT,KAAK8oD,iFAInDlpD,KAAa8B,eAAe,yBAA0B1B,KAAK+oD,8BAC3DnpD,KAAa8B,eAAe,6BAA8B1B,KAAK8oD,mEA0I1D,IAAAhkD,EACkB9E,KAAKyC,MAApBkI,EADH7F,EACG6F,EAAG5F,EADND,EACMC,QADN0L,EAE6BzQ,KAAKiC,MAA/B5B,EAFHoQ,EAEGpQ,WAAY2/C,EAFfvvC,EAEeuvC,UACpB,IAAK3/C,EAAY,OAAO,KAHnB,IAKG05B,EAAkC15B,EAAlC05B,MAAO14B,EAA2BhB,EAA3BgB,SAAUR,EAAiBR,EAAjBQ,aAEnBgc,EAAQxb,EAAS6H,IAAI,SAAAnI,GAAC,OACxBuD,EAAArB,EAAAC,cAAA,OACIC,UAAU,0BACViB,IAAKrD,EAAEgB,QAAQnB,GACfygD,kBAAiBtgD,EAAEgB,QAAQnB,GAC3B0c,MAAO,CAAEhQ,MAAO,GAAIC,OAAQ,KAC5BjJ,EAAArB,EAAAC,cAACk1C,GAAA,EAAD,CACIh0C,IAAKrD,EAAEgB,QAAQnB,GACfuC,UAAU,kCACVm+C,SAAO,EACPv/C,QAAShB,EACTsC,YAAak+C,IACbC,MAAM,IAEVl9C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iCAAiCpC,EAAEmB,UAIpDu/C,EAAepgD,EAAS+1B,UAAU,SAAAr2B,GAAC,OAAIA,EAAEgB,QAAQnB,KAAOo/C,IACxDj+C,GAA4B,IAAlB0/C,EAAsBpgD,EAASogD,GAAgB,KAE/D,OACIn9C,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIE,UAAW4B,EAAQ2rB,WACnB7f,MAAI,EACJ2Y,mBAAoB,EACpB1Y,QAAS9Q,KAAKuK,YACdwG,kBAAgB,gCAChBhM,QAAS,CAAEqB,MAAOrB,EAAQ8rB,YAC1BvsB,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CACIrC,GAAG,gCACHuC,UAAWkC,IAAWN,EAAQmkD,gBAATppD,OAAAyT,GAAA,EAAAzT,CAAA,GAChBiF,EAAQokD,qBAAuB3lC,QAAQzhB,KAE5C42B,mBAAiB,GACjBr0B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,KAAK7U,UAAW4B,EAAQ6zB,eAAgB3gB,QAAM,GAC7D8hB,GAELz1B,EAAArB,EAAAC,cAACkmD,GAAD,CAAuBjmD,UAAW4B,EAAQskD,mBAE9C/kD,EAAArB,EAAAC,cAACumB,GAAAxmB,EAAD,CACI8B,QAAS,CAAE4c,KAAM5c,EAAQuzB,aACzBmjB,YAAaz7C,KAAKk6C,gBAClBwB,WAAY17C,KAAKm6C,eACjBzxB,YAAa1oB,KAAKi6C,iBACjBp9B,GAELvY,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,CAAeE,UAAWkC,IAAWvF,OAAAyT,GAAA,EAAAzT,CAAA,GAAGiF,EAAQokD,qBAAuB3lC,QAAQzhB,MAC3EuC,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUlG,QAASvF,KAAKuK,aACjCI,EAAE,WAEPrG,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUlG,QAASvF,KAAK2tB,YAClBhjB,EAAf9J,EAAiB,iBAAsB,SAG/C2iB,QAAQzhB,IAAYuC,EAAArB,EAAAC,cAAClB,GAAA,EAAD,CAAgBD,QAASA,YA/N/BwB,IAAMC,YA4OtBsO,GALCC,YACZnM,IAvQW,SAAAC,GAAK,MAAK,CACrByyB,YAAa,CACTjmB,QAAS,OACTi3C,SAAU,OACVh6B,UAAW,IACXrd,QAAS,cACT9L,WAAY,eAEhB0qB,UAAW,CACPvjB,MAAO,KAEX47C,gBAAiB,CACb72C,QAAS,OACTk3C,cAAe,MACfv4B,WAAY,UAEhBN,WAAY,CACRjlB,MAAO5F,EAAME,QAAQuG,KAAKtG,SAE9BqjD,gBAAiB,CACb3yC,OAAQ,uBAEZkiB,eAAgB,CACZL,SAAU,EACVixB,WAAY,GAEhBL,qBAAsB,CAClBM,cAAe,WA6OnBj3C,cAGWV,CAAQ+2C,IC1KRa,uBA1GX,SAAAA,EAAYjnD,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA0pD,IACf7pD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA4pD,GAAAvpD,KAAAH,KAAMyC,KAiCVknD,8BAAgC,SAAAnpD,GAC5BX,EAAKuO,eAnCUvO,EAsCnB2f,qBAAuB,SAAAhf,GACnBX,EAAK6C,SAAS,CACVsC,OAAQxE,EAAOif,WACf2C,UAAW5hB,EAAO0hB,iBAzCPriB,EA6CnBylD,eAAiB,WACbzlD,EAAK+pD,aAAatE,kBA9CHzlD,EAiDnBgmD,cAAgB,WACZhmD,EAAK+pD,aAAa/D,iBAlDHhmD,EAqDnB0lD,gBAAkB,WACd1lD,EAAK+pD,aAAarE,mBAnDlB1lD,EAAKoC,MAAQ,CACT+C,OAAQmG,IAAiBwN,YACzByJ,UAAWjX,IAAiBgX,eAC5B0nC,cAAe,GANJhqD,qFAUGsT,EAAWC,GAC7B,OAAIA,EAAUpO,SAAWhF,KAAKiC,MAAM+C,SAGhCoO,EAAUgP,YAAcpiB,KAAKiC,MAAMmgB,WAGnChP,EAAUy2C,gBAAkB7pD,KAAKiC,MAAMijC,2DAQ3C/5B,IAAiBkI,GAAG,oCAAqCrT,KAAK2pD,+BAC9Dx+C,IAAiBkI,GAAG,qBAAsBrT,KAAKwf,qEAI/CrU,IAAiBzJ,eAAe,oCAAqC1B,KAAK2pD,+BAC1Ex+C,IAAiBzJ,eAAe,qBAAsB1B,KAAKwf,uDA0BtD,IAAAjP,EAAAvQ,KAAA6O,EAiCwC7O,KAAKiC,MAA1C+C,EAjCH6J,EAiCG7J,OAAQod,EAjCXvT,EAiCWuT,UACRsN,GAlCH7gB,EAiCsBg7C,cACM1+C,IAAzBukB,sBAER,OACIprB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,iBAAkB,CAAEykD,8BAA+Bp6B,KAC1EprB,EAAArB,EAAAC,cAAC6mD,GAAD,MACAzlD,EAAArB,EAAAC,cAAC8mD,GAAD,CAAQhlD,OAAQA,IAChBV,EAAArB,EAAAC,cAAC+mD,GAAD,CAAc18B,SAAU,SAAApc,GAAG,OAAKZ,EAAKq5C,aAAez4C,GAAMnM,OAAQA,EAAQod,UAAWA,IACrF9d,EAAArB,EAAAC,cAACgnD,GAAD,CAAQllD,OAAQA,IAChBV,EAAArB,EAAAC,cAACinD,GAAD,MACA7lD,EAAArB,EAAAC,cAACknD,GAAD,cArGY5mD,iICsCb6mD,uBAxCX,SAAAA,EAAY5nD,GAAQ,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAqqD,GAAAvqD,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAuqD,GAAAlqD,KAAAH,KACVyC,0EAGD,IAAAqC,EACyB9E,KAAKyC,MAA3BuC,EADHF,EACGE,OAAQod,EADXtd,EACWsd,UAEVvX,EAAUiB,KAAahF,IAAI9B,EAAQod,GACzC,IAAKvX,EAAS,OAAO,KAJhB,IAMG4X,EAAS5X,EAAT4X,KAEF7P,EAAS03C,aAAgBz/C,GACzB0/C,EAAW/X,aAAY/vB,GAEvB+nC,EAAc53C,EAAStO,EAAArB,EAAAC,cAAC8Q,GAAA,EAAD,CAAUpB,OAAQA,IAAatO,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,IAE9E,OACIV,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACVqnD,EACDlmD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oBACXmB,EAAArB,EAAAC,cAAC44C,GAAA,EAAD,CAAe92C,OAAQA,EAAQ4N,OAAQA,KAE3CtO,EAAArB,EAAAC,cAAA,OAAKC,UAAU,yBACXmB,EAAArB,EAAAC,cAAA,YAAOqnD,cA3BFhnD,IAAMC,qBCHjCinD,uBACF,SAAAA,EAAYhoD,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAyqD,IACf5qD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA2qD,GAAAtqD,KAAAH,KAAMyC,KAGVoR,YAAc,SAAApF,GACVA,EAAMiY,mBALS7mB,wEAQV,IACGyM,EAAStM,KAAKyC,MAAd6J,KAER,OACIhI,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBAAgBoC,QAASvF,KAAK6T,aACzCvP,EAAArB,EAAAC,cAAA,OAAKC,UAAU,sBAAsBmJ,WAd1B/I,IAAMC,YAwBjCinD,GAAav0C,aAAe,GAEbu0C,UClBTC,WAASnnD,IAAM23B,KAAK,kBAAMlyB,QAAAC,IAAA,CAAAkyB,EAAA/xB,EAAA,GAAA+xB,EAAA/xB,EAAA,KAAA7G,KAAA44B,EAAAC,KAAA,cAoXjBuvB,eAjXX,SAAAA,EAAYloD,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA2qD,IACf9qD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA6qD,GAAAxqD,KAAAH,KAAMyC,KA4FVmoD,2BAA6B,SAAApqD,GAAU,IAAAsE,EACLjF,EAAK4C,MAA3BuC,EAD2BF,EAC3BE,OAAQod,EADmBtd,EACnBsd,UAEZpd,IAAWxE,EAAOwE,QAAUod,IAAc5hB,EAAO4hB,WACjDviB,EAAKgrD,uBAjGMhrD,EAqGnBgrD,oBArGmB/qD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAqGG,SAAAC,IAAA,IAAAsD,EAAAjG,EAAAod,EAAA/U,EAAAy9C,EAAAC,EAAAxtB,EAAAytB,EAAA,OAAAvjD,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAA2C,EACkBpL,EAAK4C,MAAjCuC,EADUiG,EACVjG,OAAQod,EADEnX,EACFmX,UAAW/U,EADTpC,EACSoC,KAEtB49C,aAAgBjmD,EAAQod,GAHX,CAAAha,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBAAA8gD,EAOYI,YAAalmD,EAAQod,EAAW/U,GAP5C09C,EAAAjrD,OAAAwJ,EAAA,EAAAxJ,CAAAgrD,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAOIxtB,EAPJwtB,EAAA,GAAA3iD,EAAAE,KAAA,EAQUzI,EAAKsrD,iBAAiB5tB,GARhC,OAQZytB,EARY5iD,EAAAiB,KAUlBxJ,EAAK6C,SAAS,CAAEsoD,kBAVE,wBAAA5iD,EAAAwB,SAAAjC,MArGH9H,EAkHnBsrD,iBAAmB,SAAA5tB,GACf,OAAO,IAAIv0B,QAAQ,SAAAoiD,GACf,GAAK7tB,EAAL,CAKA,IAAMmB,EAAOj1B,KAAU4hD,QAAQ9tB,EAAK38B,IACpC,GAAK89B,EAAL,CAKA,IAAM4sB,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAAA/8C,GAAK,OAAI28C,EAAQ9rB,KAAKmsB,MAAMh9C,EAAMoa,OAAOrmB,UAC7D8oD,EAAWI,QAAU,kBAAMN,EAAQ,OACnCE,EAAWK,QAAU,kBAAMP,EAAQ,OACnCE,EAAWM,WAAWltB,QARlB0sB,EAAQ,WANRA,EAAQ,SArHDvrD,EAuInBywC,wBAA0B,SAAA9vC,GAAU,IAAA4L,EACIvM,EAAK4C,MAAjCuC,EADwBoH,EACxBpH,OAAQod,EADgBhW,EAChBgW,UAAW/U,EADKjB,EACLiB,KAE3B,GAAIrI,IAAWxE,EAAOwE,QAAUod,IAAc5hB,EAAO4hB,UAAW,KAAAypC,EAC9BX,YAAalmD,EAAQod,EAAW/U,GADFy+C,EAAAhsD,OAAAwJ,EAAA,EAAAxJ,CAAA+rD,EAAA,GACrDv+C,EADqDw+C,EAAA,GAC9Cv+C,EAD8Cu+C,EAAA,GACtCvuB,EADsCuuB,EAAA,GAE5DjsD,EAAK6C,SAAS,CACV4K,QACAC,SACAgwB,WA/IO19B,EAoJnBksD,iCAAmC,SAAAvrD,GAAU,IAAAgQ,EACX3Q,EAAK4C,MAA3BuC,EADiCwL,EACjCxL,OAAQod,EADyB5R,EACzB4R,UAEhB,GAAIpd,IAAWxE,EAAOwE,QAAUod,IAAc5hB,EAAO4hB,UAAW,KAAA4pC,EAC9BC,YAAoBjnD,EAAQod,GADE8pC,EAAApsD,OAAAwJ,EAAA,EAAAxJ,CAAAksD,EAAA,GACrD1+C,EADqD4+C,EAAA,GAC9C3+C,EAD8C2+C,EAAA,GACtC3uB,EADsC2uB,EAAA,GAE5DrsD,EAAK6C,SAAS,CACVg5B,eAAgBpuB,EAChBquB,gBAAiBpuB,EACjBC,UAAW+vB,MA5JJ19B,EAiKnB25C,uBAAyB,SAAAh5C,GAAU,IAAAkb,EACK7b,EAAK4C,MAAjCuC,EADuB0W,EACvB1W,OAAQod,EADe1G,EACf0G,UAAW/U,EADIqO,EACJrO,KACnBlD,EAAwB3J,EAAxB2J,QAASC,EAAe5J,EAAf4J,WAEjB,GAAIpF,IAAWmF,GAAWiY,IAAchY,EAAY,KAAA+hD,EAClBjB,YAAalmD,EAAQod,EAAW/U,GADd++C,EAAAtsD,OAAAwJ,EAAA,EAAAxJ,CAAAqsD,EAAA,GACzC7+C,EADyC8+C,EAAA,GAClC7+C,EADkC6+C,EAAA,GAC1B7uB,EAD0B6uB,EAAA,GAE1CvhD,EAAUiB,KAAahF,IAAI9B,EAAQod,GACnC9V,EAAOinB,aAAQ1oB,GACrBhL,EAAK6C,SAAS,CACV4K,MAAOA,EACPC,OAAQA,EACRgwB,KAAMA,EACNjxB,KAAMA,MA7KCzM,EAkLnBwsD,mBAAqB,SAAA59C,GACbA,GAAOA,EAAMiY,mBAnLF7mB,EAsLnBysD,YAAc,SAAAC,GACV1sD,EAAK6C,SAAS,CACV6pD,WArLJ1sD,EAAK+vC,SAAWrsC,IAAM+M,YACtBzQ,EAAK2sD,UAAYjpD,IAAM+M,YAJR,IAAA6L,EAMqBtc,EAAK4C,MAAjCuC,EANOmX,EAMPnX,OAAQod,EANDjG,EAMCiG,UAAW/U,EANZ8O,EAMY9O,KANZo/C,EAQavB,YAAalmD,EAAQod,EAAW/U,GAR7Cq/C,EAAA5sD,OAAAwJ,EAAA,EAAAxJ,CAAA2sD,EAAA,GAQVn/C,EARUo/C,EAAA,GAQHn/C,EARGm/C,EAAA,GAQKnvB,EARLmvB,EAAA,GASfnvB,EAAO9zB,KAAU3C,IAAIy2B,EAAK38B,KAAO28B,EATlB,IAAAovB,EAWoCV,YAAoBjnD,EAAQod,GAXhEwqC,EAAA9sD,OAAAwJ,EAAA,EAAAxJ,CAAA6sD,EAAA,GAWVjxB,EAXUkxB,EAAA,GAWMjxB,EAXNixB,EAAA,GAWuBp/C,EAXvBo/C,EAAA,GAYfp/C,EAAYA,EAAY/D,KAAU3C,IAAI0G,EAAU5M,KAAO4M,EAAY,KAEnE,IAAM3C,EAAUiB,KAAahF,IAAI9B,EAAQod,GACnC9V,EAAOinB,aAAQ1oB,GAfN,OAiBfhL,EAAKoC,MAAQ,CACTsqD,MAAO,EACP/2C,WAAYxQ,EACZqhD,cAAejkC,EACfyqC,WAAW,EACXv/C,MAAOA,EACPC,OAAQA,EACRgwB,KAAMA,EACNjxB,KAAMA,EACNovB,eAAgBA,EAChBC,gBAAiBA,EACjBnuB,UAAWA,GAGf3N,EAAKgrD,sBA/BUhrD,mFAkEf4J,KAAU4J,GAAG,2BAA4BrT,KAAK4qD,4BAC9CnhD,KAAU4J,GAAG,wBAAyBrT,KAAKswC,yBAC3C7mC,KAAU4J,GAAG,wBAAyBrT,KAAKswC,yBAC3C7mC,KAAU4J,GAAG,4BAA6BrT,KAAKswC,yBAC/C7mC,KAAU4J,GAAG,iCAAkCrT,KAAK+rD,kCACpDtiD,KAAU4J,GAAG,qCAAsCrT,KAAK+rD,kCACxDjgD,KAAauH,GAAG,uBAAwBrT,KAAKw5C,uEAI7C/vC,KAAU/H,eAAe,2BAA4B1B,KAAK4qD,4BAC1DnhD,KAAU/H,eAAe,wBAAyB1B,KAAKswC,yBACvD7mC,KAAU/H,eAAe,wBAAyB1B,KAAKswC,yBACvD7mC,KAAU/H,eAAe,4BAA6B1B,KAAKswC,yBAC3D7mC,KAAU/H,eAAe,iCAAkC1B,KAAK+rD,kCAChEtiD,KAAU/H,eAAe,qCAAsC1B,KAAK+rD,kCACpEjgD,KAAapK,eAAe,uBAAwB1B,KAAKw5C,mEAG1C32C,EAAWC,EAAWC,GAAU,IAAAqZ,EACjBpc,KAAKyC,MAA3BuC,EADuCoX,EACvCpX,OAAQod,EAD+BhG,EAC/BgG,UAEZvf,EAAUmC,SAAWA,GAAUnC,EAAUuf,YAAcA,GACvDpiB,KAAK6qD,uDAmGJ,IAAAt6C,EAAAvQ,KAAA+5C,EACyB/5C,KAAKyC,MAA3BuC,EADH+0C,EACG/0C,OAAQod,EADX23B,EACW33B,UADXvT,EAYD7O,KAAKiC,MATL+oD,EAHCn8C,EAGDm8C,cACA19C,EAJCuB,EAIDvB,MACAC,EALCsB,EAKDtB,OACAmuB,EANC7sB,EAMD6sB,eACAC,EAPC9sB,EAOD8sB,gBACA4B,EARC1uB,EAQD0uB,KACAjxB,EATCuC,EASDvC,KACAkB,EAVCqB,EAUDrB,UACAq/C,EAXCh+C,EAWDg+C,UAEJ,IAAKtvB,EAAM,OAAO,KAElB,IAAMmB,EAAOj1B,KAAU4hD,QAAQ9tB,EAAK38B,KAAO28B,EAAKmB,KAC1C1F,EAAMvvB,KAAUqjD,WAAWpuB,IAAS,GAEpCquB,EAAgBv/C,EAAY/D,KAAU4hD,QAAQ79C,EAAU5M,KAAO4M,EAAUkxB,KAAO,KAChFsuB,EAAevjD,KAAUqjD,WAAWC,GACpC7zB,EAAYC,aAAmB,CAAE7rB,MAAOouB,EAAgBnuB,OAAQouB,IAEhEsxB,EAAUC,aAAeloD,EAAQod,GACjC+qC,EAAcC,aAAmBpoD,EAAQod,GACzCirC,EAAWpC,aAAgBjmD,EAAQod,GACrCkrC,EAAahgD,EACbigD,EAAchgD,EAClB,GAAIugC,KAAKjC,IAAIyhB,EAAYC,GAAe,IAAK,CACzC,IAAMC,EAAQ,IAAM1f,KAAKjC,IAAIyhB,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAMzf,KAAKC,MAAMuf,EAAaE,IAC7B,IAAM1f,KAAKC,MAAMwf,EAAcC,GAG5E,IAAIxhD,EAAU,KACd,GAAIihD,EACAjhD,EACI1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAAA,SACIiO,IAAKnR,KAAK4vC,SACVzsC,UAAU,oCACV61B,IAAKA,EACLzzB,QAASvF,KAAKqsD,mBACdrZ,UAAQ,EACRD,UAAQ,EACRzlC,MAAOggD,EACP//C,OAAQggD,EACRra,OAAQ,WACJ3iC,EAAK7N,SAAS,CAAEmqD,WAAW,IAC3BtrD,KAAgBiJ,aAAa,CACzBlI,QAAS,iCAGjB2wC,UAAW,WACP,IAAMtD,EAASp/B,EAAKq/B,SAASnjC,QACzBkjC,IACAA,EAAOhG,OAASD,KAAYC,SAGpCwJ,QAAS,WACL5xC,KAAgBiJ,aAAa,CACzBlI,QAAS,kCAGjB+wC,QAAS,WACL9xC,KAAgBiJ,aAAa,CACzBlI,QAAS,kCAGjBmrD,eAAgB,WACZ,IAAM9d,EAASp/B,EAAKq/B,SAASnjC,QACzBkjC,GACApuC,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACTqnC,OAAQgG,EAAOhG,aAK7BkjB,KACI7zB,GAAOg0B,EACL1oD,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,uCAAwC,CAC1Dm0B,gBAAiBN,IAErBF,IAAKg0B,EACLtzB,IAAI,GACJpsB,MAAOggD,EACP//C,OAAQggD,IAGZjpD,EAAArB,EAAAC,cAAA,OACIC,UAAU,uCACVma,MAAO,CACHhQ,MAAOggD,EACP//C,OAAQggD,YAM7B,GAAIJ,EACPnhD,EACI1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAAA,SACIC,UAAU,oCACV61B,IAAKA,EACLzzB,QAASvF,KAAKqsD,mBACdqB,MAAI,EACJ3a,UAAQ,EACRzlC,MAAOggD,EACP//C,OAAQggD,EACRra,OAAQ,WACJ3iC,EAAK7N,SAAS,CAAEmqD,WAAW,QAGjCA,KACI7zB,GAAOg0B,EACL1oD,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,uCAAwC,CAC1Dm0B,gBAAiBN,IAErBF,IAAKg0B,EACLtzB,IAAI,GACJpsB,MAAOggD,EACP//C,OAAQggD,IAGZjpD,EAAArB,EAAAC,cAAA,OACIC,UAAU,uCACVma,MAAO,CACHhQ,MAAOggD,EACP//C,OAAQggD,YAM7B,GAAIF,EAAU,CACjB,IAAMM,EAAiB,CACnBD,MAAM,EACNE,UAAU,EAEV5C,cAAeA,EACf6C,iBAAkB,CACdC,oBAAqB,mBAGrBvB,EAAUvsD,KAAKiC,MAAfsqD,MAERvgD,EACI1H,EAAArB,EAAAC,cAACwnD,GAAD,CACIv5C,IAAKnR,KAAKwsD,UACVD,MAAOA,EACP92B,QAASk4B,EACTpgD,OAAO,OACPD,MAAO,IACPygD,WAAW,EACXC,UAAU,SAIlBhiD,EAAU1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,6BAA6B61B,IAAKA,EAAKU,IAAI,GAAGn0B,QAASvF,KAAKqsD,qBAGzF,OACI/nD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAACoB,EAAArB,EAAMo9B,SAAP,CAAgBC,SAAS,IAAIt0B,GAE7B1H,EAAArB,EAAAC,cAAC+qD,GAAA,EAAD,CAAc1wB,KAAMA,EAAMrc,OAAQ,IACjC5U,GAAQA,EAAK3F,OAAS,GAAKrC,EAAArB,EAAAC,cAACgrD,GAAD,CAAc5hD,KAAMA,wDAnU5B7J,EAAOR,GAAO,IAClC+C,EAA4BvC,EAA5BuC,OAAQod,EAAoB3f,EAApB2f,UAAW/U,EAAS5K,EAAT4K,KAE3B,GAAIrI,IAAW/C,EAAMuT,YAAc4M,IAAcngB,EAAMokD,cAAe,KAAA8H,EACtCjD,YAAalmD,EAAQod,EAAW/U,GADM+gD,EAAAtuD,OAAAwJ,EAAA,EAAAxJ,CAAAquD,EAAA,GAC7D7gD,EAD6D8gD,EAAA,GACtD7gD,EADsD6gD,EAAA,GAC9C7wB,EAD8C6wB,EAAA,GAElE7wB,EAAO9zB,KAAU3C,IAAIy2B,EAAK38B,KAAO28B,EAFiC,IAAA8wB,EAIfpC,YAAoBjnD,EAAQod,GAJbksC,EAAAxuD,OAAAwJ,EAAA,EAAAxJ,CAAAuuD,EAAA,GAI7D3yB,EAJ6D4yB,EAAA,GAI7C3yB,EAJ6C2yB,EAAA,GAI5B9gD,EAJ4B8gD,EAAA,GAKlE9gD,EAAY/D,KAAU3C,IAAI0G,EAAU5M,KAAO4M,EAE3C,IAAM3C,EAAUiB,KAAahF,IAAI9B,EAAQod,GAGzC,MAAO,CACHmqC,MAAO,EACP/2C,WAAYxQ,EACZqhD,cAAejkC,EACfyqC,WAAW,EACXv/C,MAAOA,EACPC,OAAQA,EACRgwB,KAAMA,EACNjxB,KAVSinB,aAAQ1oB,GAWjB6wB,eAAgBA,EAChBC,gBAAiBA,EACjBnuB,UAAWA,GAInB,OAAO,YA/DkBjK,IAAMC,WCqBxB+qD,sNA/BX16C,YAAc,SAAApF,GACVA,EAAMiY,kBADa,IAAA5hB,EAGWjF,EAAK4C,MAA3Bob,EAHW/Y,EAGX+Y,SAAUtY,EAHCT,EAGDS,QAEdsY,GAEJtY,EAAQkJ,4EAGH,IAAAxD,EACgCjL,KAAKyC,MAAlCob,EADH5S,EACG4S,SAAU2wC,EADbvjD,EACaujD,KAAMrK,EADnBl5C,EACmBk5C,SAElBhhD,EAAYkC,IACdwY,EAAW,+BAAiC,sBAC5C,CAAE2wC,KAAMA,IAGZ,OACIlqD,EAAArB,EAAAC,cAAA,OAAKC,UAAWA,EAAWoC,QAASvF,KAAK6T,aACpCswC,UArBe5gD,IAAMC,YCyBvBirD,4LAzBF,IAAA3pD,EACuB9E,KAAKyC,MAAzBs3B,EADHj1B,EACGi1B,MAAOllB,EADV/P,EACU+P,SAEf,OACIvQ,EAAArB,EAAAC,cAAA,OAAKC,UAAU,4BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCACXmB,EAAArB,EAAAC,cAAA,YAAO62B,GAEHvW,QAAQ3O,IACJvQ,EAAArB,EAAAC,cAAA,mBAEK2R,YAZGtR,IAAMC,YCCpCkrD,sNACF76C,YAAc,SAAApF,GACVA,EAAMiY,kBADa,IAAA5hB,EAGWjF,EAAK4C,MAA3B8C,EAHWT,EAGXS,QAHWT,EAGF+Y,UAIjBtY,EAAQkJ,4EAGH,IAAAxD,EACmDjL,KAAKyC,MAArD4V,EADHpN,EACGoN,QAAS8rC,EADZl5C,EACYk5C,SAAUp/C,EADtBkG,EACsBlG,QAAS8Y,EAD/B5S,EAC+B4S,SAAUkc,EADzC9uB,EACyC8uB,MAE9C,OACIz1B,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAWwY,EAAW,sCAAwC,6BAApD/d,OAAAyT,GAAA,EAAAzT,CAAA,GAChBiF,EAAQsT,QAAUA,IAEvB0hB,MAAOA,EACPx0B,QAASvF,KAAK6T,aACbswC,UArBqB5gD,IAAMC,YAkC7BoC,OAxCA,SAAAC,GAAK,MAAK,CACrBwS,QAAS,CACL5M,MAAO5F,EAAME,QAAQC,QAAQC,QAsCtBL,CAAmB8oD,yBCvC5BC,GAAY,CACd18C,QAAS,GACTxG,MAAO,SAGLmjD,eACF,SAAAA,EAAYnsD,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA4uD,IACf/uD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA8uD,GAAAzuD,KAAAH,KAAMyC,KA4CV6tC,wBAA0B,SAAA9vC,GAAU,IACxBu4B,EAAWl5B,EAAKoC,MAAhB82B,OAEJA,IAAWv4B,EAAOu4B,QAClBl5B,EAAK6C,SAAS,CACVmb,SAAU+wC,EAA0BC,aAAa91B,MAlD1Cl5B,EA2DnBgU,YAAc,SAAApF,GACVA,EAAMiY,kBADa,IAGXnhB,EAAY1F,EAAK4C,MAAjB8C,QACa1F,EAAKoC,MAAlB4b,UAGRtY,EAAQkJ,IAlEO,IAGPsqB,EAAWt2B,EAAXs2B,OAHO,OAKfl5B,EAAKoC,MAAQ,CACT6sD,gBAAiB/1B,EACjBA,OAAQA,EACRlb,SAAU+wC,EAA0BC,aAAa91B,IARtCl5B,mFA4Bf4J,KAAU4J,GAAG,4BAA6BrT,KAAKswC,yBAC/C7mC,KAAU4J,GAAG,uBAAwBrT,KAAKswC,yBAC1C7mC,KAAU4J,GAAG,2BAA4BrT,KAAKswC,yBAC9C7mC,KAAU4J,GAAG,wBAAyBrT,KAAKswC,yBAC3C7mC,KAAU4J,GAAG,uBAAwBrT,KAAKswC,yBAC1C7mC,KAAU4J,GAAG,wBAAyBrT,KAAKswC,wEAI3C7mC,KAAU/H,eAAe,4BAA6B1B,KAAKswC,yBAC3D7mC,KAAU/H,eAAe,uBAAwB1B,KAAKswC,yBACtD7mC,KAAU/H,eAAe,2BAA4B1B,KAAKswC,yBAC1D7mC,KAAU/H,eAAe,wBAAyB1B,KAAKswC,yBACvD7mC,KAAU/H,eAAe,uBAAwB1B,KAAKswC,yBACtD7mC,KAAU/H,eAAe,wBAAyB1B,KAAKswC,0DA2BlD,IACGvW,EAAU/5B,KAAKyC,MAAfs3B,MACAlc,EAAa7d,KAAKiC,MAAlB4b,SAER,OACIvZ,EAAArB,EAAAC,cAAC6rD,GAAD,CAAyBlxC,SAAUA,EAAUkc,MAAOA,EAAOx0B,QAASvF,KAAK6T,aACrEvP,EAAArB,EAAAC,cAAC8rD,GAAA/rD,EAAD,CAAUqa,MAAOqxC,yDA/DGlsD,EAAOR,GAAO,IAClC82B,EAAWt2B,EAAXs2B,OAGR,OAAIA,IAFwB92B,EAApB6sD,gBAGG,CACHA,gBAAiB/1B,EACjBA,OAAQA,EACRlb,SAAU+wC,EAA0BC,aAAa91B,IAIlD,YAzByBx1B,IAAMC,WAAxCorD,GAwDKC,aAAe,SAAA91B,GAClB,OAAQvV,QAAQ/Z,KAAU4hD,QAAQtyB,KA+B3B61B,UC5CTK,WAAmB,CACrBh9C,QAAS,GACTi9C,UAAW,eAGTP,GAAY,CACd18C,QAAS,IAGPk9C,GAAsB,CACxBl9C,QAAS,IAGPm9C,eACF,SAAAA,EAAY3sD,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAovD,IACfvvD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAsvD,GAAAjvD,KAAAH,KAAMyC,KA4FV8O,UAAY,SAAA9C,GACR,GAAsB,KAAlBA,EAAMC,QAAgB,CAEtB,GADqC7O,EAAKoC,MAAlCotD,yBACsB,OAE9BxvD,EAAK0K,mBACoB,KAAlBkE,EAAMC,QACb7O,EAAKsxC,aACoB,KAAlB1iC,EAAMC,SACb7O,EAAKyvD,kBAtGMzvD,EA0GnB25C,uBAAyB,SAAAh5C,GAAU,IACvB2J,EAAkD3J,EAAlD2J,QAASC,EAAyC5J,EAAzC4J,WAAYmlD,EAA6B/uD,EAA7B+uD,YAAaC,EAAgBhvD,EAAhBgvD,YAClCxqD,EAAWnF,EAAK4C,MAAhBuC,OAFuB6J,EAGUhP,EAAKoC,MAAtCwtD,EAHuB5gD,EAGvB4gD,iBAAkBC,EAHK7gD,EAGL6gD,WAE1B,GAAI1qD,IAAWmF,EAAf,CAEA,IAAMU,EAAUiB,KAAahF,IAAIqD,EAASC,GAC1C,GAAKS,EAAL,CAKA,GAHA8kD,YAAuB,CAAC9kD,IAEL+kD,aAAeL,KAAiBK,aAAeJ,GAClD,CACZ,GACI3vD,EAAKijD,QAAQn8C,QAAU,IACtB9G,EAAKgwD,kBACFC,aAAQ1lD,EAAYvK,EAAKijD,QAAQ,GAAGliD,GAAIf,EAAKijD,QAAQjjD,EAAKijD,QAAQn8C,OAAS,GAAG/F,KACpF,CAGE,IAFA,IAAImvD,GAAW,EACXjN,EAAU,GACL57C,EAAI,EAAGA,EAAIrH,EAAKijD,QAAQn8C,OAAQO,IACjCrH,EAAKijD,QAAQ57C,GAAGtG,GAAKwJ,EACrB04C,EAAQn6C,KAAK9I,EAAKijD,QAAQ57C,KAErB6oD,IACDA,GAAW,EACXjN,EAAQn6C,KAAKkC,IAEjBi4C,EAAQn6C,KAAK9I,EAAKijD,QAAQ57C,KAGlCrH,EAAKijD,QAAUA,EAGnB,IAAM3rB,EAAQt3B,EAAKijD,QAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAO6uD,IACnD5vD,EAAK6C,SAAS,CACVstD,aAAcnwD,EAAKmwD,aAAa74B,GAChC84B,iBAAkBpwD,EAAKowD,iBAAiB94B,GACxCu4B,WAAYA,EAAa,IAKjC,IADuBE,aAAeL,IAAgBK,aAAeJ,GAClD,CACf,IAAIU,EAAarwD,EAAKijD,QAGtB,GAFAjjD,EAAKijD,QAAUjjD,EAAKijD,QAAQ3zC,OAAO,SAAApO,GAAC,OAAIA,EAAEH,KAAOwJ,IAE7CqlD,IAAqBrlD,EAAY,CACjC,IAAM+lD,EAAY,IAAInpD,IACtBmpD,EAAUliD,IAAI7D,EAAYA,GAE1BvK,EAAKuwD,gBAAgBF,EAAYC,GACjCtwD,EAAK6C,SAAS,CACVgtD,WAAY5hB,KAAKjC,IAAI6jB,EAAa,EAAG,SAEtC,CACH,IAAMv4B,EAAQt3B,EAAKijD,QAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAO6uD,IACnD5vD,EAAK6C,SAAS,CACVstD,aAAcnwD,EAAKmwD,aAAa74B,GAChC84B,iBAAkBpwD,EAAKowD,iBAAiB94B,GACxCu4B,WAAY5hB,KAAKjC,IAAI6jB,EAAa,EAAG,UAvKlC7vD,EA6KnB8jD,uBAAyB,SAAAnjD,GAAU,IACvB2J,EAAuC3J,EAAvC2J,QAAS0D,EAA8BrN,EAA9BqN,YAAa+1C,EAAiBpjD,EAAjBojD,aACtB5+C,EAAWnF,EAAK4C,MAAhBuC,OAFuByL,EAGU5Q,EAAKoC,MAAtCwtD,EAHuBh/C,EAGvBg/C,iBAAkBC,EAHKj/C,EAGLi/C,WAE1B,GAAK9L,GACD5+C,IAAWmF,EAAf,CAEA,IAAMgmD,EAAYtiD,EAAYwiD,OAAO,SAACC,EAAaC,GAE/C,OADAD,EAAYriD,IAAIsiD,EAAWA,GACpBD,GACR,IAAItpD,KAEDkpD,EAAarwD,EAAKijD,QACpB0N,EAAeN,EAAWvpD,OAE9B9G,EAAKijD,QAAUjjD,EAAKijD,QAAQ3zC,OAAO,SAAApO,GAAC,OAAKovD,EAAUhpD,IAAIpG,EAAEH,MACzD4vD,GAAgB3wD,EAAKijD,QAAQn8C,OAE7B9G,EAAK6C,SAAS,CAAEgtD,WAAY5hB,KAAKjC,IAAI6jB,EAAac,EAAc,KAE3D3wD,EAAKijD,QAAQn8C,OAKdwpD,EAAUhpD,IAAIsoD,IACd5vD,EAAKuwD,gBAAgBF,EAAYC,GALjCM,aAAsB,QAnMX5wD,EA4MnByjD,mBAAqB,SAAA9iD,GAAU,IACnBwE,EAAWnF,EAAK4C,MAAhBuC,OADmBm7B,EAEctgC,EAAKoC,MAAtCwtD,EAFmBtvB,EAEnBsvB,iBAAkBC,EAFCvvB,EAEDuvB,WAElB7kD,EAAYrK,EAAZqK,QACR,GAAKA,GACA+kD,aAAe/kD,EAAQmB,UAExBnB,EAAQV,UAAYnF,GACnBnF,EAAKgwD,iBAAV,CAEAhwD,EAAKijD,QAAU,CAACj4C,GAASlG,OAAO9E,EAAKijD,SACrC,IAAM3rB,EAAQt3B,EAAKijD,QAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAO6uD,IAEnD5vD,EAAK6C,SAAS,CACVstD,aAAcnwD,EAAKmwD,aAAa74B,GAChC84B,iBAAkBpwD,EAAKowD,iBAAiB94B,GACxCu4B,WAAYA,EAAa,MA7Nd7vD,EAiOnB6wD,UAAY,SAAC1rD,EAAQod,GACjB,IAAMvX,EAAUiB,KAAahF,IAAI9B,EAAQod,GACzC,IAAKvX,EAAS,OAAO,KAFU,IAIvBmB,EAAYnB,EAAZmB,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACH1J,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACHA,QAAS,qCAGjB,QACI,OAAO,OAzPAzC,EA8PnB8wD,YA9PmB7wD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA8PL,SAAAC,IAAA,IAAA7C,EAAAE,EAAAod,EAAAjT,EAAA3M,EAAAitD,EAAAt4B,EAAAy5B,EAAAC,EAAAhqB,EAAAiqB,EAAA,OAAArpD,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UAAAxD,EACoBjF,EAAK4C,MAA3BuC,EADEF,EACFE,OAAQod,EADNtd,EACMsd,UAEVjT,EAAStP,EAAK6wD,UAAU1rD,EAAQod,GAElC5f,EAAS,CACTF,QAAS,WACTyiB,SAAU,GACVqC,YAAa,IAEbjY,EAVM,CAAApF,EAAAzB,KAAA,eAAAyB,EAAAzB,KAAA,EAWS/G,KAAgBc,KAAK,CAChCC,QAAS,qBACT6H,QAASnF,EACTigB,MAAO,GACPzC,eAAgB,EAChBkD,gBAAiBtD,EACjBuD,QAASorC,IACTroD,MAAO,EAAIqoD,IACX5hD,OAAQA,IAnBN,OAWN3M,EAXMuH,EAAAV,KAAA,UAuBVme,aAAehlB,EAAQ3C,EAAKijD,SAC5Bh3C,KAAaga,SAAStjB,EAAOuiB,UAE7BllB,EAAKijD,QAAUtgD,EAAOuiB,SACtBllB,EAAKgwD,iBAA8C,IAA3BrtD,EAAOuiB,SAASpe,OAEhC8oD,EAAqB5vD,EAAKoC,MAA1BwtD,iBACFt4B,EAAQt3B,EAAKijD,QAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAO6uD,IAEnD5vD,EAAK6C,SAAS,CACVstD,aAAcnwD,EAAKmwD,aAAa74B,GAChC84B,iBAAkBpwD,EAAKowD,iBAAiB94B,MAG7B,IAAXA,EArCM,CAAAptB,EAAAzB,KAAA,SAsCNzI,EAAKijD,QAAU,CAACh3C,KAAahF,IAAI9B,EAAQyqD,IACzCuB,YAA0B,EAAGnxD,EAAKijD,SAvC5B/4C,EAAAzB,KAAA,oBAyCN0oD,YAA0B75B,EAAOt3B,EAAKijD,SAEhC3zC,EAAStP,EAAK6wD,UAAU1rD,EAAQod,GA3ChC,CAAArY,EAAAzB,KAAA,gBAAAyB,EAAAC,OAAA,kBA8CA6mD,EAAW,KACbhqB,EAAQ,EA/CNiqB,EAAArpD,EAAAxE,EAAAyE,KAAA,SAAAopD,IAAA,IAAAtuD,EAAAitD,EAAAt4B,EAAA,OAAA1vB,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAiDmB/G,KAAgBc,KAAK,CACtCC,QAAS,qBACT6H,QAASnF,EACTigB,MAAO,GACPzC,eAAgB,EAChBkD,gBAAiB7lB,EAAKijD,QAAQn8C,OAAS,EAAI9G,EAAKijD,QAAQ,GAAGliD,GAAK,EAChE+kB,QAAS,GACTjd,MAAO,IACPyG,OAAQA,IAzDV,OAiDI3M,EAjDJ4F,EAAAiB,KA2DFw9B,GAASrkC,EAAOuiB,SAASpe,OAEzB6gB,aAAehlB,EAAQ3C,EAAKijD,SAC5Bh3C,KAAaga,SAAStjB,EAAOuiB,UAE7BllB,EAAKijD,QAAUtgD,EAAOuiB,SAASpgB,OAAO9E,EAAKijD,SAC3CjjD,EAAKgwD,iBAA8C,IAA3BrtD,EAAOuiB,SAASpe,OAEhC8oD,EAAqB5vD,EAAKoC,MAA1BwtD,iBACFt4B,EAAQt3B,EAAKijD,QAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAO6uD,IAEnD5vD,EAAK6C,SAAS,CACVstD,aAAcnwD,EAAKmwD,aAAa74B,GAChC84B,iBAAkBpwD,EAAKowD,iBAAiB94B,GACxC04B,iBAAkBhwD,EAAKgwD,iBACvBH,WAAYltD,EAAO4kB,cA1ErB,yBAAAhf,EAAAwB,SAAAknD,KAAA,WAgDEjxD,EAAKgwD,oBAAoBhpB,EAAQgqB,GAhDnC,CAAA9mD,EAAAzB,KAAA,gBAAAyB,EAAAknD,cAAAH,IAAA,iBAAA/mD,EAAAzB,KAAA,kCAAAyB,EAAAH,SAAAjC,MA9PK9H,EA8UnB0K,YAAc,WACVkmD,aAAsB,MADN,IAGRhB,EAAqB5vD,EAAKoC,MAA1BwtD,iBACFt4B,EAAQt3B,EAAKijD,QAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAO6uD,KACpC,IAAXt4B,GACA+5B,YAAgC/5B,EAAOt3B,EAAKijD,UApVjCjjD,EAwVnBsxD,cAAgB,SAAChZ,EAAWttC,GACxB,GAAKA,EAAL,CADoC,IAE5BV,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEjB,GAAKu3C,EAAL,CAJoC,IAMjB5a,EAAoB4a,EAA/BA,UAAiBiZ,EAAcjZ,EAAdiZ,UACzB,GAAK7zB,EAAL,CAPoC,IASxBxE,EAAWwE,EAAf38B,GAERywD,YAAe9zB,EAAM6zB,GAAaxwD,EAAIiK,EAAS,kBAAMpB,KAAU6nD,oBAAoBnnD,EAASvJ,EAAIm4B,SAnWjFl5B,EAsWnB0xD,aAAe,SAAC5hD,EAAU9E,GACtB,GAAKA,EAAL,CADkC,IAE1BV,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEjB,GAAK+O,EAAL,CAJkC,IAMhB4tB,EAAoB5tB,EAA9BA,SAAgByhD,EAAczhD,EAAdyhD,UACxB,GAAK7zB,EAAL,CAPkC,IAStBxE,EAAWwE,EAAf38B,GAERywD,YAAe9zB,EAAM6zB,GAAaxwD,EAAIiK,EAAS,kBAAMpB,KAAU+nD,mBAAmBrnD,EAASvJ,EAAIm4B,SAjXhFl5B,EAoXnB4xD,UAAY,SAAC7gB,EAAO/lC,GAChB,GAAKA,EAAL,CAD4B,IAEpBV,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEjB,GAAKgwC,EAAL,CAJ4B,IAMbrT,EAAoBqT,EAA3BA,MAAawgB,EAAcxgB,EAAdwgB,UACrB,GAAK7zB,EAAL,CAP4B,IAShBxE,EAAWwE,EAAf38B,GAERywD,YAAe9zB,EAAM6zB,GAAaxwD,EAAIiK,EAAS,kBAAMpB,KAAUioD,gBAAgBvnD,EAASvJ,EAAIm4B,SA/X7El5B,EAkYnB8xD,UAAY,SAAC1lD,EAAOpB,GAChB,GAAKA,EAAL,CAD4B,IAEpBV,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEjB,GAAKqL,EAAL,CAEA,IAAMI,EAAYuyB,aAAQ3yB,EAAMC,MAAO0lD,KACvC,GAAKvlD,EAAL,CAP4B,IASbkxB,EAASlxB,EAAhBJ,MACR,GAAKsxB,EAAL,CAV4B,IAYhBxE,EAAWwE,EAAf38B,GAERywD,YAAe9zB,EAAMA,EAAK38B,GAAK,OAAQiK,EAAS,kBAAMpB,KAAUs1B,gBAAgB50B,EAASvJ,EAAIm4B,UAhZ9El5B,EAmZnBgyD,WAAa,WAAM,IACP7sD,EAAWnF,EAAK4C,MAAhBuC,OACAyqD,EAAqB5vD,EAAKoC,MAA1BwtD,iBAEF5kD,EAAUiB,KAAahF,IAAI9B,EAAQyqD,GACzC,GAAK5kD,EAAL,CALe,IAOPmB,EAAYnB,EAAZmB,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbmsC,EAAcnsC,EAAdmsC,UAERt4C,EAAKsxD,cAAchZ,EAAWttC,GAC9B,MAEJ,IAAK,yBAA0B,IACnBoB,EAAUD,EAAVC,MAERpM,EAAK8xD,UAAU1lD,EAAOpB,GACtB,MAEJ,IAAK,kBAAmB,IACZ8E,EAAa3D,EAAb2D,SAER9P,EAAK0xD,aAAa5hD,EAAU9E,GAC5B,MAEJ,IAAK,eAAgB,IACToB,EAAUD,EAAVC,MAERpM,EAAK8xD,UAAU1lD,EAAOpB,GACtB,MAEJ,IAAK,cAAe,IACR0lC,EAAavkC,EAAbukC,SACR,IAAKA,EAAU,OAFC,IAIR4H,EAAsC5H,EAAtC4H,UAAWxoC,EAA2B4gC,EAA3B5gC,SAAU1D,EAAiBskC,EAAjBtkC,MAAO2kC,EAAUL,EAAVK,MAEpC,GAAIuH,EAEA,YADAt4C,EAAKsxD,cAAchZ,EAAWttC,GAIlC,GAAI8E,EAEA,YADA9P,EAAK0xD,aAAa5hD,EAAU9E,GAIhC,GAAIoB,EAEA,YADApM,EAAK8xD,UAAU1lD,EAAOpB,GAI1B,GAAI+lC,EAEA,YADA/wC,EAAK4xD,UAAU7gB,EAAO/lC,GAG1B,MAEJ,IAAK,eAAgB,IACT+lC,EAAU5kC,EAAV4kC,MAER/wC,EAAK4xD,UAAU7gB,EAAO/lC,MApdfhL,EA0dnBumC,cAAgB,WAAM,IACVphC,EAAWnF,EAAK4C,MAAhBuC,OACAyqD,EAAqB5vD,EAAKoC,MAA1BwtD,iBAERluD,KAAgBiJ,aAAa,CACzBlI,QAAS,sBACTmI,KAAM,CACFzF,OAAQA,EACR8E,WAAY,CAAC2lD,OAleN5vD,EAuenB4zB,aAAe,WACX5zB,EAAKiyD,oBAxeUjyD,EAigBnBowD,iBAAmB,SAAA94B,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACPt3B,EAAKijD,QAAQn8C,QArgBjB9G,EAwgBnByvD,eAAiB,SAAA7gD,GACTA,GACAA,EAAMiY,kBAFY,IAKd+oC,EAAqB5vD,EAAKoC,MAA1BwtD,iBAEFh4B,EADQ53B,EAAKijD,QAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAO6uD,IACzB,EAE1B,OAAO5vD,EAAKkyD,UAAUt6B,EAAW,WACzBA,IAAc53B,EAAKijD,QAAQn8C,OAAS,GACpC9G,EAAKmyD,kBAnhBEnyD,EAwhBnBmyD,aAxhBmBlyD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAwhBJ,SAAAmC,IAAA,IAAAuC,EAAApH,EAAAod,EAAAqtC,EAAAtgD,EAAA3M,EAAA20B,EAAA,OAAA1vB,EAAAxE,EAAAkF,KAAA,SAAAqe,GAAA,cAAAA,EAAAne,KAAAme,EAAAle,MAAA,UAAA8D,EACmBvM,EAAK4C,MAA3BuC,EADGoH,EACHpH,OAAQod,EADLhW,EACKgW,UACRqtC,EAAqB5vD,EAAKoC,MAA1BwtD,iBAEFtgD,EAAStP,EAAK6wD,UAAU1rD,EAAQod,GAElC5f,EAAS,CACTF,QAAS,WACTyiB,SAAU,GACVqC,YAAa,IAEbjY,EAXO,CAAAqX,EAAAle,KAAA,eAAAke,EAAAle,KAAA,EAYQ/G,KAAgBc,KAAK,CAChCC,QAAS,qBACT6H,QAASnF,EACTigB,MAAO,GACPzC,eAAgB,EAChBkD,gBAAiB+pC,EACjB9pC,OAAQ,EACRjd,MAAOqoD,IACP5hD,OAAQA,IApBL,OAYP3M,EAZOgkB,EAAAnd,KAAA,OAwBXme,aAAehlB,EAAQ3C,EAAKijD,SAC5Bh3C,KAAaga,SAAStjB,EAAOuiB,UAE7BllB,EAAKijD,QAAUjjD,EAAKijD,QAAQn+C,OAAOnC,EAAOuiB,UAEpCoS,EAAQt3B,EAAKijD,QAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAO6uD,IAEnD5vD,EAAK6C,SAAS,CACVstD,aAAcnwD,EAAKmwD,aAAa74B,GAChC84B,iBAAkBpwD,EAAKowD,iBAAiB94B,GACxCu4B,WAAYltD,EAAO4kB,cAlCZ,yBAAAZ,EAAA5c,SAAAC,MAxhBIhK,EA8jBnBmwD,aAAe,SAAA74B,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAlkBLt3B,EAqkBnBsxC,WAAa,SAAA1iC,GACLA,GACAA,EAAMiY,kBAFQ,IAKV+oC,EAAqB5vD,EAAKoC,MAA1BwtD,iBAEFh4B,EADQ53B,EAAKijD,QAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAO6uD,IACzB,EAE1B,OAAO5vD,EAAKkyD,UAAUt6B,EAAW,WACX,IAAdA,GACA53B,EAAKoyD,cAhlBEpyD,EAqlBnBoyD,SArlBmBnyD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAqlBR,SAAA6e,IAAA,IAAA/V,EAAAxL,EAAAod,EAAAqtC,EAAAtgD,EAAA3M,EAAA20B,EAAA,OAAA1vB,EAAAxE,EAAAkF,KAAA,SAAAmf,GAAA,cAAAA,EAAAjf,KAAAif,EAAAhf,MAAA,UAAAkI,EACuB3Q,EAAK4C,MAA3BuC,EADDwL,EACCxL,OAAQod,EADT5R,EACS4R,UACRqtC,EAAqB5vD,EAAKoC,MAA1BwtD,iBAEFtgD,EAAStP,EAAK6wD,UAAU1rD,EAAQod,GAElC5f,EAAS,CACTF,QAAS,WACTyiB,SAAU,GACVqC,YAAa,IAEbjY,EAXG,CAAAmY,EAAAhf,KAAA,eAAAgf,EAAAhf,KAAA,EAYY/G,KAAgBc,KAAK,CAChCC,QAAS,qBACT6H,QAASnF,EACTigB,MAAO,GACPzC,eAAgB,EAChBkD,gBAAiB+pC,EACjB9pC,QAASorC,IACTroD,MAAOqoD,IAAoB,EAC3B5hD,OAAQA,IApBT,OAYH3M,EAZG8kB,EAAAje,KAAA,OAwBPme,aAAehlB,EAAQ3C,EAAKijD,SAC5Bh3C,KAAaga,SAAStjB,EAAOuiB,UAE7BllB,EAAKgwD,iBAA8C,IAA3BrtD,EAAOuiB,SAASpe,OACxC9G,EAAKijD,QAAUtgD,EAAOuiB,SAASpgB,OAAO9E,EAAKijD,SAErC3rB,EAAQt3B,EAAKijD,QAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAO6uD,IAEnD5vD,EAAK6C,SAAS,CACVstD,aAAcnwD,EAAKmwD,aAAa74B,GAChC84B,iBAAkBpwD,EAAKowD,iBAAiB94B,GACxC04B,iBAAkBhwD,EAAKgwD,iBACvBH,WAAYltD,EAAO4kB,cApChB,yBAAAE,EAAA1d,SAAA2c,MArlBQ1mB,EA6nBnBkyD,UAAY,SAAC56B,EAAO8H,GAChB,QAAI9H,EAAQ,OACRA,GAASt3B,EAAKijD,QAAQn8C,UAE1B9G,EAAK6C,SACD,CACI+sD,iBAAkB5vD,EAAKijD,QAAQ3rB,GAAOv2B,GACtCovD,aAAcnwD,EAAKmwD,aAAa74B,GAChC84B,iBAAkBpwD,EAAKowD,iBAAiB94B,IAE5C8H,GAGJ+xB,YAA0B75B,EAAOt3B,EAAKijD,UAC/B,KA3oBQjjD,EA8oBnBuwD,gBAAkB,SAACF,EAAYC,GAK3B,IALyC,IACjCV,EAAqB5vD,EAAKoC,MAA1BwtD,iBAEFt4B,EAAQ+4B,EAAW94B,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAO6uD,IAC7CyC,EAAS,EACJhrD,EAAIiwB,EAAQ,EAAGjwB,GAAK,EAAGA,IAC5B,GAAIipD,IAAcA,EAAUhpD,IAAI+oD,EAAWhpD,GAAGtG,IAAK,CAC/CsxD,EAAShC,EAAWhpD,GAAGtG,GACvB,MAGR,IAAKsxD,EACD,IAAK,IAAIhrD,EAAIiwB,EAAQ,EAAGjwB,EAAIgpD,EAAWvpD,OAAQO,IAC3C,GAAIipD,IAAcA,EAAUhpD,IAAI+oD,EAAWhpD,GAAGtG,IAAK,CAC/CsxD,EAAShC,EAAWhpD,GAAGtG,GACvB,MAKZ,GAAKsxD,EAAL,CAEA,IAAMz6B,EAAY53B,EAAKijD,QAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAOsxD,IAEvD,OAAOryD,EAAKkyD,UAAUt6B,EAAW,WACX,IAAdA,EACA53B,EAAKoyD,WACEx6B,IAAc53B,EAAKijD,QAAQn8C,OAAS,GAC3C9G,EAAKmyD,mBA1qBEnyD,EA+qBnBiyD,iBAAmB,WACfjyD,EAAK6C,SAAS,CAAE2sD,0BAA0B,KAhrB3BxvD,EAmrBnBsyD,kBAAoB,WAChBtyD,EAAK6C,SAAS,CAAE2sD,0BAA0B,KAprB3BxvD,EAurBnB8tB,WAAa,WACT9tB,EAAK6C,SAAS,CAAE2sD,0BAA0B,IAD3B,IAGPrqD,EAAWnF,EAAK4C,MAAhBuC,OAHO6lC,EAI4BhrC,EAAKoC,MAAxCwtD,EAJO5kB,EAIP4kB,iBAAkB2C,EAJXvnB,EAIWunB,aAEpBvnD,EAAUiB,KAAahF,IAAI9B,EAAQyqD,GACzC,GAAK5kD,EAAL,CAPe,IASPw8B,EAA+Dx8B,EAA/Dw8B,6BAA8B9B,EAAiC16B,EAAjC06B,8BACjB8B,GAAgC9B,IAGrDhkC,KAAgBc,KAAK,CACjBC,QAAS,iBACT6H,QAASnF,EACT6I,YAAa,CAAC4hD,GACd9pB,OAAQJ,GAAgC6sB,MAxsB7BvyD,EA4sBnBwyD,yBAA2B,SAAA5jD,GACvB5O,EAAK6C,SAAS,CAAE0vD,aAAc3jD,EAAMoa,OAAOxQ,WA7sB5BxY,EAgtBnByyD,mBAAqB,WAAM,IAGnBC,EAAiB,uBACrB,OAHuB1yD,EAAKoC,MAApBkE,YAIJ,IAAK,uBACDosD,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzB1yD,EAAK6C,SAAS,CACVyD,WAAYosD,KApuBD1yD,EAwuBnB2yD,kBAAoB,WAChB,GAAK3yD,EAAK4yD,WAAV,CADsB,IAGdhmD,EAAY5M,EAAK4yD,WAAjBhmD,QACR,GAAKA,EAAL,CAJsB,IAOhBimD,EADY7yD,EAAKoC,MAAfsqD,MACkB,EAAI,EAAI,GAElC1sD,EAAK6C,SAAS,CAAE6pD,MAAOmG,IAEvBjmD,EAAQ6/C,YAAYoG,MAnvBL7yD,EAsvBnBynC,eAAiB,SAACtiC,EAAQod,GACtB,IAAMvX,EAAUiB,KAAahF,IAAI9B,EAAQod,GACzC,IAAKvX,EAAS,OAAO,EAFe,IAI5BkB,EAA8BlB,EAA9BkB,iBAAkBC,EAAYnB,EAAZmB,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOD,IA/vBflM,EAAK4yD,WAAalvD,IAAM+M,YACxBzQ,EAAKijD,QAAU,GAJA,IAAApnC,EAMe7b,EAAK4C,MAA3BuC,EANO0W,EAMP1W,OAAQod,EAND1G,EAMC0G,UAND,OAQfviB,EAAKoC,MAAQ,CACTsqD,MAAO,EACPpmD,WAAY,uBACZqP,WAAYxQ,EACZqhD,cAAejkC,EACfqtC,iBAAkBrtC,EAClB4tC,cAAc,EACdC,kBAAkB,EAClBZ,0BAA0B,EAC1B+C,cAAc,GAjBHvyD,qFAqBGsT,EAAWC,GAAW,IAAA+I,EACVnc,KAAKyC,MAA3BuC,EADgCmX,EAChCnX,OAAQod,EADwBjG,EACxBiG,UADwB+oB,EAWpCnrC,KAAKiC,MARLkE,EAHoCglC,EAGpChlC,WACAspD,EAJoCtkB,EAIpCskB,iBACAJ,EALoClkB,EAKpCkkB,yBACAQ,EANoC1kB,EAMpC0kB,iBACAG,EAPoC7kB,EAOpC6kB,aACAC,EARoC9kB,EAQpC8kB,iBACA1D,EAToCphB,EASpCohB,MACAmD,EAVoCvkB,EAUpCukB,WAGJ,OAAIt8C,EAAUjN,aAAeA,IAIzBgN,EAAUnO,SAAWA,IAIrBmO,EAAUiP,YAAcA,IAIxBhP,EAAUq8C,mBAAqBA,IAI/Br8C,EAAUu/C,kBAAoB1C,IAI9B78C,EAAU48C,eAAiBA,IAI3B58C,EAAUy8C,mBAAqBA,IAI/Bz8C,EAAUs8C,aAAeA,IAIzBt8C,EAAUi8C,2BAA6BA,GAIvCj8C,EAAUm5C,QAAUA,sDAQxBvsD,KAAK2wD,cAELhhD,SAASsxC,iBAAiB,UAAWjhD,KAAKuR,WAAW,GACrDzF,KAAauH,GAAG,uBAAwBrT,KAAK2jD,wBAC7C73C,KAAauH,GAAG,mBAAoBrT,KAAKsjD,oBACzCx3C,KAAauH,GAAG,uBAAwBrT,KAAKw5C,uEAI7C7pC,SAASwxC,oBAAoB,UAAWnhD,KAAKuR,WAAW,GACxDzF,KAAapK,eAAe,uBAAwB1B,KAAK2jD,wBACzD73C,KAAapK,eAAe,mBAAoB1B,KAAKsjD,oBACrDx3C,KAAapK,eAAe,uBAAwB1B,KAAKw5C,yDA6qBpD,IAAAp9B,EACiBpc,KAAKyC,MAAnBuC,EADHoX,EACGpX,OAAQ2F,EADXyR,EACWzR,EADXioD,EAYD5yD,KAAKiC,MATLkE,EAHCysD,EAGDzsD,WACAspD,EAJCmD,EAIDnD,iBACAJ,EALCuD,EAKDvD,yBACA+C,EANCQ,EAMDR,aACAvC,EAPC+C,EAOD/C,iBACAG,EARC4C,EAQD5C,aACAC,EATC2C,EASD3C,iBACA1D,EAVCqG,EAUDrG,MACAmD,EAXCkD,EAWDlD,WAGAv4B,GAAS,EACTu4B,GAAcG,IACd14B,EAAQn3B,KAAK8iD,QAAQ1rB,UAAU,SAAAr2B,GAAC,OAAIA,EAAEH,KAAO6uD,KAEjD,IAAMoB,EAAW/iB,KAAKjC,IAAI7rC,KAAK8iD,QAAQn8C,OAAQ+oD,GAEzC7kD,EAAUiB,KAAahF,IAAI9B,EAAQyqD,GACjClqB,EAA+D16B,EAA/D06B,6BAA8B8B,EAAiCx8B,EAAjCw8B,6BAEhCP,EAAevB,GAAgC8B,EAC/CC,EAAiBtnC,KAAKsnC,eAAetiC,EAAQyqD,GAE/CoD,EAA4B,GAE5BA,EADA3F,aAAeloD,EAAQyqD,GACK9kD,EAAE,yBACvByiD,aAAmBpoD,EAAQyqD,GACN9kD,EAAE,uBAEFA,EAAE,yBAElC,IAAMmoD,EAAqBzD,EACvB/qD,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIumB,mBAAoB,EACpB3Y,KAAMw+C,EACNv+C,QAAS9Q,KAAKmyD,kBACdphD,kBAAgB,qBAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,qBAAqB+J,EAAE,YACvCrG,EAAArB,EAAAC,cAACumB,GAAAxmB,EAAD,KACIqB,EAAArB,EAAAC,cAAC29B,GAAA59B,EAAD,KAAoB4vD,GACnBttB,GACGjhC,EAAArB,EAAAC,cAAC+mB,GAAAhnB,EAAD,CACIoc,MAAO1U,EAAE,gBACTuf,QACI5lB,EAAArB,EAAAC,cAAC8kC,GAAA/kC,EAAD,CAAUwI,MAAM,UAAUpH,MAAM,YAAY+T,SAAUpY,KAAKqyD,2BAE/Dh6C,QAAS+5C,KAIrB9tD,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKmyD,kBAAmB1mD,MAAM,WAC1Cd,EAAE,WAEPrG,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAK2tB,WAAYliB,MAAM,WACnCd,EAAE,SAIf,KA9DCmgD,EAgEyBI,YAAalmD,EAAQyqD,EAAkBmC,KAhEhE7G,EAAAjrD,OAAAwJ,EAAA,EAAAxJ,CAAAgrD,EAAA,GAgEiBvtB,GAhEjBwtB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAkEChyB,EAASwE,EAAOA,EAAK38B,GAAK,EAC5Bm5B,EAAQpvB,EAAE,eASd,OARIuiD,aAAeloD,EAAQyqD,GACvB11B,EAAQpvB,EAAE,eACHyiD,aAAmBpoD,EAAQyqD,GAClC11B,EAAQpvB,EAAE,aACHsgD,aAAgBjmD,EAAQyqD,KAC/B11B,EAAQ,IAIRz1B,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,eAAgBc,IACtC2sD,EACDxuD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBAAuBoC,QAASvF,KAAKsvD,gBAChDhrD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,4BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCACfmB,EAAArB,EAAAC,cAAC6vD,GAAD,CAAmBl1C,UAAWoyC,EAAkBzB,MAAI,EAACjpD,QAASvF,KAAKsvD,gBAC/DhrD,EAAArB,EAAAC,cAAC8vD,GAAA/vD,EAAD,CAAoB+xB,SAAS,QAAQ1X,MAAO6xC,OAIpD7qD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,+BACXmB,EAAArB,EAAAC,cAAC+vD,GAAD,CACI9hD,IAAKnR,KAAKyyD,WACVztD,OAAQA,EACRod,UAAWqtC,EACXpiD,KAAMukD,IACNrsD,QAASvF,KAAKsvD,kBAItBhrD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,6BACXmB,EAAArB,EAAAC,cAAC6vD,GAAD,CAAmBxtD,QAASvF,KAAKuK,aAC7BjG,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,CAAW+xB,SAAS,QAAQ1X,MAAO6xC,MAEvC7qD,EAAArB,EAAAC,cAAC6vD,GAAD,CAAmBl1C,UAAWmyC,EAAcxB,MAAI,EAACjpD,QAASvF,KAAKmxC,YAC3D7sC,EAAArB,EAAAC,cAACgwD,GAAAjwD,EAAD,CAAkB+xB,SAAS,QAAQ1X,MAAO6xC,QAItD7qD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAACiwD,GAAD,CAAoBnuD,OAAQA,EAAQod,UAAWqtC,IAC/CnrD,EAAArB,EAAAC,cAACkwD,GAAD,CACIr5B,MAAOA,EACPllB,SAAUg8C,GAAY15B,GAAS,EAArB,GAAAxyB,OAA4BksD,EAAW15B,EAAvC,QAAAxyB,OAAmDksD,GAAa,OAE7E5F,aAAgBjmD,EAAQyqD,IACrBnrD,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAC6rD,GAAD,CACIh1B,MAAOpvB,EAAE,eACT0N,QAASk0C,EAAQ,EACjBhnD,QAASvF,KAAKwyD,mBACdluD,EAAArB,EAAAC,cAACmwD,GAAApwD,EAAD,CAAqBqa,MAAOqxC,MAEhCrqD,EAAArB,EAAAC,cAAC6rD,GAAD,CACIh1B,MAAOpvB,EAAE,yBACTpF,QAASvF,KAAKsyD,oBACdhuD,EAAArB,EAAAC,cAACowD,GAAArwD,EAAD,CAAkBqa,MAAOqxC,OAIrCrqD,EAAArB,EAAAC,cAACqwD,GAAD,CAA2Bx5B,MAAOpvB,EAAE,QAASouB,OAAQA,EAAQxzB,QAASvF,KAAK6xD,aAC3EvtD,EAAArB,EAAAC,cAAC6rD,GAAD,CACIh1B,MAAOpvB,EAAE,WACTkT,UAAWypB,EACX/hC,QAASvF,KAAKomC,eACd9hC,EAAArB,EAAAC,cAACs3B,GAAAv3B,EAAD,CAAWqa,MAAO2xC,MAEtB3qD,EAAArB,EAAAC,cAAC6rD,GAAD,CAAyBh1B,MAAOpvB,EAAE,UAAWkT,UAAWipB,EAAcvhC,QAASvF,KAAKyzB,cAChFnvB,EAAArB,EAAAC,cAACswD,GAAAvwD,EAAD,CAAYqa,MAAOqxC,eA/4BjBprD,IAAMC,WA45BjBgP,iBAAkB48C,IC13BlBqE,uBA9FX,SAAAA,EAAYhxD,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAyzD,IACf5zD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA2zD,GAAAtzD,KAAAH,KAAMyC,KA0CVixD,uBAAyB,SAAAlzD,GAAU,IAAAsE,EACLjF,EAAK4C,MAAvBuC,EADuBF,EACvBE,OAAQiH,EADenH,EACfmH,MAEhB,GAAIjH,IAAWxE,EAAOwE,QAAUiH,EAAM0nD,IAAI/yD,KAAOJ,EAAOu4B,OAAQ,CAC5D,IAAMwE,EAAO9zB,KAAU3C,IAAItG,EAAOu4B,SAAWl5B,EAAKoC,MAAMs7B,KACxD19B,EAAK6C,SAAS,CACV66B,KAAMA,MAjDC19B,EAsDnB+zD,uBAAyB,SAAApzD,GAAU,IAAAyK,EACLpL,EAAK4C,MAAvBuC,EADuBiG,EACvBjG,OAAQiH,EADehB,EACfgB,MAGhB,GAFewO,YAAczV,KAEdxE,EAAOoS,QAAU3G,EAAM0nD,IAAI/yD,KAAOJ,EAAOu4B,OAAQ,CAC5D,IAAMwE,EAAO9zB,KAAU3C,IAAItG,EAAOu4B,SAAWl5B,EAAKoC,MAAMs7B,KACxD19B,EAAK6C,SAAS,CACV66B,KAAMA,MA7DC19B,EAkEnBwsD,mBAAqB,SAAA59C,GACbA,GAAOA,EAAMiY,kBAEjB7mB,EAAK4C,MAAM8C,QAAQkJ,IArEJ,IAAArC,EAGWvM,EAAK4C,MAAvBuC,EAHOoH,EAGPpH,OAAQiH,EAHDG,EAGCH,MAELsxB,EAAStxB,EAAd0nD,IALS,OAMfp2B,EAAO9zB,KAAU3C,IAAIy2B,EAAK38B,KAAO28B,EAEjC19B,EAAKoC,MAAQ,CACTuT,WAAYxQ,EACZ6uD,UAAW5nD,EACXqB,MAAOwmD,IACPvmD,OAAQumD,IACRv2B,KAAMA,GAbK19B,mFAkCf4J,KAAU4J,GAAG,uBAAwBrT,KAAK0zD,wBAC1CjqD,KAAU4J,GAAG,uBAAwBrT,KAAK4zD,uEAI1CnqD,KAAU/H,eAAe,uBAAwB1B,KAAK0zD,wBACtDjqD,KAAU/H,eAAe,uBAAwB1B,KAAK4zD,yDAgCjD,IAAA/kD,EAC2B7O,KAAKiC,MAAds7B,GADlB1uB,EACGvB,MADHuB,EACUtB,OADVsB,EACkB0uB,MACvB,IAAKA,EAAM,OAAO,KAElB,IAAMmB,EAAOj1B,KAAU4hD,QAAQ9tB,EAAK38B,KAAO28B,EAAKmB,KAC1C1F,EAAMvvB,KAAUqjD,WAAWpuB,GAGjC,OADAxwB,QAAQC,IAAI,cAAe6qB,GAEvB10B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,6BAA6B61B,IAAKA,EAAKU,IAAI,GAAGn0B,QAASvF,KAAKqsD,qBAC3E/nD,EAAArB,EAAAC,cAAC+qD,GAAA,EAAD,CAAc1wB,KAAMA,wDAlEA96B,EAAOR,GAAO,IAClC+C,EAAkBvC,EAAlBuC,OAAQiH,EAAUxJ,EAAVwJ,MAEhB,OAAIjH,IAAW/C,EAAMuT,YAAcvJ,IAAUhK,EAAM4xD,UACxC,CACHr+C,WAAYxQ,EACZ6uD,UAAW5nD,EACXqB,MAAOwmD,IACPvmD,OAAQumD,IACRv2B,KAAMtxB,EAAM0nD,KAIb,YA/ByBpwD,IAAMC,YCsC/BuwD,eAhCX,SAAAA,EAAYtxD,GAAQ,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA+zD,GAAAj0D,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAi0D,GAAA5zD,KAAAH,KACVyC,0EAGD,IAAAqC,EACoB9E,KAAKyC,MAAtBuC,EADHF,EACGE,OAAQyd,EADX3d,EACW2d,KAEhB,OACIne,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,EAAQ+Q,mBAAmB,IAC7CzR,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oBACXmB,EAAArB,EAAAC,cAAC44C,GAAA,EAAD,CAAe92C,OAAQA,KAE1Byd,GACGne,EAAArB,EAAAC,cAAA,OAAKC,UAAU,yBACXmB,EAAArB,EAAAC,cAAA,YAAOuf,cAlBClf,IAAMC,WCkBxCyrD,GAAmB,CACrBh9C,QAAS,GACTxG,MAAO,QACPyjD,UAAW,cAGT8E,GAAkB,CACpB/hD,QAAS,GACTxG,MAAO,SAGL0jD,GAAsB,CACxBl9C,QAAS,GACTxG,MAAO,SAGLwoD,eACF,SAAAA,EAAYxxD,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAi0D,IACfp0D,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAm0D,GAAA9zD,KAAAH,KAAMyC,KA4EV8O,UAAY,SAAA9C,GACR,GAAsB,KAAlBA,EAAMC,QAAgB,CAEtB,GADqC7O,EAAKoC,MAAlCotD,yBACsB,OAE9BxvD,EAAK0K,mBACoB,KAAlBkE,EAAMC,QACb7O,EAAKyvD,iBACoB,KAAlB7gD,EAAMC,SACb7O,EAAKsxC,cAtFMtxC,EA0FnB8wD,YA1FmB7wD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA0FL,SAAAC,IAAA,IAAA3C,EAAAxC,EAAA,OAAAiF,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACFtD,EAAWnF,EAAK4C,MAAhBuC,OAEHqR,YAAcrR,GAHT,CAAAoD,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBAAA5B,EAAAE,KAAA,EAKW/G,KAAgBc,KAAK,CACtCC,QAAS,uBACTsG,QAAS6R,YAAczV,GACvB2gB,OAAQ,EACRjd,MAAO,MATD,OAKJlG,EALI4F,EAAAiB,KAYVxJ,EAAKijD,QAAUtgD,EAAO0xD,OACtBr0D,EAAKgwD,iBAA4C,IAAzBrtD,EAAO0xD,OAAOvtD,OAExB,EAEd9G,EAAK6C,SAAS,CACVyxD,aAHU,EAIVnE,aAAcnwD,EAAKmwD,aAJT,GAKVC,iBAAkBpwD,EAAKowD,iBALb,GAMVP,WAAYltD,EAAO4kB,cAGvBgtC,YAAiCpvD,EATnB,EASkCnF,EAAKijD,SAxB3C,yBAAA16C,EAAAwB,SAAAjC,MA1FK9H,EAqHnB0K,YAAc,WACViR,aAA6B,OAtHd3b,EAyHnBgyD,WAAa,WAAM,IACP7sD,EAAWnF,EAAK4C,MAAhBuC,OADO6J,EAEsBhP,EAAKoC,MAAlCkyD,EAFOtlD,EAEPslD,aAAczE,EAFP7gD,EAEO6gD,WAEhBv7C,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,EAAL,CAEA,IAAIgjB,GAAS,EACTu4B,IACAv4B,EAAQg9B,GAGZ,IAAMloD,EACFkrB,EAAQ,GAAKA,EAAQt3B,EAAKijD,QAAQn8C,OAAS0tD,aAAgBx0D,EAAKijD,QAAQ3rB,IAAUm9B,YAAiBtvD,GACvG,GAAKiH,GACAA,EAAM0nD,IAAX,CAEA,IAAMp2B,EAAO9zB,KAAU3C,IAAImF,EAAM0nD,IAAI/yD,KAAOqL,EAAM0nD,IAC7Cp2B,GAEL8zB,YAAe9zB,EAAMA,EAAK38B,GAAK,OAAQuT,EAAM,kBAAM1K,KAAU8qD,oBAAoBvvD,EAAQu4B,EAAK38B,SA7I/Ef,EAgJnBumC,cAAgB,WAAM,IACVphC,EAAWnF,EAAK4C,MAAhBuC,OACR,GAAKqR,YAAcrR,GAAnB,CAFkB,IAAAyL,EAImB5Q,EAAKoC,MAAlCkyD,EAJU1jD,EAIV0jD,aAEJh9B,GAAS,EAKb,GAXkB1mB,EAIIi/C,aAIlBv4B,EAAQg9B,KAGRh9B,EAAQ,GAAKA,GAASt3B,EAAKijD,QAAQn8C,QAAvC,CACA,IAAMsF,EAAQooD,aAAgBx0D,EAAKijD,QAAQ3rB,IAC3C,GAAKlrB,EAAL,CAbkB,IAePsxB,EAAStxB,EAAd0nD,IAEN,GADAp2B,EAAO9zB,KAAU3C,IAAIy2B,EAAK38B,KAAO28B,EACjC,CAEA,IAAMlxB,EAAY,CACd/J,QAAS,YACT+R,KAAM,IACNpI,MAAOsxB,EACPjwB,MAAO,IACPC,OAAQ,KAGZhM,KAAgBiJ,aAAa,CACzBlI,QAAS,sBACTmI,KAAM,CAAE4B,oBA7KGxM,EAiLnB4zB,aAAe,WAAM,IAAA3uB,EACajF,EAAK4C,MAA3BuC,EADSF,EACTE,OADSm7B,GAAAr7B,EACDsd,UACqBviB,EAAKoC,OAAlCkyD,EAFSh0B,EAETg0B,aAEJh9B,GAAS,EAJIgJ,EAEKuvB,aAIlBv4B,EAAQg9B,GAGZ,IAAMloD,EACFkrB,EAAQ,GAAKA,EAAQt3B,EAAKijD,QAAQn8C,OAAS0tD,aAAgBx0D,EAAKijD,QAAQ3rB,IAAUm9B,YAAiBtvD,GAEvG,GAAIiH,EAAO,CACP,IAAIsxB,EAAOtxB,EAAM0nD,IAEjB,GADAp2B,EAAO9zB,KAAU3C,IAAIy2B,EAAK38B,KAAO28B,EACvB,CACN,IAAM59B,EAAQ8J,KAAU+qD,oBAExB/qD,KAAUgrD,gBAAgB90D,EAAO49B,MAnM1B19B,EAwMnBowD,iBAAmB,SAAA94B,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACPt3B,EAAKijD,QAAQn8C,QA5MjB9G,EA+MnByvD,eAAiB,SAAA7gD,GACTA,GACAA,EAAMiY,kBAFY,IAMhB+Q,EADmB53B,EAAKoC,MAAtBkyD,aACyB,EAEjC,OAAOt0D,EAAKkyD,UAAUt6B,EAAW,WACzBA,IAAc53B,EAAKijD,QAAQn8C,OAAS,GACpC9G,EAAKmyD,kBAzNEnyD,EA8NnBmyD,aA9NmBlyD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA8NJ,SAAAmC,IAAA,OAAApC,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAC,OAAA,kCAAAD,EAAAH,SAAAC,MA9NIhK,EAkOnBmwD,aAAe,SAAA74B,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAtOLt3B,EAyOnBsxC,WAAa,SAAA1iC,GACLA,GACAA,EAAMiY,kBAFQ,IAMZ+Q,EADmB53B,EAAKoC,MAAtBkyD,aACyB,EAEjC,OAAOt0D,EAAKkyD,UAAUt6B,EAAW,WACX,IAAdA,GACA53B,EAAKoyD,cAnPEpyD,EAwPnBoyD,SAxPmBnyD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAwPR,SAAA6e,IAAA,OAAA9e,EAAAxE,EAAAkF,KAAA,SAAAqe,GAAA,cAAAA,EAAAne,KAAAme,EAAAle,MAAA,cAAAke,EAAAxc,OAAA,kCAAAwc,EAAA5c,SAAA2c,MAxPQ1mB,EA4PnBkyD,UAAY,SAAC56B,EAAO8H,GAChB,GAAI9H,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAASt3B,EAAKijD,QAAQn8C,OAAQ,OAAO,EAEzC9G,EAAK6C,SACD,CACIyxD,aAAch9B,EACd64B,aAAcnwD,EAAKmwD,aAAa74B,GAChC84B,iBAAkBpwD,EAAKowD,iBAAiB94B,IAE5C8H,GAVyB,IAarBj6B,EAAWnF,EAAK4C,MAAhBuC,OAGR,OADAovD,YAAiCpvD,EAAQmyB,EAAOt3B,EAAKijD,UAC9C,GAzQPjjD,EAAKijD,QAAU,GAHA,IAAA73C,EAKYpL,EAAK4C,MAAxBuC,EALOiG,EAKPjG,OAAQ+zB,EALD9tB,EAKC8tB,OALD,OAOfl5B,EAAKoC,MAAQ,CACTuT,WAAYxQ,EACZ0vD,WAAY37B,EACZo7B,aAAc,EACdnE,cAAc,EACdC,kBAAkB,EAClBZ,0BAA0B,GAbfxvD,qFAiBGsT,EAAWC,GAAW,IAAAhH,EACVpM,KAAKyC,MAA3BuC,EADgCoH,EAChCpH,OAAQod,EADwBhW,EACxBgW,UADwByoB,EASpC7qC,KAAKiC,MANL0yD,EAHoC9pB,EAGpC8pB,cACA1E,EAJoCplB,EAIpColB,iBACAD,EALoCnlB,EAKpCmlB,aACAH,EANoChlB,EAMpCglB,iBACAH,EAPoC7kB,EAOpC6kB,WACAL,EARoCxkB,EAQpCwkB,yBAGJ,OAAIl8C,EAAUnO,SAAWA,IAIrBmO,EAAUiP,YAAcA,IAIxBhP,EAAUuhD,gBAAkBA,IAI5BvhD,EAAUu/C,kBAAoB1C,IAI9B78C,EAAU48C,eAAiBA,IAI3B58C,EAAUy8C,mBAAqBA,IAI/Bz8C,EAAUs8C,aAAeA,GAIzBt8C,EAAUi8C,2BAA6BA,oDAO3B,IACRrqD,EAAWhF,KAAKyC,MAAhBuC,OACFiH,EAAQqoD,YAAiBtvD,GAC/B4vD,YAA8B5vD,EAAQ,CAACiH,IAEvCjM,KAAK2wD,cAELhhD,SAASsxC,iBAAiB,UAAWjhD,KAAKuR,WAAW,kDAIrD5B,SAASwxC,oBAAoB,UAAWnhD,KAAKuR,WAAW,oCAqMnD,IAAAf,EACiBxQ,KAAKyC,MAAnBuC,EADHwL,EACGxL,OAAQ2F,EADX6F,EACW7F,EADXwgC,EAUDnrC,KAAKiC,MAPLkyD,EAHChpB,EAGDgpB,aACAnE,EAJC7kB,EAID6kB,aACAC,EALC9kB,EAKD8kB,iBAEAP,GAPCvkB,EAMD0kB,iBANC1kB,EAODukB,YAKAv4B,GAZCgU,EAQDkkB,yBARClkB,EASDinB,cAGS,GACT1C,IACAv4B,EAAQg9B,GAGZ,IACMU,EAAY19B,GAAS,GAAKA,EAAQn3B,KAAK8iD,QAAQn8C,OAC/CsF,EAAQ4oD,EAAYR,aAAgBr0D,KAAK8iD,QAAQ3rB,IAAUm9B,YAAiBtvD,GAC5E8vD,EAAmBD,EAAY70D,KAAK8iD,QAAQ3rB,GAAS,KAC9CoG,EAAStxB,EAAd0nD,IAER,OACIrvD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBAPQ,KASnBmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBAAuBoC,QAASvF,KAAKsvD,gBAChDhrD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,4BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCACfmB,EAAArB,EAAAC,cAAC6vD,GAAD,CAAmBl1C,UAAWmyC,EAAcxB,MAAI,EAACjpD,QAASvF,KAAKmxC,YAC3D7sC,EAAArB,EAAAC,cAAC8vD,GAAA/vD,EAAD,CAAoB+xB,SAAS,QAAQ1X,MAAO6xC,OAIpD7qD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,+BACXmB,EAAArB,EAAAC,cAAC6xD,GAAD,CAA2B/vD,OAAQA,EAAQiH,MAAOA,EAAO1G,QAASvF,KAAKsvD,kBAG3EhrD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,6BACXmB,EAAArB,EAAAC,cAAC6vD,GAAD,CAAmBxtD,QAASvF,KAAKuK,aAC7BjG,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,CAAW+xB,SAAS,QAAQ1X,MAAO6xC,MAEvC7qD,EAAArB,EAAAC,cAAC6vD,GAAD,CAAmBl1C,UAAWoyC,EAAkBzB,MAAI,EAACjpD,QAASvF,KAAKsvD,gBAC/DhrD,EAAArB,EAAAC,cAACgwD,GAAAjwD,EAAD,CAAkB+xB,SAAS,QAAQ1X,MAAO6xC,QAItD7qD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAAC8xD,GAAD,CAA2BhwD,OAAQA,EAAQyd,KAAMwyC,aAAwBH,KACzExwD,EAAArB,EAAAC,cAACkwD,GAAD,CACIr5B,MAAOpvB,EAAE,eACTkK,SAAU66C,GAAcv4B,GAAS,EAAvB,GAAAxyB,OAA8BwyB,EAAQ,EAAtC,QAAAxyB,OAA8C+qD,GAAe,OAE3EprD,EAAArB,EAAAC,cAACqwD,GAAD,CAA2Bx5B,MAAOpvB,EAAE,QAASouB,OAAQwE,EAAK38B,GAAI2E,QAASvF,KAAK6xD,aAC3Ex7C,YAAcrR,IACXV,EAAArB,EAAAC,cAAC6rD,GAAD,CACIh1B,MAAOpvB,EAAE,WACTkT,UAAWg3C,EACXtvD,QAASvF,KAAKomC,eACd9hC,EAAArB,EAAAC,cAACs3B,GAAAv3B,EAAD,CAAWqa,MAAO2xC,MAG1B3qD,EAAArB,EAAAC,cAAC6rD,GAAD,CAAyBh1B,MAAOpvB,EAAE,UAAWkT,UAAQ,EAACtY,QAASvF,KAAKyzB,cAChEnvB,EAAArB,EAAAC,cAACswD,GAAAvwD,EAAD,CAAYqa,MAAO02C,eA/UVzwD,IAAMC,WA2VxBgP,iBAAkByhD,ICvW3BiB,uBACF,SAAAA,EAAYzyD,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAk1D,IACfr1D,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAo1D,GAAA/0D,KAAAH,KAAMyC,KAyCV0yD,uBAAyB,SAAA30D,GAAU,IACvBwE,EAA6BxE,EAA7BwE,OAAQod,EAAqB5hB,EAArB4hB,UAAW7G,EAAU/a,EAAV+a,MAE3B1b,EAAKqa,iBAAiBlV,EAAQod,EAAW7G,IA7C1B1b,EAgDnBu1D,uBAAyB,SAAA50D,GAAU,IACvBoS,EAAkBpS,EAAlBoS,OAAQ2I,EAAU/a,EAAV+a,MAEhB1b,EAAKsgB,iBAAiBvN,EAAQ2I,IAnDf1b,EAsDnB4vB,oCAAsC,SAAAjvB,GAClCX,EAAK6C,SAAS,CACVgtB,qBAAsBvkB,IAAiBukB,wBAxD5B7vB,EA4DnBgwC,iCAAmC,SAAArvC,GAC/BX,EAAK6C,SAAS,CAAEqtC,mBAAoB5kC,IAAiB4kC,sBA7DtClwC,EAgEnBw1D,wCAA0C,SAAA70D,GACtCX,EAAK6C,SAAS,CACV4yD,0BAA2BnqD,IAAiBmqD,6BAlEjCz1D,EAsEnB01D,sBAAwB,SAAA/0D,GAAU,IACtBiK,EAASjK,EAATiK,KAER5K,EAAK6C,SAAS,CAAE2yC,YAAa5qC,KAzEd5K,EA4EnBqa,iBAAmB,SAAClV,GAA4C,IAApCod,EAAoCne,UAAA0C,OAAA,QAAA2rB,IAAAruB,UAAA,GAAAA,UAAA,GAAxB,KAAMsX,EAAkBtX,UAAA0C,OAAA,QAAA2rB,IAAAruB,UAAA,IAAAA,UAAA,GACtDyU,EAAgBvN,IAAiBwN,YACjC68C,EAAsBrqD,IAAiBoV,aACvCkvC,EAAmBtkD,IAAiBgX,eAEtC5G,EACIi6C,IAAwBxwD,GACxBzD,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACT0C,WAOR0T,IAAkB1T,GAAUod,GAAaqtC,IAAqBrtC,GAC9DviB,EAAK41D,iBAAiBhpD,QAAQ84C,kBAC1BnjC,GACAykC,aAAiB7hD,EAAQod,IAEtB1J,IAAkB1T,GAAWod,EAGpC7gB,KAAgBqX,UAAU5T,EAAQod,GAFlCviB,EAAK41D,iBAAiBhpD,QAAQo5C,iBAlGnBhmD,EAwGnBsgB,iBAxGmB,eAAAC,EAAAtgB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAwGA,SAAAC,EAAOiL,EAAQ2I,GAAf,IAAApH,EAAA,OAAA1M,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVsK,EADU,CAAAxK,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBAAA5B,EAAAE,KAAA,EAGI/G,KAAgBc,KAAK,CACpCC,QAAS,oBACTsG,QAASgK,EACT7J,OAAO,IANI,OAGToL,EAHS/L,EAAAiB,KASfxJ,EAAKqa,iBAAiB/F,EAAKvT,GAAI,KAAM2a,GATtB,wBAAAnT,EAAAwB,SAAAjC,MAxGA,gBAAA0Y,EAAAmf,GAAA,OAAApf,EAAApc,MAAAhE,KAAAiE,YAAA,GAGfpE,EAAK41D,iBAAmBlyD,IAAM+M,YAE9BzQ,EAAKoC,MAAQ,CACTytB,qBAAsBvkB,IAAiBukB,qBACvCqgB,mBAAoB5kC,IAAiB4kC,mBACrCulB,0BAA2BnqD,IAAiBmqD,0BAC5CjgB,YAAa,MATFx1C,mFAoBfgJ,KAAUwK,GAAG,uBAAwBrT,KAAKo1D,wBAC1ChhD,KAAUf,GAAG,uBAAwBrT,KAAKm1D,wBAE1ChqD,IAAiBkI,GAAG,oCAAqCrT,KAAKyvB,qCAC9DtkB,IAAiBkI,GAAG,iCAAkCrT,KAAK6vC,kCAC3D1kC,IAAiBkI,GAAG,wCAAyCrT,KAAKq1D,yCAClElqD,IAAiBkI,GAAG,sBAAuBrT,KAAKu1D,sEAIhD1sD,KAAUnH,eAAe,uBAAwB1B,KAAKo1D,wBACtDhhD,KAAU1S,eAAe,uBAAwB1B,KAAKm1D,wBAEtDhqD,IAAiBzJ,eAAe,oCAAqC1B,KAAKyvB,qCAC1EtkB,IAAiBzJ,eAAe,iCAAkC1B,KAAK6vC,kCACvE1kC,IAAiBzJ,eACb,wCACA1B,KAAKq1D,yCAETlqD,IAAiBzJ,eAAe,sBAAuB1B,KAAKu1D,wDA6EvD,IACGxwD,EAAY/E,KAAKyC,MAAjBsC,QADH8J,EAEwF7O,KAAKiC,MAA1FytB,EAFH7gB,EAEG6gB,qBAAsBqgB,EAFzBlhC,EAEyBkhC,mBAAoBulB,EAF7CzmD,EAE6CymD,0BAA2BjgB,EAFxExmC,EAEwEwmC,YAE7E,OACI/wC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQ2wD,KAAM,OAAQ,CAAEC,oBAAqBjmC,KACpEprB,EAAArB,EAAAC,cAAC0yD,GAAD,MACAtxD,EAAArB,EAAAC,cAAC2yD,GAAD,CAAe1kD,IAAKnR,KAAKy1D,mBACxB/lC,GAAwBprB,EAAArB,EAAAC,cAAC4tB,GAAD,OAE7BxsB,EAAArB,EAAAC,cAAC4yD,GAAA,EAAD,MACC/lB,GAAsBzrC,EAAArB,EAAAC,cAAC6yD,GAAgBhmB,GACvCulB,GAA6BhxD,EAAArB,EAAAC,cAAC8yD,GAAuBV,GACrDjgB,GAAe/wC,EAAArB,EAAAC,cAAC+yD,GAAkB5gB,WAnI5B9xC,IAAMC,YA2IvBsO,GAAUC,YACZmkD,IACA7vD,IACAT,IArJW,SAAAC,GAAK,MAAK,CACrB6vD,KAAM,CACFvvD,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWwiB,QAAU,UAC/Eld,MAAO5F,EAAME,QAAQuG,KAAKtG,YAmJ9BvC,GAGWqO,aAAQojD","file":"static/js/3.1e93ded9.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATIONS_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATIONS_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {popup && !isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {!isMe && <Divider />}\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        console.log(\n            `MessagesList.getSnapshotBeforeUpdate\n            chatId=${chatId} messageId=${messageId}\n            list.scrollTop=${scrollTop}\n            list.scrollHeight=${scrollHeight}\n            list.offsetHeight=${offsetHeight}`\n        );\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate \n            chat_id=${chatId} message_id=${messageId}\n            prevProps.chat_id=${prevProps.chatId} prevProps.message_id=${prevProps.messageId}\n            scrollDownVisible=${scrollDownVisible}\n            list.scrollTop=${list.scrollTop}\n            list.scrollHeight=${list.scrollHeight}\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            console.log('MessagesList.shouldComponentUpdate history');\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.insertPrevious(filterMessages(history), newState, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            MessagesList.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertPrevious(filterMessages(result.messages), {});\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        // console.log('MessagesList.handleScroll');\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            // console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            // console.log('SCROLL HANDLESCROLL onLoadPrevious', list.scrollTop, list.offsetHeight, list.scrollHeight, history);\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                // console.log('MessagesList.handleScroll scrollDownVisible=true');\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        console.log(\n            `MessagesList.handleScrollBehavior\n            chatId=${chatId} messageId=${messageId}\n            scrollBehavior=${scrollBehavior}\n            snapshot.scrollTop=${scrollTop}\n            snapshot.scrollHeight=${scrollHeight}\n            snapshot.offsetHeight=${offsetHeight}`\n        );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        console.log(\n            `MessagesList.keepScrollPosition before\n            chatId=${chatId} messageId=${messageId}           \n            list.scrollTop=${list.scrollTop}\n            list.offsetHeight=${list.offsetHeight}\n            list.scrollHeight=${list.scrollHeight}`\n        );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        console.log(\n            `MessagesList.keepScrollPosition after\n            chatId=${chatId} messageId=${messageId}           \n            list.scrollTop=${list.scrollTop}\n            list.offsetHeight=${list.offsetHeight}\n            list.scrollHeight=${list.scrollHeight}`\n        );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        console.log(\n            `MessagesList.scrollToUnread before\n            chatId=${chatId} messageId=${messageId}           \n            list.scrollTop=${list.scrollTop}\n            list.offsetHeight=${list.offsetHeight}\n            list.scrollHeight=${list.scrollHeight}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        console.log(\n            `MessagesList.scrollToUnread after\n            chatId=${chatId} messageId=${messageId} scrolled=${scrolled}         \n            list.scrollTop=${list.scrollTop}\n            list.offsetHeight=${list.offsetHeight}\n            list.scrollHeight=${list.scrollHeight}`\n        );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        console.log(\n            `MessagesList.scrollToMessage before\n            chatId=${chatId} messageId=${messageId}           \n            list.scrollTop=${list.scrollTop}\n            list.offsetHeight=${list.offsetHeight}\n            list.scrollHeight=${list.scrollHeight}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        console.log(\n            `MessagesList.scrollToMessage after\n            chatId=${chatId} messageId=${messageId} scrolled=${scrolled}         \n            list.scrollTop=${list.scrollTop}\n            list.offsetHeight=${list.offsetHeight}\n            list.scrollHeight=${list.scrollHeight}`\n        );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        console.log(\n            `MessagesList.scrollToBottom before\n            chatId=${chatId} messageId=${messageId}           \n            list.scrollTop=${list.scrollTop}\n            list.offsetHeight=${list.offsetHeight}\n            list.scrollHeight=${list.scrollHeight}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            console.log(\n                `MessagesList.scrollToBottom after\n            chatId=${chatId} messageId=${messageId}           \n            list.scrollTop=${list.scrollTop}\n            list.offsetHeight=${list.offsetHeight}\n            list.scrollHeight=${list.scrollHeight}`\n            );\n        } else {\n            console.log(\n                `MessagesList.scrollToBottom after (no changes)\n            chatId=${chatId} messageId=${messageId}           \n            list.scrollTop=${list.scrollTop}\n            list.offsetHeight=${list.offsetHeight}\n            list.scrollHeight=${list.scrollHeight}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}