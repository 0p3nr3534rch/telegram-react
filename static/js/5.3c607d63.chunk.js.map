{"version":3,"sources":["Components/ColumnMiddle/StickerSet.js","Components/ColumnMiddle/StickersPickerHeader.js","Components/ColumnMiddle/StickersPicker.js","Components/ColumnMiddle/EmojiPickerButton.js"],"names":["StickerSet","nextProps","nextState","nextContext","this","props","info","_this$props","classes","onSelect","onMouseDown","onMouseOver","title","items","stickers","map","x","i","react_default","a","createElement","className","classNames","stickerSetItem","key","sticker","id","data-sticker-id","onClick","Sticker","displaySize","STICKER_SMALL_DISPLAY_SIZE","blur","React","Component","withStyles","theme","backgroundColor","palette","background","paper","color","text","primary","width","height","padding","boxSizing","&:hover","type","borderRadius","Animator","duration","_this","options","arguments","length","undefined","Object","classCallCheck","start","stopped","requestAnimationFrame","startAnim","timeStamp","end","draw","now","p","val","outSine","forEach","from","to","func","stop","cancelAnimationFrame","n","Math","sin","PI","StickersPickerHeader","_this2","possibleConstructorReturn","getPrototypeOf","call","scrollToPosition","position","_assertThisInitialize","assertThisInitialized","animator","anchorRef","scroll","scrollRef","current","anchor","anchorNode","ReactDOM","console","log","style","left","scrollLeft","Number","replace","createRef","prevProps","prevState","snapshot","openMedia","borderColor","ref","accentBackgroundDark","objectSpread","borderStyle","accentStyles","StickersPicker","scrollTop","loadContent","_ref","asyncToGenerator","regenerator_default","mark","_callee","stickerSets","sets","result","promises","slicedSets","headerStickers","wrap","_context","prev","next","state","abrupt","TdLibController","send","@type","is_masks","sent","push","set_id","Promise","all","slice","reduce","preview","set","setState","setsLength","_x","_x2","apply","loadInViewContentOnScroll","loadInViewContent","loadInViewContentOnScrollEnd","inViewItems","item","itemsMap","get","node","topBorder","bottomBorder","offsetHeight","nodeTop","offsetTop","nodeBottom","clientHeight","store","FileStore","getStore","loadedSets","has","loadStickerSetContent","updatePosition","minDiff","scrollHeight","firstOffsetTop","pos","element","diff","abs","handleScroll","_callee2","loadChunk","_this$state","concatSets","_context2","loadingChunk","Date","finally","concat","loadPreviewContent","stickerId","getStickers","find","loadStickerContent","getNeighborStickersFromSets","handleMouseOver","event","target","dataset","mouseDown","mouseDownStickerId","previewStickerId","onPreview","handleMouseDown","timestamp","showPreview","cancelSend","setTimeout","document","addEventListener","handleMouseUp","preventDefault","stopPropagation","removeEventListener","handleStickerSelect","handleSelectSet","index","Map","debounce","throttle","_this$state2","_this$state3","clear","Components_ColumnMiddle_StickerSet","el","Components_ColumnMiddle_StickersPickerHeader","onScroll","EmojiPickerButton","onClientUpdateChange","update","picker","handleButtonMouseEnter","buttonEnter","updatePicker","loadStickerSets","EMOJI_PICKER_TIMEOUT_MS","stickersPickerRef","reverse","loadStickerThumbnailContent","handleButtonMouseLeave","tryClosePicker","paperEnter","handlePaperMouseEnter","handlePaperMouseLeave","open","switchPicker","handleEmojiClick","tab","handleStickersClick","stickersPicker","handleStickerSend","clientUpdate","handleStickerPreview","emojiPickerRef","ApplicationStore","on","LocalizationStore","removeListener","t","i18n","search","notfound","skintext","categories","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","dist_es","showSkinTones","dark","overflowX","Components_ColumnMiddle_StickersPicker","Fragment","rel","href","IconButton_default","iconButton","aria-label","onMouseEnter","onMouseLeave","InsertEmoticon_default","pickerRoot","defineProperty","pickerRootOpened","Button_default","headerButton","emoji-picker-content-stickers","StickerPreview","enhance","compose","margin","flex","shape","boxShadow","shadows","bottom","display","withTheme","withTranslation"],"mappings":"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","file":"static/js/5.3c607d63.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport { loadStickerContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './StickerSet.css';\n\nconst styles = theme => ({\n    title: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary\n    },\n    stickerSetItem: {\n        width: STICKER_SMALL_DISPLAY_SIZE,\n        height: STICKER_SMALL_DISPLAY_SIZE,\n        padding: 3,\n        boxSizing: 'border-box',\n        '&:hover': {\n            background: theme.palette.type === 'dark' ? '#303030' : '#f4f4f4',\n            borderRadius: 6\n        }\n    }\n});\n\nclass StickerSet extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { info } = this.props;\n\n        if (info !== nextProps.info) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { classes, info, onSelect, onMouseDown, onMouseOver } = this.props;\n        if (!info) return null;\n\n        const { title, stickers } = info;\n\n        const items = stickers.map((x, i) => (\n            <div\n                className={classNames('sticker-set-item', classes.stickerSetItem)}\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onClick={() => onSelect(x)}\n                onMouseDown={onMouseDown}\n                onMouseOver={onMouseOver}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-item-sticker'\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE - 6}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        return (\n            <div className='sticker-set'>\n                <div className={classNames('sticker-set-title', classes.title)}>\n                    <span>{title}</span>\n                </div>\n                <div className='sticker-set-content'>{items}</div>\n            </div>\n        );\n    }\n}\n\nStickerSet.propTypes = {\n    info: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onMouseDown: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(StickerSet);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from './../Message/Media/Sticker';\nimport { accentStyles, borderStyle } from '../Theme';\nimport './StickersPickerHeader.css'\n\nconst styles = theme => ({\n    ...borderStyle(theme),\n    ...accentStyles(theme)\n});\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin(n * Math.PI / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startAnim);\n    };\n\n    startAnim = timeStamp => {\n        const { start, duration } = this;\n\n        this.start = timeStamp;\n        this.end = start + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const {\n            stopped,\n            duration,\n            start,\n            options,\n        } = this;\n\n        if (stopped) return;\n        if (now - start >= duration) this.stopped = true;\n\n        const p = (now - start) / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            func(from + (to - from) * val);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nclass StickersPickerHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.anchorRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.position !== this.props.position) {\n            this.scrollToPosition();\n        }\n    }\n\n    scrollToPosition = () => {\n        const { position } = this.props;\n        const { animator, anchorRef, scrollRef } = this;\n\n        const scroll = scrollRef.current;\n        const anchor = anchorRef.current;\n        const anchorNode = ReactDOM.findDOMNode(anchor);\n        console.log('Stickers.scrollToPosition', anchor, anchorNode, anchorNode.style, anchorNode.style.left);\n\n        if (animator) {\n            animator.stop();\n        }\n        this.animator = new Animator(500,[\n            {\n                from: scroll.scrollLeft,\n                to: position * 44 - 147,\n                func: left => scroll.scrollLeft = left\n            },\n            {\n                from: Number(anchorNode.style.left.replace('px', '')),\n                to: position * 44,\n                func: left => anchorNode.style.left = left + 'px'\n            }\n        ]);\n        this.animator.start();\n    };\n\n    render() {\n        const { classes, stickers, position, onSelect } = this.props;\n\n        const items = stickers.map(x => (\n            <Sticker\n                key={x.sticker.id}\n                className='stickers-picker-header-sticker'\n                sticker={x}\n                displaySize={32}\n                blur={false}\n                openMedia={() => onSelect(x)}\n            />\n        ));\n\n        return (\n            <div className={classNames('stickers-picker-header', classes.borderColor)}>\n                <div ref={this.scrollRef} className='stickers-picker-header-scroll'>\n                    <div className='stickers-picker-header-items'>\n                        {items}\n                    </div>\n                    <div ref={this.anchorRef} className={classNames('stickers-picker-header-anchor', classes.accentBackgroundDark)}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPickerHeader.propTypes = {\n    stickers: PropTypes.array.isRequired,\n    position: PropTypes.number.isRequired,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(StickersPickerHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport StickerSet from './StickerSet';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { getNeighborStickersFromSets, getStickers } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersPicker.css';\nimport StickersPickerHeader from './StickersPickerHeader';\n\nclass StickersPicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.itemsMap = new Map();\n        this.loadedSets = new Map();\n\n        this.state = {\n            stickerSets: null,\n            sets: [],\n            headerStickers: [],\n            position: 0\n        };\n\n        this.loadInViewContentOnScrollEnd = debounce(this.loadInViewContentOnScrollEnd, 100);\n        this.loadInViewContentOnScroll = throttle(this.loadInViewContentOnScroll, 2000);\n        this.updatePosition = throttle(this.updatePosition, 250);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { position, stickerSets, sets, showPreview } = this.state;\n\n        if (nextState.stickerSets !== stickerSets) {\n            return true;\n        }\n\n        if (nextState.sets !== sets) {\n            return true;\n        }\n\n        if (nextState.showPreview !== showPreview) {\n            return true;\n        }\n\n        if (nextState.position !== position) {\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop = () => {\n        this.scrollRef.current.scrollTop = 0;\n    };\n\n    loadContent = async (stickerSets, sets) => {\n        if (this.state.stickerSets) return;\n\n        if (!sets) {\n            const result = await TdLibController.send({\n                '@type': 'getInstalledStickerSets',\n                is_masks: false\n            });\n\n            const promises = [];\n            result.sets.forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            sets = await Promise.all(promises);\n        }\n\n        const slicedSets = sets.slice(0, 5);\n        const headerStickers = sets.reduce((preview, set) => {\n            if (set.stickers.length > 0) {\n                preview.push(set.stickers[0]);\n            }\n            return preview;\n        },[]);\n        this.setState({\n            stickerSets,\n            sets: slicedSets,\n            headerStickers\n        });\n        this.setsLength = slicedSets.length;\n    };\n\n    loadInViewContentOnScroll = () => {\n        this.loadInViewContent();\n    };\n\n    loadInViewContentOnScrollEnd = () => {\n        this.loadInViewContent(400);\n    };\n\n    loadInViewContent = (padding = 0) => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n\n        const inViewItems = [];\n        sets.forEach(x => {\n            const item = this.itemsMap.get(x.id);\n            const node = ReactDOM.findDOMNode(item);\n            if (node) {\n                const topBorder = scroll.scrollTop - padding;\n                const bottomBorder = scroll.scrollTop + scroll.offsetHeight + padding;\n\n                const nodeTop = node.offsetTop;\n                const nodeBottom = node.offsetTop + node.clientHeight;\n\n                if (nodeTop >= topBorder && node.offsetTop <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeBottom >= topBorder && nodeBottom <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeTop <= topBorder && nodeBottom >= bottomBorder) {\n                    inViewItems.push(x);\n                }\n            }\n        });\n\n        inViewItems.forEach(x => {\n            const store = FileStore.getStore();\n            if (!this.loadedSets.has(x.id)) {\n                this.loadedSets.set(x.id, x.id);\n                loadStickerSetContent(store, x);\n            }\n        });\n    };\n\n    updatePosition = () => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n        let minDiff = scroll.scrollHeight;\n        let position = 0;\n        let firstOffsetTop = 0;\n        sets.forEach((x, pos) => {\n            const element = this.itemsMap.get(x.id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node) {\n                    firstOffsetTop = pos === 0 ? node.offsetTop : firstOffsetTop;\n\n                    const offsetTop = node.offsetTop - firstOffsetTop;\n                    if (node && offsetTop <= scroll.scrollTop) {\n                        const diff = Math.abs(scroll.scrollTop - offsetTop);\n                        if (diff <= minDiff) {\n                            minDiff = diff;\n                            position = pos;\n                        }\n                    }\n                }\n            }\n        });\n\n        this.setState({ position });\n    };\n\n    handleScroll = async () => {\n        this.loadInViewContentOnScroll();\n        this.loadInViewContentOnScrollEnd();\n        this.updatePosition();\n\n        const scroll = this.scrollRef.current;\n\n        if (this.loadingChunk) return;\n\n        let loadChunk = false;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight - 400) {\n            loadChunk = true;\n        }\n\n        if (!loadChunk) {\n            return false;\n        }\n\n        const { sets, stickerSets } = this.state;\n        if (stickerSets.sets.length === sets.length) return;\n\n        this.loadingChunk = true;\n        const date = Date.now();\n        const promises = [];\n        stickerSets.sets.slice(this.setsLength, this.setsLength + 5).forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        const result = await Promise.all(promises).finally(() => (this.loadingChunk = false));\n\n        this.setsLength += result.length;\n        let concatSets = sets.concat(result);\n        this.setState({ sets: concatSets });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { sets } = this.state;\n\n        const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const stickersPerRow = 5;\n        const preloadStickers = getNeighborStickersFromSets(sticker, sets, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n\n        const { onPreview } = this.props;\n        const { sets } = this.state;\n\n        const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n        onPreview(sticker);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true }, () => {\n                    const { onPreview } = this.props;\n                    const { sets } = this.state;\n\n                    const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n                    onPreview(sticker);\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n\n        const { onPreview } = this.props;\n\n        onPreview(null);\n\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleStickerSelect = sticker => {\n        const { onSelect } = this.props;\n        const { cancelSend } = this.state;\n\n        if (cancelSend) return;\n\n        onSelect(sticker);\n    };\n\n    handleSelectSet = index => {\n\n    };\n\n    render() {\n        const { position, stickerSets, sets, headerStickers } = this.state;\n        if (!stickerSets) return null;\n\n        if (!sets) return null;\n        if (!sets.length) return null;\n\n        this.itemsMap.clear();\n        const items = sets.map(x => (\n            <StickerSet\n                key={x.id}\n                ref={el => this.itemsMap.set(x.id, el)}\n                info={x}\n                onSelect={this.handleStickerSelect}\n                onMouseDown={this.handleMouseDown}\n                onMouseOver={this.handleMouseOver}\n            />\n        ));\n\n        return (\n            <div className='stickers-picker'>\n                <StickersPickerHeader\n                    onSelect={this.handleSelectSet}\n                    position={position}\n                    stickers={headerStickers}\n                />\n                <div ref={this.scrollRef} className='stickers-picker-scroll' onScroll={this.handleScroll}>\n                    {items}\n                </div>\n                {/*<div>{position}</div>*/}\n            </div>\n        );\n    }\n}\n\nStickersPicker.propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    onPreview: PropTypes.func.isRequired\n};\n\nexport default StickersPicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { Picker as EmojiPicker } from 'emoji-mart';\nimport StickerPreview from './StickerPreview';\nimport StickersPicker from './StickersPicker';\nimport { loadStickerThumbnailContent, loadStickerSetContent } from '../../Utils/File';\nimport { EMOJI_PICKER_TIMEOUT_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EmojiPickerButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0px'\n    },\n    headerButton: {\n        borderRadius: 0,\n        flex: '50%'\n    },\n    pickerRoot: {\n        width: 338,\n        overflowX: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary,\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[8],\n        position: 'absolute',\n        bottom: 80,\n        display: 'none'\n    },\n    pickerRootOpened: {\n        display: 'block'\n    }\n});\n\nclass EmojiPickerButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            tab: 0\n        };\n\n        this.emojiPickerRef = React.createRef();\n        this.stickersPickerRef = React.createRef();\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    onClientUpdateChange = update => {\n        this.picker = null;\n    };\n\n    handleButtonMouseEnter = event => {\n        this.buttonEnter = true;\n        setTimeout(() => {\n            if (!this.buttonEnter) return;\n\n            this.updatePicker(true);\n            this.loadStickerSets();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    loadStickerSets = async () => {\n        if (this.sets) return;\n\n        this.stickerSets = await TdLibController.send({\n            '@type': 'getInstalledStickerSets',\n            is_masks: false\n        });\n\n        const promises = [];\n        this.stickerSets.sets.forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        this.sets = await Promise.all(promises);\n\n        const node = this.stickersPickerRef.current;\n\n        const store = FileStore.getStore();\n        const previewSets = this.sets.slice(0, 5).reverse();\n        previewSets.forEach(x => {\n            loadStickerSetContent(store, x);\n            node.loadedSets.set(x.id, x.id);\n        });\n\n        const previewStickers = this.sets.reduce((stickers, set) => {\n            if (set.stickers.length > 0) {\n                stickers.push(set.stickers[0]);\n            }\n            return stickers;\n        }, []);\n        previewStickers.forEach(x => {\n            loadStickerThumbnailContent(store, x);\n        });\n    };\n\n    handleButtonMouseLeave = () => {\n        this.buttonEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    tryClosePicker = () => {\n        const { sticker } = this.state;\n        if (this.paperEnter || this.buttonEnter || sticker) return;\n\n        this.updatePicker(false);\n    };\n\n    handlePaperMouseEnter = () => {\n        this.paperEnter = true;\n    };\n\n    handlePaperMouseLeave = () => {\n        this.paperEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    updatePicker = open => {\n        this.setState({ open });\n    };\n\n    switchPicker = () => {\n        this.updatePicker(!this.state.open);\n    };\n\n    handleEmojiClick = () => {\n        this.setState({ tab: 0 });\n    };\n\n    handleStickersClick = () => {\n        const stickersPicker = this.stickersPickerRef.current;\n        const { tab } = this.state;\n\n        stickersPicker.loadContent(this.stickerSets, this.sets);\n\n        this.setState({ tab: 1 });\n        if (tab === 1) {\n            stickersPicker.scrollTop();\n        }\n    };\n\n    handleStickerSend = sticker => {\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n\n        this.updatePicker(false);\n    };\n\n    handleStickerPreview = sticker => {\n        this.setState({ sticker });\n\n        if (!sticker) {\n            this.tryClosePicker();\n        }\n    };\n\n    render() {\n        const { classes, theme, t } = this.props;\n        const { open, tab, sticker } = this.state;\n\n        if (open && !this.picker) {\n            const i18n = {\n                search: t('Search'),\n                notfound: t('NotEmojiFound'),\n                skintext: t('ChooseDefaultSkinTone'),\n                categories: {\n                    search: t('SearchResults'),\n                    recent: t('Recent'),\n                    people: t('SmileysPeople'),\n                    nature: t('AnimalsNature'),\n                    foods: t('FoodDrink'),\n                    activity: t('Activity'),\n                    places: t('TravelPlaces'),\n                    objects: t('Objects'),\n                    symbols: t('Symbols'),\n                    flags: t('Flags'),\n                    custom: t('Custom')\n                }\n            };\n\n            this.picker = (\n                <EmojiPicker\n                    ref={this.emojiPickerRef}\n                    set='apple'\n                    showPreview={false}\n                    showSkinTones={false}\n                    onSelect={this.props.onSelect}\n                    color={theme.palette.primary.dark}\n                    i18n={i18n}\n                    style={{ width: 338, overflowX: 'hidden' }}\n                />\n            );\n\n            this.stickersPicker = (\n                <StickersPicker\n                    ref={this.stickersPickerRef}\n                    onSelect={this.handleStickerSend}\n                    onPreview={this.handleStickerPreview}\n                />\n            );\n        }\n\n        return (\n            <>\n                <link\n                    rel='stylesheet'\n                    type='text/css'\n                    href={theme.palette.type === 'dark' ? 'emoji-mart.dark.css' : 'emoji-mart.light.css'}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Emoticon'\n                    onClick={this.switchPicker}\n                    onMouseEnter={this.handleButtonMouseEnter}\n                    onMouseLeave={this.handleButtonMouseLeave}\n                >\n                    <InsertEmoticonIcon />\n                </IconButton>\n                <div\n                    className={classNames(classes.pickerRoot, { [classes.pickerRootOpened]: open })}\n                    onMouseEnter={this.handlePaperMouseEnter}\n                    onMouseLeave={this.handlePaperMouseLeave}\n                >\n                    <div className='emoji-picker-header'>\n                        <Button\n                            color={tab === 0 ? 'primary' : 'default'}\n                            className={classes.headerButton}\n                            onClick={this.handleEmojiClick}>\n                            {t('Emoji')}\n                        </Button>\n                        <Button\n                            color={tab === 1 ? 'primary' : 'default'}\n                            className={classes.headerButton}\n                            onClick={this.handleStickersClick}>\n                            {t('Stickers')}\n                        </Button>\n                    </div>\n                    <div className={classNames('emoji-picker-content', { 'emoji-picker-content-stickers': tab === 1 })}>\n                        {this.picker}\n                        {this.stickersPicker}\n                    </div>\n                    <StickerPreview sticker={sticker} />\n                </div>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(EmojiPickerButton);\n"],"sourceRoot":""}